# Generated by Django 4.2.7 on 2025-09-22 14:26

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0019_convert_to_base_units'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sales', '0017_alter_saleitem_total_cost_alter_saleitem_total_price'),
    ]

    operations = [
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_number', models.CharField(max_length=50, unique=True)),
                ('customer_name', models.CharField(blank=True, max_length=200)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_sale', models.ForeignKey(help_text='The original sale being returned', on_delete=django.db.models.deletion.CASCADE, related_name='returns', to='sales.sale')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_returns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to return in base unit', validators=[django.core.validators.MinValueValidator(0.001)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit in the unit used', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, help_text='Cost per unit in the unit used (frozen for historical accuracy)', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, help_text='Total cost at time of return (frozen for historical accuracy)', max_digits=15)),
                ('price_mode', models.CharField(choices=[('standard', 'Standard'), ('wholesale', 'Wholesale')], default='standard', help_text='Price mode used for this return item', max_length=20)),
                ('original_sale_item', models.ForeignKey(help_text='The original sale item being returned', on_delete=django.db.models.deletion.CASCADE, to='sales.saleitem')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('return_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='sales.return')),
                ('unit', models.ForeignKey(blank=True, help_text='Unit used for this return item (for display purposes)', null=True, on_delete=django.db.models.deletion.PROTECT, to='products.unit')),
            ],
            options={
                'unique_together': {('return_order', 'product', 'unit', 'price_mode')},
            },
        ),
    ]
