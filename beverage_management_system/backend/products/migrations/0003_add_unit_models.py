# Generated by Django 4.2.7 on 2025-09-20 04:55

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0002_taxclass_product_tax_class'),
    ]

    operations = [
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_base_unit', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ['name'], 'verbose_name_plural': 'Categories'},
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='stockmovement',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='taxclass',
            options={'ordering': ['name'], 'verbose_name_plural': 'Tax Classes'},
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='movement_type',
            field=models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjustment', 'Stock Adjustment')], max_length=20),
        ),
        migrations.AlterField(
            model_name='stockmovement',
            name='quantity',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='taxclass',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='taxclass',
            name='tax_rate',
            field=models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='product',
            name='base_unit',
            field=models.ForeignKey(blank=True, help_text='The smallest unit for this product', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='base_products', to='products.unit'),
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stock_movements', to='products.unit'),
        ),
        migrations.CreateModel(
            name='UnitConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversion_factor', models.DecimalField(decimal_places=4, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversions_from', to='products.unit')),
                ('to_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversions_to', to='products.unit')),
            ],
            options={
                'ordering': ['from_unit__name', 'to_unit__name'],
                'unique_together': {('from_unit', 'to_unit')},
            },
        ),
    ]
