{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/components/PrintButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from './Button';\nimport './PrintButton.css';\n\n// Helper functions for generating print content\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generateInventoryContent = data => {\n  console.log('generateInventoryContent - Data received:', data);\n  console.log('generateInventoryContent - Is array?', Array.isArray(data));\n  console.log('generateInventoryContent - Data keys:', Object.keys(data));\n\n  // Try to extract the products array from the data object\n  let products = data;\n  if (!Array.isArray(data)) {\n    // Look for common array property names\n    if (data.results && Array.isArray(data.results)) {\n      products = data.results;\n      console.log('Found products in data.results:', products.length);\n    } else if (data.data && Array.isArray(data.data)) {\n      products = data.data;\n      console.log('Found products in data.data:', products.length);\n    } else if (data.items && Array.isArray(data.items)) {\n      products = data.items;\n      console.log('Found products in data.items:', products.length);\n    } else {\n      // Check if data has numbered keys (like '0', '1', '2', etc.)\n      const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n      if (numberedKeys.length > 0) {\n        products = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n        console.log('Found products in numbered keys:', products.length);\n      } else {\n        console.log('No array found in data object');\n        products = [];\n      }\n    }\n  }\n  console.log('Final products array length:', products.length);\n  return `\n    <div class=\"info-section\">\n      <h3>{t('titles.inventory_summary')}</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Products:</span>\n        <span class=\"info-value\">${Array.isArray(products) ? products.length : 0}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product Name</th>\n          <th>SKU</th>\n          <th>Stock Quantity</th>\n          <th>Base Unit</th>\n          <th>Unit Price</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Array.isArray(products) ? products.map(item => {\n    var _item$base_unit, _item$base_unit2, _item$category;\n    return `\n          <tr>\n            <td>${item.name || 'N/A'}</td>\n            <td>${item.sku || 'N/A'}</td>\n            <td>${item.stock_quantity || 0}</td>\n            <td>${((_item$base_unit = item.base_unit) === null || _item$base_unit === void 0 ? void 0 : _item$base_unit.name) || ((_item$base_unit2 = item.base_unit) === null || _item$base_unit2 === void 0 ? void 0 : _item$base_unit2.symbol) || 'piece'}</td>\n            <td>${parseFloat(item.price || 0).toFixed(2)} MGA</td>\n            <td>${((_item$category = item.category) === null || _item$category === void 0 ? void 0 : _item$category.name) || 'N/A'}</td>\n          </tr>\n        `;\n  }).join('') : '<tr><td colspan=\"6\">No products found</td></tr>'}\n      </tbody>\n    </table>\n  `;\n};\nconst generatePurchaseOrderContent = data => {\n  var _data$supplier;\n  return `\n    <div class=\"info-section\">\n      <h3>Purchase Order Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Order Number:</span>\n        <span class=\"info-value\">${data.order_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Supplier:</span>\n        <span class=\"info-value\">${((_data$supplier = data.supplier) === null || _data$supplier === void 0 ? void 0 : _data$supplier.name) || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Order Date:</span>\n        <span class=\"info-value\">${data.order_date ? new Date(data.order_date).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity Ordered</th>\n          <th>Unit</th>\n          <th>Unit Cost</th>\n          <th>Total Cost</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => {\n    var _item$product, _item$unit, _item$unit2;\n    return `\n          <tr>\n            <td>${((_item$product = item.product) === null || _item$product === void 0 ? void 0 : _item$product.name) || 'N/A'}</td>\n            <td>${item.quantity_ordered || 0}</td>\n            <td>${((_item$unit = item.unit) === null || _item$unit === void 0 ? void 0 : _item$unit.name) || ((_item$unit2 = item.unit) === null || _item$unit2 === void 0 ? void 0 : _item$unit2.symbol) || 'piece'}</td>\n            <td>${parseFloat(item.unit_cost || 0).toFixed(2)} MGA</td>\n            <td>${parseFloat((item.quantity_ordered || 0) * (item.unit_cost || 0)).toFixed(2)} MGA</td>\n          </tr>\n        `;\n  }).join('') : ''}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\nconst generateDeliveryContent = data => {\n  var _data$purchase_order;\n  return `\n    <div class=\"info-section\">\n      <h3>Delivery Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Delivery Number:</span>\n        <span class=\"info-value\">${data.delivery_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Purchase Order:</span>\n        <span class=\"info-value\">${((_data$purchase_order = data.purchase_order) === null || _data$purchase_order === void 0 ? void 0 : _data$purchase_order.order_number) || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Delivery Date:</span>\n        <span class=\"info-value\">${data.delivery_date ? new Date(data.delivery_date).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity Received</th>\n          <th>Unit</th>\n          <th>Unit Cost</th>\n          <th>Total Cost</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => {\n    var _item$product2, _item$unit3, _item$unit4;\n    return `\n          <tr>\n            <td>${((_item$product2 = item.product) === null || _item$product2 === void 0 ? void 0 : _item$product2.name) || 'N/A'}</td>\n            <td>${item.quantity_received || 0}</td>\n            <td>${((_item$unit3 = item.unit) === null || _item$unit3 === void 0 ? void 0 : _item$unit3.name) || ((_item$unit4 = item.unit) === null || _item$unit4 === void 0 ? void 0 : _item$unit4.symbol) || 'piece'}</td>\n            <td>${parseFloat(item.unit_cost || 0).toFixed(2)} MGA</td>\n            <td>${parseFloat((item.quantity_received || 0) * (item.unit_cost || 0)).toFixed(2)} MGA</td>\n          </tr>\n        `;\n  }).join('') : ''}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\nconst generateSaleContent = (data, t) => {\n  // Debug: Log the data being processed\n  console.log('generateSaleContent - Data received:', data);\n  console.log('generateSaleContent - Payment status:', data.payment_status);\n  console.log('generateSaleContent - Paid amount:', data.paid_amount);\n  console.log('generateSaleContent - Remaining amount:', data.remaining_amount);\n  console.log('generateSaleContent - Items array:', data.items);\n  console.log('generateSaleContent - Items length:', data.items ? data.items.length : 'No items');\n\n  // Extract items from the data object\n  let items = data.items;\n  if (!items) {\n    // Check if data has numbered keys for items\n    const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n    if (numberedKeys.length > 0) {\n      items = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n      console.log('Found items in numbered keys:', items.length);\n    }\n  }\n  console.log('Final items array length:', items ? items.length : 0);\n  return `\n    <div class=\"info-section\">\n      <h3>Sale Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Sale Number:</span>\n        <span class=\"info-value\">${data.sale_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Customer:</span>\n        <span class=\"info-value\">${data.customer_name || 'Walk-in Customer'}</span>\n      </div>\n      ${data.customer_phone ? `\n        <div class=\"info-row\">\n          <span class=\"info-label\">Phone:</span>\n          <span class=\"info-value\">${data.customer_phone}</span>\n        </div>\n      ` : ''}\n      <div class=\"info-row\">\n        <span class=\"info-label\">Date:</span>\n        <span class=\"info-value\">${data.created_at ? new Date(data.created_at).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Payment Status:</span>\n        <span class=\"info-value\">${data.payment_status === 'paid' ? t('payment_status.paid') : data.payment_status === 'partial' ? t('payment_status.partial_payment') : data.payment_status === 'pending' ? t('payment_status.pending_payment') : t('payment_status.unknown')}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Amount:</span>\n        <span class=\"info-value\">${parseFloat(data.total_amount || 0).toFixed(2)} MGA</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Paid Amount:</span>\n        <span class=\"info-value\">${parseFloat(data.paid_amount || 0).toFixed(2)} MGA</span>\n      </div>\n      ${data.payment_status === 'partial' ? `\n        <div class=\"info-row payment-warning\">\n          <span class=\"info-label\">Remaining Amount:</span>\n          <span class=\"info-value\">${parseFloat(data.remaining_amount || 0).toFixed(2)} MGA</span>\n        </div>\n        <div class=\"info-row payment-warning\">\n          <span class=\"info-label\">Due Date:</span>\n          <span class=\"info-value\">${data.due_date || t('payment_status.to_be_determined')}</span>\n        </div>\n      ` : ''}\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity</th>\n          <th>Unit</th>\n          <th>Unit Price</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${items && Array.isArray(items) ? items.map(item => `\n          <tr>\n            <td>${item.product_name || 'N/A'}</td>\n            <td>${item.quantity_display || item.quantity || 0}</td>\n            <td>${item.unit_name || 'piece'}</td>\n            <td>${parseFloat(item.unit_price || 0).toFixed(2)} MGA</td>\n            <td>${parseFloat(item.total_price || 0).toFixed(2)} MGA</td>\n          </tr>\n        `).join('') : '<tr><td colspan=\"5\">No items found</td></tr>'}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\nconst generateSalesHistoryContent = data => {\n  // Debug: Log the data being processed\n  console.log('generateSalesHistoryContent - Data received:', data);\n  console.log('generateSalesHistoryContent - Is array?', Array.isArray(data));\n  console.log('generateSalesHistoryContent - Data keys:', Object.keys(data));\n\n  // Try to extract the sales array from the data object\n  let sales = data;\n  if (!Array.isArray(data)) {\n    // Look for common array property names\n    if (data.results && Array.isArray(data.results)) {\n      sales = data.results;\n      console.log('Found sales in data.results:', sales.length);\n    } else if (data.data && Array.isArray(data.data)) {\n      sales = data.data;\n      console.log('Found sales in data.data:', sales.length);\n    } else if (data.items && Array.isArray(data.items)) {\n      sales = data.items;\n      console.log('Found sales in data.items:', sales.length);\n    } else {\n      // Check if data has numbered keys (like '0', '1', '2', etc.)\n      const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n      if (numberedKeys.length > 0) {\n        sales = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n        console.log('Found sales in numbered keys:', sales.length);\n      } else {\n        console.log('No array found in data object');\n        sales = [];\n      }\n    }\n  }\n  console.log('Final sales array length:', sales.length);\n  return `\n    <div class=\"info-section\">\n      <h3>Sales Report Summary</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Sales:</span>\n        <span class=\"info-value\">${Array.isArray(sales) ? sales.length : 0}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Revenue:</span>\n        <span class=\"info-value\">${Array.isArray(sales) ? sales.reduce((sum, sale) => sum + parseFloat(sale.total_amount || 0), 0).toFixed(2) : '0.00'} MGA</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Sale Number</th>\n          <th>Customer</th>\n          <th>Date</th>\n          <th>Total Amount</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Array.isArray(sales) ? sales.map(sale => `\n          <tr>\n            <td>${sale.sale_number || 'N/A'}</td>\n            <td>${sale.customer_name || 'Walk-in Customer'}</td>\n            <td>${sale.created_at ? new Date(sale.created_at).toLocaleDateString() : 'N/A'}</td>\n            <td>${parseFloat(sale.total_amount || 0).toFixed(2)} MGA</td>\n            <td>${sale.status || 'N/A'}</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n    </table>\n  `;\n};\nconst generateDefaultContent = data => {\n  return `\n    <div class=\"info-section\">\n      <h3>Document Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Document Type:</span>\n        <span class=\"info-value\">General Document</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Generated:</span>\n        <span class=\"info-value\">${new Date().toLocaleString()}</span>\n      </div>\n    </div>\n    <div class=\"info-section\">\n      <h3>Content</h3>\n      <pre>${JSON.stringify(data, null, 2)}</pre>\n    </div>\n  `;\n};\n\n// Export the generatePrintContent function\nexport const generatePrintContent = (data, title, type, t) => {\n  console.log('generatePrintContent called with:', {\n    data,\n    title,\n    type\n  });\n  const currentDate = new Date().toLocaleDateString();\n  const currentTime = new Date().toLocaleTimeString();\n  const printTimestamp = new Date().toISOString();\n  const printId = data.print_id || `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  console.log('Generating HTML content for type:', type);\n  let content = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${title}</title>\n      <style>\n        body { \n          font-family: Arial, sans-serif; \n          margin: 20px; \n          color: #333;\n          line-height: 1.4;\n        }\n        .header { \n          text-align: center; \n          border-bottom: 2px solid #333; \n          padding-bottom: 10px; \n          margin-bottom: 20px; \n        }\n        .header h1 { \n          margin: 0; \n          color: #2c3e50; \n          font-size: 24px;\n        }\n        .header .date { \n          color: #666; \n          font-size: 14px; \n          margin-top: 5px;\n        }\n        .header .print-info { \n          color: #888; \n          font-size: 12px; \n          margin-top: 3px;\n          font-family: monospace;\n        }\n        .info-section { \n          margin-bottom: 20px; \n          padding: 15px; \n          background: #f8f9fa; \n          border-radius: 5px; \n        }\n        .info-section h3 { \n          margin: 0 0 10px 0; \n          color: #2c3e50; \n          font-size: 16px;\n        }\n        .info-row { \n          display: flex; \n          justify-content: space-between; \n          margin-bottom: 5px; \n        }\n        .info-label { \n          font-weight: bold; \n          color: #555; \n        }\n        .info-value { \n          color: #333; \n        }\n        table { \n          width: 100%; \n          border-collapse: collapse; \n          margin-top: 10px; \n        }\n        th, td { \n          border: 1px solid #ddd; \n          padding: 8px; \n          text-align: left; \n        }\n        th { \n          background-color: #f2f2f2; \n          font-weight: bold; \n          color: #2c3e50;\n        }\n        .total-row { \n          font-weight: bold; \n          background-color: #e9ecef; \n        }\n        .footer { \n          margin-top: 30px; \n          text-align: center; \n          color: #666; \n          font-size: 12px; \n          border-top: 1px solid #ddd; \n          padding-top: 10px; \n        }\n        @media print {\n          body { margin: 0; }\n          .no-print { display: none; }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${title}</h1>\n        <div class=\"date\">Generated on ${currentDate} at ${currentTime}</div>\n        <div class=\"print-info\">Print ID: ${printId} | Timestamp: ${printTimestamp}</div>\n      </div>\n  `;\n\n  // Add type-specific content\n  console.log('Processing switch statement for type:', type);\n  switch (type) {\n    case 'inventory':\n      console.log('Generating inventory content');\n      content += generateInventoryContent(data);\n      break;\n    case 'purchase_order':\n      console.log('Generating purchase order content');\n      content += generatePurchaseOrderContent(data);\n      break;\n    case 'delivery':\n      console.log('Generating delivery content');\n      content += generateDeliveryContent(data);\n      break;\n    case 'sale':\n      console.log('Generating sale content');\n      content += generateSaleContent(data, t);\n      break;\n    case 'sales_history':\n      console.log('Generating sales history content');\n      content += generateSalesHistoryContent(data);\n      break;\n    default:\n      console.log('Using default content generator');\n      content += generateDefaultContent(data);\n  }\n  console.log('Content generated, length:', content.length);\n  content += `\n      <div class=\"footer\">\n        <p>Generated by Beverage Management System</p>\n        <p>Print ID: ${printId} | Generated: ${printTimestamp}</p>\n        <p>Document Type: ${type.toUpperCase()} | User: ${data.user_name || 'System'}</p>\n      </div>\n    </body>\n    </html>\n  `;\n  return content;\n};\nconst PrintButton = ({\n  data,\n  title,\n  type = 'default',\n  onValidate = null,\n  validateText = 'Validate & Print',\n  printText = 'Print',\n  className = '',\n  disabled = false,\n  showValidateOption = false\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [showPrintOptions, setShowPrintOptions] = useState(false);\n  const handlePrint = async (validateFirst = false) => {\n    console.log('=== PRINT DEBUGGING START ===');\n    console.log('Print data:', data);\n    console.log('Print title:', title);\n    console.log('Print type:', type);\n    if (validateFirst && onValidate) {\n      try {\n        await onValidate();\n      } catch (error) {\n        console.error('Validation failed:', error);\n        return;\n      }\n    }\n    setIsPrinting(true);\n    try {\n      // Create print content\n      console.log('Generating print content...');\n      const printContent = generatePrintContent(data, title, type, t);\n      console.log('Generated print content length:', printContent.length);\n      console.log('Generated print content preview:', printContent.substring(0, 500) + '...');\n\n      // Open print window\n      console.log('Opening print window...');\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      if (!printWindow) {\n        throw new Error('Failed to open print window. Please check popup blockers.');\n      }\n      console.log('Writing content to print window...');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n\n      // Wait for content to load then print\n      const printAfterLoad = () => {\n        console.log('Print window loaded, starting print...');\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay to allow printing\n        setTimeout(() => {\n          printWindow.close();\n          console.log('Print completed');\n        }, 1000);\n      };\n\n      // Check if window is already loaded\n      if (printWindow.document.readyState === 'complete') {\n        printAfterLoad();\n      } else {\n        printWindow.onload = printAfterLoad;\n      }\n\n      // Fallback timeout\n      setTimeout(() => {\n        if (!printWindow.closed) {\n          console.log('Print window still open after timeout, closing...');\n          printWindow.close();\n        }\n      }, 5000);\n    } catch (error) {\n      console.error('Print error:', error);\n      alert('Failed to print. Please try again. Error: ' + error.message);\n    } finally {\n      setIsPrinting(false);\n      setShowPrintOptions(false);\n      console.log('=== PRINT DEBUGGING END ===');\n    }\n  };\n  if (showValidateOption && onValidate) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `print-button-container ${className}`,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"small\",\n        onClick: () => setShowPrintOptions(!showPrintOptions),\n        disabled: disabled,\n        children: showPrintOptions ? 'Hide Options' : 'Show Options'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), showPrintOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"small\",\n          onClick: () => handlePrint(true),\n          disabled: disabled || isPrinting,\n          children: isPrinting ? 'Processing...' : validateText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          size: \"small\",\n          onClick: () => handlePrint(false),\n          disabled: disabled || isPrinting,\n          children: isPrinting ? 'Preparing...' : printText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"outline\",\n    size: \"small\",\n    onClick: () => handlePrint(false),\n    disabled: disabled || isPrinting,\n    className: className,\n    children: isPrinting ? 'Printing...' : printText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 650,\n    columnNumber: 5\n  }, this);\n};\n_s(PrintButton, \"9lSzwZmcjBgq+P/eNqRgKHBiM1g=\", false, function () {\n  return [useTranslation];\n});\n_c = PrintButton;\nexport default PrintButton;\nvar _c;\n$RefreshReg$(_c, \"PrintButton\");","map":{"version":3,"names":["React","useState","useTranslation","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","generateInventoryContent","data","console","log","Array","isArray","Object","keys","products","results","length","items","numberedKeys","filter","key","test","map","item","_item$base_unit","_item$base_unit2","_item$category","name","sku","stock_quantity","base_unit","symbol","parseFloat","price","toFixed","category","join","generatePurchaseOrderContent","_data$supplier","order_number","supplier","order_date","Date","toLocaleDateString","status","_item$product","_item$unit","_item$unit2","product","quantity_ordered","unit","unit_cost","total_amount","generateDeliveryContent","_data$purchase_order","delivery_number","purchase_order","delivery_date","_item$product2","_item$unit3","_item$unit4","quantity_received","generateSaleContent","t","payment_status","paid_amount","remaining_amount","sale_number","customer_name","customer_phone","created_at","due_date","product_name","quantity_display","quantity","unit_name","unit_price","total_price","generateSalesHistoryContent","sales","reduce","sum","sale","generateDefaultContent","toLocaleString","JSON","stringify","generatePrintContent","title","type","currentDate","currentTime","toLocaleTimeString","printTimestamp","toISOString","printId","print_id","now","Math","random","toString","substr","content","toUpperCase","user_name","PrintButton","onValidate","validateText","printText","className","disabled","showValidateOption","_s","isPrinting","setIsPrinting","showPrintOptions","setShowPrintOptions","handlePrint","validateFirst","error","printContent","substring","printWindow","window","open","Error","document","write","close","printAfterLoad","focus","print","setTimeout","readyState","onload","closed","alert","message","children","variant","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/components/PrintButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from './Button';\nimport './PrintButton.css';\n\n// Helper functions for generating print content\nconst generateInventoryContent = (data) => {\n  console.log('generateInventoryContent - Data received:', data);\n  console.log('generateInventoryContent - Is array?', Array.isArray(data));\n  console.log('generateInventoryContent - Data keys:', Object.keys(data));\n  \n  // Try to extract the products array from the data object\n  let products = data;\n  if (!Array.isArray(data)) {\n    // Look for common array property names\n    if (data.results && Array.isArray(data.results)) {\n      products = data.results;\n      console.log('Found products in data.results:', products.length);\n    } else if (data.data && Array.isArray(data.data)) {\n      products = data.data;\n      console.log('Found products in data.data:', products.length);\n    } else if (data.items && Array.isArray(data.items)) {\n      products = data.items;\n      console.log('Found products in data.items:', products.length);\n    } else {\n      // Check if data has numbered keys (like '0', '1', '2', etc.)\n      const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n      if (numberedKeys.length > 0) {\n        products = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n        console.log('Found products in numbered keys:', products.length);\n      } else {\n        console.log('No array found in data object');\n        products = [];\n      }\n    }\n  }\n  \n  console.log('Final products array length:', products.length);\n  \n  return `\n    <div class=\"info-section\">\n      <h3>{t('titles.inventory_summary')}</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Products:</span>\n        <span class=\"info-value\">${Array.isArray(products) ? products.length : 0}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product Name</th>\n          <th>SKU</th>\n          <th>Stock Quantity</th>\n          <th>Base Unit</th>\n          <th>Unit Price</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Array.isArray(products) ? products.map(item => `\n          <tr>\n            <td>${item.name || 'N/A'}</td>\n            <td>${item.sku || 'N/A'}</td>\n            <td>${item.stock_quantity || 0}</td>\n            <td>${item.base_unit?.name || item.base_unit?.symbol || 'piece'}</td>\n            <td>${parseFloat(item.price || 0).toFixed(2)} MGA</td>\n            <td>${item.category?.name || 'N/A'}</td>\n          </tr>\n        `).join('') : '<tr><td colspan=\"6\">No products found</td></tr>'}\n      </tbody>\n    </table>\n  `;\n};\n\nconst generatePurchaseOrderContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Purchase Order Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Order Number:</span>\n        <span class=\"info-value\">${data.order_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Supplier:</span>\n        <span class=\"info-value\">${data.supplier?.name || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Order Date:</span>\n        <span class=\"info-value\">${data.order_date ? new Date(data.order_date).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity Ordered</th>\n          <th>Unit</th>\n          <th>Unit Cost</th>\n          <th>Total Cost</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => `\n          <tr>\n            <td>${item.product?.name || 'N/A'}</td>\n            <td>${item.quantity_ordered || 0}</td>\n            <td>${item.unit?.name || item.unit?.symbol || 'piece'}</td>\n            <td>${parseFloat(item.unit_cost || 0).toFixed(2)} MGA</td>\n            <td>${parseFloat((item.quantity_ordered || 0) * (item.unit_cost || 0)).toFixed(2)} MGA</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\n\nconst generateDeliveryContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Delivery Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Delivery Number:</span>\n        <span class=\"info-value\">${data.delivery_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Purchase Order:</span>\n        <span class=\"info-value\">${data.purchase_order?.order_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Delivery Date:</span>\n        <span class=\"info-value\">${data.delivery_date ? new Date(data.delivery_date).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity Received</th>\n          <th>Unit</th>\n          <th>Unit Cost</th>\n          <th>Total Cost</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => `\n          <tr>\n            <td>${item.product?.name || 'N/A'}</td>\n            <td>${item.quantity_received || 0}</td>\n            <td>${item.unit?.name || item.unit?.symbol || 'piece'}</td>\n            <td>${parseFloat(item.unit_cost || 0).toFixed(2)} MGA</td>\n            <td>${parseFloat((item.quantity_received || 0) * (item.unit_cost || 0)).toFixed(2)} MGA</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\n\nconst generateSaleContent = (data, t) => {\n  // Debug: Log the data being processed\n  console.log('generateSaleContent - Data received:', data);\n  console.log('generateSaleContent - Payment status:', data.payment_status);\n  console.log('generateSaleContent - Paid amount:', data.paid_amount);\n  console.log('generateSaleContent - Remaining amount:', data.remaining_amount);\n  console.log('generateSaleContent - Items array:', data.items);\n  console.log('generateSaleContent - Items length:', data.items ? data.items.length : 'No items');\n  \n  // Extract items from the data object\n  let items = data.items;\n  if (!items) {\n    // Check if data has numbered keys for items\n    const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n    if (numberedKeys.length > 0) {\n      items = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n      console.log('Found items in numbered keys:', items.length);\n    }\n  }\n  \n  console.log('Final items array length:', items ? items.length : 0);\n  \n  return `\n    <div class=\"info-section\">\n      <h3>Sale Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Sale Number:</span>\n        <span class=\"info-value\">${data.sale_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Customer:</span>\n        <span class=\"info-value\">${data.customer_name || 'Walk-in Customer'}</span>\n      </div>\n      ${data.customer_phone ? `\n        <div class=\"info-row\">\n          <span class=\"info-label\">Phone:</span>\n          <span class=\"info-value\">${data.customer_phone}</span>\n        </div>\n      ` : ''}\n      <div class=\"info-row\">\n        <span class=\"info-label\">Date:</span>\n        <span class=\"info-value\">${data.created_at ? new Date(data.created_at).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Payment Status:</span>\n        <span class=\"info-value\">${data.payment_status === 'paid' ? t('payment_status.paid') : \n                                   data.payment_status === 'partial' ? t('payment_status.partial_payment') : \n                                   data.payment_status === 'pending' ? t('payment_status.pending_payment') : \n                                   t('payment_status.unknown')}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Amount:</span>\n        <span class=\"info-value\">${parseFloat(data.total_amount || 0).toFixed(2)} MGA</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Paid Amount:</span>\n        <span class=\"info-value\">${parseFloat(data.paid_amount || 0).toFixed(2)} MGA</span>\n      </div>\n      ${data.payment_status === 'partial' ? `\n        <div class=\"info-row payment-warning\">\n          <span class=\"info-label\">Remaining Amount:</span>\n          <span class=\"info-value\">${parseFloat(data.remaining_amount || 0).toFixed(2)} MGA</span>\n        </div>\n        <div class=\"info-row payment-warning\">\n          <span class=\"info-label\">Due Date:</span>\n          <span class=\"info-value\">${data.due_date || t('payment_status.to_be_determined')}</span>\n        </div>\n      ` : ''}\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity</th>\n          <th>Unit</th>\n          <th>Unit Price</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${items && Array.isArray(items) ? items.map(item => `\n          <tr>\n            <td>${item.product_name || 'N/A'}</td>\n            <td>${item.quantity_display || item.quantity || 0}</td>\n            <td>${item.unit_name || 'piece'}</td>\n            <td>${parseFloat(item.unit_price || 0).toFixed(2)} MGA</td>\n            <td>${parseFloat(item.total_price || 0).toFixed(2)} MGA</td>\n          </tr>\n        `).join('') : '<tr><td colspan=\"5\">No items found</td></tr>'}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\n\nconst generateSalesHistoryContent = (data) => {\n  // Debug: Log the data being processed\n  console.log('generateSalesHistoryContent - Data received:', data);\n  console.log('generateSalesHistoryContent - Is array?', Array.isArray(data));\n  console.log('generateSalesHistoryContent - Data keys:', Object.keys(data));\n  \n  // Try to extract the sales array from the data object\n  let sales = data;\n  if (!Array.isArray(data)) {\n    // Look for common array property names\n    if (data.results && Array.isArray(data.results)) {\n      sales = data.results;\n      console.log('Found sales in data.results:', sales.length);\n    } else if (data.data && Array.isArray(data.data)) {\n      sales = data.data;\n      console.log('Found sales in data.data:', sales.length);\n    } else if (data.items && Array.isArray(data.items)) {\n      sales = data.items;\n      console.log('Found sales in data.items:', sales.length);\n    } else {\n      // Check if data has numbered keys (like '0', '1', '2', etc.)\n      const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n      if (numberedKeys.length > 0) {\n        sales = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n        console.log('Found sales in numbered keys:', sales.length);\n      } else {\n        console.log('No array found in data object');\n        sales = [];\n      }\n    }\n  }\n  \n  console.log('Final sales array length:', sales.length);\n  \n  return `\n    <div class=\"info-section\">\n      <h3>Sales Report Summary</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Sales:</span>\n        <span class=\"info-value\">${Array.isArray(sales) ? sales.length : 0}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Revenue:</span>\n        <span class=\"info-value\">${Array.isArray(sales) ? sales.reduce((sum, sale) => sum + parseFloat(sale.total_amount || 0), 0).toFixed(2) : '0.00'} MGA</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Sale Number</th>\n          <th>Customer</th>\n          <th>Date</th>\n          <th>Total Amount</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Array.isArray(sales) ? sales.map(sale => `\n          <tr>\n            <td>${sale.sale_number || 'N/A'}</td>\n            <td>${sale.customer_name || 'Walk-in Customer'}</td>\n            <td>${sale.created_at ? new Date(sale.created_at).toLocaleDateString() : 'N/A'}</td>\n            <td>${parseFloat(sale.total_amount || 0).toFixed(2)} MGA</td>\n            <td>${sale.status || 'N/A'}</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n    </table>\n  `;\n};\n\nconst generateDefaultContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Document Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Document Type:</span>\n        <span class=\"info-value\">General Document</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Generated:</span>\n        <span class=\"info-value\">${new Date().toLocaleString()}</span>\n      </div>\n    </div>\n    <div class=\"info-section\">\n      <h3>Content</h3>\n      <pre>${JSON.stringify(data, null, 2)}</pre>\n    </div>\n  `;\n};\n\n// Export the generatePrintContent function\nexport const generatePrintContent = (data, title, type, t) => {\n  console.log('generatePrintContent called with:', { data, title, type });\n  \n  const currentDate = new Date().toLocaleDateString();\n  const currentTime = new Date().toLocaleTimeString();\n  const printTimestamp = new Date().toISOString();\n  const printId = data.print_id || `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  \n  console.log('Generating HTML content for type:', type);\n  \n  let content = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${title}</title>\n      <style>\n        body { \n          font-family: Arial, sans-serif; \n          margin: 20px; \n          color: #333;\n          line-height: 1.4;\n        }\n        .header { \n          text-align: center; \n          border-bottom: 2px solid #333; \n          padding-bottom: 10px; \n          margin-bottom: 20px; \n        }\n        .header h1 { \n          margin: 0; \n          color: #2c3e50; \n          font-size: 24px;\n        }\n        .header .date { \n          color: #666; \n          font-size: 14px; \n          margin-top: 5px;\n        }\n        .header .print-info { \n          color: #888; \n          font-size: 12px; \n          margin-top: 3px;\n          font-family: monospace;\n        }\n        .info-section { \n          margin-bottom: 20px; \n          padding: 15px; \n          background: #f8f9fa; \n          border-radius: 5px; \n        }\n        .info-section h3 { \n          margin: 0 0 10px 0; \n          color: #2c3e50; \n          font-size: 16px;\n        }\n        .info-row { \n          display: flex; \n          justify-content: space-between; \n          margin-bottom: 5px; \n        }\n        .info-label { \n          font-weight: bold; \n          color: #555; \n        }\n        .info-value { \n          color: #333; \n        }\n        table { \n          width: 100%; \n          border-collapse: collapse; \n          margin-top: 10px; \n        }\n        th, td { \n          border: 1px solid #ddd; \n          padding: 8px; \n          text-align: left; \n        }\n        th { \n          background-color: #f2f2f2; \n          font-weight: bold; \n          color: #2c3e50;\n        }\n        .total-row { \n          font-weight: bold; \n          background-color: #e9ecef; \n        }\n        .footer { \n          margin-top: 30px; \n          text-align: center; \n          color: #666; \n          font-size: 12px; \n          border-top: 1px solid #ddd; \n          padding-top: 10px; \n        }\n        @media print {\n          body { margin: 0; }\n          .no-print { display: none; }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${title}</h1>\n        <div class=\"date\">Generated on ${currentDate} at ${currentTime}</div>\n        <div class=\"print-info\">Print ID: ${printId} | Timestamp: ${printTimestamp}</div>\n      </div>\n  `;\n\n  // Add type-specific content\n  console.log('Processing switch statement for type:', type);\n  switch (type) {\n    case 'inventory':\n      console.log('Generating inventory content');\n      content += generateInventoryContent(data);\n      break;\n    case 'purchase_order':\n      console.log('Generating purchase order content');\n      content += generatePurchaseOrderContent(data);\n      break;\n    case 'delivery':\n      console.log('Generating delivery content');\n      content += generateDeliveryContent(data);\n      break;\n    case 'sale':\n      console.log('Generating sale content');\n      content += generateSaleContent(data, t);\n      break;\n    case 'sales_history':\n      console.log('Generating sales history content');\n      content += generateSalesHistoryContent(data);\n      break;\n    default:\n      console.log('Using default content generator');\n      content += generateDefaultContent(data);\n  }\n  \n  console.log('Content generated, length:', content.length);\n\n  content += `\n      <div class=\"footer\">\n        <p>Generated by Beverage Management System</p>\n        <p>Print ID: ${printId} | Generated: ${printTimestamp}</p>\n        <p>Document Type: ${type.toUpperCase()} | User: ${data.user_name || 'System'}</p>\n      </div>\n    </body>\n    </html>\n  `;\n\n  return content;\n};\n\nconst PrintButton = ({ \n  data, \n  title, \n  type = 'default', \n  onValidate = null, \n  validateText = 'Validate & Print',\n  printText = 'Print',\n  className = '',\n  disabled = false,\n  showValidateOption = false\n}) => {\n  const { t } = useTranslation();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [showPrintOptions, setShowPrintOptions] = useState(false);\n\n  const handlePrint = async (validateFirst = false) => {\n    console.log('=== PRINT DEBUGGING START ===');\n    console.log('Print data:', data);\n    console.log('Print title:', title);\n    console.log('Print type:', type);\n    \n    if (validateFirst && onValidate) {\n      try {\n        await onValidate();\n      } catch (error) {\n        console.error('Validation failed:', error);\n        return;\n      }\n    }\n\n    setIsPrinting(true);\n    \n    try {\n      // Create print content\n      console.log('Generating print content...');\n      const printContent = generatePrintContent(data, title, type, t);\n      console.log('Generated print content length:', printContent.length);\n      console.log('Generated print content preview:', printContent.substring(0, 500) + '...');\n      \n      // Open print window\n      console.log('Opening print window...');\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      \n      if (!printWindow) {\n        throw new Error('Failed to open print window. Please check popup blockers.');\n      }\n      \n      console.log('Writing content to print window...');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      const printAfterLoad = () => {\n        console.log('Print window loaded, starting print...');\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay to allow printing\n        setTimeout(() => {\n          printWindow.close();\n          console.log('Print completed');\n        }, 1000);\n      };\n      \n      // Check if window is already loaded\n      if (printWindow.document.readyState === 'complete') {\n        printAfterLoad();\n      } else {\n        printWindow.onload = printAfterLoad;\n      }\n      \n      // Fallback timeout\n      setTimeout(() => {\n        if (!printWindow.closed) {\n          console.log('Print window still open after timeout, closing...');\n          printWindow.close();\n        }\n      }, 5000);\n      \n    } catch (error) {\n      console.error('Print error:', error);\n      alert('Failed to print. Please try again. Error: ' + error.message);\n    } finally {\n      setIsPrinting(false);\n      setShowPrintOptions(false);\n      console.log('=== PRINT DEBUGGING END ===');\n    }\n  };\n\n  if (showValidateOption && onValidate) {\n    return (\n      <div className={`print-button-container ${className}`}>\n        <Button\n          variant=\"outline\"\n          size=\"small\"\n          onClick={() => setShowPrintOptions(!showPrintOptions)}\n          disabled={disabled}\n        >\n          {showPrintOptions ? 'Hide Options' : 'Show Options'}\n        </Button>\n        {showPrintOptions && (\n          <>\n            <Button\n              variant=\"primary\"\n              size=\"small\"\n              onClick={() => handlePrint(true)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? 'Processing...' : validateText}\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"small\"\n              onClick={() => handlePrint(false)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? 'Preparing...' : printText}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"small\"\n      onClick={() => handlePrint(false)}\n      disabled={disabled || isPrinting}\n      className={className}\n    >\n      {isPrinting ? 'Printing...' : printText}\n    </Button>\n  );\n};\n\nexport default PrintButton;\n"],"mappings":"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C,CAAC;EACnD,MAAMC,cAAc,GAAG,IAAInD,IAAI,CAAC,CAAC,CAACoD,WAAW,CAAC,CAAC;EAC/C,MAAMC,OAAO,GAAGxF,IAAI,CAACyF,QAAQ,IAAI,SAAStD,IAAI,CAACuD,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;EAEjG7F,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEgF,IAAI,CAAC;EAEtD,IAAIa,OAAO,GAAG;AAChB;AACA;AACA;AACA,eAAed,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAcA,KAAK;AACnB,yCAAyCE,WAAW,OAAOC,WAAW;AACtE,4CAA4CI,OAAO,iBAAiBF,cAAc;AAClF;AACA,GAAG;;EAED;EACArF,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEgF,IAAI,CAAC;EAC1D,QAAQA,IAAI;IACV,KAAK,WAAW;MACdjF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C6F,OAAO,IAAIhG,wBAAwB,CAACC,IAAI,CAAC;MACzC;IACF,KAAK,gBAAgB;MACnBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD6F,OAAO,IAAIjE,4BAA4B,CAAC9B,IAAI,CAAC;MAC7C;IACF,KAAK,UAAU;MACbC,OAAO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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}