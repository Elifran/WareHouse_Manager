{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/SystemManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useApi } from '../hooks/useApi';\nimport Button from '../components/Button';\nimport Table from '../components/Table';\nimport './SystemManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemManagement = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const api = useApi();\n\n  // State for different management sections\n  const [activeTab, setActiveTab] = useState('taxes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Tax Classes State\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [showTaxModal, setShowTaxModal] = useState(false);\n  const [editingTaxClass, setEditingTaxClass] = useState(null);\n  const [taxFormData, setTaxFormData] = useState({\n    name: '',\n    description: '',\n    tax_rate: '',\n    is_active: true\n  });\n\n  // Categories State\n  const [categories, setCategories] = useState([]);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [categoryFormData, setCategoryFormData] = useState({\n    name: '',\n    description: '',\n    is_active: true\n  });\n\n  // Units State\n  const [units, setUnits] = useState([]);\n  const [filteredUnits, setFilteredUnits] = useState([]);\n  const [unitSearchTerm, setUnitSearchTerm] = useState('');\n  const [showUnitModal, setShowUnitModal] = useState(false);\n  const [editingUnit, setEditingUnit] = useState(null);\n  const [unitFormData, setUnitFormData] = useState({\n    name: '',\n    symbol: '',\n    is_base_unit: false,\n    is_active: true\n  });\n\n  // Unit Conversions State\n  const [unitConversions, setUnitConversions] = useState([]);\n  const [filteredConversions, setFilteredConversions] = useState([]);\n  const [conversionSearchTerm, setConversionSearchTerm] = useState('');\n  const [showConversionModal, setShowConversionModal] = useState(false);\n  const [editingConversion, setEditingConversion] = useState(null);\n  const [conversionFormData, setConversionFormData] = useState({\n    from_unit: '',\n    to_unit: '',\n    conversion_factor: '',\n    is_active: true\n  });\n\n  // Check if user has permission to manage\n  const canManage = (user === null || user === void 0 ? void 0 : user.role) === 'admin' || (user === null || user === void 0 ? void 0 : user.role) === 'manager';\n  useEffect(() => {\n    if (canManage) {\n      fetchAllData();\n    }\n  }, [canManage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Filter conversions based on search term\n  useEffect(() => {\n    if (!conversionSearchTerm.trim()) {\n      setFilteredConversions(unitConversions);\n    } else {\n      const filtered = unitConversions.filter(conversion => {\n        const searchLower = conversionSearchTerm.toLowerCase();\n        return conversion.from_unit_name && conversion.from_unit_name.toLowerCase().includes(searchLower) || conversion.from_unit_symbol && conversion.from_unit_symbol.toLowerCase().includes(searchLower) || conversion.to_unit_name && conversion.to_unit_name.toLowerCase().includes(searchLower) || conversion.to_unit_symbol && conversion.to_unit_symbol.toLowerCase().includes(searchLower) || conversion.conversion_factor.toString().includes(searchLower);\n      });\n      setFilteredConversions(filtered);\n    }\n  }, [unitConversions, conversionSearchTerm]);\n\n  // Filter units based on search term\n  useEffect(() => {\n    if (!unitSearchTerm.trim()) {\n      setFilteredUnits(units);\n    } else {\n      const filtered = units.filter(unit => {\n        const searchLower = unitSearchTerm.toLowerCase();\n        return unit.name && unit.name.toLowerCase().includes(searchLower) || unit.symbol && unit.symbol.toLowerCase().includes(searchLower) || unit.is_base_unit && 'base unit'.includes(searchLower) || unit.is_active && 'active'.includes(searchLower) || !unit.is_active && 'inactive'.includes(searchLower);\n      });\n      setFilteredUnits(filtered);\n    }\n  }, [units, unitSearchTerm]);\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([fetchTaxClasses(), fetchCategories(), fetchUnits(), fetchUnitConversions()]);\n    } catch (err) {\n      setError('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Tax Classes Functions\n  const fetchTaxClasses = async () => {\n    try {\n      const response = await api.get('/products/tax-classes/');\n      setTaxClasses(response.data.results || response.data);\n    } catch (err) {\n      console.error('Tax classes error:', err);\n    }\n  };\n  const validateTaxClass = data => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Tax class name is required');\n    }\n\n    // Check if tax rate is provided and valid\n    if (!data.tax_rate || data.tax_rate === '') {\n      errors.push('Tax rate is required');\n    } else {\n      const rate = parseFloat(data.tax_rate);\n      if (isNaN(rate)) {\n        errors.push('Tax rate must be a valid number');\n      } else if (rate < 0) {\n        errors.push('Tax rate cannot be negative');\n      } else if (rate > 100) {\n        errors.push('Tax rate cannot exceed 100%');\n      }\n    }\n\n    // Check for duplicate name (only for new tax classes)\n    if (!editingTaxClass) {\n      const existingTaxClass = taxClasses.find(taxClass => taxClass.name.toLowerCase() === data.name.toLowerCase());\n      if (existingTaxClass) {\n        errors.push('A tax class with this name already exists');\n      }\n    }\n    return errors;\n  };\n  const handleTaxSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Validate the tax class data\n      const validationErrors = validateTaxClass(taxFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingTaxClass) {\n        await api.put(`/products/tax-classes/${editingTaxClass.id}/`, taxFormData);\n      } else {\n        await api.post('/products/tax-classes/', taxFormData);\n      }\n      setShowTaxModal(false);\n      setEditingTaxClass(null);\n      setTaxFormData({\n        name: '',\n        description: '',\n        tax_rate: '',\n        is_active: true\n      });\n      fetchTaxClasses();\n    } catch (err) {\n      var _err$response;\n      // Handle specific backend errors\n      const errorData = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      let errorMessage = 'Failed to save tax class';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.tax_rate) {\n          errorMessage = `Tax rate: ${errorData.tax_rate.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Categories Functions\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n  const validateCategory = data => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Category name is required');\n    }\n\n    // Check for duplicate name (only for new categories)\n    if (!editingCategory) {\n      const existingCategory = categories.find(category => category.name.toLowerCase() === data.name.toLowerCase());\n      if (existingCategory) {\n        errors.push('A category with this name already exists');\n      }\n    }\n    return errors;\n  };\n  const handleCategorySubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Validate the category data\n      const validationErrors = validateCategory(categoryFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingCategory) {\n        await api.put(`/products/categories/${editingCategory.id}/`, categoryFormData);\n      } else {\n        await api.post('/products/categories/', categoryFormData);\n      }\n      setShowCategoryModal(false);\n      setEditingCategory(null);\n      setCategoryFormData({\n        name: '',\n        description: '',\n        is_active: true\n      });\n      fetchCategories();\n    } catch (err) {\n      var _err$response2;\n      // Handle specific backend errors\n      const errorData = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data;\n      let errorMessage = 'Failed to save category';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Units Functions\n  const fetchUnits = async () => {\n    try {\n      const response = await api.get('/products/units/');\n      setUnits(response.data.results || response.data);\n    } catch (err) {\n      console.error('Units error:', err);\n    }\n  };\n  const validateUnit = data => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Unit name is required');\n    }\n\n    // Check if symbol is provided\n    if (!data.symbol || data.symbol.trim() === '') {\n      errors.push('Unit symbol is required');\n    }\n\n    // Check for duplicate name (only for new units)\n    if (!editingUnit) {\n      const existingUnit = units.find(unit => unit.name.toLowerCase() === data.name.toLowerCase());\n      if (existingUnit) {\n        errors.push('A unit with this name already exists');\n      }\n    }\n\n    // Check for duplicate symbol (only for new units)\n    if (!editingUnit) {\n      const existingSymbol = units.find(unit => unit.symbol.toLowerCase() === data.symbol.toLowerCase());\n      if (existingSymbol) {\n        errors.push('A unit with this symbol already exists');\n      }\n    }\n\n    // Check if trying to set multiple base units\n    if (data.is_base_unit && !editingUnit) {\n      const existingBaseUnit = units.find(unit => unit.is_base_unit);\n      if (existingBaseUnit) {\n        errors.push('Only one base unit is allowed. Please uncheck the existing base unit first.');\n      }\n    }\n    return errors;\n  };\n  const handleUnitSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Validate the unit data\n      const validationErrors = validateUnit(unitFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingUnit) {\n        await api.put(`/products/units/${editingUnit.id}/`, unitFormData);\n      } else {\n        await api.post('/products/units/', unitFormData);\n      }\n      setShowUnitModal(false);\n      setEditingUnit(null);\n      setUnitFormData({\n        name: '',\n        symbol: '',\n        is_base_unit: false,\n        is_active: true\n      });\n      fetchUnits();\n    } catch (err) {\n      var _err$response3;\n      // Handle specific backend errors\n      const errorData = (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data;\n      let errorMessage = 'Failed to save unit';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.symbol) {\n          errorMessage = `Symbol: ${errorData.symbol.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Unit Conversions Functions\n  const fetchUnitConversions = async () => {\n    try {\n      const response = await api.get('/products/unit-conversions/');\n      setUnitConversions(response.data.results || response.data);\n    } catch (err) {\n      console.error('Unit conversions error:', err);\n    }\n  };\n  const validateConversion = data => {\n    const errors = [];\n\n    // Check if from_unit and to_unit are the same\n    if (data.from_unit === data.to_unit) {\n      errors.push('From unit and To unit cannot be the same');\n    }\n\n    // Check if conversion factor is valid\n    if (data.conversion_factor <= 0) {\n      errors.push('Conversion factor must be greater than 0');\n    }\n\n    // Check if conversion factor is reasonable (not too large or too small)\n    if (data.conversion_factor > 10000) {\n      errors.push('Conversion factor is too large (max: 10,000)');\n    }\n    if (data.conversion_factor < 0.0001) {\n      errors.push('Conversion factor is too small (min: 0.0001)');\n    }\n\n    // Find the selected units\n    const fromUnit = units.find(unit => unit.id === parseInt(data.from_unit));\n    const toUnit = units.find(unit => unit.id === parseInt(data.to_unit));\n\n    // Check that at least one unit is a base unit\n    if (fromUnit && toUnit && !fromUnit.is_base_unit && !toUnit.is_base_unit) {\n      errors.push('At least one of the units must be a base unit');\n    }\n\n    // Check for existing conversion (only for new conversions)\n    if (!editingConversion) {\n      const existingConversion = unitConversions.find(conv => conv.from_unit === data.from_unit && conv.to_unit === data.to_unit || conv.from_unit === data.to_unit && conv.to_unit === data.from_unit);\n      if (existingConversion) {\n        errors.push('A conversion between these units already exists');\n      }\n    }\n\n    // Check for circular conversions\n    const hasCircularConversion = unitConversions.some(conv => {\n      if (editingConversion && conv.id === editingConversion.id) return false;\n\n      // Check if this would create a circular conversion\n      return conv.from_unit === data.to_unit && conv.to_unit === data.from_unit;\n    });\n    if (hasCircularConversion) {\n      errors.push('This would create a circular conversion (reverse conversion already exists)');\n    }\n\n    // Check that non-base units have only one conversion from base unit\n    if (fromUnit && toUnit) {\n      // If from_unit is not a base unit, check if it already has a conversion from a base unit\n      if (!fromUnit.is_base_unit) {\n        const existingBaseConversion = unitConversions.find(conv => {\n          if (editingConversion && conv.id === editingConversion.id) return false;\n          const convFromUnit = units.find(unit => unit.id === conv.from_unit);\n          return convFromUnit && convFromUnit.is_base_unit && conv.to_unit === fromUnit.id;\n        });\n        if (existingBaseConversion) {\n          errors.push(`${fromUnit.name} already has a conversion from a base unit`);\n        }\n      }\n\n      // If to_unit is not a base unit, check if it already has a conversion from a base unit\n      if (!toUnit.is_base_unit) {\n        const existingBaseConversion = unitConversions.find(conv => {\n          if (editingConversion && conv.id === editingConversion.id) return false;\n          const convFromUnit = units.find(unit => unit.id === conv.from_unit);\n          return convFromUnit && convFromUnit.is_base_unit && conv.to_unit === toUnit.id;\n        });\n        if (existingBaseConversion) {\n          errors.push(`${toUnit.name} already has a conversion from a base unit`);\n        }\n      }\n    }\n    return errors;\n  };\n  const handleConversionSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const data = {\n        ...conversionFormData,\n        from_unit: parseInt(conversionFormData.from_unit),\n        to_unit: parseInt(conversionFormData.to_unit),\n        conversion_factor: parseFloat(conversionFormData.conversion_factor)\n      };\n\n      // Validate the conversion data\n      const validationErrors = validateConversion(data);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingConversion) {\n        await api.put(`/products/unit-conversions/${editingConversion.id}/`, data);\n      } else {\n        await api.post('/products/unit-conversions/', data);\n      }\n      setShowConversionModal(false);\n      setEditingConversion(null);\n      setConversionFormData({\n        from_unit: '',\n        to_unit: '',\n        conversion_factor: '',\n        is_active: true\n      });\n      fetchUnitConversions();\n    } catch (err) {\n      var _err$response4;\n      // Handle specific backend errors\n      const errorData = (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data;\n      let errorMessage = 'Failed to save unit conversion';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.from_unit) {\n          errorMessage = `From unit: ${errorData.from_unit.join('. ')}`;\n        } else if (errorData.to_unit) {\n          errorMessage = `To unit: ${errorData.to_unit.join('. ')}`;\n        } else if (errorData.conversion_factor) {\n          errorMessage = `Conversion factor: ${errorData.conversion_factor.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Delete Functions\n  const handleDelete = async (type, item) => {\n    if (!window.confirm(`Are you sure you want to delete \"${item.name}\"?`)) {\n      return;\n    }\n    try {\n      const endpoints = {\n        tax: `/products/tax-classes/${item.id}/`,\n        category: `/products/categories/${item.id}/`,\n        unit: `/products/units/${item.id}/`,\n        conversion: `/products/unit-conversions/${item.id}/`\n      };\n      await api.delete(endpoints[type]);\n      switch (type) {\n        case 'tax':\n          fetchTaxClasses();\n          break;\n        case 'category':\n          fetchCategories();\n          break;\n        case 'unit':\n          fetchUnits();\n          break;\n        case 'conversion':\n          fetchUnitConversions();\n          break;\n        default:\n          console.warn('Unknown delete type:', type);\n          break;\n      }\n    } catch (err) {\n      setError(`Failed to delete ${type}`);\n    }\n  };\n\n  // Table Columns\n  const taxColumns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'description',\n    label: 'Description'\n  }, {\n    key: 'tax_rate',\n    label: 'Tax Rate (%)',\n    render: value => `${value}%`\n  }, {\n    key: 'products_count',\n    label: 'Products'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingTaxClass(item);\n          setTaxFormData({\n            name: item.name,\n            description: item.description,\n            tax_rate: item.tax_rate.toString(),\n            is_active: item.is_active\n          });\n          setShowTaxModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('tax', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }, this)\n  }];\n  const categoryColumns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'description',\n    label: 'Description'\n  }, {\n    key: 'products_count',\n    label: 'Products'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingCategory(item);\n          setCategoryFormData({\n            name: item.name,\n            description: item.description,\n            is_active: item.is_active\n          });\n          setShowCategoryModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('category', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 9\n    }, this)\n  }];\n  const unitColumns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'symbol',\n    label: 'Symbol'\n  }, {\n    key: 'is_base_unit',\n    label: 'Base Unit',\n    render: value => value ? 'Yes' : 'No'\n  }, {\n    key: 'products_count',\n    label: 'Products'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingUnit(item);\n          setUnitFormData({\n            name: item.name,\n            symbol: item.symbol,\n            is_base_unit: item.is_base_unit,\n            is_active: item.is_active\n          });\n          setShowUnitModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('unit', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 9\n    }, this)\n  }];\n  const conversionColumns = [{\n    key: 'from_unit_name',\n    label: 'From Unit',\n    render: (value, item) => item.from_unit_name ? `${item.from_unit_name} (${item.from_unit_symbol})` : 'N/A'\n  }, {\n    key: 'to_unit_name',\n    label: 'To Unit',\n    render: (value, item) => item.to_unit_name ? `${item.to_unit_name} (${item.to_unit_symbol})` : 'N/A'\n  }, {\n    key: 'conversion_factor',\n    label: 'Conversion Factor'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingConversion(item);\n          setConversionFormData({\n            from_unit: item.from_unit || '',\n            to_unit: item.to_unit || '',\n            conversion_factor: item.conversion_factor.toString(),\n            is_active: item.is_active\n          });\n          setShowConversionModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('conversion', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 9\n    }, this)\n  }];\n  if (!canManage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-management\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"access-denied\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have permission to manage system settings. Only managers and administrators can access this page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"System Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage taxes, categories, units, and unit conversions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'taxes' ? 'active' : ''}`,\n        onClick: () => setActiveTab('taxes'),\n        children: \"Tax Classes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'categories' ? 'active' : ''}`,\n        onClick: () => setActiveTab('categories'),\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'units' ? 'active' : ''}`,\n        onClick: () => setActiveTab('units'),\n        children: \"Units\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'conversions' ? 'active' : ''}`,\n        onClick: () => setActiveTab('conversions'),\n        children: \"Unit Conversions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-content\",\n      children: [activeTab === 'taxes' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tax Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingTaxClass(null);\n              setTaxFormData({\n                name: '',\n                description: '',\n                tax_rate: '',\n                is_active: true\n              });\n              setShowTaxModal(true);\n            },\n            children: \"Add New Tax Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: taxClasses,\n          columns: taxColumns,\n          loading: loading,\n          emptyMessage: \"No tax classes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 11\n      }, this), activeTab === 'categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Product Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingCategory(null);\n              setCategoryFormData({\n                name: '',\n                description: '',\n                is_active: true\n              });\n              setShowCategoryModal(true);\n            },\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: categories,\n          columns: categoryColumns,\n          loading: loading,\n          emptyMessage: \"No categories found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 11\n      }, this), activeTab === 'units' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Units\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingUnit(null);\n              setUnitFormData({\n                name: '',\n                symbol: '',\n                is_base_unit: false,\n                is_active: true\n              });\n              setShowUnitModal(true);\n            },\n            children: \"Add New Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: units,\n          columns: unitColumns,\n          loading: loading,\n          emptyMessage: \"No units found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 11\n      }, this), activeTab === 'conversions' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unit Conversions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search conversions...\",\n                value: conversionSearchTerm,\n                onChange: e => setConversionSearchTerm(e.target.value),\n                className: \"search-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"search-icon\",\n                children: \"\\uD83D\\uDD0D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setEditingConversion(null);\n                setConversionFormData({\n                  from_unit: '',\n                  to_unit: '',\n                  conversion_factor: '',\n                  is_active: true\n                });\n                setShowConversionModal(true);\n              },\n              children: \"Add New Conversion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: filteredConversions,\n          columns: conversionColumns,\n          loading: loading,\n          emptyMessage: conversionSearchTerm ? \"No conversions found matching your search\" : \"No unit conversions found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this), showTaxModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowTaxModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingTaxClass ? 'Edit Tax Class' : 'Add New Tax Class'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowTaxModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTaxSubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tax_name\",\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"tax_name\",\n              value: taxFormData.name,\n              onChange: e => setTaxFormData({\n                ...taxFormData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., Standard Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tax_description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"tax_description\",\n              value: taxFormData.description,\n              onChange: e => setTaxFormData({\n                ...taxFormData,\n                description: e.target.value\n              }),\n              placeholder: \"Brief description of this tax class\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tax_rate\",\n              children: \"Tax Rate (%) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"tax_rate\",\n              value: taxFormData.tax_rate,\n              onChange: e => setTaxFormData({\n                ...taxFormData,\n                tax_rate: e.target.value\n              }),\n              required: true,\n              min: \"0\",\n              max: \"100\",\n              step: \"0.01\",\n              placeholder: \"18.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: taxFormData.is_active,\n                onChange: e => setTaxFormData({\n                  ...taxFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowTaxModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingTaxClass ? 'Update' : 'Create', \" Tax Class\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 9\n    }, this), showCategoryModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowCategoryModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingCategory ? 'Edit Category' : 'Add New Category'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowCategoryModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 966,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCategorySubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category_name\",\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"category_name\",\n              value: categoryFormData.name,\n              onChange: e => setCategoryFormData({\n                ...categoryFormData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., Beverages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category_description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"category_description\",\n              value: categoryFormData.description,\n              onChange: e => setCategoryFormData({\n                ...categoryFormData,\n                description: e.target.value\n              }),\n              placeholder: \"Brief description of this category\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: categoryFormData.is_active,\n                onChange: e => setCategoryFormData({\n                  ...categoryFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowCategoryModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingCategory ? 'Update' : 'Create', \" Category\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 9\n    }, this), showUnitModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowUnitModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingUnit ? 'Edit Unit' : 'Add New Unit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowUnitModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUnitSubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit_name\",\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"unit_name\",\n              value: unitFormData.name,\n              onChange: e => setUnitFormData({\n                ...unitFormData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., Kilogram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit_symbol\",\n              children: \"Symbol *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"unit_symbol\",\n              value: unitFormData.symbol,\n              onChange: e => setUnitFormData({\n                ...unitFormData,\n                symbol: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: unitFormData.is_base_unit,\n                onChange: e => setUnitFormData({\n                  ...unitFormData,\n                  is_base_unit: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 19\n              }, this), \"Base Unit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: unitFormData.is_active,\n                onChange: e => setUnitFormData({\n                  ...unitFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1073,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowUnitModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingUnit ? 'Update' : 'Create', \" Unit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 9\n    }, this), showConversionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowConversionModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingConversion ? 'Edit Unit Conversion' : 'Add New Unit Conversion'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowConversionModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleConversionSubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from_unit\",\n              children: \"From Unit *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"from_unit\",\n              value: conversionFormData.from_unit,\n              onChange: e => setConversionFormData({\n                ...conversionFormData,\n                from_unit: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select From Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 19\n              }, this), units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit.id,\n                children: [unit.name, \" (\", unit.symbol, \")\"]\n              }, unit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"to_unit\",\n              children: \"To Unit *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"to_unit\",\n              value: conversionFormData.to_unit,\n              onChange: e => setConversionFormData({\n                ...conversionFormData,\n                to_unit: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select To Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 19\n              }, this), units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit.id,\n                children: [unit.name, \" (\", unit.symbol, \")\"]\n              }, unit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"conversion_factor\",\n              children: \"Conversion Factor *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"conversion_factor\",\n              value: conversionFormData.conversion_factor,\n              onChange: e => setConversionFormData({\n                ...conversionFormData,\n                conversion_factor: e.target.value\n              }),\n              required: true,\n              min: \"0.001\",\n              step: \"0.001\",\n              placeholder: \"e.g., 20 (for 1 carton = 20 pieces)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"How many \\\"to units\\\" equal 1 \\\"from unit\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: conversionFormData.is_active,\n                onChange: e => setConversionFormData({\n                  ...conversionFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowConversionModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingConversion ? 'Update' : 'Create', \" Conversion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 745,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemManagement, \"rxxghHRpLfdiqfdpLQuhEHBhjHQ=\", false, function () {\n  return [useAuth, useApi];\n});\n_c = SystemManagement;\nexport default SystemManagement;\nvar _c;\n$RefreshReg$(_c, \"SystemManagement\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useApi","Button","Table","jsxDEV","_jsxDEV","SystemManagement","_s","user","api","activeTab","setActiveTab","loading","setLoading","error","setError","taxClasses","setTaxClasses","showTaxModal","setShowTaxModal","editingTaxClass","setEditingTaxClass","taxFormData","setTaxFormData","name","description","tax_rate","is_active","categories","setCategories","showCategoryModal","setShowCategoryModal","editingCategory","setEditingCategory","categoryFormData","setCategoryFormData","units","setUnits","filteredUnits","setFilteredUnits","unitSearchTerm","setUnitSearchTerm","showUnitModal","setShowUnitModal","editingUnit","setEditingUnit","unitFormData","setUnitFormData","symbol","is_base_unit","unitConversions","setUnitConversions","filteredConversions","setFilteredConversions","conversionSearchTerm","setConversionSearchTerm","showConversionModal","setShowConversionModal","editingConversion","setEditingConversion","conversionFormData","setConversionFormData","from_unit","to_unit","conversion_factor","canManage","role","fetchAllData","trim","filtered","filter","conversion","searchLower","toLowerCase","from_unit_name","includes","from_unit_symbol","to_unit_name","to_unit_symbol","toString","unit","Promise","all","fetchTaxClasses","fetchCategories","fetchUnits","fetchUnitConversions","err","response","get","data","results","console","validateTaxClass","errors","push","rate","parseFloat","isNaN","existingTaxClass","find","taxClass","handleTaxSubmit","e","preventDefault","validationErrors","length","join","put","id","post","_err$response","errorData","errorMessage","detail","non_field_errors","firstError","Object","values","Array","isArray","validateCategory","existingCategory","category","handleCategorySubmit","_err$response2","validateUnit","existingUnit","existingSymbol","existingBaseUnit","handleUnitSubmit","_err$response3","validateConversion","fromUnit","parseInt","toUnit","existingConversion","conv","hasCircularConversion","some","existingBaseConversion","convFromUnit","handleConversionSubmit","_err$response4","handleDelete","type","item","window","confirm","endpoints","tax","delete","warn","taxColumns","key","label","render","value","_","className","children","size","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","categoryColumns","unitColumns","conversionColumns","columns","emptyMessage","placeholder","onChange","target","stopPropagation","viewBox","fill","d","onSubmit","htmlFor","required","rows","min","max","step","checked","map","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/SystemManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useApi } from '../hooks/useApi';\nimport Button from '../components/Button';\nimport Table from '../components/Table';\nimport './SystemManagement.css';\n\nconst SystemManagement = () => {\n  const { user } = useAuth();\n  const api = useApi();\n  \n  // State for different management sections\n  const [activeTab, setActiveTab] = useState('taxes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  // Tax Classes State\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [showTaxModal, setShowTaxModal] = useState(false);\n  const [editingTaxClass, setEditingTaxClass] = useState(null);\n  const [taxFormData, setTaxFormData] = useState({\n    name: '',\n    description: '',\n    tax_rate: '',\n    is_active: true\n  });\n  \n  // Categories State\n  const [categories, setCategories] = useState([]);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [categoryFormData, setCategoryFormData] = useState({\n    name: '',\n    description: '',\n    is_active: true\n  });\n  \n  // Units State\n  const [units, setUnits] = useState([]);\n  const [filteredUnits, setFilteredUnits] = useState([]);\n  const [unitSearchTerm, setUnitSearchTerm] = useState('');\n  const [showUnitModal, setShowUnitModal] = useState(false);\n  const [editingUnit, setEditingUnit] = useState(null);\n  const [unitFormData, setUnitFormData] = useState({\n    name: '',\n    symbol: '',\n    is_base_unit: false,\n    is_active: true\n  });\n  \n  // Unit Conversions State\n  const [unitConversions, setUnitConversions] = useState([]);\n  const [filteredConversions, setFilteredConversions] = useState([]);\n  const [conversionSearchTerm, setConversionSearchTerm] = useState('');\n  const [showConversionModal, setShowConversionModal] = useState(false);\n  const [editingConversion, setEditingConversion] = useState(null);\n  const [conversionFormData, setConversionFormData] = useState({\n    from_unit: '',\n    to_unit: '',\n    conversion_factor: '',\n    is_active: true\n  });\n\n  // Check if user has permission to manage\n  const canManage = user?.role === 'admin' || user?.role === 'manager';\n\n  useEffect(() => {\n    if (canManage) {\n      fetchAllData();\n    }\n  }, [canManage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Filter conversions based on search term\n  useEffect(() => {\n    if (!conversionSearchTerm.trim()) {\n      setFilteredConversions(unitConversions);\n    } else {\n      const filtered = unitConversions.filter(conversion => {\n        const searchLower = conversionSearchTerm.toLowerCase();\n        return (\n          (conversion.from_unit_name && conversion.from_unit_name.toLowerCase().includes(searchLower)) ||\n          (conversion.from_unit_symbol && conversion.from_unit_symbol.toLowerCase().includes(searchLower)) ||\n          (conversion.to_unit_name && conversion.to_unit_name.toLowerCase().includes(searchLower)) ||\n          (conversion.to_unit_symbol && conversion.to_unit_symbol.toLowerCase().includes(searchLower)) ||\n          conversion.conversion_factor.toString().includes(searchLower)\n        );\n      });\n      setFilteredConversions(filtered);\n    }\n  }, [unitConversions, conversionSearchTerm]);\n\n  // Filter units based on search term\n  useEffect(() => {\n    if (!unitSearchTerm.trim()) {\n      setFilteredUnits(units);\n    } else {\n      const filtered = units.filter(unit => {\n        const searchLower = unitSearchTerm.toLowerCase();\n        return (\n          (unit.name && unit.name.toLowerCase().includes(searchLower)) ||\n          (unit.symbol && unit.symbol.toLowerCase().includes(searchLower)) ||\n          (unit.is_base_unit && 'base unit'.includes(searchLower)) ||\n          (unit.is_active && 'active'.includes(searchLower)) ||\n          (!unit.is_active && 'inactive'.includes(searchLower))\n        );\n      });\n      setFilteredUnits(filtered);\n    }\n  }, [units, unitSearchTerm]);\n\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([\n        fetchTaxClasses(),\n        fetchCategories(),\n        fetchUnits(),\n        fetchUnitConversions()\n      ]);\n    } catch (err) {\n      setError('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Tax Classes Functions\n  const fetchTaxClasses = async () => {\n    try {\n      const response = await api.get('/products/tax-classes/');\n      setTaxClasses(response.data.results || response.data);\n    } catch (err) {\n      console.error('Tax classes error:', err);\n    }\n  };\n\n  const validateTaxClass = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Tax class name is required');\n    }\n\n    // Check if tax rate is provided and valid\n    if (!data.tax_rate || data.tax_rate === '') {\n      errors.push('Tax rate is required');\n    } else {\n      const rate = parseFloat(data.tax_rate);\n      if (isNaN(rate)) {\n        errors.push('Tax rate must be a valid number');\n      } else if (rate < 0) {\n        errors.push('Tax rate cannot be negative');\n      } else if (rate > 100) {\n        errors.push('Tax rate cannot exceed 100%');\n      }\n    }\n\n    // Check for duplicate name (only for new tax classes)\n    if (!editingTaxClass) {\n      const existingTaxClass = taxClasses.find(taxClass => \n        taxClass.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingTaxClass) {\n        errors.push('A tax class with this name already exists');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleTaxSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the tax class data\n      const validationErrors = validateTaxClass(taxFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingTaxClass) {\n        await api.put(`/products/tax-classes/${editingTaxClass.id}/`, taxFormData);\n      } else {\n        await api.post('/products/tax-classes/', taxFormData);\n      }\n      \n      setShowTaxModal(false);\n      setEditingTaxClass(null);\n      setTaxFormData({ name: '', description: '', tax_rate: '', is_active: true });\n      fetchTaxClasses();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save tax class';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.tax_rate) {\n          errorMessage = `Tax rate: ${errorData.tax_rate.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Categories Functions\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const validateCategory = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Category name is required');\n    }\n\n    // Check for duplicate name (only for new categories)\n    if (!editingCategory) {\n      const existingCategory = categories.find(category => \n        category.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingCategory) {\n        errors.push('A category with this name already exists');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleCategorySubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the category data\n      const validationErrors = validateCategory(categoryFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingCategory) {\n        await api.put(`/products/categories/${editingCategory.id}/`, categoryFormData);\n      } else {\n        await api.post('/products/categories/', categoryFormData);\n      }\n      \n      setShowCategoryModal(false);\n      setEditingCategory(null);\n      setCategoryFormData({ name: '', description: '', is_active: true });\n      fetchCategories();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save category';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Units Functions\n  const fetchUnits = async () => {\n    try {\n      const response = await api.get('/products/units/');\n      setUnits(response.data.results || response.data);\n    } catch (err) {\n      console.error('Units error:', err);\n    }\n  };\n\n  const validateUnit = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Unit name is required');\n    }\n\n    // Check if symbol is provided\n    if (!data.symbol || data.symbol.trim() === '') {\n      errors.push('Unit symbol is required');\n    }\n\n    // Check for duplicate name (only for new units)\n    if (!editingUnit) {\n      const existingUnit = units.find(unit => \n        unit.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingUnit) {\n        errors.push('A unit with this name already exists');\n      }\n    }\n\n    // Check for duplicate symbol (only for new units)\n    if (!editingUnit) {\n      const existingSymbol = units.find(unit => \n        unit.symbol.toLowerCase() === data.symbol.toLowerCase()\n      );\n      if (existingSymbol) {\n        errors.push('A unit with this symbol already exists');\n      }\n    }\n\n    // Check if trying to set multiple base units\n    if (data.is_base_unit && !editingUnit) {\n      const existingBaseUnit = units.find(unit => unit.is_base_unit);\n      if (existingBaseUnit) {\n        errors.push('Only one base unit is allowed. Please uncheck the existing base unit first.');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleUnitSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the unit data\n      const validationErrors = validateUnit(unitFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingUnit) {\n        await api.put(`/products/units/${editingUnit.id}/`, unitFormData);\n      } else {\n        await api.post('/products/units/', unitFormData);\n      }\n      \n      setShowUnitModal(false);\n      setEditingUnit(null);\n      setUnitFormData({ name: '', symbol: '', is_base_unit: false, is_active: true });\n      fetchUnits();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save unit';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.symbol) {\n          errorMessage = `Symbol: ${errorData.symbol.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Unit Conversions Functions\n  const fetchUnitConversions = async () => {\n    try {\n      const response = await api.get('/products/unit-conversions/');\n      setUnitConversions(response.data.results || response.data);\n    } catch (err) {\n      console.error('Unit conversions error:', err);\n    }\n  };\n\n  const validateConversion = (data) => {\n    const errors = [];\n\n    // Check if from_unit and to_unit are the same\n    if (data.from_unit === data.to_unit) {\n      errors.push('From unit and To unit cannot be the same');\n    }\n\n    // Check if conversion factor is valid\n    if (data.conversion_factor <= 0) {\n      errors.push('Conversion factor must be greater than 0');\n    }\n\n    // Check if conversion factor is reasonable (not too large or too small)\n    if (data.conversion_factor > 10000) {\n      errors.push('Conversion factor is too large (max: 10,000)');\n    }\n\n    if (data.conversion_factor < 0.0001) {\n      errors.push('Conversion factor is too small (min: 0.0001)');\n    }\n\n    // Find the selected units\n    const fromUnit = units.find(unit => unit.id === parseInt(data.from_unit));\n    const toUnit = units.find(unit => unit.id === parseInt(data.to_unit));\n\n    // Check that at least one unit is a base unit\n    if (fromUnit && toUnit && !fromUnit.is_base_unit && !toUnit.is_base_unit) {\n      errors.push('At least one of the units must be a base unit');\n    }\n\n    // Check for existing conversion (only for new conversions)\n    if (!editingConversion) {\n      const existingConversion = unitConversions.find(conv => \n        (conv.from_unit === data.from_unit && conv.to_unit === data.to_unit) ||\n        (conv.from_unit === data.to_unit && conv.to_unit === data.from_unit)\n      );\n      \n      if (existingConversion) {\n        errors.push('A conversion between these units already exists');\n      }\n    }\n\n    // Check for circular conversions\n    const hasCircularConversion = unitConversions.some(conv => {\n      if (editingConversion && conv.id === editingConversion.id) return false;\n      \n      // Check if this would create a circular conversion\n      return (conv.from_unit === data.to_unit && conv.to_unit === data.from_unit);\n    });\n\n    if (hasCircularConversion) {\n      errors.push('This would create a circular conversion (reverse conversion already exists)');\n    }\n\n    // Check that non-base units have only one conversion from base unit\n    if (fromUnit && toUnit) {\n      // If from_unit is not a base unit, check if it already has a conversion from a base unit\n      if (!fromUnit.is_base_unit) {\n        const existingBaseConversion = unitConversions.find(conv => {\n          if (editingConversion && conv.id === editingConversion.id) return false;\n          const convFromUnit = units.find(unit => unit.id === conv.from_unit);\n          return convFromUnit && convFromUnit.is_base_unit && conv.to_unit === fromUnit.id;\n        });\n        \n        if (existingBaseConversion) {\n          errors.push(`${fromUnit.name} already has a conversion from a base unit`);\n        }\n      }\n\n      // If to_unit is not a base unit, check if it already has a conversion from a base unit\n      if (!toUnit.is_base_unit) {\n        const existingBaseConversion = unitConversions.find(conv => {\n          if (editingConversion && conv.id === editingConversion.id) return false;\n          const convFromUnit = units.find(unit => unit.id === conv.from_unit);\n          return convFromUnit && convFromUnit.is_base_unit && conv.to_unit === toUnit.id;\n        });\n        \n        if (existingBaseConversion) {\n          errors.push(`${toUnit.name} already has a conversion from a base unit`);\n        }\n      }\n    }\n\n    return errors;\n  };\n\n  const handleConversionSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const data = {\n        ...conversionFormData,\n        from_unit: parseInt(conversionFormData.from_unit),\n        to_unit: parseInt(conversionFormData.to_unit),\n        conversion_factor: parseFloat(conversionFormData.conversion_factor)\n      };\n\n      // Validate the conversion data\n      const validationErrors = validateConversion(data);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingConversion) {\n        await api.put(`/products/unit-conversions/${editingConversion.id}/`, data);\n      } else {\n        await api.post('/products/unit-conversions/', data);\n      }\n      \n      setShowConversionModal(false);\n      setEditingConversion(null);\n      setConversionFormData({ from_unit: '', to_unit: '', conversion_factor: '', is_active: true });\n      fetchUnitConversions();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save unit conversion';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.from_unit) {\n          errorMessage = `From unit: ${errorData.from_unit.join('. ')}`;\n        } else if (errorData.to_unit) {\n          errorMessage = `To unit: ${errorData.to_unit.join('. ')}`;\n        } else if (errorData.conversion_factor) {\n          errorMessage = `Conversion factor: ${errorData.conversion_factor.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Delete Functions\n  const handleDelete = async (type, item) => {\n    if (!window.confirm(`Are you sure you want to delete \"${item.name}\"?`)) {\n      return;\n    }\n\n    try {\n      const endpoints = {\n        tax: `/products/tax-classes/${item.id}/`,\n        category: `/products/categories/${item.id}/`,\n        unit: `/products/units/${item.id}/`,\n        conversion: `/products/unit-conversions/${item.id}/`\n      };\n      \n      await api.delete(endpoints[type]);\n      \n      switch (type) {\n        case 'tax':\n          fetchTaxClasses();\n          break;\n        case 'category':\n          fetchCategories();\n          break;\n        case 'unit':\n          fetchUnits();\n          break;\n        case 'conversion':\n          fetchUnitConversions();\n          break;\n        default:\n          console.warn('Unknown delete type:', type);\n          break;\n      }\n    } catch (err) {\n      setError(`Failed to delete ${type}`);\n    }\n  };\n\n  // Table Columns\n  const taxColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'description', label: 'Description' },\n    { key: 'tax_rate', label: 'Tax Rate (%)', render: (value) => `${value}%` },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingTaxClass(item);\n            setTaxFormData({\n              name: item.name,\n              description: item.description,\n              tax_rate: item.tax_rate.toString(),\n              is_active: item.is_active\n            });\n            setShowTaxModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('tax', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const categoryColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'description', label: 'Description' },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingCategory(item);\n            setCategoryFormData({\n              name: item.name,\n              description: item.description,\n              is_active: item.is_active\n            });\n            setShowCategoryModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('category', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const unitColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'symbol', label: 'Symbol' },\n    { key: 'is_base_unit', label: 'Base Unit', render: (value) => value ? 'Yes' : 'No' },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingUnit(item);\n            setUnitFormData({\n              name: item.name,\n              symbol: item.symbol,\n              is_base_unit: item.is_base_unit,\n              is_active: item.is_active\n            });\n            setShowUnitModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('unit', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const conversionColumns = [\n    { \n      key: 'from_unit_name', \n      label: 'From Unit', \n      render: (value, item) => item.from_unit_name ? `${item.from_unit_name} (${item.from_unit_symbol})` : 'N/A' \n    },\n    { \n      key: 'to_unit_name', \n      label: 'To Unit', \n      render: (value, item) => item.to_unit_name ? `${item.to_unit_name} (${item.to_unit_symbol})` : 'N/A' \n    },\n    { key: 'conversion_factor', label: 'Conversion Factor' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingConversion(item);\n            setConversionFormData({\n              from_unit: item.from_unit || '',\n              to_unit: item.to_unit || '',\n              conversion_factor: item.conversion_factor.toString(),\n              is_active: item.is_active\n            });\n            setShowConversionModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('conversion', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  if (!canManage) {\n    return (\n      <div className=\"system-management\">\n        <div className=\"access-denied\">\n          <h2>Access Denied</h2>\n          <p>You don't have permission to manage system settings. Only managers and administrators can access this page.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"system-management\">\n      <div className=\"system-header\">\n        <h1>System Management</h1>\n        <p>Manage taxes, categories, units, and unit conversions</p>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"system-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'taxes' ? 'active' : ''}`}\n          onClick={() => setActiveTab('taxes')}\n        >\n          Tax Classes\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'categories' ? 'active' : ''}`}\n          onClick={() => setActiveTab('categories')}\n        >\n          Categories\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'units' ? 'active' : ''}`}\n          onClick={() => setActiveTab('units')}\n        >\n          Units\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'conversions' ? 'active' : ''}`}\n          onClick={() => setActiveTab('conversions')}\n        >\n          Unit Conversions\n        </button>\n      </div>\n\n      <div className=\"system-content\">\n        {activeTab === 'taxes' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Tax Classes</h2>\n              <Button onClick={() => {\n                setEditingTaxClass(null);\n                setTaxFormData({ name: '', description: '', tax_rate: '', is_active: true });\n                setShowTaxModal(true);\n              }}>\n                Add New Tax Class\n              </Button>\n            </div>\n            <Table\n              data={taxClasses}\n              columns={taxColumns}\n              loading={loading}\n              emptyMessage=\"No tax classes found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'categories' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Product Categories</h2>\n              <Button onClick={() => {\n                setEditingCategory(null);\n                setCategoryFormData({ name: '', description: '', is_active: true });\n                setShowCategoryModal(true);\n              }}>\n                Add New Category\n              </Button>\n            </div>\n            <Table\n              data={categories}\n              columns={categoryColumns}\n              loading={loading}\n              emptyMessage=\"No categories found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'units' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Units</h2>\n              <Button onClick={() => {\n                setEditingUnit(null);\n                setUnitFormData({ name: '', symbol: '', is_base_unit: false, is_active: true });\n                setShowUnitModal(true);\n              }}>\n                Add New Unit\n              </Button>\n            </div>\n            <Table\n              data={units}\n              columns={unitColumns}\n              loading={loading}\n              emptyMessage=\"No units found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'conversions' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Unit Conversions</h2>\n              <div className=\"header-actions\">\n                <div className=\"search-container\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search conversions...\"\n                    value={conversionSearchTerm}\n                    onChange={(e) => setConversionSearchTerm(e.target.value)}\n                    className=\"search-input\"\n                  />\n                  <span className=\"search-icon\">🔍</span>\n                </div>\n                <Button onClick={() => {\n                  setEditingConversion(null);\n                  setConversionFormData({ from_unit: '', to_unit: '', conversion_factor: '', is_active: true });\n                  setShowConversionModal(true);\n                }}>\n                  Add New Conversion\n                </Button>\n              </div>\n            </div>\n            <Table\n              data={filteredConversions}\n              columns={conversionColumns}\n              loading={loading}\n              emptyMessage={conversionSearchTerm ? \"No conversions found matching your search\" : \"No unit conversions found\"}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Tax Class Modal */}\n      {showTaxModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowTaxModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingTaxClass ? 'Edit Tax Class' : 'Add New Tax Class'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowTaxModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleTaxSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"tax_name\"\n                  value={taxFormData.name}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Standard Rate\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_description\">Description</label>\n                <textarea\n                  id=\"tax_description\"\n                  value={taxFormData.description}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, description: e.target.value })}\n                  placeholder=\"Brief description of this tax class\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_rate\">Tax Rate (%) *</label>\n                <input\n                  type=\"number\"\n                  id=\"tax_rate\"\n                  value={taxFormData.tax_rate}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, tax_rate: e.target.value })}\n                  required\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"0.01\"\n                  placeholder=\"18.00\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={taxFormData.is_active}\n                    onChange={(e) => setTaxFormData({ ...taxFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowTaxModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingTaxClass ? 'Update' : 'Create'} Tax Class\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Category Modal */}\n      {showCategoryModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowCategoryModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingCategory ? 'Edit Category' : 'Add New Category'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowCategoryModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleCategorySubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"category_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"category_name\"\n                  value={categoryFormData.name}\n                  onChange={(e) => setCategoryFormData({ ...categoryFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Beverages\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category_description\">Description</label>\n                <textarea\n                  id=\"category_description\"\n                  value={categoryFormData.description}\n                  onChange={(e) => setCategoryFormData({ ...categoryFormData, description: e.target.value })}\n                  placeholder=\"Brief description of this category\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={categoryFormData.is_active}\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowCategoryModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingCategory ? 'Update' : 'Create'} Category\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Unit Modal */}\n      {showUnitModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowUnitModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingUnit ? 'Edit Unit' : 'Add New Unit'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowUnitModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleUnitSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"unit_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"unit_name\"\n                  value={unitFormData.name}\n                  onChange={(e) => setUnitFormData({ ...unitFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Kilogram\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"unit_symbol\">Symbol *</label>\n                <input\n                  type=\"text\"\n                  id=\"unit_symbol\"\n                  value={unitFormData.symbol}\n                  onChange={(e) => setUnitFormData({ ...unitFormData, symbol: e.target.value })}\n                  required\n                  placeholder=\"e.g., kg\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={unitFormData.is_base_unit}\n                    onChange={(e) => setUnitFormData({ ...unitFormData, is_base_unit: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Base Unit\n                </label>\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={unitFormData.is_active}\n                    onChange={(e) => setUnitFormData({ ...unitFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowUnitModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingUnit ? 'Update' : 'Create'} Unit\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Unit Conversion Modal */}\n      {showConversionModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowConversionModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingConversion ? 'Edit Unit Conversion' : 'Add New Unit Conversion'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowConversionModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleConversionSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"from_unit\">From Unit *</label>\n                <select\n                  id=\"from_unit\"\n                  value={conversionFormData.from_unit}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, from_unit: e.target.value })}\n                  required\n                >\n                  <option value=\"\">Select From Unit</option>\n                  {units.map(unit => (\n                    <option key={unit.id} value={unit.id}>\n                      {unit.name} ({unit.symbol})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"to_unit\">To Unit *</label>\n                <select\n                  id=\"to_unit\"\n                  value={conversionFormData.to_unit}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, to_unit: e.target.value })}\n                  required\n                >\n                  <option value=\"\">Select To Unit</option>\n                  {units.map(unit => (\n                    <option key={unit.id} value={unit.id}>\n                      {unit.name} ({unit.symbol})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"conversion_factor\">Conversion Factor *</label>\n                <input\n                  type=\"number\"\n                  id=\"conversion_factor\"\n                  value={conversionFormData.conversion_factor}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, conversion_factor: e.target.value })}\n                  required\n                  min=\"0.001\"\n                  step=\"0.001\"\n                  placeholder=\"e.g., 20 (for 1 carton = 20 pieces)\"\n                />\n                <small>How many \"to units\" equal 1 \"from unit\"</small>\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={conversionFormData.is_active}\n                    onChange={(e) => setConversionFormData({ ...conversionFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowConversionModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingConversion ? 'Update' : 'Create'} Conversion\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SystemManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}