{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport './PointOfSale.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PointOfSale = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    // Fetch stock availability for ALL products to ensure proper validation\n    products.forEach(product => {\n      fetchStockAvailability(product.id);\n    });\n  }, [products]);\n  const refreshStockAvailability = () => {\n    // Refresh stock availability for ALL products to ensure proper validation\n    products.forEach(product => {\n      fetchStockAvailability(product.id);\n    });\n  };\n  const getRemainingQuantity = (productId, unitId) => {\n    var _stockAvailability$pr;\n    // Get the base available quantity for this unit\n    const stockInfo = (_stockAvailability$pr = stockAvailability[productId]) === null || _stockAvailability$pr === void 0 ? void 0 : _stockAvailability$pr.find(u => u.id === unitId);\n    const baseAvailable = stockInfo ? stockInfo.available_quantity : 0;\n\n    // If no stock info available, return 0 to prevent adding items\n    if (!stockInfo) {\n      console.log('No stock info for:', {\n        productId,\n        unitId,\n        stockAvailability: stockAvailability[productId]\n      });\n      return 0;\n    }\n\n    // Calculate how much is already in the cart for this product and unit\n    const cartQuantity = cart.filter(item => item.id === productId && item.unit_id === unitId).reduce((sum, item) => sum + item.quantity, 0);\n    const remaining = Math.max(0, baseAvailable - cartQuantity);\n    console.log('getRemainingQuantity:', {\n      productId,\n      unitId,\n      baseAvailable,\n      cartQuantity,\n      remaining\n    });\n\n    // Return remaining quantity\n    return remaining;\n  };\n  const getUpdatedStockAvailability = productId => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart.filter(item => item.id === productId).reduce((total, item) => {\n      // Find the unit info to get conversion factor\n      const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n      if (unitInfo && unitInfo.conversion_factor) {\n        // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n        return total + item.quantity * unitInfo.conversion_factor;\n      } else if (unitInfo && unitInfo.is_base_unit) {\n        // If it's the base unit (pieces), no conversion needed\n        return total + item.quantity;\n      }\n      return total;\n    }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n\n      // Always filter for active products\n      params.append('is_active', 'true');\n\n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n  const fetchStockAvailability = async productId => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n  const addToCart = (product, selectedUnit = null) => {\n    var _stockAvailability$pr2;\n    // Use the first available unit if none selected\n    const unit = selectedUnit || product.available_units && product.available_units[0] || {\n      id: product.base_unit,\n      name: 'Piece',\n      symbol: 'piece'\n    };\n    console.log('addToCart called:', {\n      productId: product.id,\n      unit,\n      stockAvailability: stockAvailability[product.id]\n    });\n\n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n\n    // Check stock availability for the selected unit\n    const stockInfo = (_stockAvailability$pr2 = stockAvailability[product.id]) === null || _stockAvailability$pr2 === void 0 ? void 0 : _stockAvailability$pr2.find(u => u.id === unit.id);\n    if (stockInfo && !stockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n\n    // Check remaining quantity after considering what's already in cart\n    const remainingQuantity = getRemainingQuantity(product.id, unit.id);\n    if (remainingQuantity <= 0) {\n      setError(`No ${unit.name} stock left (already in cart)`);\n      return;\n    }\n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed remaining quantity\n      if (existingItem.quantity + 1 > remainingQuantity) {\n        setError(`Not enough ${unit.name} available. Only ${remainingQuantity} left.`);\n        return;\n      }\n      setCart(cart.map(item => item.id === product.id && item.unit_id === unit.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      // Check if adding 1 would exceed remaining quantity\n      if (1 > remainingQuantity) {\n        setError(`Not enough ${unit.name} available. Only ${remainingQuantity} left.`);\n        return;\n      }\n      setCart([...cart, {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      }]);\n    }\n    setError('');\n  };\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      var _stockAvailability$pr3;\n      // Check remaining quantity after considering what's already in cart\n      const remainingQuantity = getRemainingQuantity(productId, unitId);\n      const stockInfo = (_stockAvailability$pr3 = stockAvailability[productId]) === null || _stockAvailability$pr3 === void 0 ? void 0 : _stockAvailability$pr3.find(u => u.id === unitId);\n\n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart.filter(item => item.id === productId && item.unit_id === unitId).reduce((sum, item) => sum + item.quantity, 0);\n\n      // Calculate how much we can add (remaining + what's already in cart)\n      const maxAllowed = remainingQuantity + currentCartQuantity;\n      if (quantity > maxAllowed) {\n        setError(`Not enough ${(stockInfo === null || stockInfo === void 0 ? void 0 : stockInfo.name) || 'stock'} available. Max: ${maxAllowed}`);\n        return;\n      }\n      setCart(cart.map(item => item.id === productId && item.unit_id === unitId ? {\n        ...item,\n        quantity\n      } : item));\n      setError('');\n    }\n  };\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + item.quantity * item.unit_price, 0);\n  };\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = item.quantity * item.unit_price * item.tax_rate / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = item.quantity * item.unit_price * 100 / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n    setProcessing(true);\n    setError('');\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n      const response = await api.post('/sales/', saleData);\n\n      // Complete the sale\n      await api.post(`/sales/${response.data.id}/complete/`);\n\n      // Clear cart and customer info\n      setCart([]);\n      setCustomerInfo({\n        name: '',\n        phone: '',\n        email: ''\n      });\n\n      // Refresh product data to update stock quantities\n      await fetchProducts();\n\n      // Refresh stock availability for all products\n      refreshStockAvailability();\n      alert(`Sale completed successfully! Sale Number: ${response.data.sale_number}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to process sale');\n      console.error('Checkout error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n  const handleFilterChange = (filterType, value) => {\n    const newFilters = {\n      ...filters,\n      [filterType]: value\n    };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n  };\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      search: ''\n    };\n    setFilters(clearedFilters);\n    fetchProducts(clearedFilters);\n  };\n  const handleQuantityClick = item => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n  const handleQuantityChange = e => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n  const handleQuantitySubmit = item => {\n    var _stockAvailability$it;\n    const newQuantity = parseInt(tempQuantity);\n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n\n    // Check remaining quantity after considering what's already in cart\n    const remainingQuantity = getRemainingQuantity(item.id, item.unit_id);\n    const stockInfo = (_stockAvailability$it = stockAvailability[item.id]) === null || _stockAvailability$it === void 0 ? void 0 : _stockAvailability$it.find(u => u.id === item.unit_id);\n\n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n\n    // Calculate how much we can add (remaining + what's already in cart)\n    const maxAllowed = remainingQuantity + currentCartQuantity;\n    if (newQuantity > maxAllowed) {\n      setError(`Not enough ${(stockInfo === null || stockInfo === void 0 ? void 0 : stockInfo.name) || 'stock'} available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading products...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pos\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Point of Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-user\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Cashier: \", user === null || user === void 0 ? void 0 : user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-products\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pos-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: filters.category,\n              onChange: e => handleFilterChange('category', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.id,\n                children: category.name\n              }, category.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Search:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search products...\",\n              value: filters.search,\n              onChange: e => handleFilterChange('search', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"small\",\n              onClick: clearFilters,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"products-count\",\n            children: [products.length, \" product\", products.length !== 1 ? 's' : '', \" found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-grid\",\n          children: products.map(product => {\n            var _product$available_un;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-sku\",\n                  children: product.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-price\",\n                  children: [\"$\", parseFloat(product.price).toFixed(2), product.available_units && product.available_units.length > 1 && ` (base unit: ${((_product$available_un = product.available_units.find(u => u.is_base_unit)) === null || _product$available_un === void 0 ? void 0 : _product$available_un.symbol) || 'piece'})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-stock\",\n                  children: [\"Stock: \", product.stock_quantity, \" \", product.unit, stockAvailability[product.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stock-details\",\n                    children: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      return updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.map(unit => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `unit-stock ${unit.is_available ? 'available' : 'unavailable'}`,\n                        children: [unit.name, \": \", unit.available_quantity]\n                      }, unit.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 29\n                      }, this));\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this), product.available_units && product.available_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-selection\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Unit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"unit-select\",\n                    onChange: e => {\n                      const selectedUnit = product.available_units.find(u => u.id === parseInt(e.target.value));\n                      if (selectedUnit) {\n                        addToCart(product, selectedUnit);\n                      }\n                    },\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 25\n                    }, this), product.available_units.map(unit => {\n                      var _unit$price;\n                      // Use updated stock availability that considers cart contents\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unit.id);\n                      const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                      const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: unit.id,\n                        disabled: !isAvailable,\n                        children: [unit.name, \" (\", unit.symbol, \") - $\", ((_unit$price = unit.price) === null || _unit$price === void 0 ? void 0 : _unit$price.toFixed(2)) || 'N/A', !isAvailable ? ' - OUT OF STOCK' : ` - ${availableQty} available`]\n                      }, unit.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"small\",\n                  onClick: () => addToCart(product),\n                  disabled: (() => {\n                    // Check if any unit has available stock\n                    if (!stockAvailability[product.id]) {\n                      return true; // Disable if stock data not loaded\n                    }\n\n                    // For products with multiple units, check if any unit has stock\n                    if (product.available_units && product.available_units.length > 1) {\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      return !(updatedStockInfo !== null && updatedStockInfo !== void 0 && updatedStockInfo.some(unit => unit.is_available && unit.available_quantity > 0));\n                    }\n\n                    // For single unit products, check base stock\n                    return product.stock_quantity <= 0;\n                  })(),\n                  className: \"add-to-cart-btn\",\n                  children: (() => {\n                    if (!stockAvailability[product.id]) {\n                      return 'Loading...';\n                    }\n                    if (product.available_units && product.available_units.length > 1) {\n                      const hasStock = stockAvailability[product.id].some(unit => unit.is_available && unit.available_quantity > 0);\n                      return hasStock ? 'Add to Cart' : 'Out of Stock';\n                    }\n                    return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Shopping Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"small\",\n            onClick: clearCart,\n            children: \"Clear Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-items\",\n          children: cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-cart\",\n            children: \"Cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-unit\",\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-price\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-quantity\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-total\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-actions\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this), cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-product\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"item-sku\",\n                  children: [\"SKU: \", item.sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-unit\",\n                children: item.unit_symbol || 'piece'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-price\",\n                children: [\"$\", parseFloat(item.unit_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-quantity\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quantity-controls\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity - 1),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 25\n                  }, this), editingQuantity === `${item.id}-${item.unit_id}` ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"quantity-edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: tempQuantity,\n                      onChange: handleQuantityChange,\n                      onKeyPress: e => handleQuantityKeyPress(e, item),\n                      onBlur: () => handleQuantitySubmit(item),\n                      className: \"quantity-input\",\n                      min: \"0\",\n                      max: item.stock_quantity,\n                      autoFocus: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"quantity clickable\",\n                    onClick: () => handleQuantityClick(item),\n                    title: \"Click to edit quantity\",\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity + 1),\n                    disabled: (() => {\n                      const remainingQuantity = getRemainingQuantity(item.id, item.unit_id);\n                      const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                      const maxAllowed = remainingQuantity + currentCartQuantity;\n                      return item.quantity >= maxAllowed;\n                    })(),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 665,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-total\",\n                children: [\"$\", (item.quantity * item.unit_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-actions\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"danger\",\n                  onClick: () => removeFromCart(item.id, item.unit_id),\n                  title: \"Remove item\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this)]\n            }, `${item.id}-${item.unit_id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row cost-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cost (excl. tax):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateCost().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row tax-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tax included:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateTax().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row total\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customer-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Customer Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Customer Name (Optional)\",\n                value: customerInfo.name,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                placeholder: \"Phone Number (Optional)\",\n                value: customerInfo.phone,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  phone: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email (Optional)\",\n                value: customerInfo.email,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-methods\",\n              children: ['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payment-method\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"payment\",\n                  value: method,\n                  checked: paymentMethod === method,\n                  onChange: e => setPaymentMethod(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: method.replace('_', ' ').toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 23\n                }, this)]\n              }, method, true, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCheckout,\n            loading: processing,\n            className: \"checkout-button\",\n            size: \"large\",\n            children: \"Complete Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n};\n_s(PointOfSale, \"GwowSm4yYqAAUG9HQElvyEuQPvM=\", false, function () {\n  return [useAuth];\n});\n_c = PointOfSale;\nexport default PointOfSale;\nvar _c;\n$RefreshReg$(_c, \"PointOfSale\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","PointOfSale","_s","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","fetchProducts","fetchCategories","forEach","product","fetchStockAvailability","id","refreshStockAvailability","getRemainingQuantity","productId","unitId","_stockAvailability$pr","stockInfo","find","u","baseAvailable","available_quantity","console","log","cartQuantity","filter","item","unit_id","reduce","sum","quantity","remaining","Math","max","getUpdatedStockAvailability","baseStockInfo","totalPiecesInCart","total","unitInfo","conversion_factor","is_base_unit","baseUnit","totalBaseStock","remainingPieces","map","unit","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","url","toString","response","get","data","results","err","prev","available_units","addToCart","selectedUnit","_stockAvailability$pr2","base_unit","symbol","remainingQuantity","existingItem","unit_name","unit_symbol","unit_price","price","updateQuantity","_stockAvailability$pr3","currentCartQuantity","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","handleCheckout","length","saleData","customer_name","customer_phone","customer_email","payment_method","items","post","alert","sale_number","_err$response","_err$response$data","detail","clearCart","handleFilterChange","filterType","value","newFilters","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","_stockAvailability$it","newQuantity","parseInt","isNaN","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onChange","type","placeholder","variant","size","onClick","_product$available_un","stock_quantity","sku","parseFloat","toFixed","updatedStockInfo","stopPropagation","_unit$price","unitStockInfo","availableQty","disabled","some","hasStock","onKeyPress","onBlur","min","autoFocus","title","method","checked","replace","toUpperCase","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products to ensure proper validation\n    products.forEach(product => {\n      fetchStockAvailability(product.id);\n    });\n  }, [products]);\n\n  const refreshStockAvailability = () => {\n    // Refresh stock availability for ALL products to ensure proper validation\n    products.forEach(product => {\n      fetchStockAvailability(product.id);\n    });\n  };\n\n  const getRemainingQuantity = (productId, unitId) => {\n    // Get the base available quantity for this unit\n    const stockInfo = stockAvailability[productId]?.find(u => u.id === unitId);\n    const baseAvailable = stockInfo ? stockInfo.available_quantity : 0;\n    \n    // If no stock info available, return 0 to prevent adding items\n    if (!stockInfo) {\n      console.log('No stock info for:', { productId, unitId, stockAvailability: stockAvailability[productId] });\n      return 0;\n    }\n    \n    // Calculate how much is already in the cart for this product and unit\n    const cartQuantity = cart\n      .filter(item => item.id === productId && item.unit_id === unitId)\n      .reduce((sum, item) => sum + item.quantity, 0);\n    \n    const remaining = Math.max(0, baseAvailable - cartQuantity);\n    console.log('getRemainingQuantity:', { productId, unitId, baseAvailable, cartQuantity, remaining });\n    \n    // Return remaining quantity\n    return remaining;\n  };\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    // Use the first available unit if none selected\n    const unit = selectedUnit || (product.available_units && product.available_units[0]) || { id: product.base_unit, name: 'Piece', symbol: 'piece' };\n    \n    console.log('addToCart called:', { productId: product.id, unit, stockAvailability: stockAvailability[product.id] });\n    \n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n    \n    // Check stock availability for the selected unit\n    const stockInfo = stockAvailability[product.id]?.find(u => u.id === unit.id);\n    if (stockInfo && !stockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n    \n    // Check remaining quantity after considering what's already in cart\n    const remainingQuantity = getRemainingQuantity(product.id, unit.id);\n    if (remainingQuantity <= 0) {\n      setError(`No ${unit.name} stock left (already in cart)`);\n      return;\n    }\n    \n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed remaining quantity\n      if (existingItem.quantity + 1 > remainingQuantity) {\n        setError(`Not enough ${unit.name} available. Only ${remainingQuantity} left.`);\n        return;\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed remaining quantity\n      if (1 > remainingQuantity) {\n        setError(`Not enough ${unit.name} available. Only ${remainingQuantity} left.`);\n        return;\n      }\n      setCart([...cart, {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      }]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check remaining quantity after considering what's already in cart\n      const remainingQuantity = getRemainingQuantity(productId, unitId);\n      const stockInfo = stockAvailability[productId]?.find(u => u.id === unitId);\n      \n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(item => item.id === productId && item.unit_id === unitId)\n        .reduce((sum, item) => sum + item.quantity, 0);\n      \n      // Calculate how much we can add (remaining + what's already in cart)\n      const maxAllowed = remainingQuantity + currentCartQuantity;\n      \n      if (quantity > maxAllowed) {\n        setError(`Not enough ${stockInfo?.name || 'stock'} available. Max: ${maxAllowed}`);\n        return;\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      const response = await api.post('/sales/', saleData);\n      \n      // Complete the sale\n      await api.post(`/sales/${response.data.id}/complete/`);\n      \n      // Clear cart and customer info\n      setCart([]);\n      setCustomerInfo({ name: '', phone: '', email: '' });\n      \n      // Refresh product data to update stock quantities\n      await fetchProducts();\n      \n      // Refresh stock availability for all products\n      refreshStockAvailability();\n      \n      alert(`Sale completed successfully! Sale Number: ${response.data.sale_number}`);\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Failed to process sale');\n      console.error('Checkout error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    const newFilters = { ...filters, [filterType]: value };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    fetchProducts(clearedFilters);\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseInt(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Check remaining quantity after considering what's already in cart\n    const remainingQuantity = getRemainingQuantity(item.id, item.unit_id);\n    const stockInfo = stockAvailability[item.id]?.find(u => u.id === item.unit_id);\n    \n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart\n      .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n      .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n    \n    // Calculate how much we can add (remaining + what's already in cart)\n    const maxAllowed = remainingQuantity + currentCartQuantity;\n    \n    if (newQuantity > maxAllowed) {\n      setError(`Not enough ${stockInfo?.name || 'stock'} available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>Point of Sale</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <div className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={filters.search}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''}`}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    ${parseFloat(product.price).toFixed(2)} \n                    {product.available_units && product.available_units.length > 1 && \n                      ` (base unit: ${product.available_units.find(u => u.is_base_unit)?.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return updatedStockInfo?.map(unit => (\n                            <span key={unit.id} className={`unit-stock ${unit.is_available ? 'available' : 'unavailable'}`}>\n                              {unit.name}: {unit.available_quantity}\n                            </span>\n                          ));\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        onChange={(e) => {\n                          const selectedUnit = product.available_units.find(u => u.id === parseInt(e.target.value));\n                          if (selectedUnit) {\n                            addToCart(product, selectedUnit);\n                          }\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.available_units.map(unit => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          return (\n                            <option \n                              key={unit.id} \n                              value={unit.id}\n                              disabled={!isAvailable}\n                            >\n                              {unit.name} ({unit.symbol}) - ${unit.price?.toFixed(2) || 'N/A'} \n                              {!isAvailable ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button */}\n                  <Button\n                    variant=\"primary\"\n                    size=\"small\"\n                    onClick={() => addToCart(product)}\n                    disabled={(() => {\n                      // Check if any unit has available stock\n                      if (!stockAvailability[product.id]) {\n                        return true; // Disable if stock data not loaded\n                      }\n                      \n                      // For products with multiple units, check if any unit has stock\n                      if (product.available_units && product.available_units.length > 1) {\n                        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                        return !updatedStockInfo?.some(unit => unit.is_available && unit.available_quantity > 0);\n                      }\n                      \n                      // For single unit products, check base stock\n                      return product.stock_quantity <= 0;\n                    })()}\n                    className=\"add-to-cart-btn\"\n                  >\n                    {(() => {\n                      if (!stockAvailability[product.id]) {\n                        return 'Loading...';\n                      }\n                      \n                      if (product.available_units && product.available_units.length > 1) {\n                        const hasStock = stockAvailability[product.id].some(unit => unit.is_available && unit.available_quantity > 0);\n                        return hasStock ? 'Add to Cart' : 'Out of Stock';\n                      }\n                      \n                      return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                    })()}\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <p className=\"empty-cart\">Cart is empty</p>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      ${parseFloat(item.unit_price).toFixed(2)}\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title=\"Click to edit quantity\"\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1)}\n                          disabled={(() => {\n                            const remainingQuantity = getRemainingQuantity(item.id, item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = remainingQuantity + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      ${(item.quantity * item.unit_price).toFixed(2)}\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id)}\n                        title=\"Remove item\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>${calculateSubtotal().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>${calculateCost().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>${calculateTax().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>${calculateSubtotal().toFixed(2)}</span>\n                </div>\n              </div>\n\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customer Name (Optional)\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              <Button\n                onClick={handleCheckout}\n                loading={processing}\n                className=\"checkout-button\"\n                size=\"large\"\n              >\n                Complete Sale\n              </Button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}