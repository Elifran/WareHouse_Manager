{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/SystemManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useApi } from '../hooks/useApi';\nimport Button from '../components/Button';\nimport Table from '../components/Table';\nimport './SystemManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemManagement = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const api = useApi();\n\n  // State for different management sections\n  const [activeTab, setActiveTab] = useState('taxes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Tax Classes State\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [showTaxModal, setShowTaxModal] = useState(false);\n  const [editingTaxClass, setEditingTaxClass] = useState(null);\n  const [taxFormData, setTaxFormData] = useState({\n    name: '',\n    description: '',\n    tax_rate: '',\n    is_active: true\n  });\n\n  // Categories State\n  const [categories, setCategories] = useState([]);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [categoryFormData, setCategoryFormData] = useState({\n    name: '',\n    description: '',\n    is_active: true\n  });\n\n  // Units State\n  const [units, setUnits] = useState([]);\n  const [showUnitModal, setShowUnitModal] = useState(false);\n  const [editingUnit, setEditingUnit] = useState(null);\n  const [unitFormData, setUnitFormData] = useState({\n    name: '',\n    symbol: '',\n    is_base_unit: false,\n    is_active: true\n  });\n\n  // Unit Conversions State\n  const [unitConversions, setUnitConversions] = useState([]);\n  const [showConversionModal, setShowConversionModal] = useState(false);\n  const [editingConversion, setEditingConversion] = useState(null);\n  const [conversionFormData, setConversionFormData] = useState({\n    from_unit: '',\n    to_unit: '',\n    conversion_factor: '',\n    is_active: true\n  });\n\n  // Check if user has permission to manage\n  const canManage = (user === null || user === void 0 ? void 0 : user.role) === 'admin' || (user === null || user === void 0 ? void 0 : user.role) === 'manager';\n  useEffect(() => {\n    if (canManage) {\n      fetchAllData();\n    }\n  }, [canManage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([fetchTaxClasses(), fetchCategories(), fetchUnits(), fetchUnitConversions()]);\n    } catch (err) {\n      setError('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Tax Classes Functions\n  const fetchTaxClasses = async () => {\n    try {\n      const response = await api.get('/products/tax-classes/');\n      setTaxClasses(response.data.results || response.data);\n    } catch (err) {\n      console.error('Tax classes error:', err);\n    }\n  };\n  const validateTaxClass = data => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Tax class name is required');\n    }\n\n    // Check if tax rate is provided and valid\n    if (!data.tax_rate || data.tax_rate === '') {\n      errors.push('Tax rate is required');\n    } else {\n      const rate = parseFloat(data.tax_rate);\n      if (isNaN(rate)) {\n        errors.push('Tax rate must be a valid number');\n      } else if (rate < 0) {\n        errors.push('Tax rate cannot be negative');\n      } else if (rate > 100) {\n        errors.push('Tax rate cannot exceed 100%');\n      }\n    }\n\n    // Check for duplicate name (only for new tax classes)\n    if (!editingTaxClass) {\n      const existingTaxClass = taxClasses.find(taxClass => taxClass.name.toLowerCase() === data.name.toLowerCase());\n      if (existingTaxClass) {\n        errors.push('A tax class with this name already exists');\n      }\n    }\n    return errors;\n  };\n  const handleTaxSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Validate the tax class data\n      const validationErrors = validateTaxClass(taxFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingTaxClass) {\n        await api.put(`/products/tax-classes/${editingTaxClass.id}/`, taxFormData);\n      } else {\n        await api.post('/products/tax-classes/', taxFormData);\n      }\n      setShowTaxModal(false);\n      setEditingTaxClass(null);\n      setTaxFormData({\n        name: '',\n        description: '',\n        tax_rate: '',\n        is_active: true\n      });\n      fetchTaxClasses();\n    } catch (err) {\n      var _err$response;\n      // Handle specific backend errors\n      const errorData = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data;\n      let errorMessage = 'Failed to save tax class';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.tax_rate) {\n          errorMessage = `Tax rate: ${errorData.tax_rate.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Categories Functions\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n  const validateCategory = data => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Category name is required');\n    }\n\n    // Check for duplicate name (only for new categories)\n    if (!editingCategory) {\n      const existingCategory = categories.find(category => category.name.toLowerCase() === data.name.toLowerCase());\n      if (existingCategory) {\n        errors.push('A category with this name already exists');\n      }\n    }\n    return errors;\n  };\n  const handleCategorySubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Validate the category data\n      const validationErrors = validateCategory(categoryFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingCategory) {\n        await api.put(`/products/categories/${editingCategory.id}/`, categoryFormData);\n      } else {\n        await api.post('/products/categories/', categoryFormData);\n      }\n      setShowCategoryModal(false);\n      setEditingCategory(null);\n      setCategoryFormData({\n        name: '',\n        description: '',\n        is_active: true\n      });\n      fetchCategories();\n    } catch (err) {\n      var _err$response2;\n      // Handle specific backend errors\n      const errorData = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data;\n      let errorMessage = 'Failed to save category';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Units Functions\n  const fetchUnits = async () => {\n    try {\n      const response = await api.get('/products/units/');\n      setUnits(response.data.results || response.data);\n    } catch (err) {\n      console.error('Units error:', err);\n    }\n  };\n  const validateUnit = data => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Unit name is required');\n    }\n\n    // Check if symbol is provided\n    if (!data.symbol || data.symbol.trim() === '') {\n      errors.push('Unit symbol is required');\n    }\n\n    // Check for duplicate name (only for new units)\n    if (!editingUnit) {\n      const existingUnit = units.find(unit => unit.name.toLowerCase() === data.name.toLowerCase());\n      if (existingUnit) {\n        errors.push('A unit with this name already exists');\n      }\n    }\n\n    // Check for duplicate symbol (only for new units)\n    if (!editingUnit) {\n      const existingSymbol = units.find(unit => unit.symbol.toLowerCase() === data.symbol.toLowerCase());\n      if (existingSymbol) {\n        errors.push('A unit with this symbol already exists');\n      }\n    }\n\n    // Check if trying to set multiple base units\n    if (data.is_base_unit && !editingUnit) {\n      const existingBaseUnit = units.find(unit => unit.is_base_unit);\n      if (existingBaseUnit) {\n        errors.push('Only one base unit is allowed. Please uncheck the existing base unit first.');\n      }\n    }\n    return errors;\n  };\n  const handleUnitSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      // Validate the unit data\n      const validationErrors = validateUnit(unitFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingUnit) {\n        await api.put(`/products/units/${editingUnit.id}/`, unitFormData);\n      } else {\n        await api.post('/products/units/', unitFormData);\n      }\n      setShowUnitModal(false);\n      setEditingUnit(null);\n      setUnitFormData({\n        name: '',\n        symbol: '',\n        is_base_unit: false,\n        is_active: true\n      });\n      fetchUnits();\n    } catch (err) {\n      var _err$response3;\n      // Handle specific backend errors\n      const errorData = (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data;\n      let errorMessage = 'Failed to save unit';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.symbol) {\n          errorMessage = `Symbol: ${errorData.symbol.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Unit Conversions Functions\n  const fetchUnitConversions = async () => {\n    try {\n      const response = await api.get('/products/unit-conversions/');\n      setUnitConversions(response.data.results || response.data);\n    } catch (err) {\n      console.error('Unit conversions error:', err);\n    }\n  };\n  const validateConversion = data => {\n    const errors = [];\n\n    // Check if from_unit and to_unit are the same\n    if (data.from_unit === data.to_unit) {\n      errors.push('From unit and To unit cannot be the same');\n    }\n\n    // Check if conversion factor is valid\n    if (data.conversion_factor <= 0) {\n      errors.push('Conversion factor must be greater than 0');\n    }\n\n    // Check if conversion factor is reasonable (not too large or too small)\n    if (data.conversion_factor > 10000) {\n      errors.push('Conversion factor is too large (max: 10,000)');\n    }\n    if (data.conversion_factor < 0.0001) {\n      errors.push('Conversion factor is too small (min: 0.0001)');\n    }\n\n    // Check for existing conversion (only for new conversions)\n    if (!editingConversion) {\n      const existingConversion = unitConversions.find(conv => conv.from_unit.id === data.from_unit && conv.to_unit.id === data.to_unit || conv.from_unit.id === data.to_unit && conv.to_unit.id === data.from_unit);\n      if (existingConversion) {\n        errors.push('A conversion between these units already exists');\n      }\n    }\n\n    // Check for circular conversions\n    const hasCircularConversion = unitConversions.some(conv => {\n      if (editingConversion && conv.id === editingConversion.id) return false;\n\n      // Check if this would create a circular conversion\n      return conv.from_unit.id === data.to_unit && conv.to_unit.id === data.from_unit;\n    });\n    if (hasCircularConversion) {\n      errors.push('This would create a circular conversion (reverse conversion already exists)');\n    }\n    return errors;\n  };\n  const handleConversionSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const data = {\n        ...conversionFormData,\n        from_unit: parseInt(conversionFormData.from_unit),\n        to_unit: parseInt(conversionFormData.to_unit),\n        conversion_factor: parseFloat(conversionFormData.conversion_factor)\n      };\n\n      // Validate the conversion data\n      const validationErrors = validateConversion(data);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n      if (editingConversion) {\n        await api.put(`/products/unit-conversions/${editingConversion.id}/`, data);\n      } else {\n        await api.post('/products/unit-conversions/', data);\n      }\n      setShowConversionModal(false);\n      setEditingConversion(null);\n      setConversionFormData({\n        from_unit: '',\n        to_unit: '',\n        conversion_factor: '',\n        is_active: true\n      });\n      fetchUnitConversions();\n    } catch (err) {\n      var _err$response4;\n      // Handle specific backend errors\n      const errorData = (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data;\n      let errorMessage = 'Failed to save unit conversion';\n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.from_unit) {\n          errorMessage = `From unit: ${errorData.from_unit.join('. ')}`;\n        } else if (errorData.to_unit) {\n          errorMessage = `To unit: ${errorData.to_unit.join('. ')}`;\n        } else if (errorData.conversion_factor) {\n          errorMessage = `Conversion factor: ${errorData.conversion_factor.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      setError(errorMessage);\n    }\n  };\n\n  // Delete Functions\n  const handleDelete = async (type, item) => {\n    if (!window.confirm(`Are you sure you want to delete \"${item.name}\"?`)) {\n      return;\n    }\n    try {\n      const endpoints = {\n        tax: `/products/tax-classes/${item.id}/`,\n        category: `/products/categories/${item.id}/`,\n        unit: `/products/units/${item.id}/`,\n        conversion: `/products/unit-conversions/${item.id}/`\n      };\n      await api.delete(endpoints[type]);\n      switch (type) {\n        case 'tax':\n          fetchTaxClasses();\n          break;\n        case 'category':\n          fetchCategories();\n          break;\n        case 'unit':\n          fetchUnits();\n          break;\n        case 'conversion':\n          fetchUnitConversions();\n          break;\n        default:\n          console.warn('Unknown delete type:', type);\n          break;\n      }\n    } catch (err) {\n      setError(`Failed to delete ${type}`);\n    }\n  };\n\n  // Table Columns\n  const taxColumns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'description',\n    label: 'Description'\n  }, {\n    key: 'tax_rate',\n    label: 'Tax Rate (%)',\n    render: value => `${value}%`\n  }, {\n    key: 'products_count',\n    label: 'Products'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingTaxClass(item);\n          setTaxFormData({\n            name: item.name,\n            description: item.description,\n            tax_rate: item.tax_rate.toString(),\n            is_active: item.is_active\n          });\n          setShowTaxModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('tax', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }, this)\n  }];\n  const categoryColumns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'description',\n    label: 'Description'\n  }, {\n    key: 'products_count',\n    label: 'Products'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingCategory(item);\n          setCategoryFormData({\n            name: item.name,\n            description: item.description,\n            is_active: item.is_active\n          });\n          setShowCategoryModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('category', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }, this)\n  }];\n  const unitColumns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'symbol',\n    label: 'Symbol'\n  }, {\n    key: 'is_base_unit',\n    label: 'Base Unit',\n    render: value => value ? 'Yes' : 'No'\n  }, {\n    key: 'products_count',\n    label: 'Products'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          setEditingUnit(item);\n          setUnitFormData({\n            name: item.name,\n            symbol: item.symbol,\n            is_base_unit: item.is_base_unit,\n            is_active: item.is_active\n          });\n          setShowUnitModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('unit', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }, this)\n  }];\n  const conversionColumns = [{\n    key: 'from_unit_name',\n    label: 'From Unit',\n    render: (value, item) => item.from_unit_name || 'N/A'\n  }, {\n    key: 'to_unit_name',\n    label: 'To Unit',\n    render: (value, item) => item.to_unit_name || 'N/A'\n  }, {\n    key: 'conversion_factor',\n    label: 'Conversion Factor'\n  }, {\n    key: 'is_active',\n    label: 'Status',\n    render: value => value ? 'Active' : 'Inactive'\n  }, {\n    key: 'actions',\n    label: 'Actions',\n    render: (_, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"outline\",\n        onClick: () => {\n          var _item$from_unit, _item$to_unit;\n          setEditingConversion(item);\n          setConversionFormData({\n            from_unit: ((_item$from_unit = item.from_unit) === null || _item$from_unit === void 0 ? void 0 : _item$from_unit.id) || '',\n            to_unit: ((_item$to_unit = item.to_unit) === null || _item$to_unit === void 0 ? void 0 : _item$to_unit.id) || '',\n            conversion_factor: item.conversion_factor.toString(),\n            is_active: item.is_active\n          });\n          setShowConversionModal(true);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"danger\",\n        onClick: () => handleDelete('conversion', item),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }, this)\n  }];\n  if (!canManage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-management\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"access-denied\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have permission to manage system settings. Only managers and administrators can access this page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"System Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage taxes, categories, units, and unit conversions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'taxes' ? 'active' : ''}`,\n        onClick: () => setActiveTab('taxes'),\n        children: \"Tax Classes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'categories' ? 'active' : ''}`,\n        onClick: () => setActiveTab('categories'),\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'units' ? 'active' : ''}`,\n        onClick: () => setActiveTab('units'),\n        children: \"Units\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'conversions' ? 'active' : ''}`,\n        onClick: () => setActiveTab('conversions'),\n        children: \"Unit Conversions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"system-content\",\n      children: [activeTab === 'taxes' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tax Classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingTaxClass(null);\n              setTaxFormData({\n                name: '',\n                description: '',\n                tax_rate: '',\n                is_active: true\n              });\n              setShowTaxModal(true);\n            },\n            children: \"Add New Tax Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: taxClasses,\n          columns: taxColumns,\n          loading: loading,\n          emptyMessage: \"No tax classes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), activeTab === 'categories' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Product Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingCategory(null);\n              setCategoryFormData({\n                name: '',\n                description: '',\n                is_active: true\n              });\n              setShowCategoryModal(true);\n            },\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: categories,\n          columns: categoryColumns,\n          loading: loading,\n          emptyMessage: \"No categories found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this), activeTab === 'units' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Units\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingUnit(null);\n              setUnitFormData({\n                name: '',\n                symbol: '',\n                is_base_unit: false,\n                is_active: true\n              });\n              setShowUnitModal(true);\n            },\n            children: \"Add New Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: units,\n          columns: unitColumns,\n          loading: loading,\n          emptyMessage: \"No units found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 11\n      }, this), activeTab === 'conversions' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Unit Conversions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setEditingConversion(null);\n              setConversionFormData({\n                from_unit: '',\n                to_unit: '',\n                conversion_factor: '',\n                is_active: true\n              });\n              setShowConversionModal(true);\n            },\n            children: \"Add New Conversion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          data: unitConversions,\n          columns: conversionColumns,\n          loading: loading,\n          emptyMessage: \"No unit conversions found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this), showTaxModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowTaxModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingTaxClass ? 'Edit Tax Class' : 'Add New Tax Class'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowTaxModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTaxSubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tax_name\",\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"tax_name\",\n              value: taxFormData.name,\n              onChange: e => setTaxFormData({\n                ...taxFormData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., Standard Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tax_description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"tax_description\",\n              value: taxFormData.description,\n              onChange: e => setTaxFormData({\n                ...taxFormData,\n                description: e.target.value\n              }),\n              placeholder: \"Brief description of this tax class\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tax_rate\",\n              children: \"Tax Rate (%) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"tax_rate\",\n              value: taxFormData.tax_rate,\n              onChange: e => setTaxFormData({\n                ...taxFormData,\n                tax_rate: e.target.value\n              }),\n              required: true,\n              min: \"0\",\n              max: \"100\",\n              step: \"0.01\",\n              placeholder: \"18.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: taxFormData.is_active,\n                onChange: e => setTaxFormData({\n                  ...taxFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowTaxModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingTaxClass ? 'Update' : 'Create', \" Tax Class\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 9\n    }, this), showCategoryModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowCategoryModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingCategory ? 'Edit Category' : 'Add New Category'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowCategoryModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCategorySubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category_name\",\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"category_name\",\n              value: categoryFormData.name,\n              onChange: e => setCategoryFormData({\n                ...categoryFormData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., Beverages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category_description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"category_description\",\n              value: categoryFormData.description,\n              onChange: e => setCategoryFormData({\n                ...categoryFormData,\n                description: e.target.value\n              }),\n              placeholder: \"Brief description of this category\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: categoryFormData.is_active,\n                onChange: e => setCategoryFormData({\n                  ...categoryFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowCategoryModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingCategory ? 'Update' : 'Create', \" Category\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 9\n    }, this), showUnitModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowUnitModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingUnit ? 'Edit Unit' : 'Add New Unit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowUnitModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUnitSubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit_name\",\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"unit_name\",\n              value: unitFormData.name,\n              onChange: e => setUnitFormData({\n                ...unitFormData,\n                name: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., Kilogram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit_symbol\",\n              children: \"Symbol *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"unit_symbol\",\n              value: unitFormData.symbol,\n              onChange: e => setUnitFormData({\n                ...unitFormData,\n                symbol: e.target.value\n              }),\n              required: true,\n              placeholder: \"e.g., kg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: unitFormData.is_base_unit,\n                onChange: e => setUnitFormData({\n                  ...unitFormData,\n                  is_base_unit: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 19\n              }, this), \"Base Unit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: unitFormData.is_active,\n                onChange: e => setUnitFormData({\n                  ...unitFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowUnitModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingUnit ? 'Update' : 'Create', \" Unit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 9\n    }, this), showConversionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowConversionModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingConversion ? 'Edit Unit Conversion' : 'Add New Unit Conversion'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowConversionModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleConversionSubmit,\n          className: \"system-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from_unit\",\n              children: \"From Unit *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"from_unit\",\n              value: conversionFormData.from_unit,\n              onChange: e => setConversionFormData({\n                ...conversionFormData,\n                from_unit: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select From Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 19\n              }, this), units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit.id,\n                children: [unit.name, \" (\", unit.symbol, \")\"]\n              }, unit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"to_unit\",\n              children: \"To Unit *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"to_unit\",\n              value: conversionFormData.to_unit,\n              onChange: e => setConversionFormData({\n                ...conversionFormData,\n                to_unit: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select To Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 19\n              }, this), units.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: unit.id,\n                children: [unit.name, \" (\", unit.symbol, \")\"]\n              }, unit.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"conversion_factor\",\n              children: \"Conversion Factor *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"conversion_factor\",\n              value: conversionFormData.conversion_factor,\n              onChange: e => setConversionFormData({\n                ...conversionFormData,\n                conversion_factor: e.target.value\n              }),\n              required: true,\n              min: \"0.001\",\n              step: \"0.001\",\n              placeholder: \"e.g., 20 (for 1 carton = 20 pieces)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"How many \\\"to units\\\" equal 1 \\\"from unit\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: conversionFormData.is_active,\n                onChange: e => setConversionFormData({\n                  ...conversionFormData,\n                  is_active: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 19\n              }, this), \"Active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setShowConversionModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: [editingConversion ? 'Update' : 'Create', \" Conversion\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemManagement, \"F0FlEq9rXaaDvFTj6ms/IMwYH0g=\", false, function () {\n  return [useAuth, useApi];\n});\n_c = SystemManagement;\nexport default SystemManagement;\nvar _c;\n$RefreshReg$(_c, \"SystemManagement\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","useApi","Button","Table","jsxDEV","_jsxDEV","SystemManagement","_s","user","api","activeTab","setActiveTab","loading","setLoading","error","setError","taxClasses","setTaxClasses","showTaxModal","setShowTaxModal","editingTaxClass","setEditingTaxClass","taxFormData","setTaxFormData","name","description","tax_rate","is_active","categories","setCategories","showCategoryModal","setShowCategoryModal","editingCategory","setEditingCategory","categoryFormData","setCategoryFormData","units","setUnits","showUnitModal","setShowUnitModal","editingUnit","setEditingUnit","unitFormData","setUnitFormData","symbol","is_base_unit","unitConversions","setUnitConversions","showConversionModal","setShowConversionModal","editingConversion","setEditingConversion","conversionFormData","setConversionFormData","from_unit","to_unit","conversion_factor","canManage","role","fetchAllData","Promise","all","fetchTaxClasses","fetchCategories","fetchUnits","fetchUnitConversions","err","response","get","data","results","console","validateTaxClass","errors","trim","push","rate","parseFloat","isNaN","existingTaxClass","find","taxClass","toLowerCase","handleTaxSubmit","e","preventDefault","validationErrors","length","join","put","id","post","_err$response","errorData","errorMessage","detail","non_field_errors","firstError","Object","values","Array","isArray","validateCategory","existingCategory","category","handleCategorySubmit","_err$response2","validateUnit","existingUnit","unit","existingSymbol","existingBaseUnit","handleUnitSubmit","_err$response3","validateConversion","existingConversion","conv","hasCircularConversion","some","handleConversionSubmit","parseInt","_err$response4","handleDelete","type","item","window","confirm","endpoints","tax","conversion","delete","warn","taxColumns","key","label","render","value","_","className","children","size","variant","onClick","toString","fileName","_jsxFileName","lineNumber","columnNumber","categoryColumns","unitColumns","conversionColumns","from_unit_name","to_unit_name","_item$from_unit","_item$to_unit","columns","emptyMessage","stopPropagation","viewBox","fill","d","onSubmit","htmlFor","onChange","target","required","placeholder","rows","min","max","step","checked","map","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/SystemManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useApi } from '../hooks/useApi';\nimport Button from '../components/Button';\nimport Table from '../components/Table';\nimport './SystemManagement.css';\n\nconst SystemManagement = () => {\n  const { user } = useAuth();\n  const api = useApi();\n  \n  // State for different management sections\n  const [activeTab, setActiveTab] = useState('taxes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  // Tax Classes State\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [showTaxModal, setShowTaxModal] = useState(false);\n  const [editingTaxClass, setEditingTaxClass] = useState(null);\n  const [taxFormData, setTaxFormData] = useState({\n    name: '',\n    description: '',\n    tax_rate: '',\n    is_active: true\n  });\n  \n  // Categories State\n  const [categories, setCategories] = useState([]);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [categoryFormData, setCategoryFormData] = useState({\n    name: '',\n    description: '',\n    is_active: true\n  });\n  \n  // Units State\n  const [units, setUnits] = useState([]);\n  const [showUnitModal, setShowUnitModal] = useState(false);\n  const [editingUnit, setEditingUnit] = useState(null);\n  const [unitFormData, setUnitFormData] = useState({\n    name: '',\n    symbol: '',\n    is_base_unit: false,\n    is_active: true\n  });\n  \n  // Unit Conversions State\n  const [unitConversions, setUnitConversions] = useState([]);\n  const [showConversionModal, setShowConversionModal] = useState(false);\n  const [editingConversion, setEditingConversion] = useState(null);\n  const [conversionFormData, setConversionFormData] = useState({\n    from_unit: '',\n    to_unit: '',\n    conversion_factor: '',\n    is_active: true\n  });\n\n  // Check if user has permission to manage\n  const canManage = user?.role === 'admin' || user?.role === 'manager';\n\n  useEffect(() => {\n    if (canManage) {\n      fetchAllData();\n    }\n  }, [canManage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([\n        fetchTaxClasses(),\n        fetchCategories(),\n        fetchUnits(),\n        fetchUnitConversions()\n      ]);\n    } catch (err) {\n      setError('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Tax Classes Functions\n  const fetchTaxClasses = async () => {\n    try {\n      const response = await api.get('/products/tax-classes/');\n      setTaxClasses(response.data.results || response.data);\n    } catch (err) {\n      console.error('Tax classes error:', err);\n    }\n  };\n\n  const validateTaxClass = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Tax class name is required');\n    }\n\n    // Check if tax rate is provided and valid\n    if (!data.tax_rate || data.tax_rate === '') {\n      errors.push('Tax rate is required');\n    } else {\n      const rate = parseFloat(data.tax_rate);\n      if (isNaN(rate)) {\n        errors.push('Tax rate must be a valid number');\n      } else if (rate < 0) {\n        errors.push('Tax rate cannot be negative');\n      } else if (rate > 100) {\n        errors.push('Tax rate cannot exceed 100%');\n      }\n    }\n\n    // Check for duplicate name (only for new tax classes)\n    if (!editingTaxClass) {\n      const existingTaxClass = taxClasses.find(taxClass => \n        taxClass.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingTaxClass) {\n        errors.push('A tax class with this name already exists');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleTaxSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the tax class data\n      const validationErrors = validateTaxClass(taxFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingTaxClass) {\n        await api.put(`/products/tax-classes/${editingTaxClass.id}/`, taxFormData);\n      } else {\n        await api.post('/products/tax-classes/', taxFormData);\n      }\n      \n      setShowTaxModal(false);\n      setEditingTaxClass(null);\n      setTaxFormData({ name: '', description: '', tax_rate: '', is_active: true });\n      fetchTaxClasses();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save tax class';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.tax_rate) {\n          errorMessage = `Tax rate: ${errorData.tax_rate.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Categories Functions\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const validateCategory = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Category name is required');\n    }\n\n    // Check for duplicate name (only for new categories)\n    if (!editingCategory) {\n      const existingCategory = categories.find(category => \n        category.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingCategory) {\n        errors.push('A category with this name already exists');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleCategorySubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the category data\n      const validationErrors = validateCategory(categoryFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingCategory) {\n        await api.put(`/products/categories/${editingCategory.id}/`, categoryFormData);\n      } else {\n        await api.post('/products/categories/', categoryFormData);\n      }\n      \n      setShowCategoryModal(false);\n      setEditingCategory(null);\n      setCategoryFormData({ name: '', description: '', is_active: true });\n      fetchCategories();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save category';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Units Functions\n  const fetchUnits = async () => {\n    try {\n      const response = await api.get('/products/units/');\n      setUnits(response.data.results || response.data);\n    } catch (err) {\n      console.error('Units error:', err);\n    }\n  };\n\n  const validateUnit = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Unit name is required');\n    }\n\n    // Check if symbol is provided\n    if (!data.symbol || data.symbol.trim() === '') {\n      errors.push('Unit symbol is required');\n    }\n\n    // Check for duplicate name (only for new units)\n    if (!editingUnit) {\n      const existingUnit = units.find(unit => \n        unit.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingUnit) {\n        errors.push('A unit with this name already exists');\n      }\n    }\n\n    // Check for duplicate symbol (only for new units)\n    if (!editingUnit) {\n      const existingSymbol = units.find(unit => \n        unit.symbol.toLowerCase() === data.symbol.toLowerCase()\n      );\n      if (existingSymbol) {\n        errors.push('A unit with this symbol already exists');\n      }\n    }\n\n    // Check if trying to set multiple base units\n    if (data.is_base_unit && !editingUnit) {\n      const existingBaseUnit = units.find(unit => unit.is_base_unit);\n      if (existingBaseUnit) {\n        errors.push('Only one base unit is allowed. Please uncheck the existing base unit first.');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleUnitSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the unit data\n      const validationErrors = validateUnit(unitFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingUnit) {\n        await api.put(`/products/units/${editingUnit.id}/`, unitFormData);\n      } else {\n        await api.post('/products/units/', unitFormData);\n      }\n      \n      setShowUnitModal(false);\n      setEditingUnit(null);\n      setUnitFormData({ name: '', symbol: '', is_base_unit: false, is_active: true });\n      fetchUnits();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save unit';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.symbol) {\n          errorMessage = `Symbol: ${errorData.symbol.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Unit Conversions Functions\n  const fetchUnitConversions = async () => {\n    try {\n      const response = await api.get('/products/unit-conversions/');\n      setUnitConversions(response.data.results || response.data);\n    } catch (err) {\n      console.error('Unit conversions error:', err);\n    }\n  };\n\n  const validateConversion = (data) => {\n    const errors = [];\n\n    // Check if from_unit and to_unit are the same\n    if (data.from_unit === data.to_unit) {\n      errors.push('From unit and To unit cannot be the same');\n    }\n\n    // Check if conversion factor is valid\n    if (data.conversion_factor <= 0) {\n      errors.push('Conversion factor must be greater than 0');\n    }\n\n    // Check if conversion factor is reasonable (not too large or too small)\n    if (data.conversion_factor > 10000) {\n      errors.push('Conversion factor is too large (max: 10,000)');\n    }\n\n    if (data.conversion_factor < 0.0001) {\n      errors.push('Conversion factor is too small (min: 0.0001)');\n    }\n\n    // Check for existing conversion (only for new conversions)\n    if (!editingConversion) {\n      const existingConversion = unitConversions.find(conv => \n        (conv.from_unit.id === data.from_unit && conv.to_unit.id === data.to_unit) ||\n        (conv.from_unit.id === data.to_unit && conv.to_unit.id === data.from_unit)\n      );\n      \n      if (existingConversion) {\n        errors.push('A conversion between these units already exists');\n      }\n    }\n\n    // Check for circular conversions\n    const hasCircularConversion = unitConversions.some(conv => {\n      if (editingConversion && conv.id === editingConversion.id) return false;\n      \n      // Check if this would create a circular conversion\n      return (conv.from_unit.id === data.to_unit && conv.to_unit.id === data.from_unit);\n    });\n\n    if (hasCircularConversion) {\n      errors.push('This would create a circular conversion (reverse conversion already exists)');\n    }\n\n    return errors;\n  };\n\n  const handleConversionSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const data = {\n        ...conversionFormData,\n        from_unit: parseInt(conversionFormData.from_unit),\n        to_unit: parseInt(conversionFormData.to_unit),\n        conversion_factor: parseFloat(conversionFormData.conversion_factor)\n      };\n\n      // Validate the conversion data\n      const validationErrors = validateConversion(data);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingConversion) {\n        await api.put(`/products/unit-conversions/${editingConversion.id}/`, data);\n      } else {\n        await api.post('/products/unit-conversions/', data);\n      }\n      \n      setShowConversionModal(false);\n      setEditingConversion(null);\n      setConversionFormData({ from_unit: '', to_unit: '', conversion_factor: '', is_active: true });\n      fetchUnitConversions();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save unit conversion';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.from_unit) {\n          errorMessage = `From unit: ${errorData.from_unit.join('. ')}`;\n        } else if (errorData.to_unit) {\n          errorMessage = `To unit: ${errorData.to_unit.join('. ')}`;\n        } else if (errorData.conversion_factor) {\n          errorMessage = `Conversion factor: ${errorData.conversion_factor.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Delete Functions\n  const handleDelete = async (type, item) => {\n    if (!window.confirm(`Are you sure you want to delete \"${item.name}\"?`)) {\n      return;\n    }\n\n    try {\n      const endpoints = {\n        tax: `/products/tax-classes/${item.id}/`,\n        category: `/products/categories/${item.id}/`,\n        unit: `/products/units/${item.id}/`,\n        conversion: `/products/unit-conversions/${item.id}/`\n      };\n      \n      await api.delete(endpoints[type]);\n      \n      switch (type) {\n        case 'tax':\n          fetchTaxClasses();\n          break;\n        case 'category':\n          fetchCategories();\n          break;\n        case 'unit':\n          fetchUnits();\n          break;\n        case 'conversion':\n          fetchUnitConversions();\n          break;\n        default:\n          console.warn('Unknown delete type:', type);\n          break;\n      }\n    } catch (err) {\n      setError(`Failed to delete ${type}`);\n    }\n  };\n\n  // Table Columns\n  const taxColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'description', label: 'Description' },\n    { key: 'tax_rate', label: 'Tax Rate (%)', render: (value) => `${value}%` },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingTaxClass(item);\n            setTaxFormData({\n              name: item.name,\n              description: item.description,\n              tax_rate: item.tax_rate.toString(),\n              is_active: item.is_active\n            });\n            setShowTaxModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('tax', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const categoryColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'description', label: 'Description' },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingCategory(item);\n            setCategoryFormData({\n              name: item.name,\n              description: item.description,\n              is_active: item.is_active\n            });\n            setShowCategoryModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('category', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const unitColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'symbol', label: 'Symbol' },\n    { key: 'is_base_unit', label: 'Base Unit', render: (value) => value ? 'Yes' : 'No' },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingUnit(item);\n            setUnitFormData({\n              name: item.name,\n              symbol: item.symbol,\n              is_base_unit: item.is_base_unit,\n              is_active: item.is_active\n            });\n            setShowUnitModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('unit', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const conversionColumns = [\n    { key: 'from_unit_name', label: 'From Unit', render: (value, item) => item.from_unit_name || 'N/A' },\n    { key: 'to_unit_name', label: 'To Unit', render: (value, item) => item.to_unit_name || 'N/A' },\n    { key: 'conversion_factor', label: 'Conversion Factor' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingConversion(item);\n            setConversionFormData({\n              from_unit: item.from_unit?.id || '',\n              to_unit: item.to_unit?.id || '',\n              conversion_factor: item.conversion_factor.toString(),\n              is_active: item.is_active\n            });\n            setShowConversionModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('conversion', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  if (!canManage) {\n    return (\n      <div className=\"system-management\">\n        <div className=\"access-denied\">\n          <h2>Access Denied</h2>\n          <p>You don't have permission to manage system settings. Only managers and administrators can access this page.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"system-management\">\n      <div className=\"system-header\">\n        <h1>System Management</h1>\n        <p>Manage taxes, categories, units, and unit conversions</p>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"system-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'taxes' ? 'active' : ''}`}\n          onClick={() => setActiveTab('taxes')}\n        >\n          Tax Classes\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'categories' ? 'active' : ''}`}\n          onClick={() => setActiveTab('categories')}\n        >\n          Categories\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'units' ? 'active' : ''}`}\n          onClick={() => setActiveTab('units')}\n        >\n          Units\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'conversions' ? 'active' : ''}`}\n          onClick={() => setActiveTab('conversions')}\n        >\n          Unit Conversions\n        </button>\n      </div>\n\n      <div className=\"system-content\">\n        {activeTab === 'taxes' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Tax Classes</h2>\n              <Button onClick={() => {\n                setEditingTaxClass(null);\n                setTaxFormData({ name: '', description: '', tax_rate: '', is_active: true });\n                setShowTaxModal(true);\n              }}>\n                Add New Tax Class\n              </Button>\n            </div>\n            <Table\n              data={taxClasses}\n              columns={taxColumns}\n              loading={loading}\n              emptyMessage=\"No tax classes found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'categories' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Product Categories</h2>\n              <Button onClick={() => {\n                setEditingCategory(null);\n                setCategoryFormData({ name: '', description: '', is_active: true });\n                setShowCategoryModal(true);\n              }}>\n                Add New Category\n              </Button>\n            </div>\n            <Table\n              data={categories}\n              columns={categoryColumns}\n              loading={loading}\n              emptyMessage=\"No categories found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'units' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Units</h2>\n              <Button onClick={() => {\n                setEditingUnit(null);\n                setUnitFormData({ name: '', symbol: '', is_base_unit: false, is_active: true });\n                setShowUnitModal(true);\n              }}>\n                Add New Unit\n              </Button>\n            </div>\n            <Table\n              data={units}\n              columns={unitColumns}\n              loading={loading}\n              emptyMessage=\"No units found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'conversions' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Unit Conversions</h2>\n              <Button onClick={() => {\n                setEditingConversion(null);\n                setConversionFormData({ from_unit: '', to_unit: '', conversion_factor: '', is_active: true });\n                setShowConversionModal(true);\n              }}>\n                Add New Conversion\n              </Button>\n            </div>\n            <Table\n              data={unitConversions}\n              columns={conversionColumns}\n              loading={loading}\n              emptyMessage=\"No unit conversions found\"\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Tax Class Modal */}\n      {showTaxModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowTaxModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingTaxClass ? 'Edit Tax Class' : 'Add New Tax Class'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowTaxModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleTaxSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"tax_name\"\n                  value={taxFormData.name}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Standard Rate\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_description\">Description</label>\n                <textarea\n                  id=\"tax_description\"\n                  value={taxFormData.description}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, description: e.target.value })}\n                  placeholder=\"Brief description of this tax class\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_rate\">Tax Rate (%) *</label>\n                <input\n                  type=\"number\"\n                  id=\"tax_rate\"\n                  value={taxFormData.tax_rate}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, tax_rate: e.target.value })}\n                  required\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"0.01\"\n                  placeholder=\"18.00\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={taxFormData.is_active}\n                    onChange={(e) => setTaxFormData({ ...taxFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowTaxModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingTaxClass ? 'Update' : 'Create'} Tax Class\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Category Modal */}\n      {showCategoryModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowCategoryModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingCategory ? 'Edit Category' : 'Add New Category'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowCategoryModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleCategorySubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"category_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"category_name\"\n                  value={categoryFormData.name}\n                  onChange={(e) => setCategoryFormData({ ...categoryFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Beverages\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category_description\">Description</label>\n                <textarea\n                  id=\"category_description\"\n                  value={categoryFormData.description}\n                  onChange={(e) => setCategoryFormData({ ...categoryFormData, description: e.target.value })}\n                  placeholder=\"Brief description of this category\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={categoryFormData.is_active}\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowCategoryModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingCategory ? 'Update' : 'Create'} Category\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Unit Modal */}\n      {showUnitModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowUnitModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingUnit ? 'Edit Unit' : 'Add New Unit'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowUnitModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleUnitSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"unit_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"unit_name\"\n                  value={unitFormData.name}\n                  onChange={(e) => setUnitFormData({ ...unitFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Kilogram\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"unit_symbol\">Symbol *</label>\n                <input\n                  type=\"text\"\n                  id=\"unit_symbol\"\n                  value={unitFormData.symbol}\n                  onChange={(e) => setUnitFormData({ ...unitFormData, symbol: e.target.value })}\n                  required\n                  placeholder=\"e.g., kg\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={unitFormData.is_base_unit}\n                    onChange={(e) => setUnitFormData({ ...unitFormData, is_base_unit: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Base Unit\n                </label>\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={unitFormData.is_active}\n                    onChange={(e) => setUnitFormData({ ...unitFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowUnitModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingUnit ? 'Update' : 'Create'} Unit\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Unit Conversion Modal */}\n      {showConversionModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowConversionModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingConversion ? 'Edit Unit Conversion' : 'Add New Unit Conversion'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowConversionModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleConversionSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"from_unit\">From Unit *</label>\n                <select\n                  id=\"from_unit\"\n                  value={conversionFormData.from_unit}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, from_unit: e.target.value })}\n                  required\n                >\n                  <option value=\"\">Select From Unit</option>\n                  {units.map(unit => (\n                    <option key={unit.id} value={unit.id}>\n                      {unit.name} ({unit.symbol})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"to_unit\">To Unit *</label>\n                <select\n                  id=\"to_unit\"\n                  value={conversionFormData.to_unit}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, to_unit: e.target.value })}\n                  required\n                >\n                  <option value=\"\">Select To Unit</option>\n                  {units.map(unit => (\n                    <option key={unit.id} value={unit.id}>\n                      {unit.name} ({unit.symbol})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"conversion_factor\">Conversion Factor *</label>\n                <input\n                  type=\"number\"\n                  id=\"conversion_factor\"\n                  value={conversionFormData.conversion_factor}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, conversion_factor: e.target.value })}\n                  required\n                  min=\"0.001\"\n                  step=\"0.001\"\n                  placeholder=\"e.g., 20 (for 1 carton = 20 pieces)\"\n                />\n                <small>How many \"to units\" equal 1 \"from unit\"</small>\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={conversionFormData.is_active}\n                    onChange={(e) => setConversionFormData({ ...conversionFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowConversionModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingConversion ? 'Update' : 'Create'} Conversion\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SystemManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}