{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import PackagingManager from'../components/PackagingManager';import{isMobileDevice,openPrintWindow,openPrintPreview,downloadReceiptFile,generateXprinterPrintContent,generateMobilePrintContent}from'../utils/printUtils';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{t}=useTranslation();const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[paymentType,setPaymentType]=useState('full');// 'full' or 'partial'\nconst[paidAmount,setPaidAmount]=useState(0);const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[categoriesLoaded,setCategoriesLoaded]=useState(false);const[categoryUpdating,setCategoryUpdating]=useState(false);const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst filtersRef=useRef(filters);// Ref to store current filters\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst categoriesRef=useRef(categories);// Ref to store current categories\nconst categoriesLoadedRef=useRef(categoriesLoaded);// Ref to store categories loaded state\n// Update refs whenever state changes\nuseEffect(()=>{filtersRef.current=filters;},[filters]);useEffect(()=>{categoriesRef.current=categories;},[categories]);useEffect(()=>{categoriesLoadedRef.current=categoriesLoaded;},[categoriesLoaded]);// Function to sync session storage with categories state\nconst syncSessionStorage=useCallback(()=>{const sellableStatus={};categories.forEach(cat=>{sellableStatus[cat.id]=cat.is_sellable;});sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));},[categories]);// Sync session storage whenever categories change\nuseEffect(()=>{if(categories.length>0){syncSessionStorage();}},[categories,syncSessionStorage]);// Handle case where filters are cleared but categories aren't loaded yet\nuseEffect(()=>{if(categoriesLoadedRef.current&&categoriesRef.current.length>0&&filtersRef.current.category===''&&filtersRef.current.search===''){fetchProducts(filtersRef.current);}},[categoriesLoaded,categories.length,filters]);const[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\nconst[currentPage,setCurrentPage]=useState(1);const PAGE_SIZE=24;// Packaging state\nconst[packagingCart,setPackagingCart]=useState([]);const[showPackagingManager,setShowPackagingManager]=useState(false);const generateSaleContent=(data,t)=>{let items=data.items;if(!items){const numberedKeys=Object.keys(data).filter(key=>/^\\d+$/.test(key));if(numberedKeys.length>0){items=numberedKeys.map(key=>data[key]).filter(item=>item&&typeof item==='object');}}const paymentStatusText=data.payment_status==='paid'?'PAID':data.payment_status==='partial'?'PARTIAL':data.payment_status==='pending'?'PENDING':'UNKNOWN';return\"\\n      <div class=\\\"receipt-header\\\">\\n        <div class=\\\"company-name\\\" style=\\\"text-align: center;\\\">________ANTATSIMO_______</div>\\n        <div class=\\\"company-name\\\" style=\\\"text-align: center;\\\">\".concat('\\u00A0',\"</div>\\n        <div class=\\\"document-title\\\" style=\\\"text-align: center;\\\">SALE RECEIPT</div>\\n        <div class=\\\"receipt-date\\\" style=\\\"text-align: center;\\\">\",new Date().toLocaleDateString(),\" \").concat(new Date().toLocaleTimeString(),\"</div>\\n      </div>\\n      <div class=\\\"receipt-section\\\">\\n        <div class=\\\"no-data\\\">\",'\\u00A0',\"</div>\\n        <div class=\\\"section-title\\\">SALE INFO</div>\\n        <div class=\\\"receipt-row\\\">\\n          <span>Sale No:</span>\\n          <span>\").concat(data.sale_number||'N/A',\"</span>\\n        </div>\\n        <div class=\\\"receipt-row\\\">\\n          <span>Sale Status:</span>\\n          <span>\").concat(data.status||'N/A',\"</span>\\n        </div>\\n        <div class=\\\"receipt-row\\\">\\n          <span>Customer:</span>\\n          <span>\").concat((data.customer_name||'Walk-in Customer').substring(0,25),\"</span>\\n        </div>\\n        \").concat(data.customer_phone?\"\\n          <div class=\\\"receipt-row\\\">\\n            <span>Phone:</span>\\n            <span>\".concat(data.customer_phone,\"</span>\\n          </div>\\n        \"):'',\"\\n        <div class=\\\"receipt-row\\\">\\n          <span>Peyment Status:</span>\\n          <span>\").concat(paymentStatusText,\"</span>\\n        </div>\\n\\n        <div class=\\\"no-data\\\">\",'\\u00A0',\"</div>\\n\\n      </div>\\n      <div class=\\\"receipt-section\\\">\\n        <div class=\\\"section-title\\\">ITEMS SOLD</div>    \\n        <div class=\\\"no-data\\\">__________________________________________________</div>\\n        <div class=\\\"item-details\\\">\\n          <span>Info</span>\\n          <span>\\n            Qte\").concat('\\u00A0'.repeat(16),\"Total\").concat('\\u00A0'.repeat(2),\"\\n          </span>\\n        </div>\\n        <div class=\\\"no-data\\\">\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF\\xAF</div>         \\n      \\n        \").concat(items&&Array.isArray(items)?items.slice(0,20).map(item=>\"\\n          <div class=\\\"sale-item\\\">\\n            <div class=\\\"item-name\\\">\".concat((item.product_name||'N/A').substring(0,25),\" </div>\\n            <div class=\\\"item-details\\\">\\n              <span>\\n                \").concat(\"(\".concat(item.unit_name,\")\").concat(parseFloat(item.unit_price||0).toFixed(2)).padEnd(22,'\\u00A0'),\"\\n                \").concat((item.quantity_display||item.quantity||0).toString().padEnd(5,'\\u00A0'),\"\\n                \").concat(parseFloat(item.total_price||0).toFixed(2).padStart(14,'\\u00A0'),\" MGA\\n              </span>\\n            </div>\\n          </div>\\n        \")).join(''):'<div class=\"no-data\">No items found</div>',\"\\n\\n        <div class=\\\"no-data\\\">__________________________________________________</div>\\n        <div class=\\\"no-data\\\">==================================================</</div>\\n\\n      </div>        \\n      <div class=\\\"receipt-totals\\\">\\n        <div class=\\\"receipt-row\\\">\\n          <span>Subtotal:</span>\\n          <span>\").concat(parseFloat(data.total_amount||0).toFixed(2),\" MGA</span>\\n        </div>\\n        <div class=\\\"receipt-row\\\">\\n          <span>Paid:</span>\\n          <span>\").concat(parseFloat(data.paid_amount||0).toFixed(2),\" MGA</span>\\n        </div>\\n        \").concat(data.payment_status==='partial'?\"\\n          <div class=\\\"receipt-row\\\">\\n            <span>Due:</span>\\n            <span>\".concat(parseFloat(data.remaining_amount||0).toFixed(2),\" MGA</span>\\n          </div>\\n        \"):'',\"\\n        <div class=\\\"no-data\\\">__________________________________________________</div>\\n        <div class=\\\"no-data\\\">==================================================</</div>\\n        <div class=\\\"no-data\\\">\",'\\u00A0',\"</div>\\n      </div>\\n      <div class=\\\"receipt-footer\\\">\\n        <div class=\\\"thank-you\\\">Thank you!</div>\\n        <div class=\\\"footer-text\\\" style=\\\"text-align: center;\\\">\").concat(data.sale_number||'',\"</div>\\n        <div class=\\\"footer-text\\\" style=\\\"text-align: center;\\\">Created by : \").concat((user===null||user===void 0?void 0:user.username)||'N/A',\"</div>\\n        <div class=\\\"footer-text\\\" style=\\\"text-align: center;\\\">Print id : \").concat(data.print_id||'N/A',\"</div>\\n      </div>\\n    \");};const generateDefaultContent=(data,t)=>{return\"\\n      <div class=\\\"receipt-header\\\">\\n        <div class=\\\"company-name\\\">______ANTATSIMO______</div>\\n        <div class=\\\"document-title\\\">DOCUMENT</div>\\n        <div class=\\\"receipt-date\\\">\".concat(new Date().toLocaleDateString(),\" \").concat(new Date().toLocaleTimeString(),\"</div>\\n      </div>\\n      \\n      <div class=\\\"receipt-section\\\">\\n        <div class=\\\"section-title\\\">CONTENT</div>\\n        <div class=\\\"default-content\\\">\\n          Document generated successfully\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"receipt-footer\\\">\\n        <div class=\\\"footer-text\\\">Document printed</div>\\n      </div>\\n    \");};const handlePrintReceipt=async function(printData){let title=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Sale Receipt';let usePreview=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;try{// Validate data structure\nif(!printData){console.error('No data provided for printing');window.alert('No data available to print.');return false;}const isMobile=isMobileDevice();// Generate optimized content for thermal printers\nconst printContent=generateThermalOptimizedContent(printData,title,'sale');// Handle print preview\nif(usePreview){const previewSuccess=openPrintPreview(printContent,title);if(previewSuccess){return true;}else{throw new Error('Failed to open print preview window.');}}// Use mobile-friendly printing for mobile devices\nif(isMobile){// Try direct print window for mobile\nconst success=await openPrintWindow(printContent,title);if(!success){// If mobile printing fails, offer receipt app option\nconst useReceiptApp=window.confirm('Mobile printing failed. Would you like to download a file for receipt printer apps instead?');if(useReceiptApp){const downloadSuccess=downloadReceiptFile(printData,title);if(downloadSuccess){window.alert('Receipt file downloaded! You can now open it with any receipt printer app to print directly to your Xprinter.');return true;}}throw new Error('Mobile printing failed. Please try again or check your printer connection.');}return true;}else{// Desktop printing - use direct thermal printing method\nconst success=await printThermalReceipt(printContent,title);if(!success){// Fallback to preview\nconst previewSuccess=openPrintPreview(printContent,title);if(!previewSuccess){throw new Error('Failed to print receipt. Please try print preview instead.');}}return true;}}catch(error){console.error('Print error:',error);window.alert('Failed to print receipt. Please try print preview or check your printer settings.');return false;}};// ADD THESE NEW FUNCTIONS AFTER handlePrintReceipt:\nconst generateThermalOptimizedContent=(data,title,type)=>{// Generate the sale content first\nconst saleContent=generateSaleContent(data,t);return\"\\n  <!DOCTYPE html>\\n  <html>\\n  <head>\\n    <title>\".concat(title,\"</title>\\n    <meta charset=\\\"UTF-8\\\">\\n    <style>\\n      /* 80mm Thermal Printer Receipt Styles */\\n      * {\\n        margin: 0;\\n        padding: 0;\\n        box-sizing: border-box;\\n      }\\n      \\n      body {\\n        font-family: 'Courier New', Courier, monospace;\\n        font-size: 12px;\\n        line-height: 1.2;\\n        color: #000;\\n        width: 80mm;\\n        max-width: 80mm;\\n        margin: 0 auto;\\n        padding: 3mm;\\n        background: white;\\n      }\\n      \\n      .receipt-header {\\n        text-align: center;\\n        margin-bottom: 8px;\\n        padding-bottom: 6px;\\n        border-bottom: 1px dashed #000;\\n      }\\n      \\n      .company-name {\\n        font-weight: bold;\\n        font-size: 14px;\\n        margin-bottom: 2px;\\n        text-transform: uppercase;\\n      }\\n      \\n      .document-title {\\n        font-weight: bold;\\n        font-size: 13px;\\n        margin-bottom: 3px;\\n        text-transform: uppercase;\\n      }\\n      \\n      .receipt-date {\\n        font-size: 11px;\\n        color: #555;\\n      }\\n      \\n      .receipt-section {\\n        margin-bottom: 8px;\\n        padding-bottom: 6px;\\n        border-bottom: 1px dotted #ccc;\\n      }\\n      \\n      .section-title {\\n        font-weight: bold;\\n        font-size: 11px;\\n        margin-bottom: 4px;\\n        text-transform: uppercase;\\n        background: #f0f0f0;\\n        padding: 2px 4px;\\n      }\\n      \\n      .receipt-row {\\n        display: flex;\\n        justify-content: space-between;\\n        margin-bottom: 3px;\\n        font-size: 11px;\\n      }\\n      \\n      .product-item,\\n      .order-item,\\n      .delivery-item,\\n      .sale-item,\\n      .packaging-item,\\n      .sale-summary {\\n        margin-bottom: 4px;\\n        padding: 2px 0;\\n      }\\n      \\n      .product-name,\\n      .item-name {\\n        font-weight: bold;\\n        margin-bottom: 1px;\\n        word-wrap: break-word;\\n      }\\n      \\n      .product-details,\\n      .item-details,\\n      .sale-info {\\n        display: flex;\\n        justify-content: space-between;\\n        font-size: 10px;\\n        color: #555;\\n      }\\n      \\n      .receipt-totals,\\n      .receipt-total {\\n        margin: 8px 0;\\n        padding-top: 6px;\\n        border-top: 2px solid #000;\\n      }\\n      \\n      .total-row {\\n        display: flex;\\n        justify-content: space-between;\\n        margin-bottom: 3px;\\n        font-weight: bold;\\n      }\\n      \\n      .due-amount {\\n        color: #d00;\\n      }\\n      \\n      .no-data {\\n        text-align: center;\\n        color: #888;\\n        font-style: italic;\\n        padding: 8px 0;\\n      }\\n      \\n      .truncated-warning {\\n        text-align: center;\\n        color: #888;\\n        font-size: 10px;\\n        font-style: italic;\\n        margin-top: 4px;\\n      }\\n      \\n      .thank-you {\\n        text-align: center;\\n        font-weight: bold;\\n        margin: 6px 0;\\n      }\\n      \\n      .receipt-footer {\\n        text-align: center;\\n        margin-top: 10px;\\n        padding-top: 6px;\\n        border-top: 1px dashed #000;\\n        font-size: 10px;\\n        color: #666;\\n      }\\n      \\n      .footer-text {\\n        margin-bottom: 2px;\\n      }\\n      \\n      .status-consignation { color: #090; }\\n      .status-exchange { color: #009; }\\n      .status-due { color: #d00; font-weight: bold; }\\n      \\n      /* Print-specific styles */\\n      @media print {\\n        body {\\n          margin: 0;\\n          padding: 2mm;\\n          width: 80mm;\\n        }\\n        \\n        .no-print {\\n          display: none;\\n        }\\n        \\n        /* Ensure proper sizing for thermal paper */\\n        @page {\\n          size: 80mm auto;\\n          margin: 0;\\n        }\\n      }\\n      \\n      /* Force monospace and proper breaking */\\n      * {\\n        font-family: 'Courier New', Courier, monospace !important;\\n      }\\n      \\n      .default-content {\\n        text-align: center;\\n        padding: 10px 0;\\n        color: #666;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    \").concat(saleContent,\"\\n  </body>\\n  </html>\");};const printThermalReceipt=(printContent,title)=>{return new Promise(resolve=>{try{// Create a hidden iframe for printing\nconst printFrame=document.createElement('iframe');printFrame.style.position='fixed';printFrame.style.right='0';printFrame.style.bottom='0';printFrame.style.width='0';printFrame.style.height='0';printFrame.style.border='none';printFrame.style.visibility='hidden';document.body.appendChild(printFrame);let printDocument=printFrame.contentWindow||printFrame.contentDocument;if(printDocument.document){printDocument=printDocument.document;}// Write the content to the iframe\nprintDocument.open();printDocument.write(printContent);printDocument.close();// Wait for content to load then trigger print\nconst printTimeout=setTimeout(()=>{try{printFrame.contentWindow.focus();// Use a longer timeout to ensure CSS is applied\nsetTimeout(()=>{printFrame.contentWindow.print();// Clean up\nsetTimeout(()=>{if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(true);},1000);},500);}catch(printError){console.error('Print error:',printError);if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(false);}},1000);// Fallback if onload doesn't fire\nprintFrame.onload=function(){clearTimeout(printTimeout);try{printFrame.contentWindow.focus();setTimeout(()=>{printFrame.contentWindow.print();setTimeout(()=>{if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(true);},1000);},500);}catch(error){console.error('Print error:',error);if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(false);}};}catch(error){console.error('Print setup error:',error);resolve(false);}});};// Update the print preview button in the checkout actions\nconst handlePrintPreview=async()=>{const printData=preparePrintData(\"PREVIEW-\".concat(Date.now()),saleMode==='pending'?'pending':'completed');await handlePrintReceipt(printData,t('titles.sale_receipt'),true);};// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Calculate total amount (products only, excluding packaging)\nconst calculateTotal=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);return cartTotal;};// Calculate total amount including packaging (for display purposes)\nconst calculateTotalWithPackaging=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);const packagingTotal=calculatePackagingTotal();return cartTotal+packagingTotal;};// Update paid amount when payment type changes\nuseEffect(()=>{const total=calculateTotal();if(paymentType==='full'){setPaidAmount(total);}else if(paymentType==='partial'){// Only reset to 0 if it's currently set to the full amount\nif(paidAmount===total){setPaidAmount(0);}}},[paymentType,cart,packagingCart]);// Function to get the current price for a specific unit\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!(unitStockInfo!==null&&unitStockInfo!==void 0&&unitStockInfo.price))return 0;// If we're in standard mode, return the standard unit price\nif(priceMode==='standard'){return unitStockInfo.price;}// If we're in wholesale mode, we need to calculate the wholesale price for this unit\nif(priceMode==='wholesale'&&product.wholesale_price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);// Handle edge cases\nif(!standardBasePrice||standardBasePrice<=0){return unitStockInfo.price;}// Calculate the conversion factor from standard to wholesale\nconst wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;// For wholesale pricing, we need to apply the wholesale conversion factor\n// to the base unit price, then convert to the selected unit\nlet wholesaleUnitPrice;if(unitStockInfo.is_base_unit){// If this is the base unit, apply wholesale factor directly\nwholesaleUnitPrice=standardBasePrice*wholesaleConversionFactor;}else{// If this is not the base unit, we need to:\n// 1. Get the wholesale base price\n// 2. Convert it to the selected unit using the same conversion factor as the standard price\nconst standardUnitPrice=unitStockInfo.price;const unitConversionFactor=standardUnitPrice/standardBasePrice;wholesaleUnitPrice=wholesaleBasePrice*unitConversionFactor;}// Round to 2 decimal places to avoid floating point precision issues\nconst roundedPrice=Math.round(wholesaleUnitPrice*100)/100;// Ensure we return a valid number\nreturn isNaN(roundedPrice)||roundedPrice<0?unitStockInfo.price:roundedPrice;}// Fallback to standard price\nreturn unitStockInfo.price;};useEffect(()=>{const initializeData=async()=>{await fetchCategories();// Don't fetch products here - let the categories useEffect handle it\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categoriesLoaded&&categories.length>0){fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categoriesLoaded]);// Only depend on categoriesLoaded flag\n// Debounced search effect - optimized to prevent focus loss\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Only set timeout if searchInput is not empty or if it was cleared\nif(searchInput!==''){searchTimeoutRef.current=setTimeout(()=>{const newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);},500);}else if(filtersRef.current.search!==''){// If search input is cleared, immediately update filters\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:''});setFilters(newFilters);fetchProducts(newFilters);}// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput]);// Only depend on searchInput to prevent re-renders\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/api/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=useCallback(async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const baseUrl=\"/api/products/\".concat(params.toString()?'?'+params.toString():'');let response=await api.get(baseUrl);let aggregatedProducts=Array.isArray(response.data.results)?response.data.results:Array.isArray(response.data)?response.data:[];// Follow pagination to get all products (DRF-style \"next\" links)\nlet nextUrl=response.data.next;while(nextUrl){// Support absolute or relative next URLs\nresponse=await api.get(nextUrl);const pageItems=Array.isArray(response.data.results)?response.data.results:Array.isArray(response.data)?response.data:[];aggregatedProducts=aggregatedProducts.concat(pageItems);nextUrl=response.data.next;}const allProducts=aggregatedProducts;// If categories are not loaded yet, show all products but log a warning\nif(categoriesRef.current.length===0||!categoriesLoadedRef.current){setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category_name, find the category in our categories list\nif(product.category_name){const category=categoriesRef.current.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categoriesRef.current.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category object with ID, find the category in our categories list\nelse if(product.category&&product.category.id){const category=categoriesRef.current.find(cat=>cat.id===product.category.id);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categoriesRef.current.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);setCurrentPage(1);}catch(err){setError('Failed to load products');}finally{setLoading(false);}},[]);// No dependencies to avoid circular references\nconst fetchCategories=useCallback(async()=>{try{const response=await api.get('/api/products/categories/');let categoriesData=response.data.results||response.data;// Load session-based sellable status from sessionStorage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');// Apply session-based sellable status\ncategoriesData=categoriesData.map(cat=>{const isSellable=sellableStatus.hasOwnProperty(cat.id)?sellableStatus[cat.id]:cat.is_sellable;return _objectSpread(_objectSpread({},cat),{},{is_sellable:isSellable});});setCategories(categoriesData);setCategoriesLoaded(true);}catch(err){console.error('Error fetching categories:',err);}},[]);// No dependencies needed for fetchCategories\nconst toggleCategorySellable=useCallback(async(categoryId,currentStatus)=>{try{setCategoryUpdating(true);const newStatus=!currentStatus;// Update session storage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');sellableStatus[categoryId]=newStatus;sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));// Update categories state immediately for UI feedback\nsetCategories(prevCategories=>prevCategories.map(cat=>cat.id===categoryId?_objectSpread(_objectSpread({},cat),{},{is_sellable:newStatus}):cat));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\n// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to update category status');console.error('Category toggle error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst resetAllCategoriesToSellable=useCallback(async()=>{try{setCategoryUpdating(true);// Create a sellable status object with all categories set to true\nconst allSellableStatus={};categoriesRef.current.forEach(cat=>{allSellableStatus[cat.id]=true;});// Save to session storage\nsessionStorage.setItem('sellableCategories',JSON.stringify(allSellableStatus));// Update categories state immediately\nsetCategories(prevCategories=>prevCategories.map(cat=>_objectSpread(_objectSpread({},cat),{},{is_sellable:true})));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\nsetSuccess('All categories have been set to sellable');// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to reset categories');console.error('Category reset error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst fetchStockAvailability=async productId=>{try{const response=await api.get(\"/api/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nlet unit=selectedUnit;if(!unit&&product.compatible_units&&product.compatible_units[0]){var _compatibleUnit$unit,_compatibleUnit$unit2,_compatibleUnit$unit3;const compatibleUnit=product.compatible_units[0];unit={id:((_compatibleUnit$unit=compatibleUnit.unit)===null||_compatibleUnit$unit===void 0?void 0:_compatibleUnit$unit.id)||compatibleUnit.unit,name:compatibleUnit.unit_name||((_compatibleUnit$unit2=compatibleUnit.unit)===null||_compatibleUnit$unit2===void 0?void 0:_compatibleUnit$unit2.name)||'Piece',symbol:compatibleUnit.unit_symbol||((_compatibleUnit$unit3=compatibleUnit.unit)===null||_compatibleUnit$unit3===void 0?void 0:_compatibleUnit$unit3.symbol)||'piece'};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);// Update cart first\nif(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(prevCart=>prevCart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}// Get unit stock info for price calculation\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product),price_mode:priceMode});setCart(prevCart=>[...prevCart,newCartItem]);}// Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\nif(product.has_packaging&&product.packaging_price){setTimeout(()=>{addPackagingAutomatically(product,unit);},0);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));// Also remove packaging if sales item is removed\nsetPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));// Update packaging quantity automatically if product has packaging\nconst product=products.find(p=>p.id===productId);if(product&&product.has_packaging&&product.packaging_price){const unit={id:unitId};updatePackagingQuantityAutomatically(product,unit,quantity);}setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};// Packaging functions\nconst addPackagingAutomatically=(product,unit)=>{if(!product.has_packaging||!product.packaging_price){return;}// Use a callback to get the current cart state\nsetCart(currentCart=>{// Calculate packaging quantity based on sales quantity\nconst salesItem=currentCart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(!salesItem)return currentCart;// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// For packaging, we use the base unit (pieces) to calculate quantity\n// If the sales unit is not the base unit, we need to convert to pieces\nlet packagingQuantity=salesItem.quantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesItem.quantity*unitStockInfo.conversion_factor;}// Update packaging cart\nsetPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,// Track which sales unit this packaging is for\nsales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});return currentCart;});};const addToPackagingCart=product=>{if(!product.has_packaging||!product.packaging_price){setError('This product does not have packaging consignation');return;}const existingPackaging=packagingCart.find(item=>item.id===product.id);if(existingPackaging){setPackagingCart(packagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{const newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price),status:'consignation',customer_name:customerInfo.name,customer_phone:customerInfo.phone});setPackagingCart([...packagingCart,newPackagingItem]);}setError('');};const updatePackagingQuantityAutomatically=(product,unit,salesQuantity)=>{if(!product.has_packaging||!product.packaging_price){return;}// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// Calculate packaging quantity based on sales quantity\nlet packagingQuantity=salesQuantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesQuantity*unitStockInfo.conversion_factor;}setPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item if it doesn't exist\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,sales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});};const updatePackagingQuantity=(productId,quantity)=>{if(quantity<=0){setPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity,total_price:item.unit_price*quantity}):item));}};const updatePackagingStatus=(productId,status)=>{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{status}):item));};const removeFromPackagingCart=productId=>{setPackagingCart(packagingCart.filter(item=>item.id!==productId));};const calculatePackagingTotal=()=>{return packagingCart.reduce((total,item)=>{// Only \"consignation\" (paid) packaging should be included in the total\n// \"exchange\" and \"due\" packaging are not payable\nif(item.status==='consignation'){return total+(item.total_price||0);}return total;},0);};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};// Prepare print data for printing\nconst preparePrintData=function(saleNumber){let saleStatus=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'completed';const total=calculateSubtotal();const remaining=total-paidAmount;return{sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:total,paid_amount:paidAmount,remaining_amount:remaining,payment_status:remaining>0?'partial':'paid',due_date:remaining>0?new Date(Date.now()+30*24*60*60*1000).toLocaleDateString():null,// 30 days from now\nitems:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};};const handleCheckout=async()=>{if(cart.length===0){setError(t('pos.cart_empty'));return;}setProcessing(true);setError('');// Validate customer name for partial payments\nif((saleMode!=='complete'||paymentType==='partial')&&(!customerInfo.name||!customerInfo.name.trim())){setError('Customer name is required for partial/uncompleted payments');setProcessing(false);return;}// Validate paid amount\nconst total=calculateTotal();if(paidAmount>total){setError('Paid amount cannot exceed the total amount');setProcessing(false);return;}if(paidAmount<0){setError('Paid amount cannot be negative');setProcessing(false);return;}try{const saleData={sale_type:'sale',customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,paid_amount:paidAmount,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};}),packaging_items:packagingCart.map(item=>({product:item.id,quantity:parseFloat(item.quantity),unit:7,// Use the correct piece unit ID (7) for packaging\nunit_price:parseFloat(item.unit_price),status:item.status||'consignation',customer_name:item.customer_name||customerInfo.name,customer_phone:item.customer_phone||customerInfo.phone,notes:item.notes||''}))};// Create the sale\nconst response=await api.post('/api/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{const completionResponse=await api.post(\"/api/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){// Use the improved printing logic for completed sale\nconst printData=preparePrintData(saleNumber,'completed');await handlePrintReceipt(printData,t('titles.sale_receipt'));}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();// Show success message with packaging transaction info if created\nlet successMessage=\"Sale completed successfully! Sale Number: \".concat(saleNumber);if(completionResponse.data.packaging_transaction){const pkgTransaction=completionResponse.data.packaging_transaction;successMessage+=\"\\n\\nPackaging transaction automatically created:\\nTransaction: \".concat(pkgTransaction.transaction_number,\"\\nAmount: \").concat(pkgTransaction.total_amount,\" MGA\");}alert(successMessage);}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nsetError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){// Use the improved printing logic for pending sale\nconst printData=preparePrintData(saleNumber,'pending');await handlePrintReceipt(printData,t('titles.sale_receipt'));}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Reset price mode to standard after sale\nsetPriceMode('standard');alert(\"Pending sale created successfully! Sale Number: \".concat(saleNumber));}}catch(err){var _err$response,_err$response$data,_err$response2,_err$response2$data,_err$response3,_err$response3$data,_err$response4,_err$response4$data;// Handle different types of errors\nif((_err$response=err.response)!==null&&_err$response!==void 0&&(_err$response$data=_err$response.data)!==null&&_err$response$data!==void 0&&_err$response$data.error){setError(err.response.data.error);}else if((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.detail){setError(err.response.data.detail);}else if((_err$response3=err.response)!==null&&_err$response3!==void 0&&(_err$response3$data=_err$response3.data)!==null&&_err$response3$data!==void 0&&_err$response3$data.customer_name){setError(err.response.data.customer_name[0]);}else if((_err$response4=err.response)!==null&&_err$response4!==void 0&&(_err$response4$data=_err$response4.data)!==null&&_err$response4$data!==void 0&&_err$response4$data.paid_amount){setError(err.response.data.paid_amount[0]);}else{setError('Failed to create sale. Please check the console for details.');}}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setPackagingCart([]);setError('');};const handleFilterChange=useCallback((filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}},[]);// No dependencies needed since we use ref\nconst clearFilters=useCallback(()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\n// Only fetch products if categories are loaded\nif(categoriesLoadedRef.current&&categoriesRef.current.length>0){fetchProducts(clearedFilters);}},[categoriesLoaded,categories.length]);const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products (only for complete sales)\nif(saleMode==='complete'&&product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>{var _u$unit;return(((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.id)||u.unit)===selectedUnitId;});if(selectedCompatibleUnit){var _selectedCompatibleUn2;// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _selectedCompatibleUn;return u.id===(((_selectedCompatibleUn=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn===void 0?void 0:_selectedCompatibleUn.id)||selectedCompatibleUnit.unit);});const unitPrice=getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product);// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:((_selectedCompatibleUn2=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn2===void 0?void 0:_selectedCompatibleUn2.id)||selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.point_of_sale')}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:t('alerts.sale_will_be_completed'),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:t('alerts.sale_will_be_created_pending'),children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group print-receipt-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle print-receipt-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:t('alerts.print_receipt_after_sale'),children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:t('pos.dont_print_receipt'),children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:t('pos.search_products'),value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)},\"search-input\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{margin:'0',fontSize:'1rem',fontWeight:'600'},children:[\"Manage Sellable Categories\",categoryUpdating&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'0.5rem',color:'#3b82f6'},children:\"\\u27F3\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetAllCategoriesToSellable,disabled:categoryUpdating,style:{padding:'0.5rem 1rem',fontSize:'0.875rem',borderRadius:'0.375rem',border:'1px solid #3b82f6',cursor:categoryUpdating?'not-allowed':'pointer',backgroundColor:categoryUpdating?'#9ca3af':'#3b82f6',color:'white',fontWeight:'500',opacity:categoryUpdating?0.6:1},children:\"Reset All to Sellable\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.slice((currentPage-1)*PAGE_SIZE,currentPage*PAGE_SIZE).map(product=>{var _product$compatible_u2;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0&&saleMode==='complete'?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[(_product$compatible_u=>{// Find the actual base unit and get its price\nconst baseUnit=(_product$compatible_u=product.compatible_units)===null||_product$compatible_u===void 0?void 0:_product$compatible_u.find(u=>u.unit.is_base_unit);if(baseUnit&&stockAvailability[product.id]){const updatedStockInfo=getUpdatedStockAvailability(product.id);const baseUnitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _baseUnit$unit;return u.id===(((_baseUnit$unit=baseUnit.unit)===null||_baseUnit$unit===void 0?void 0:_baseUnit$unit.id)||baseUnit.unit);});if(baseUnitStockInfo){return getCurrentUnitPrice(product,baseUnitStockInfo).toFixed(2);}}// Fallback to the original price\nreturn getCurrentPrice(product).toFixed(2);})(),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u2=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u2===void 0?void 0:_product$compatible_u2.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{var _compatibleUnit$unit5,_compatibleUnit$unit6;const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit4;return u.id===(((_compatibleUnit$unit4=compatibleUnit.unit)===null||_compatibleUnit$unit4===void 0?void 0:_compatibleUnit$unit4.id)||compatibleUnit.unit);});if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit5=compatibleUnit.unit)===null||_compatibleUnit$unit5===void 0?void 0:_compatibleUnit$unit5.name)||compatibleUnit.unit_name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA (\",unitStockInfo.available_quantity,\" available)\"]},((_compatibleUnit$unit6=compatibleUnit.unit)===null||_compatibleUnit$unit6===void 0?void 0:_compatibleUnit$unit6.id)||compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _compatibleUnit$unit8,_compatibleUnit$unit9,_compatibleUnit$unit0,_compatibleUnit$unit1;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit7;return u.id===(((_compatibleUnit$unit7=compatibleUnit.unit)===null||_compatibleUnit$unit7===void 0?void 0:_compatibleUnit$unit7.id)||compatibleUnit.unit);});const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit8=compatibleUnit.unit)===null||_compatibleUnit$unit8===void 0?void 0:_compatibleUnit$unit8.name)||compatibleUnit.unit_name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||((_compatibleUnit$unit9=compatibleUnit.unit)===null||_compatibleUnit$unit9===void 0?void 0:_compatibleUnit$unit9.symbol)||compatibleUnit.unit_symbol;return/*#__PURE__*/_jsxs(\"option\",{value:((_compatibleUnit$unit1=compatibleUnit.unit)===null||_compatibleUnit$unit1===void 0?void 0:_compatibleUnit$unit1.id)||compatibleUnit.unit,disabled:saleMode==='complete'?!isAvailable:false,children:[unitName,\" (\",unitSymbol,\") - \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA\",!isAvailable&&saleMode==='complete'?' - OUT OF STOCK':'']},((_compatibleUnit$unit0=compatibleUnit.unit)===null||_compatibleUnit$unit0===void 0?void 0:_compatibleUnit$unit0.id)||compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.has_packaging&&product.packaging_price&&/*#__PURE__*/_jsx(\"div\",{className:\"packaging-info\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"packaging-price\",children:[\"Packaging: \",product.packaging_price,\" MGA (Auto-added)\"]})}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})}),products.length>PAGE_SIZE&&/*#__PURE__*/_jsxs(\"div\",{className:\"products-pagination\",style:{display:'flex',justifyContent:'center',gap:'12px',marginTop:'12px'},children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>setCurrentPage(p=>Math.max(1,p-1)),disabled:currentPage===1,children:\"Prev\"}),/*#__PURE__*/_jsxs(\"span\",{style:{alignSelf:'center'},children:[\"Page \",currentPage,\" of \",Math.ceil(products.length/PAGE_SIZE)]}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>setCurrentPage(p=>Math.min(Math.ceil(products.length/PAGE_SIZE),p+1)),disabled:currentPage>=Math.ceil(products.length/PAGE_SIZE),children:\"Next\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Cart is empty\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart-hint\",children:\"Add items from the product list to start a sale\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-status\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:t('alerts.click_to_edit_quantity'),children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sales-item-status\",children:\"-\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:t('alerts.remove_item'),children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode))),packagingCart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"packaging-section-header\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Packaging Items (Auto-calculated)\"})}),packagingCart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item packaging-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[item.name,\" (Packaging)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),item.sales_unit_name&&/*#__PURE__*/_jsxs(\"p\",{className:\"packaging-source\",children:[\"From: \",item.quantity,\" \",item.sales_unit_symbol||'piece']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:\"piece\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-quantity\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quantity auto-calculated\",children:item.quantity}),/*#__PURE__*/_jsx(\"small\",{className:\"auto-label\",children:\"Auto\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.status,onChange:e=>updatePackagingStatus(item.id,e.target.value),className:\"packaging-status-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"consignation\",children:\"Consigned (Paid)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"exchange\",children:\"Exchange\"}),/*#__PURE__*/_jsx(\"option\",{value:\"due\",children:\"Due (Return Required)\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromPackagingCart(item.id),title:\"Remove packaging item\",children:\"\\xD7\"})})]},\"packaging-\".concat(item.id)))]})]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Items Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row packaging-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Products Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total (Products Only):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:saleMode!=='complete'||paymentType==='partial'?\"Customer Name (Required for Partial Payment)\":\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value})),className:(saleMode!=='complete'||paymentType==='partial')&&!customerInfo.name?'required-field':''})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"full\",checked:paymentType==='full',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"partial\",checked:paymentType==='partial',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]}),paymentType==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateTotal(),value:paidAmount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setPaidAmount(value);},placeholder:t('forms.enter_amount_to_pay')}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Products Total: $\",calculateTotal().toFixed(2),\" | Remaining: $\",(calculateTotal()-(paidAmount||0)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkout-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"large\",onClick:handlePrintPreview,className:\"print-preview-btn\",children:\"\\uD83D\\uDDA8\\uFE0F Print Preview\"}),/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?t('pos.complete_sale'):t('pos.create_pending_sale'),printReceipt&&t('pos.print_receipt')]})]})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useTranslation","useAuth","api","Button","PackagingManager","isMobileDevice","openPrintWindow","openPrintPreview","downloadReceiptFile","generateXprinterPrintContent","generateMobilePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","t","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","paymentType","setPaymentType","paidAmount","setPaidAmount","loading","setLoading","processing","setProcessing","error","setError","success","setSuccess","stockAvailability","setStockAvailability","categoriesLoaded","setCategoriesLoaded","categoryUpdating","setCategoryUpdating","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","filtersRef","searchTimeoutRef","categoriesRef","categoriesLoadedRef","current","syncSessionStorage","sellableStatus","forEach","cat","id","is_sellable","sessionStorage","setItem","JSON","stringify","length","fetchProducts","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","currentPage","setCurrentPage","PAGE_SIZE","packagingCart","setPackagingCart","showPackagingManager","setShowPackagingManager","generateSaleContent","data","items","numberedKeys","Object","keys","filter","key","test","map","item","paymentStatusText","payment_status","concat","Date","toLocaleDateString","toLocaleTimeString","sale_number","status","customer_name","substring","customer_phone","repeat","Array","isArray","slice","product_name","unit_name","parseFloat","unit_price","toFixed","padEnd","quantity_display","quantity","toString","total_price","padStart","join","total_amount","paid_amount","remaining_amount","username","print_id","generateDefaultContent","handlePrintReceipt","printData","title","arguments","undefined","usePreview","console","window","alert","isMobile","printContent","generateThermalOptimizedContent","previewSuccess","Error","useReceiptApp","confirm","downloadSuccess","printThermalReceipt","type","saleContent","Promise","resolve","printFrame","document","createElement","style","position","right","bottom","width","height","border","visibility","body","appendChild","printDocument","contentWindow","contentDocument","open","write","close","printTimeout","setTimeout","focus","print","contains","removeChild","printError","onload","clearTimeout","handlePrintPreview","preparePrintData","now","getCurrentPrice","product","wholesale_price","price","calculateTotal","cartTotal","reduce","total","unitPrice","calculateTotalWithPackaging","packagingTotal","calculatePackagingTotal","getCurrentUnitPrice","unitStockInfo","standardBasePrice","wholesaleBasePrice","wholesaleConversionFactor","wholesaleUnitPrice","is_base_unit","standardUnitPrice","unitConversionFactor","roundedPrice","Math","round","isNaN","initializeData","fetchCategories","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","compatible_units","selectedUnit","find","u","is_default","unit","_selectedUnit$unit","productIds","response","post","product_ids","stockData","values","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","unitInfo","unit_id","conversion_factor","baseUnit","totalBaseStock","available_quantity","remainingPieces","max","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","baseUrl","get","aggregatedProducts","results","nextUrl","next","pageItems","allProducts","sellableProducts","isSellable","category_name","selectedCategory","parseInt","categoriesData","parse","getItem","hasOwnProperty","toggleCategorySellable","categoryId","currentStatus","newStatus","prevCategories","resetAllCategoriesToSellable","allSellableStatus","prev","addToCart","_compatibleUnit$unit","_compatibleUnit$unit2","_compatibleUnit$unit3","compatibleUnit","symbol","unit_symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","prevCart","newCartItem","has_packaging","packaging_price","addPackagingAutomatically","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","p","updatePackagingQuantityAutomatically","removeFromCart","currentCart","salesItem","packagingQuantity","currentPackagingCart","existingPackaging","newPackagingItem","sales_unit_id","sales_unit_name","sales_unit_symbol","addToPackagingCart","salesQuantity","updatePackagingQuantity","updatePackagingStatus","removeFromPackagingCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","saleNumber","saleStatus","remaining","customer_email","user_name","user_id","created_at","toISOString","print_timestamp","random","substr","due_date","_item$unit","product_sku","sku","handleCheckout","trim","saleData","sale_type","payment_method","packaging_items","notes","saleId","completionResponse","successMessage","packaging_transaction","pkgTransaction","transaction_number","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","handleQuantitySubmit","newQuantity","cartItem","handleQuantityCancel","handleQuantityKeyPress","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","_u$unit","_selectedCompatibleUn2","_selectedCompatibleUn","className","children","onChange","variant","size","onClick","marginTop","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","display","justifyContent","alignItems","margin","fontSize","fontWeight","marginLeft","color","disabled","cursor","opacity","gridTemplateColumns","gap","borderColor","_product$compatible_u2","_product$compatible_u","baseUnitStockInfo","_baseUnit$unit","_compatibleUnit$unit5","_compatibleUnit$unit6","_compatibleUnit$unit4","unitName","Boolean","stopPropagation","index","_compatibleUnit$unit8","_compatibleUnit$unit9","_compatibleUnit$unit0","_compatibleUnit$unit1","_compatibleUnit$unit7","availableQty","unitSymbol","alignSelf","ceil","min","onKeyPress","onBlur","autoFocus","method","checked","replace","toUpperCase","step"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PackagingManager from '../components/PackagingManager';\nimport { \n  isMobileDevice,\n  openPrintWindow,\n  openPrintPreview,\n  downloadReceiptFile,\n  generateXprinterPrintContent,\n  generateMobilePrintContent\n} from '../utils/printUtils';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [paymentType, setPaymentType] = useState('full'); // 'full' or 'partial'\n  const [paidAmount, setPaidAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [categoriesLoaded, setCategoriesLoaded] = useState(false);\n  const [categoryUpdating, setCategoryUpdating] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const filtersRef = useRef(filters); // Ref to store current filters\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const categoriesRef = useRef(categories); // Ref to store current categories\n  const categoriesLoadedRef = useRef(categoriesLoaded); // Ref to store categories loaded state\n\n  // Update refs whenever state changes\n  useEffect(() => {\n    filtersRef.current = filters;\n  }, [filters]);\n\n  useEffect(() => {\n    categoriesRef.current = categories;\n  }, [categories]);\n\n  useEffect(() => {\n    categoriesLoadedRef.current = categoriesLoaded;\n  }, [categoriesLoaded]);\n\n  // Function to sync session storage with categories state\n  const syncSessionStorage = useCallback(() => {\n    const sellableStatus = {};\n    categories.forEach(cat => {\n      sellableStatus[cat.id] = cat.is_sellable;\n    });\n    sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n  }, [categories]);\n\n  // Sync session storage whenever categories change\n  useEffect(() => {\n    if (categories.length > 0) {\n      syncSessionStorage();\n    }\n  }, [categories, syncSessionStorage]);\n\n  // Handle case where filters are cleared but categories aren't loaded yet\n  useEffect(() => {\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0 && filtersRef.current.category === '' && filtersRef.current.search === '') {\n      fetchProducts(filtersRef.current);\n    }\n  }, [categoriesLoaded, categories.length, filters]);\n\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n  const [currentPage, setCurrentPage] = useState(1);\n  const PAGE_SIZE = 24;\n  \n  // Packaging state\n  const [packagingCart, setPackagingCart] = useState([]);\n  const [showPackagingManager, setShowPackagingManager] = useState(false);\n\n\n  const generateSaleContent = (data, t) => {\n    let items = data.items;\n    if (!items) {\n      const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n      if (numberedKeys.length > 0) {\n        items = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n      }\n    }\n\n    const paymentStatusText = data.payment_status === 'paid' ? 'PAID' : \n                            data.payment_status === 'partial' ? 'PARTIAL' : \n                            data.payment_status === 'pending' ? 'PENDING' : \n                            'UNKNOWN';\n\n    return `\n      <div class=\"receipt-header\">\n        <div class=\"company-name\" style=\"text-align: center;\">________ANTATSIMO_______</div>\n        <div class=\"company-name\" style=\"text-align: center;\">${'\\u00A0'}</div>\n        <div class=\"document-title\" style=\"text-align: center;\">SALE RECEIPT</div>\n        <div class=\"receipt-date\" style=\"text-align: center;\">${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}</div>\n      </div>\n      <div class=\"receipt-section\">\n        <div class=\"no-data\">${'\\u00A0'}</div>\n        <div class=\"section-title\">SALE INFO</div>\n        <div class=\"receipt-row\">\n          <span>Sale No:</span>\n          <span>${data.sale_number || 'N/A'}</span>\n        </div>\n        <div class=\"receipt-row\">\n          <span>Sale Status:</span>\n          <span>${data.status || 'N/A'}</span>\n        </div>\n        <div class=\"receipt-row\">\n          <span>Customer:</span>\n          <span>${(data.customer_name || 'Walk-in Customer').substring(0, 25)}</span>\n        </div>\n        ${data.customer_phone ? `\n          <div class=\"receipt-row\">\n            <span>Phone:</span>\n            <span>${data.customer_phone}</span>\n          </div>\n        ` : ''}\n        <div class=\"receipt-row\">\n          <span>Peyment Status:</span>\n          <span>${paymentStatusText}</span>\n        </div>\n\n        <div class=\"no-data\">${'\\u00A0'}</div>\n\n      </div>\n      <div class=\"receipt-section\">\n        <div class=\"section-title\">ITEMS SOLD</div>    \n        <div class=\"no-data\">__________________________________________________</div>\n        <div class=\"item-details\">\n          <span>Info</span>\n          <span>\n            Qte${'\\u00A0'.repeat(16)}Total${'\\u00A0'.repeat(2)}\n          </span>\n        </div>\n        <div class=\"no-data\">¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯</div>         \n      \n        ${items && Array.isArray(items) ? items.slice(0, 20).map(item => `\n          <div class=\"sale-item\">\n            <div class=\"item-name\">${(item.product_name || 'N/A').substring(0, 25)} </div>\n            <div class=\"item-details\">\n              <span>\n                ${`(${item.unit_name})${parseFloat(item.unit_price || 0).toFixed(2)}`.padEnd(22, '\\u00A0')}\n                ${(item.quantity_display || item.quantity || 0).toString().padEnd(5, '\\u00A0')}\n                ${parseFloat(item.total_price || 0).toFixed(2).padStart(14, '\\u00A0')} MGA\n              </span>\n            </div>\n          </div>\n        `).join('') : '<div class=\"no-data\">No items found</div>'}\n\n        <div class=\"no-data\">__________________________________________________</div>\n        <div class=\"no-data\">==================================================</</div>\n\n      </div>        \n      <div class=\"receipt-totals\">\n        <div class=\"receipt-row\">\n          <span>Subtotal:</span>\n          <span>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</span>\n        </div>\n        <div class=\"receipt-row\">\n          <span>Paid:</span>\n          <span>${parseFloat(data.paid_amount || 0).toFixed(2)} MGA</span>\n        </div>\n        ${data.payment_status === 'partial' ? `\n          <div class=\"receipt-row\">\n            <span>Due:</span>\n            <span>${parseFloat(data.remaining_amount || 0).toFixed(2)} MGA</span>\n          </div>\n        ` : ''}\n        <div class=\"no-data\">__________________________________________________</div>\n        <div class=\"no-data\">==================================================</</div>\n        <div class=\"no-data\">${'\\u00A0'}</div>\n      </div>\n      <div class=\"receipt-footer\">\n        <div class=\"thank-you\">Thank you!</div>\n        <div class=\"footer-text\" style=\"text-align: center;\">${data.sale_number || ''}</div>\n        <div class=\"footer-text\" style=\"text-align: center;\">Created by : ${user?.username || 'N/A'}</div>\n        <div class=\"footer-text\" style=\"text-align: center;\">Print id : ${data.print_id || 'N/A'}</div>\n      </div>\n    `;\n  };\n  const generateDefaultContent = (data, t) => {\n    return `\n      <div class=\"receipt-header\">\n        <div class=\"company-name\">______ANTATSIMO______</div>\n        <div class=\"document-title\">DOCUMENT</div>\n        <div class=\"receipt-date\">${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}</div>\n      </div>\n      \n      <div class=\"receipt-section\">\n        <div class=\"section-title\">CONTENT</div>\n        <div class=\"default-content\">\n          Document generated successfully\n        </div>\n      </div>\n      \n      <div class=\"receipt-footer\">\n        <div class=\"footer-text\">Document printed</div>\n      </div>\n    `;\n  };\n\n  const handlePrintReceipt = async (printData, title = 'Sale Receipt', usePreview = false) => {\n    try {\n      // Validate data structure\n      if (!printData) {\n        console.error('No data provided for printing');\n        window.alert('No data available to print.');\n        return false;\n      }\n\n      const isMobile = isMobileDevice();\n      \n      // Generate optimized content for thermal printers\n      const printContent = generateThermalOptimizedContent(printData, title, 'sale');\n\n      // Handle print preview\n      if (usePreview) {\n        const previewSuccess = openPrintPreview(printContent, title);\n        if (previewSuccess) {\n          return true;\n        } else {\n          throw new Error('Failed to open print preview window.');\n        }\n      }\n\n      // Use mobile-friendly printing for mobile devices\n      if (isMobile) {\n        // Try direct print window for mobile\n        const success = await openPrintWindow(printContent, title);\n        if (!success) {\n          // If mobile printing fails, offer receipt app option\n          const useReceiptApp = window.confirm('Mobile printing failed. Would you like to download a file for receipt printer apps instead?');\n          if (useReceiptApp) {\n            const downloadSuccess = downloadReceiptFile(printData, title);\n            if (downloadSuccess) {\n              window.alert('Receipt file downloaded! You can now open it with any receipt printer app to print directly to your Xprinter.');\n              return true;\n            }\n          }\n          throw new Error('Mobile printing failed. Please try again or check your printer connection.');\n        }\n        return true;\n      } else {\n        // Desktop printing - use direct thermal printing method\n        const success = await printThermalReceipt(printContent, title);\n        if (!success) {\n          // Fallback to preview\n          const previewSuccess = openPrintPreview(printContent, title);\n          if (!previewSuccess) {\n            throw new Error('Failed to print receipt. Please try print preview instead.');\n          }\n        }\n        return true;\n      }\n      \n    } catch (error) {\n      console.error('Print error:', error);\n      window.alert('Failed to print receipt. Please try print preview or check your printer settings.');\n      return false;\n    }\n  };\n\n  // ADD THESE NEW FUNCTIONS AFTER handlePrintReceipt:\n\n  const generateThermalOptimizedContent = (data, title, type) => {\n    // Generate the sale content first\n    const saleContent = generateSaleContent(data, t);\n    \n    return `\n  <!DOCTYPE html>\n  <html>\n  <head>\n    <title>${title}</title>\n    <meta charset=\"UTF-8\">\n    <style>\n      /* 80mm Thermal Printer Receipt Styles */\n      * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      }\n      \n      body {\n        font-family: 'Courier New', Courier, monospace;\n        font-size: 12px;\n        line-height: 1.2;\n        color: #000;\n        width: 80mm;\n        max-width: 80mm;\n        margin: 0 auto;\n        padding: 3mm;\n        background: white;\n      }\n      \n      .receipt-header {\n        text-align: center;\n        margin-bottom: 8px;\n        padding-bottom: 6px;\n        border-bottom: 1px dashed #000;\n      }\n      \n      .company-name {\n        font-weight: bold;\n        font-size: 14px;\n        margin-bottom: 2px;\n        text-transform: uppercase;\n      }\n      \n      .document-title {\n        font-weight: bold;\n        font-size: 13px;\n        margin-bottom: 3px;\n        text-transform: uppercase;\n      }\n      \n      .receipt-date {\n        font-size: 11px;\n        color: #555;\n      }\n      \n      .receipt-section {\n        margin-bottom: 8px;\n        padding-bottom: 6px;\n        border-bottom: 1px dotted #ccc;\n      }\n      \n      .section-title {\n        font-weight: bold;\n        font-size: 11px;\n        margin-bottom: 4px;\n        text-transform: uppercase;\n        background: #f0f0f0;\n        padding: 2px 4px;\n      }\n      \n      .receipt-row {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 3px;\n        font-size: 11px;\n      }\n      \n      .product-item,\n      .order-item,\n      .delivery-item,\n      .sale-item,\n      .packaging-item,\n      .sale-summary {\n        margin-bottom: 4px;\n        padding: 2px 0;\n      }\n      \n      .product-name,\n      .item-name {\n        font-weight: bold;\n        margin-bottom: 1px;\n        word-wrap: break-word;\n      }\n      \n      .product-details,\n      .item-details,\n      .sale-info {\n        display: flex;\n        justify-content: space-between;\n        font-size: 10px;\n        color: #555;\n      }\n      \n      .receipt-totals,\n      .receipt-total {\n        margin: 8px 0;\n        padding-top: 6px;\n        border-top: 2px solid #000;\n      }\n      \n      .total-row {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 3px;\n        font-weight: bold;\n      }\n      \n      .due-amount {\n        color: #d00;\n      }\n      \n      .no-data {\n        text-align: center;\n        color: #888;\n        font-style: italic;\n        padding: 8px 0;\n      }\n      \n      .truncated-warning {\n        text-align: center;\n        color: #888;\n        font-size: 10px;\n        font-style: italic;\n        margin-top: 4px;\n      }\n      \n      .thank-you {\n        text-align: center;\n        font-weight: bold;\n        margin: 6px 0;\n      }\n      \n      .receipt-footer {\n        text-align: center;\n        margin-top: 10px;\n        padding-top: 6px;\n        border-top: 1px dashed #000;\n        font-size: 10px;\n        color: #666;\n      }\n      \n      .footer-text {\n        margin-bottom: 2px;\n      }\n      \n      .status-consignation { color: #090; }\n      .status-exchange { color: #009; }\n      .status-due { color: #d00; font-weight: bold; }\n      \n      /* Print-specific styles */\n      @media print {\n        body {\n          margin: 0;\n          padding: 2mm;\n          width: 80mm;\n        }\n        \n        .no-print {\n          display: none;\n        }\n        \n        /* Ensure proper sizing for thermal paper */\n        @page {\n          size: 80mm auto;\n          margin: 0;\n        }\n      }\n      \n      /* Force monospace and proper breaking */\n      * {\n        font-family: 'Courier New', Courier, monospace !important;\n      }\n      \n      .default-content {\n        text-align: center;\n        padding: 10px 0;\n        color: #666;\n      }\n    </style>\n  </head>\n  <body>\n    ${saleContent}\n  </body>\n  </html>`;\n  };\n\n  const printThermalReceipt = (printContent, title) => {\n    return new Promise((resolve) => {\n      try {\n        // Create a hidden iframe for printing\n        const printFrame = document.createElement('iframe');\n        printFrame.style.position = 'fixed';\n        printFrame.style.right = '0';\n        printFrame.style.bottom = '0';\n        printFrame.style.width = '0';\n        printFrame.style.height = '0';\n        printFrame.style.border = 'none';\n        printFrame.style.visibility = 'hidden';\n        \n        document.body.appendChild(printFrame);\n        \n        let printDocument = printFrame.contentWindow || printFrame.contentDocument;\n        if (printDocument.document) {\n          printDocument = printDocument.document;\n        }\n        \n        // Write the content to the iframe\n        printDocument.open();\n        printDocument.write(printContent);\n        printDocument.close();\n        \n        // Wait for content to load then trigger print\n        const printTimeout = setTimeout(() => {\n          try {\n            printFrame.contentWindow.focus();\n            \n            // Use a longer timeout to ensure CSS is applied\n            setTimeout(() => {\n              printFrame.contentWindow.print();\n              \n              // Clean up\n              setTimeout(() => {\n                if (document.body.contains(printFrame)) {\n                  document.body.removeChild(printFrame);\n                }\n                resolve(true);\n              }, 1000);\n            }, 500);\n          } catch (printError) {\n            console.error('Print error:', printError);\n            if (document.body.contains(printFrame)) {\n              document.body.removeChild(printFrame);\n            }\n            resolve(false);\n          }\n        }, 1000);\n        \n        // Fallback if onload doesn't fire\n        printFrame.onload = function() {\n          clearTimeout(printTimeout);\n          try {\n            printFrame.contentWindow.focus();\n            setTimeout(() => {\n              printFrame.contentWindow.print();\n              setTimeout(() => {\n                if (document.body.contains(printFrame)) {\n                  document.body.removeChild(printFrame);\n                }\n                resolve(true);\n              }, 1000);\n            }, 500);\n          } catch (error) {\n            console.error('Print error:', error);\n            if (document.body.contains(printFrame)) {\n              document.body.removeChild(printFrame);\n            }\n            resolve(false);\n          }\n        };\n        \n      } catch (error) {\n        console.error('Print setup error:', error);\n        resolve(false);\n      }\n    });\n  };\n\n  // Update the print preview button in the checkout actions\n  const handlePrintPreview = async () => {\n    const printData = preparePrintData(`PREVIEW-${Date.now()}`, saleMode === 'pending' ? 'pending' : 'completed');\n    await handlePrintReceipt(printData, t('titles.sale_receipt'), true);\n  };\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Calculate total amount (products only, excluding packaging)\n  const calculateTotal = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    return cartTotal;\n  };\n\n  // Calculate total amount including packaging (for display purposes)\n  const calculateTotalWithPackaging = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    const packagingTotal = calculatePackagingTotal();\n    return cartTotal + packagingTotal;\n  };\n\n  // Update paid amount when payment type changes\n  useEffect(() => {\n    const total = calculateTotal();\n    if (paymentType === 'full') {\n      setPaidAmount(total);\n    } else if (paymentType === 'partial') {\n      // Only reset to 0 if it's currently set to the full amount\n      if (paidAmount === total) {\n        setPaidAmount(0);\n      }\n    }\n  }, [paymentType, cart, packagingCart]);\n\n  // Function to get the current price for a specific unit\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo?.price) return 0;\n    \n    // If we're in standard mode, return the standard unit price\n    if (priceMode === 'standard') {\n      return unitStockInfo.price;\n    }\n    \n    // If we're in wholesale mode, we need to calculate the wholesale price for this unit\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      const standardBasePrice = parseFloat(product.price);\n      const wholesaleBasePrice = parseFloat(product.wholesale_price);\n      \n      // Handle edge cases\n      if (!standardBasePrice || standardBasePrice <= 0) {\n        return unitStockInfo.price;\n      }\n      \n      // Calculate the conversion factor from standard to wholesale\n      const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n      \n      // For wholesale pricing, we need to apply the wholesale conversion factor\n      // to the base unit price, then convert to the selected unit\n      let wholesaleUnitPrice;\n      \n      if (unitStockInfo.is_base_unit) {\n        // If this is the base unit, apply wholesale factor directly\n        wholesaleUnitPrice = standardBasePrice * wholesaleConversionFactor;\n      } else {\n        // If this is not the base unit, we need to:\n        // 1. Get the wholesale base price\n        // 2. Convert it to the selected unit using the same conversion factor as the standard price\n        const standardUnitPrice = unitStockInfo.price;\n        const unitConversionFactor = standardUnitPrice / standardBasePrice;\n        wholesaleUnitPrice = wholesaleBasePrice * unitConversionFactor;\n      }\n      \n      // Round to 2 decimal places to avoid floating point precision issues\n      const roundedPrice = Math.round(wholesaleUnitPrice * 100) / 100;\n      \n      // Ensure we return a valid number\n      return isNaN(roundedPrice) || roundedPrice < 0 ? unitStockInfo.price : roundedPrice;\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      // Don't fetch products here - let the categories useEffect handle it\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categoriesLoaded && categories.length > 0) {\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categoriesLoaded]); // Only depend on categoriesLoaded flag\n\n  // Debounced search effect - optimized to prevent focus loss\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Only set timeout if searchInput is not empty or if it was cleared\n    if (searchInput !== '') {\n      searchTimeoutRef.current = setTimeout(() => {\n        const newFilters = { ...filtersRef.current, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }, 500);\n    } else if (filtersRef.current.search !== '') {\n      // If search input is cleared, immediately update filters\n      const newFilters = { ...filtersRef.current, search: '' };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput]); // Only depend on searchInput to prevent re-renders\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/api/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = useCallback(async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const baseUrl = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n      let response = await api.get(baseUrl);\n      let aggregatedProducts = Array.isArray(response.data.results) ? response.data.results : (Array.isArray(response.data) ? response.data : []);\n      \n      // Follow pagination to get all products (DRF-style \"next\" links)\n      let nextUrl = response.data.next;\n      while (nextUrl) {\n        // Support absolute or relative next URLs\n        response = await api.get(nextUrl);\n        const pageItems = Array.isArray(response.data.results) ? response.data.results : (Array.isArray(response.data) ? response.data : []);\n        aggregatedProducts = aggregatedProducts.concat(pageItems);\n        nextUrl = response.data.next;\n      }\n      \n      const allProducts = aggregatedProducts;\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categoriesRef.current.length === 0 || !categoriesLoadedRef.current) {\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category_name, find the category in our categories list\n        if (product.category_name) {\n          const category = categoriesRef.current.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categoriesRef.current.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category object with ID, find the category in our categories list\n        else if (product.category && product.category.id) {\n          const category = categoriesRef.current.find(cat => cat.id === product.category.id);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categoriesRef.current.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n      setCurrentPage(1);\n    } catch (err) {\n      setError('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  }, []); // No dependencies to avoid circular references\n\n  const fetchCategories = useCallback(async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      let categoriesData = response.data.results || response.data;\n      \n      // Load session-based sellable status from sessionStorage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      \n      // Apply session-based sellable status\n      categoriesData = categoriesData.map(cat => {\n        const isSellable = sellableStatus.hasOwnProperty(cat.id) ? sellableStatus[cat.id] : cat.is_sellable;\n        return {\n          ...cat,\n          is_sellable: isSellable\n        };\n      });\n      \n      setCategories(categoriesData);\n      setCategoriesLoaded(true);\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n    }\n  }, []); // No dependencies needed for fetchCategories\n\n  const toggleCategorySellable = useCallback(async (categoryId, currentStatus) => {\n    try {\n      setCategoryUpdating(true);\n      const newStatus = !currentStatus;\n      \n      // Update session storage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      sellableStatus[categoryId] = newStatus;\n      sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n      \n      // Update categories state immediately for UI feedback\n      setCategories(prevCategories => \n        prevCategories.map(cat => \n          cat.id === categoryId ? { ...cat, is_sellable: newStatus } : cat\n        )\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to update category status');\n      console.error('Category toggle error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const resetAllCategoriesToSellable = useCallback(async () => {\n    try {\n      setCategoryUpdating(true);\n      \n      // Create a sellable status object with all categories set to true\n      const allSellableStatus = {};\n      categoriesRef.current.forEach(cat => {\n        allSellableStatus[cat.id] = true;\n      });\n      \n      // Save to session storage\n      sessionStorage.setItem('sellableCategories', JSON.stringify(allSellableStatus));\n      \n      // Update categories state immediately\n      setCategories(prevCategories => \n        prevCategories.map(cat => ({ ...cat, is_sellable: true }))\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      setSuccess('All categories have been set to sellable');\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to reset categories');\n      console.error('Category reset error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/api/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.compatible_units && product.compatible_units[0]) {\n      const compatibleUnit = product.compatible_units[0];\n      unit = {\n        id: compatibleUnit.unit?.id || compatibleUnit.unit,\n        name: compatibleUnit.unit_name || compatibleUnit.unit?.name || 'Piece',\n        symbol: compatibleUnit.unit_symbol || compatibleUnit.unit?.symbol || 'piece'\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    \n    // Update cart first\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(prevCart => prevCart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      // Get unit stock info for price calculation\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product),\n        price_mode: priceMode\n      };\n      setCart(prevCart => [...prevCart, newCartItem]);\n    }\n\n    // Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\n    if (product.has_packaging && product.packaging_price) {\n      setTimeout(() => {\n        addPackagingAutomatically(product, unit);\n      }, 0);\n    }\n    \n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n      // Also remove packaging if sales item is removed\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n\n      // Update packaging quantity automatically if product has packaging\n      const product = products.find(p => p.id === productId);\n      if (product && product.has_packaging && product.packaging_price) {\n        const unit = { id: unitId };\n        updatePackagingQuantityAutomatically(product, unit, quantity);\n      }\n      \n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  // Packaging functions\n  const addPackagingAutomatically = (product, unit) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Use a callback to get the current cart state\n    setCart(currentCart => {\n      // Calculate packaging quantity based on sales quantity\n      const salesItem = currentCart.find(item => \n        item.id === product.id && \n        item.unit_id === unit.id && \n        item.price_mode === priceMode\n      );\n      \n      if (!salesItem) return currentCart;\n\n      // Get unit information from stock availability\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      // For packaging, we use the base unit (pieces) to calculate quantity\n      // If the sales unit is not the base unit, we need to convert to pieces\n      let packagingQuantity = salesItem.quantity;\n      \n      // If the sales unit is not the base unit, convert to pieces\n      if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n        packagingQuantity = salesItem.quantity * unitStockInfo.conversion_factor;\n      }\n\n      // Update packaging cart\n      setPackagingCart(currentPackagingCart => {\n        const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n        if (existingPackaging) {\n          // Update existing packaging quantity to match sales quantity\n          return currentPackagingCart.map(item =>\n            item.id === product.id\n              ? { \n                  ...item, \n                  quantity: packagingQuantity,\n                  total_price: parseFloat(product.packaging_price) * packagingQuantity\n                }\n              : item\n          );\n        } else {\n          // Create new packaging item\n          const newPackagingItem = {\n            ...product,\n            quantity: packagingQuantity,\n            unit_price: parseFloat(product.packaging_price),\n            total_price: parseFloat(product.packaging_price) * packagingQuantity,\n            status: 'consignation', // Default status\n            customer_name: customerInfo.name,\n            customer_phone: customerInfo.phone,\n            sales_unit_id: unit.id, // Track which sales unit this packaging is for\n            sales_unit_name: unit.name,\n            sales_unit_symbol: unit.symbol\n          };\n          return [...currentPackagingCart, newPackagingItem];\n        }\n      });\n\n      return currentCart;\n    });\n  };\n\n  const addToPackagingCart = (product) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      setError('This product does not have packaging consignation');\n      return;\n    }\n\n    const existingPackaging = packagingCart.find(item => item.id === product.id);\n    if (existingPackaging) {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === product.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      const newPackagingItem = {\n        ...product,\n        quantity: 1,\n        unit_price: parseFloat(product.packaging_price),\n        total_price: parseFloat(product.packaging_price),\n        status: 'consignation',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone\n      };\n      setPackagingCart([...packagingCart, newPackagingItem]);\n    }\n    setError('');\n  };\n\n  const updatePackagingQuantityAutomatically = (product, unit, salesQuantity) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Get unit information from stock availability\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    // Calculate packaging quantity based on sales quantity\n    let packagingQuantity = salesQuantity;\n    \n    // If the sales unit is not the base unit, convert to pieces\n    if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n      packagingQuantity = salesQuantity * unitStockInfo.conversion_factor;\n    }\n\n    setPackagingCart(currentPackagingCart => {\n      const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n      if (existingPackaging) {\n        // Update existing packaging quantity to match sales quantity\n        return currentPackagingCart.map(item =>\n          item.id === product.id\n            ? { \n                ...item, \n                quantity: packagingQuantity,\n                total_price: parseFloat(product.packaging_price) * packagingQuantity\n              }\n            : item\n        );\n      } else {\n        // Create new packaging item if it doesn't exist\n        const newPackagingItem = {\n          ...product,\n          quantity: packagingQuantity,\n          unit_price: parseFloat(product.packaging_price),\n          total_price: parseFloat(product.packaging_price) * packagingQuantity,\n          status: 'consignation', // Default status\n          customer_name: customerInfo.name,\n          customer_phone: customerInfo.phone,\n          sales_unit_id: unit.id,\n          sales_unit_name: unit.name,\n          sales_unit_symbol: unit.symbol\n        };\n        return [...currentPackagingCart, newPackagingItem];\n      }\n    });\n  };\n\n  const updatePackagingQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === productId\n          ? { ...item, quantity, total_price: item.unit_price * quantity }\n          : item\n      ));\n    }\n  };\n\n  const updatePackagingStatus = (productId, status) => {\n    setPackagingCart(packagingCart.map(item =>\n      item.id === productId\n        ? { ...item, status }\n        : item\n    ));\n  };\n\n  const removeFromPackagingCart = (productId) => {\n    setPackagingCart(packagingCart.filter(item => item.id !== productId));\n  };\n\n  const calculatePackagingTotal = () => {\n    return packagingCart.reduce((total, item) => {\n      // Only \"consignation\" (paid) packaging should be included in the total\n      // \"exchange\" and \"due\" packaging are not payable\n      if (item.status === 'consignation') {\n        return total + (item.total_price || 0);\n      }\n      return total;\n    }, 0);\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n  // Prepare print data for printing\n  const preparePrintData = (saleNumber, saleStatus = 'completed') => {\n    const total = calculateSubtotal();\n    const remaining = total - paidAmount;\n    \n    return {\n      sale_number: saleNumber,\n      customer_name: customerInfo.name || 'Walk-in Customer',\n      customer_phone: customerInfo.phone || '',\n      customer_email: customerInfo.email || '',\n      user_name: user?.username || 'Unknown User',\n      user_id: user?.id || 'unknown',\n      created_at: new Date().toISOString(),\n      print_timestamp: new Date().toISOString(),\n      print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      status: saleStatus,\n      total_amount: total,\n      paid_amount: paidAmount,\n      remaining_amount: remaining,\n      payment_status: remaining > 0 ? 'partial' : 'paid',\n      due_date: remaining > 0 ? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString() : null, // 30 days from now\n      items: cart.map(item => ({\n        product_name: item.name,\n        product_sku: item.sku,\n        quantity: item.quantity,\n        unit_name: item.unit_name || item.unit?.name || 'piece',\n        unit_price: item.unit_price,\n        total_price: item.unit_price * item.quantity\n      }))\n    };\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError(t('pos.cart_empty'));\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    // Validate customer name for partial payments\n    if ((saleMode !== 'complete' || paymentType === 'partial') && (!customerInfo.name || !customerInfo.name.trim())) {\n      setError('Customer name is required for partial/uncompleted payments');\n      setProcessing(false);\n      return;\n    }\n\n    // Validate paid amount\n    const total = calculateTotal();\n    if (paidAmount > total) {\n      setError('Paid amount cannot exceed the total amount');\n      setProcessing(false);\n      return;\n    }\n\n    if (paidAmount < 0) {\n      setError('Paid amount cannot be negative');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const saleData = {\n        sale_type: 'sale',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        paid_amount: paidAmount,\n        items: cart.map(item => {\n          // More robust unit ID extraction\n          let unitId = item.unit_id;\n          if (typeof unitId === 'object' && unitId !== null) {\n            unitId = unitId.id || unitId;\n          }\n          \n          return {\n            product: item.id,\n            quantity: parseFloat(item.quantity),\n            unit: parseInt(unitId),\n            unit_price: parseFloat(item.unit_price),\n            price_mode: item.price_mode || 'standard'\n          };\n        }),\n        packaging_items: packagingCart.map(item => ({\n          product: item.id,\n          quantity: parseFloat(item.quantity),\n          unit: 7, // Use the correct piece unit ID (7) for packaging\n          unit_price: parseFloat(item.unit_price),\n          status: item.status || 'consignation',\n          customer_name: item.customer_name || customerInfo.name,\n          customer_phone: item.customer_phone || customerInfo.phone,\n          notes: item.notes || ''\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/api/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          const completionResponse = await api.post(`/api/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            // Use the improved printing logic for completed sale\n            const printData = preparePrintData(saleNumber, 'completed');\n            await handlePrintReceipt(printData, t('titles.sale_receipt'));\n          }\n      \n          // Clear cart and customer info\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          setPaidAmount(0);\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          // Show success message with packaging transaction info if created\n          let successMessage = `Sale completed successfully! Sale Number: ${saleNumber}`;\n          if (completionResponse.data.packaging_transaction) {\n            const pkgTransaction = completionResponse.data.packaging_transaction;\n            successMessage += `\\n\\nPackaging transaction automatically created:\\nTransaction: ${pkgTransaction.transaction_number}\\nAmount: ${pkgTransaction.total_amount} MGA`;\n          }\n          alert(successMessage);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          setPaidAmount(0);\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          // Use the improved printing logic for pending sale\n          const printData = preparePrintData(saleNumber, 'pending');\n          await handlePrintReceipt(printData, t('titles.sale_receipt'));\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setPackagingCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        setPaidAmount(0);\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(`Pending sale created successfully! Sale Number: ${saleNumber}`);\n      }\n    } catch (err) {\n      // Handle different types of errors\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.data?.detail) {\n        setError(err.response.data.detail);\n      } else if (err.response?.data?.customer_name) {\n        setError(err.response.data.customer_name[0]);\n      } else if (err.response?.data?.paid_amount) {\n        setError(err.response.data.paid_amount[0]);\n      } else {\n        setError('Failed to create sale. Please check the console for details.');\n      }\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setPackagingCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = useCallback((filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = { ...filtersRef.current, [filterType]: value };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  }, []); // No dependencies needed since we use ref\n\n  const clearFilters = useCallback(() => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    \n    // Only fetch products if categories are loaded\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0) {\n      fetchProducts(clearedFilters);\n    }\n  }, [categoriesLoaded, categories.length]);\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products (only for complete sales)\n    if (saleMode === 'complete' && product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => (u.unit?.id || u.unit) === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === (selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit));\n          const unitPrice = getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product);\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>{t('titles.point_of_sale')}</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title={t('alerts.sale_will_be_completed')}\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title={t('alerts.sale_will_be_created_pending')}\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group print-receipt-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle print-receipt-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title={t('alerts.print_receipt_after_sale')}\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title={t('pos.dont_print_receipt')}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                key=\"search-input\"\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder={t('pos.search_products')}\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                alignItems: 'center',\n                marginBottom: '1rem'\n              }}>\n                <h3 style={{ margin: '0', fontSize: '1rem', fontWeight: '600' }}>\n                  Manage Sellable Categories\n                  {categoryUpdating && <span style={{ marginLeft: '0.5rem', color: '#3b82f6' }}>⟳</span>}\n                </h3>\n                <button\n                  onClick={resetAllCategoriesToSellable}\n                  disabled={categoryUpdating}\n                  style={{\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #3b82f6',\n                    cursor: categoryUpdating ? 'not-allowed' : 'pointer',\n                    backgroundColor: categoryUpdating ? '#9ca3af' : '#3b82f6',\n                    color: 'white',\n                    fontWeight: '500',\n                    opacity: categoryUpdating ? 0.6 : 1\n                  }}\n                >\n                  Reset All to Sellable\n                </button>\n              </div>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products\n              .slice((currentPage - 1) * PAGE_SIZE, currentPage * PAGE_SIZE)\n              .map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 && saleMode === 'complete' ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {(() => {\n                      // Find the actual base unit and get its price\n                      const baseUnit = product.compatible_units?.find(u => u.unit.is_base_unit);\n                      if (baseUnit && stockAvailability[product.id]) {\n                        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                        const baseUnitStockInfo = updatedStockInfo?.find(u => u.id === (baseUnit.unit?.id || baseUnit.unit));\n                        if (baseUnitStockInfo) {\n                          return getCurrentUnitPrice(product, baseUnitStockInfo).toFixed(2);\n                        }\n                      }\n                      // Fallback to the original price\n                      return getCurrentPrice(product).toFixed(2);\n                    })()} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit?.id || compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA ({unitStockInfo.available_quantity} available)\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit?.symbol || compatibleUnit.unit_symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit?.id || compatibleUnit.unit} \n                              value={compatibleUnit.unit?.id || compatibleUnit.unit}\n                              disabled={saleMode === 'complete' ? !isAvailable : false}\n                            >\n                              {unitName} ({unitSymbol}) - {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA\n                              {!isAvailable && saleMode === 'complete' ? ' - OUT OF STOCK' : ''}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* Packaging Info - Show for products with packaging */}\n                  {product.has_packaging && product.packaging_price && (\n                    <div className=\"packaging-info\">\n                      <small className=\"packaging-price\">\n                        Packaging: {product.packaging_price} MGA (Auto-added)\n                      </small>\n                    </div>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Pagination Controls */}\n          {products.length > PAGE_SIZE && (\n            <div className=\"products-pagination\" style={{ display: 'flex', justifyContent: 'center', gap: '12px', marginTop: '12px' }}>\n              <Button\n                variant=\"outline\"\n                size=\"small\"\n                onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                disabled={currentPage === 1}\n              >\n                Prev\n              </Button>\n              <span style={{ alignSelf: 'center' }}>\n                Page {currentPage} of {Math.ceil(products.length / PAGE_SIZE)}\n              </span>\n              <Button\n                variant=\"outline\"\n                size=\"small\"\n                onClick={() => setCurrentPage(p => Math.min(Math.ceil(products.length / PAGE_SIZE), p + 1))}\n                disabled={currentPage >= Math.ceil(products.length / PAGE_SIZE)}\n              >\n                Next\n              </Button>\n            </div>\n          )}\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <div className=\"empty-cart\">\n                <p>Cart is empty</p>\n                <p className=\"empty-cart-hint\">Add items from the product list to start a sale</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-status\">Status</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title={t('alerts.click_to_edit_quantity')}\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-status\">\n                      <span className=\"sales-item-status\">-</span>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title={t('alerts.remove_item')}\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                \n                {/* Packaging Items */}\n                {packagingCart.length > 0 && (\n                  <>\n                    <div className=\"packaging-section-header\">\n                      <h4>Packaging Items (Auto-calculated)</h4>\n                    </div>\n                    {packagingCart.map(item => (\n                      <div key={`packaging-${item.id}`} className=\"cart-item packaging-item\">\n                        <div className=\"item-product\">\n                          <h4>{item.name} (Packaging)</h4>\n                          <p className=\"item-sku\">SKU: {item.sku}</p>\n                          {item.sales_unit_name && (\n                            <p className=\"packaging-source\">\n                              From: {item.quantity} {item.sales_unit_symbol || 'piece'}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"item-unit\">\n                          piece\n                        </div>\n                        <div className=\"item-price\">\n                          {parseFloat(item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-quantity\">\n                          <span className=\"quantity auto-calculated\">\n                            {item.quantity}\n                          </span>\n                          <small className=\"auto-label\">Auto</small>\n                        </div>\n                        <div className=\"item-status\">\n                          <select\n                            value={item.status}\n                            onChange={(e) => updatePackagingStatus(item.id, e.target.value)}\n                            className=\"packaging-status-select\"\n                          >\n                            <option value=\"consignation\">Consigned (Paid)</option>\n                            <option value=\"exchange\">Exchange</option>\n                            <option value=\"due\">Due (Return Required)</option>\n                          </select>\n                        </div>\n                        <div className=\"item-total\">\n                          {(item.quantity * item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-actions\">\n                          <Button\n                            size=\"small\"\n                            variant=\"danger\"\n                            onClick={() => removeFromPackagingCart(item.id)}\n                            title=\"Remove packaging item\"\n                          >\n                            ×\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Items Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row packaging-breakdown\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span>Products Total:</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row total\">\n                  <span>Total (Products Only):</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder={(saleMode !== 'complete' || paymentType === 'partial' )? \"Customer Name (Required for Partial Payment)\" : \"Customer Name (Optional)\"}\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className={(saleMode !== 'complete' || paymentType === 'partial') && !customerInfo.name ? 'required-field' : ''}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n                \n                <h3>Payment Type</h3>\n                <div className=\"payment-types\">\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"full\"\n                      checked={paymentType === 'full'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Full Payment (100%)</span>\n                  </label>\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"partial\"\n                      checked={paymentType === 'partial'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Partial Payment (0-99.99%)</span>\n                  </label>\n                </div>\n                \n                {paymentType === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateTotal()}\n                      value={paidAmount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setPaidAmount(value);\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                    />\n                    <small>Products Total: ${calculateTotal().toFixed(2)} | Remaining: ${(calculateTotal() - (paidAmount || 0)).toFixed(2)}</small>\n                  </div>\n                )}\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                {/* Print Preview Button - Using the improved printing logic */}\n                <Button\n                  variant=\"outline\"\n                  size=\"large\"\n                  onClick={handlePrintPreview}\n                  className=\"print-preview-btn\"\n                >\n                  🖨️ Print Preview\n                </Button>\n                \n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? t('pos.complete_sale') : t('pos.create_pending_sale')}\n                  {printReceipt && t('pos.print_receipt')}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CACvE,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAC7D,OACEC,cAAc,CACdC,eAAe,CACfC,gBAAgB,CAChBC,mBAAmB,CACnBC,4BAA4B,CAC5BC,0BAA0B,KACrB,qBAAqB,CAC5B,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,CAAE,CAAC,CAAGlB,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEmB,IAAK,CAAC,CAAGlB,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACmB,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAC0B,UAAU,CAAEC,aAAa,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC4B,IAAI,CAAEC,OAAO,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAC8B,YAAY,CAAEC,eAAe,CAAC,CAAG/B,QAAQ,CAAC,CAC/CgC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGpC,QAAQ,CAAC,MAAM,CAAC,CAC1D,KAAM,CAACqC,WAAW,CAAEC,cAAc,CAAC,CAAGtC,QAAQ,CAAC,MAAM,CAAC,CAAE;AACxD,KAAM,CAACuC,UAAU,CAAEC,aAAa,CAAC,CAAGxC,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACyC,OAAO,CAAEC,UAAU,CAAC,CAAG1C,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC2C,UAAU,CAAEC,aAAa,CAAC,CAAG5C,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC6C,KAAK,CAAEC,QAAQ,CAAC,CAAG9C,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC+C,OAAO,CAAEC,UAAU,CAAC,CAAGhD,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACiD,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGlD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9D,KAAM,CAACmD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGpD,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACqD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGtD,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACuD,OAAO,CAAEC,UAAU,CAAC,CAAGxD,QAAQ,CAAC,CACrCyD,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,EACV,CAAC,CAAC,CACF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAG5D,QAAQ,CAAC,EAAE,CAAC,CAAE;AACpD,KAAM,CAAC6D,eAAe,CAAEC,kBAAkB,CAAC,CAAG9D,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAAC+D,YAAY,CAAEC,eAAe,CAAC,CAAGhE,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACiE,aAAa,CAAEC,gBAAgB,CAAC,CAAGlE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AACxD,KAAM,CAAAmE,cAAc,CAAGjE,MAAM,CAAC,IAAI,CAAC,CAAE;AACrC,KAAM,CAAAkE,UAAU,CAAGlE,MAAM,CAACqD,OAAO,CAAC,CAAE;AACpC,KAAM,CAAAc,gBAAgB,CAAGnE,MAAM,CAAC,IAAI,CAAC,CAAE;AACvC,KAAM,CAAAoE,aAAa,CAAGpE,MAAM,CAACwB,UAAU,CAAC,CAAE;AAC1C,KAAM,CAAA6C,mBAAmB,CAAGrE,MAAM,CAACiD,gBAAgB,CAAC,CAAE;AAEtD;AACAlD,SAAS,CAAC,IAAM,CACdmE,UAAU,CAACI,OAAO,CAAGjB,OAAO,CAC9B,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEbtD,SAAS,CAAC,IAAM,CACdqE,aAAa,CAACE,OAAO,CAAG9C,UAAU,CACpC,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhBzB,SAAS,CAAC,IAAM,CACdsE,mBAAmB,CAACC,OAAO,CAAGrB,gBAAgB,CAChD,CAAC,CAAE,CAACA,gBAAgB,CAAC,CAAC,CAEtB;AACA,KAAM,CAAAsB,kBAAkB,CAAGtE,WAAW,CAAC,IAAM,CAC3C,KAAM,CAAAuE,cAAc,CAAG,CAAC,CAAC,CACzBhD,UAAU,CAACiD,OAAO,CAACC,GAAG,EAAI,CACxBF,cAAc,CAACE,GAAG,CAACC,EAAE,CAAC,CAAGD,GAAG,CAACE,WAAW,CAC1C,CAAC,CAAC,CACFC,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAACR,cAAc,CAAC,CAAC,CAC9E,CAAC,CAAE,CAAChD,UAAU,CAAC,CAAC,CAEhB;AACAzB,SAAS,CAAC,IAAM,CACd,GAAIyB,UAAU,CAACyD,MAAM,CAAG,CAAC,CAAE,CACzBV,kBAAkB,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAAC/C,UAAU,CAAE+C,kBAAkB,CAAC,CAAC,CAEpC;AACAxE,SAAS,CAAC,IAAM,CACd,GAAIsE,mBAAmB,CAACC,OAAO,EAAIF,aAAa,CAACE,OAAO,CAACW,MAAM,CAAG,CAAC,EAAIf,UAAU,CAACI,OAAO,CAACf,QAAQ,GAAK,EAAE,EAAIW,UAAU,CAACI,OAAO,CAACd,MAAM,GAAK,EAAE,CAAE,CAC7I0B,aAAa,CAAChB,UAAU,CAACI,OAAO,CAAC,CACnC,CACF,CAAC,CAAE,CAACrB,gBAAgB,CAAEzB,UAAU,CAACyD,MAAM,CAAE5B,OAAO,CAAC,CAAC,CAElD,KAAM,CAAC8B,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGtF,QAAQ,CAAC,KAAK,CAAC,CAAE;AACrE,KAAM,CAACuF,SAAS,CAAEC,YAAY,CAAC,CAAGxF,QAAQ,CAAC,UAAU,CAAC,CAAE;AACxD,KAAM,CAACyF,QAAQ,CAAEC,WAAW,CAAC,CAAG1F,QAAQ,CAAC,UAAU,CAAC,CAAE;AACtD,KAAM,CAAC2F,YAAY,CAAEC,eAAe,CAAC,CAAG5F,QAAQ,CAAC,IAAI,CAAC,CAAE;AACxD,KAAM,CAAC6F,WAAW,CAAEC,cAAc,CAAC,CAAG9F,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAAA+F,SAAS,CAAG,EAAE,CAEpB;AACA,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGjG,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACkG,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGnG,QAAQ,CAAC,KAAK,CAAC,CAGvE,KAAM,CAAAoG,mBAAmB,CAAGA,CAACC,IAAI,CAAE/E,CAAC,GAAK,CACvC,GAAI,CAAAgF,KAAK,CAAGD,IAAI,CAACC,KAAK,CACtB,GAAI,CAACA,KAAK,CAAE,CACV,KAAM,CAAAC,YAAY,CAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,MAAM,CAACC,GAAG,EAAI,OAAO,CAACC,IAAI,CAACD,GAAG,CAAC,CAAC,CACvE,GAAIJ,YAAY,CAACpB,MAAM,CAAG,CAAC,CAAE,CAC3BmB,KAAK,CAAGC,YAAY,CAACM,GAAG,CAACF,GAAG,EAAIN,IAAI,CAACM,GAAG,CAAC,CAAC,CAACD,MAAM,CAACI,IAAI,EAAIA,IAAI,EAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,CAAC,CAC7F,CACF,CAEA,KAAM,CAAAC,iBAAiB,CAAGV,IAAI,CAACW,cAAc,GAAK,MAAM,CAAG,MAAM,CACzCX,IAAI,CAACW,cAAc,GAAK,SAAS,CAAG,SAAS,CAC7CX,IAAI,CAACW,cAAc,GAAK,SAAS,CAAG,SAAS,CAC7C,SAAS,CAEjC,qNAAAC,MAAA,CAG4D,QAAQ,sKAER,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,MAAAF,MAAA,CAAI,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACE,kBAAkB,CAAC,CAAC,gGAGnG,QAAQ,yJAAAH,MAAA,CAIrBZ,IAAI,CAACgB,WAAW,EAAI,KAAK,wHAAAJ,MAAA,CAIzBZ,IAAI,CAACiB,MAAM,EAAI,KAAK,qHAAAL,MAAA,CAIpB,CAACZ,IAAI,CAACkB,aAAa,EAAI,kBAAkB,EAAEC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,sCAAAP,MAAA,CAEnEZ,IAAI,CAACoB,cAAc,gGAAAR,MAAA,CAGTZ,IAAI,CAACoB,cAAc,wCAE3B,EAAE,oGAAAR,MAAA,CAGIF,iBAAiB,8DAGJ,QAAQ,4TAAAE,MAAA,CAStB,QAAQ,CAACS,MAAM,CAAC,EAAE,CAAC,UAAAT,MAAA,CAAQ,QAAQ,CAACS,MAAM,CAAC,CAAC,CAAC,kTAAAT,MAAA,CAKpDX,KAAK,EAAIqB,KAAK,CAACC,OAAO,CAACtB,KAAK,CAAC,CAAGA,KAAK,CAACuB,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAChB,GAAG,CAACC,IAAI,iFAAAG,MAAA,CAEhC,CAACH,IAAI,CAACgB,YAAY,EAAI,KAAK,EAAEN,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,8FAAAP,MAAA,CAGhE,IAAAA,MAAA,CAAIH,IAAI,CAACiB,SAAS,MAAAd,MAAA,CAAIe,UAAU,CAAClB,IAAI,CAACmB,UAAU,EAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAGC,MAAM,CAAC,EAAE,CAAE,QAAQ,CAAC,uBAAAlB,MAAA,CACxF,CAACH,IAAI,CAACsB,gBAAgB,EAAItB,IAAI,CAACuB,QAAQ,EAAI,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACH,MAAM,CAAC,CAAC,CAAE,QAAQ,CAAC,uBAAAlB,MAAA,CAC5Ee,UAAU,CAAClB,IAAI,CAACyB,WAAW,EAAI,CAAC,CAAC,CAACL,OAAO,CAAC,CAAC,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAE,QAAQ,CAAC,+EAI5E,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAG,2CAA2C,kVAAAxB,MAAA,CAS/Ce,UAAU,CAAC3B,IAAI,CAACqC,YAAY,EAAI,CAAC,CAAC,CAACR,OAAO,CAAC,CAAC,CAAC,qHAAAjB,MAAA,CAI7Ce,UAAU,CAAC3B,IAAI,CAACsC,WAAW,EAAI,CAAC,CAAC,CAACT,OAAO,CAAC,CAAC,CAAC,0CAAAjB,MAAA,CAEpDZ,IAAI,CAACW,cAAc,GAAK,SAAS,8FAAAC,MAAA,CAGvBe,UAAU,CAAC3B,IAAI,CAACuC,gBAAgB,EAAI,CAAC,CAAC,CAACV,OAAO,CAAC,CAAC,CAAC,4CAEzD,EAAE,yNAGiB,QAAQ,qLAAAjB,MAAA,CAIwBZ,IAAI,CAACgB,WAAW,EAAI,EAAE,2FAAAJ,MAAA,CACT,CAAA1F,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsH,QAAQ,GAAI,KAAK,yFAAA5B,MAAA,CACzBZ,IAAI,CAACyC,QAAQ,EAAI,KAAK,+BAG9F,CAAC,CACD,KAAM,CAAAC,sBAAsB,CAAGA,CAAC1C,IAAI,CAAE/E,CAAC,GAAK,CAC1C,4MAAA2F,MAAA,CAIgC,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,MAAAF,MAAA,CAAI,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACE,kBAAkB,CAAC,CAAC,2WAcpG,CAAC,CAED,KAAM,CAAA4B,kBAAkB,CAAG,cAAAA,CAAOC,SAAS,CAAiD,IAA/C,CAAAC,KAAK,CAAAC,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,cAAc,IAAE,CAAAE,UAAU,CAAAF,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,KAAK,CACrF,GAAI,CACF;AACA,GAAI,CAACF,SAAS,CAAE,CACdK,OAAO,CAACzG,KAAK,CAAC,+BAA+B,CAAC,CAC9C0G,MAAM,CAACC,KAAK,CAAC,6BAA6B,CAAC,CAC3C,MAAO,MAAK,CACd,CAEA,KAAM,CAAAC,QAAQ,CAAGhJ,cAAc,CAAC,CAAC,CAEjC;AACA,KAAM,CAAAiJ,YAAY,CAAGC,+BAA+B,CAACV,SAAS,CAAEC,KAAK,CAAE,MAAM,CAAC,CAE9E;AACA,GAAIG,UAAU,CAAE,CACd,KAAM,CAAAO,cAAc,CAAGjJ,gBAAgB,CAAC+I,YAAY,CAAER,KAAK,CAAC,CAC5D,GAAIU,cAAc,CAAE,CAClB,MAAO,KAAI,CACb,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,CAAC,sCAAsC,CAAC,CACzD,CACF,CAEA;AACA,GAAIJ,QAAQ,CAAE,CACZ;AACA,KAAM,CAAA1G,OAAO,CAAG,KAAM,CAAArC,eAAe,CAACgJ,YAAY,CAAER,KAAK,CAAC,CAC1D,GAAI,CAACnG,OAAO,CAAE,CACZ;AACA,KAAM,CAAA+G,aAAa,CAAGP,MAAM,CAACQ,OAAO,CAAC,6FAA6F,CAAC,CACnI,GAAID,aAAa,CAAE,CACjB,KAAM,CAAAE,eAAe,CAAGpJ,mBAAmB,CAACqI,SAAS,CAAEC,KAAK,CAAC,CAC7D,GAAIc,eAAe,CAAE,CACnBT,MAAM,CAACC,KAAK,CAAC,+GAA+G,CAAC,CAC7H,MAAO,KAAI,CACb,CACF,CACA,KAAM,IAAI,CAAAK,KAAK,CAAC,4EAA4E,CAAC,CAC/F,CACA,MAAO,KAAI,CACb,CAAC,IAAM,CACL;AACA,KAAM,CAAA9G,OAAO,CAAG,KAAM,CAAAkH,mBAAmB,CAACP,YAAY,CAAER,KAAK,CAAC,CAC9D,GAAI,CAACnG,OAAO,CAAE,CACZ;AACA,KAAM,CAAA6G,cAAc,CAAGjJ,gBAAgB,CAAC+I,YAAY,CAAER,KAAK,CAAC,CAC5D,GAAI,CAACU,cAAc,CAAE,CACnB,KAAM,IAAI,CAAAC,KAAK,CAAC,4DAA4D,CAAC,CAC/E,CACF,CACA,MAAO,KAAI,CACb,CAEF,CAAE,MAAOhH,KAAK,CAAE,CACdyG,OAAO,CAACzG,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC0G,MAAM,CAACC,KAAK,CAAC,mFAAmF,CAAC,CACjG,MAAO,MAAK,CACd,CACF,CAAC,CAED;AAEA,KAAM,CAAAG,+BAA+B,CAAGA,CAACtD,IAAI,CAAE6C,KAAK,CAAEgB,IAAI,GAAK,CAC7D;AACA,KAAM,CAAAC,WAAW,CAAG/D,mBAAmB,CAACC,IAAI,CAAE/E,CAAC,CAAC,CAEhD,6DAAA2F,MAAA,CAISiC,KAAK,s9HAAAjC,MAAA,CAwLZkD,WAAW,2BAGf,CAAC,CAED,KAAM,CAAAF,mBAAmB,CAAGA,CAACP,YAAY,CAAER,KAAK,GAAK,CACnD,MAAO,IAAI,CAAAkB,OAAO,CAAEC,OAAO,EAAK,CAC9B,GAAI,CACF;AACA,KAAM,CAAAC,UAAU,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CACnDF,UAAU,CAACG,KAAK,CAACC,QAAQ,CAAG,OAAO,CACnCJ,UAAU,CAACG,KAAK,CAACE,KAAK,CAAG,GAAG,CAC5BL,UAAU,CAACG,KAAK,CAACG,MAAM,CAAG,GAAG,CAC7BN,UAAU,CAACG,KAAK,CAACI,KAAK,CAAG,GAAG,CAC5BP,UAAU,CAACG,KAAK,CAACK,MAAM,CAAG,GAAG,CAC7BR,UAAU,CAACG,KAAK,CAACM,MAAM,CAAG,MAAM,CAChCT,UAAU,CAACG,KAAK,CAACO,UAAU,CAAG,QAAQ,CAEtCT,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACZ,UAAU,CAAC,CAErC,GAAI,CAAAa,aAAa,CAAGb,UAAU,CAACc,aAAa,EAAId,UAAU,CAACe,eAAe,CAC1E,GAAIF,aAAa,CAACZ,QAAQ,CAAE,CAC1BY,aAAa,CAAGA,aAAa,CAACZ,QAAQ,CACxC,CAEA;AACAY,aAAa,CAACG,IAAI,CAAC,CAAC,CACpBH,aAAa,CAACI,KAAK,CAAC7B,YAAY,CAAC,CACjCyB,aAAa,CAACK,KAAK,CAAC,CAAC,CAErB;AACA,KAAM,CAAAC,YAAY,CAAGC,UAAU,CAAC,IAAM,CACpC,GAAI,CACFpB,UAAU,CAACc,aAAa,CAACO,KAAK,CAAC,CAAC,CAEhC;AACAD,UAAU,CAAC,IAAM,CACfpB,UAAU,CAACc,aAAa,CAACQ,KAAK,CAAC,CAAC,CAEhC;AACAF,UAAU,CAAC,IAAM,CACf,GAAInB,QAAQ,CAACU,IAAI,CAACY,QAAQ,CAACvB,UAAU,CAAC,CAAE,CACtCC,QAAQ,CAACU,IAAI,CAACa,WAAW,CAACxB,UAAU,CAAC,CACvC,CACAD,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAE,GAAG,CAAC,CACT,CAAE,MAAO0B,UAAU,CAAE,CACnBzC,OAAO,CAACzG,KAAK,CAAC,cAAc,CAAEkJ,UAAU,CAAC,CACzC,GAAIxB,QAAQ,CAACU,IAAI,CAACY,QAAQ,CAACvB,UAAU,CAAC,CAAE,CACtCC,QAAQ,CAACU,IAAI,CAACa,WAAW,CAACxB,UAAU,CAAC,CACvC,CACAD,OAAO,CAAC,KAAK,CAAC,CAChB,CACF,CAAC,CAAE,IAAI,CAAC,CAER;AACAC,UAAU,CAAC0B,MAAM,CAAG,UAAW,CAC7BC,YAAY,CAACR,YAAY,CAAC,CAC1B,GAAI,CACFnB,UAAU,CAACc,aAAa,CAACO,KAAK,CAAC,CAAC,CAChCD,UAAU,CAAC,IAAM,CACfpB,UAAU,CAACc,aAAa,CAACQ,KAAK,CAAC,CAAC,CAChCF,UAAU,CAAC,IAAM,CACf,GAAInB,QAAQ,CAACU,IAAI,CAACY,QAAQ,CAACvB,UAAU,CAAC,CAAE,CACtCC,QAAQ,CAACU,IAAI,CAACa,WAAW,CAACxB,UAAU,CAAC,CACvC,CACAD,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAAE,GAAG,CAAC,CACT,CAAE,MAAOxH,KAAK,CAAE,CACdyG,OAAO,CAACzG,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,GAAI0H,QAAQ,CAACU,IAAI,CAACY,QAAQ,CAACvB,UAAU,CAAC,CAAE,CACtCC,QAAQ,CAACU,IAAI,CAACa,WAAW,CAACxB,UAAU,CAAC,CACvC,CACAD,OAAO,CAAC,KAAK,CAAC,CAChB,CACF,CAAC,CAEH,CAAE,MAAOxH,KAAK,CAAE,CACdyG,OAAO,CAACzG,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CwH,OAAO,CAAC,KAAK,CAAC,CAChB,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAA6B,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,KAAM,CAAAjD,SAAS,CAAGkD,gBAAgB,YAAAlF,MAAA,CAAYC,IAAI,CAACkF,GAAG,CAAC,CAAC,EAAI3G,QAAQ,GAAK,SAAS,CAAG,SAAS,CAAG,WAAW,CAAC,CAC7G,KAAM,CAAAuD,kBAAkB,CAACC,SAAS,CAAE3H,CAAC,CAAC,qBAAqB,CAAC,CAAE,IAAI,CAAC,CACrE,CAAC,CAED;AACA,KAAM,CAAA+K,eAAe,CAAIC,OAAO,EAAK,CACnC,GAAI/G,SAAS,GAAK,WAAW,EAAI+G,OAAO,CAACC,eAAe,CAAE,CACxD,MAAO,CAAAvE,UAAU,CAACsE,OAAO,CAACC,eAAe,CAAC,CAC5C,CACA,MAAO,CAAAvE,UAAU,CAACsE,OAAO,CAACE,KAAK,CAAC,CAClC,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,SAAS,CAAG9K,IAAI,CAAC+K,MAAM,CAAC,CAACC,KAAK,CAAE9F,IAAI,GAAK,CAC7C,KAAM,CAAA+F,SAAS,CAAG/F,IAAI,CAACmB,UAAU,EAAI,CAAC,CACtC,MAAO,CAAA2E,KAAK,CAAIC,SAAS,CAAG/F,IAAI,CAACuB,QAAS,CAC5C,CAAC,CAAE,CAAC,CAAC,CACL,MAAO,CAAAqE,SAAS,CAClB,CAAC,CAED;AACA,KAAM,CAAAI,2BAA2B,CAAGA,CAAA,GAAM,CACxC,KAAM,CAAAJ,SAAS,CAAG9K,IAAI,CAAC+K,MAAM,CAAC,CAACC,KAAK,CAAE9F,IAAI,GAAK,CAC7C,KAAM,CAAA+F,SAAS,CAAG/F,IAAI,CAACmB,UAAU,EAAI,CAAC,CACtC,MAAO,CAAA2E,KAAK,CAAIC,SAAS,CAAG/F,IAAI,CAACuB,QAAS,CAC5C,CAAC,CAAE,CAAC,CAAC,CACL,KAAM,CAAA0E,cAAc,CAAGC,uBAAuB,CAAC,CAAC,CAChD,MAAO,CAAAN,SAAS,CAAGK,cAAc,CACnC,CAAC,CAED;AACA9M,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2M,KAAK,CAAGH,cAAc,CAAC,CAAC,CAC9B,GAAIpK,WAAW,GAAK,MAAM,CAAE,CAC1BG,aAAa,CAACoK,KAAK,CAAC,CACtB,CAAC,IAAM,IAAIvK,WAAW,GAAK,SAAS,CAAE,CACpC;AACA,GAAIE,UAAU,GAAKqK,KAAK,CAAE,CACxBpK,aAAa,CAAC,CAAC,CAAC,CAClB,CACF,CACF,CAAC,CAAE,CAACH,WAAW,CAAET,IAAI,CAAEoE,aAAa,CAAC,CAAC,CAEtC;AACA,KAAM,CAAAiH,mBAAmB,CAAGA,CAACX,OAAO,CAAEY,aAAa,GAAK,CACtD,GAAI,EAACA,aAAa,SAAbA,aAAa,WAAbA,aAAa,CAAEV,KAAK,EAAE,MAAO,EAAC,CAEnC;AACA,GAAIjH,SAAS,GAAK,UAAU,CAAE,CAC5B,MAAO,CAAA2H,aAAa,CAACV,KAAK,CAC5B,CAEA;AACA,GAAIjH,SAAS,GAAK,WAAW,EAAI+G,OAAO,CAACC,eAAe,CAAE,CACxD,KAAM,CAAAY,iBAAiB,CAAGnF,UAAU,CAACsE,OAAO,CAACE,KAAK,CAAC,CACnD,KAAM,CAAAY,kBAAkB,CAAGpF,UAAU,CAACsE,OAAO,CAACC,eAAe,CAAC,CAE9D;AACA,GAAI,CAACY,iBAAiB,EAAIA,iBAAiB,EAAI,CAAC,CAAE,CAChD,MAAO,CAAAD,aAAa,CAACV,KAAK,CAC5B,CAEA;AACA,KAAM,CAAAa,yBAAyB,CAAGD,kBAAkB,CAAGD,iBAAiB,CAExE;AACA;AACA,GAAI,CAAAG,kBAAkB,CAEtB,GAAIJ,aAAa,CAACK,YAAY,CAAE,CAC9B;AACAD,kBAAkB,CAAGH,iBAAiB,CAAGE,yBAAyB,CACpE,CAAC,IAAM,CACL;AACA;AACA;AACA,KAAM,CAAAG,iBAAiB,CAAGN,aAAa,CAACV,KAAK,CAC7C,KAAM,CAAAiB,oBAAoB,CAAGD,iBAAiB,CAAGL,iBAAiB,CAClEG,kBAAkB,CAAGF,kBAAkB,CAAGK,oBAAoB,CAChE,CAEA;AACA,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACN,kBAAkB,CAAG,GAAG,CAAC,CAAG,GAAG,CAE/D;AACA,MAAO,CAAAO,KAAK,CAACH,YAAY,CAAC,EAAIA,YAAY,CAAG,CAAC,CAAGR,aAAa,CAACV,KAAK,CAAGkB,YAAY,CACrF,CAEA;AACA,MAAO,CAAAR,aAAa,CAACV,KAAK,CAC5B,CAAC,CAEDvM,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6N,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,eAAe,CAAC,CAAC,CACvB;AACF,CAAC,CACDD,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA7N,SAAS,CAAC,IAAM,CACd,GAAIkD,gBAAgB,EAAIzB,UAAU,CAACyD,MAAM,CAAG,CAAC,CAAE,CAC7CC,aAAa,CAAC7B,OAAO,CAAC,CAAE;AAC1B,CACF,CAAC,CAAE,CAACJ,gBAAgB,CAAC,CAAC,CAAE;AAExB;AACAlD,SAAS,CAAC,IAAM,CACd;AACA,GAAIoE,gBAAgB,CAACG,OAAO,CAAE,CAC5ByH,YAAY,CAAC5H,gBAAgB,CAACG,OAAO,CAAC,CACxC,CAEA;AACA,GAAIb,WAAW,GAAK,EAAE,CAAE,CACtBU,gBAAgB,CAACG,OAAO,CAAGkH,UAAU,CAAC,IAAM,CAC1C,KAAM,CAAAsC,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQ7J,UAAU,CAACI,OAAO,MAAEd,MAAM,CAAEC,WAAW,EAAE,CACjEH,UAAU,CAACwK,UAAU,CAAC,CACtB5I,aAAa,CAAC4I,UAAU,CAAC,CAC3B,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,IAAM,IAAI5J,UAAU,CAACI,OAAO,CAACd,MAAM,GAAK,EAAE,CAAE,CAC3C;AACA,KAAM,CAAAsK,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQ7J,UAAU,CAACI,OAAO,MAAEd,MAAM,CAAE,EAAE,EAAE,CACxDF,UAAU,CAACwK,UAAU,CAAC,CACtB5I,aAAa,CAAC4I,UAAU,CAAC,CAC3B,CAEA;AACA,MAAO,IAAM,CACX,GAAI3J,gBAAgB,CAACG,OAAO,CAAE,CAC5ByH,YAAY,CAAC5H,gBAAgB,CAACG,OAAO,CAAC,CACxC,CACF,CAAC,CACH,CAAC,CAAE,CAACb,WAAW,CAAC,CAAC,CAAE;AAEnB1D,SAAS,CAAC,IAAM,CACd;AACA,GAAIuB,QAAQ,CAAC2D,MAAM,CAAG,CAAC,CAAE,CACvB+I,0BAA0B,CAAC,CAAC,CAC9B,CAEA;AACA,KAAM,CAAAC,YAAY,CAAG,CAAC,CAAC,CACvB3M,QAAQ,CAACmD,OAAO,CAAC2H,OAAO,EAAI,CAC1B,GAAIA,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAACjJ,MAAM,CAAG,CAAC,CAAE,CAEnE;AACA,GAAI,CAAAkJ,YAAY,CAAG/B,OAAO,CAAC8B,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,CAAC,CAEnE;AACA,GAAI,CAACH,YAAY,CAAE,CACjBA,YAAY,CAAG/B,OAAO,CAAC8B,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAAClB,YAAY,CAAC,CACxE,CAEA;AACA,GAAI,CAACc,YAAY,CAAE,CACjBA,YAAY,CAAG/B,OAAO,CAAC8B,gBAAgB,CAAC,CAAC,CAAC,CAC5C,CAEA,GAAIC,YAAY,CAAE,KAAAK,kBAAA,CAChBP,YAAY,CAAC7B,OAAO,CAACzH,EAAE,CAAC,CAAG,EAAA6J,kBAAA,CAAAL,YAAY,CAACI,IAAI,UAAAC,kBAAA,iBAAjBA,kBAAA,CAAmB7J,EAAE,GAAIwJ,YAAY,CAACI,IAAI,CACvE,CACF,CACF,CAAC,CAAC,CACFvK,gBAAgB,CAACiK,YAAY,CAAC,CAChC,CAAC,CAAE,CAAC3M,QAAQ,CAAC,CAAC,CAAE;AAEhB,KAAM,CAAA0M,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC7C,GAAI,CACF,KAAM,CAAAS,UAAU,CAAGnN,QAAQ,CAACqF,GAAG,CAACyF,OAAO,EAAIA,OAAO,CAACzH,EAAE,CAAC,CACtD,KAAM,CAAA+J,QAAQ,CAAG,KAAM,CAAAtO,GAAG,CAACuO,IAAI,CAAC,wCAAwC,CAAE,CACxEC,WAAW,CAAEH,UACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAAI,SAAS,CAAG,CAAC,CAAC,CACpBvI,MAAM,CAACwI,MAAM,CAACJ,QAAQ,CAACvI,IAAI,CAAC,CAAC1B,OAAO,CAACsK,YAAY,EAAI,CACnDF,SAAS,CAACE,YAAY,CAACC,UAAU,CAAC,CAAGD,YAAY,CAACE,eAAe,CACnE,CAAC,CAAC,CAEFjM,oBAAoB,CAAC6L,SAAS,CAAC,CACjC,CAAE,MAAOK,GAAG,CAAE,CACZ;AACA5N,QAAQ,CAACmD,OAAO,CAAC2H,OAAO,EAAI,CAC1B+C,sBAAsB,CAAC/C,OAAO,CAACzH,EAAE,CAAC,CACpC,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAyK,wBAAwB,CAAGA,CAAA,GAAM,CACrC;AACA,GAAI9N,QAAQ,CAAC2D,MAAM,CAAG,CAAC,CAAE,CACvB+I,0BAA0B,CAAC,CAAC,CAC9B,CACF,CAAC,CAED,KAAM,CAAAqB,2BAA2B,CAAIC,SAAS,EAAK,CACjD;AACA,KAAM,CAAAC,aAAa,CAAGxM,iBAAiB,CAACuM,SAAS,CAAC,CAClD,GAAI,CAACC,aAAa,CAAE,CAClB,MAAO,KAAI,CACb,CAEA;AACA,KAAM,CAAAC,iBAAiB,CAAG9N,IAAI,CAC3B8E,MAAM,CAACI,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,CAAC,CACrC7C,MAAM,CAAC,CAACC,KAAK,CAAE9F,IAAI,GAAK,CACvB;AACA,KAAM,CAAA6I,QAAQ,CAAGF,aAAa,CAACnB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAKiC,IAAI,CAAC8I,OAAO,CAAC,CAC/D,GAAID,QAAQ,EAAIA,QAAQ,CAACE,iBAAiB,CAAE,CAC1C;AACA,MAAO,CAAAjD,KAAK,CAAI9F,IAAI,CAACuB,QAAQ,CAAGsH,QAAQ,CAACE,iBAAkB,CAC7D,CAAC,IAAM,IAAIF,QAAQ,EAAIA,QAAQ,CAACpC,YAAY,CAAE,CAC5C;AACA,MAAO,CAAAX,KAAK,CAAG9F,IAAI,CAACuB,QAAQ,CAC9B,CACA,MAAO,CAAAuE,KAAK,CACd,CAAC,CAAE,CAAC,CAAC,CAEP;AACA,KAAM,CAAAkD,QAAQ,CAAGL,aAAa,CAACnB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAChB,YAAY,CAAC,CACxD,KAAM,CAAAwC,cAAc,CAAGD,QAAQ,CAAGA,QAAQ,CAACE,kBAAkB,CAAG,CAAC,CACjE,KAAM,CAAAC,eAAe,CAAGtC,IAAI,CAACuC,GAAG,CAAC,CAAC,CAAEH,cAAc,CAAGL,iBAAiB,CAAC,CAEvE;AACA,MAAO,CAAAD,aAAa,CAAC5I,GAAG,CAAC4H,IAAI,EAAI,CAC/B,GAAI,CAAA0B,iBAAiB,CAAG,CAAC,CACzB,GAAI,CAAAC,WAAW,CAAG,KAAK,CAEvB,GAAI3B,IAAI,CAAClB,YAAY,CAAE,CACrB;AACA4C,iBAAiB,CAAGF,eAAe,CACnCG,WAAW,CAAGH,eAAe,CAAG,CAAC,CACnC,CAAC,IAAM,IAAIxB,IAAI,CAACoB,iBAAiB,CAAE,CACjC;AACA;AACAM,iBAAiB,CAAGxC,IAAI,CAAC0C,KAAK,CAACJ,eAAe,CAAGxB,IAAI,CAACoB,iBAAiB,CAAC,CACxEO,WAAW,CAAGD,iBAAiB,CAAG,CAAC,CACrC,CAEA,OAAAlC,aAAA,CAAAA,aAAA,IACKQ,IAAI,MACPuB,kBAAkB,CAAEG,iBAAiB,CACrCG,YAAY,CAAEF,WAAW,GAE7B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAhL,aAAa,CAAGjF,WAAW,CAAC,gBAA6B,IAAtB,CAAAoQ,YAAY,CAAApH,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CACxD,GAAI,CACFzG,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAA8N,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CAEpC;AACAD,MAAM,CAACE,MAAM,CAAC,WAAW,CAAE,MAAM,CAAC,CAElC;AACA,GAAIH,YAAY,CAAC9M,QAAQ,CAAE+M,MAAM,CAACE,MAAM,CAAC,UAAU,CAAEH,YAAY,CAAC9M,QAAQ,CAAC,CAC3E,GAAI8M,YAAY,CAAC7M,MAAM,CAAE8M,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAEH,YAAY,CAAC7M,MAAM,CAAC,CAErE,KAAM,CAAAiN,OAAO,kBAAA1J,MAAA,CAAoBuJ,MAAM,CAAClI,QAAQ,CAAC,CAAC,CAAG,GAAG,CAAGkI,MAAM,CAAClI,QAAQ,CAAC,CAAC,CAAG,EAAE,CAAE,CACnF,GAAI,CAAAsG,QAAQ,CAAG,KAAM,CAAAtO,GAAG,CAACsQ,GAAG,CAACD,OAAO,CAAC,CACrC,GAAI,CAAAE,kBAAkB,CAAGlJ,KAAK,CAACC,OAAO,CAACgH,QAAQ,CAACvI,IAAI,CAACyK,OAAO,CAAC,CAAGlC,QAAQ,CAACvI,IAAI,CAACyK,OAAO,CAAInJ,KAAK,CAACC,OAAO,CAACgH,QAAQ,CAACvI,IAAI,CAAC,CAAGuI,QAAQ,CAACvI,IAAI,CAAG,EAAG,CAE3I;AACA,GAAI,CAAA0K,OAAO,CAAGnC,QAAQ,CAACvI,IAAI,CAAC2K,IAAI,CAChC,MAAOD,OAAO,CAAE,CACd;AACAnC,QAAQ,CAAG,KAAM,CAAAtO,GAAG,CAACsQ,GAAG,CAACG,OAAO,CAAC,CACjC,KAAM,CAAAE,SAAS,CAAGtJ,KAAK,CAACC,OAAO,CAACgH,QAAQ,CAACvI,IAAI,CAACyK,OAAO,CAAC,CAAGlC,QAAQ,CAACvI,IAAI,CAACyK,OAAO,CAAInJ,KAAK,CAACC,OAAO,CAACgH,QAAQ,CAACvI,IAAI,CAAC,CAAGuI,QAAQ,CAACvI,IAAI,CAAG,EAAG,CACpIwK,kBAAkB,CAAGA,kBAAkB,CAAC5J,MAAM,CAACgK,SAAS,CAAC,CACzDF,OAAO,CAAGnC,QAAQ,CAACvI,IAAI,CAAC2K,IAAI,CAC9B,CAEA,KAAM,CAAAE,WAAW,CAAGL,kBAAkB,CAEtC;AACA,GAAIvM,aAAa,CAACE,OAAO,CAACW,MAAM,GAAK,CAAC,EAAI,CAACZ,mBAAmB,CAACC,OAAO,CAAE,CACtE/C,WAAW,CAACyP,WAAW,CAAC,CACxB,OACF,CAEA;AACA,KAAM,CAAAC,gBAAgB,CAAGD,WAAW,CAACxK,MAAM,CAAC4F,OAAO,EAAI,CACrD,GAAI,CAAA8E,UAAU,CAAG,KAAK,CAEtB;AACA,GAAI9E,OAAO,CAAC+E,aAAa,CAAE,CACzB,KAAM,CAAA5N,QAAQ,CAAGa,aAAa,CAACE,OAAO,CAAC8J,IAAI,CAAC1J,GAAG,EAAIA,GAAG,CAAC5C,IAAI,GAAKsK,OAAO,CAAC+E,aAAa,CAAC,CACtFD,UAAU,CAAG3N,QAAQ,CAAGA,QAAQ,CAACqB,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,IAAIwH,OAAO,CAAC7I,QAAQ,EAAI,MAAO,CAAA6I,OAAO,CAAC7I,QAAQ,GAAK,QAAQ,CAAE,CACjE,KAAM,CAAAA,QAAQ,CAAGa,aAAa,CAACE,OAAO,CAAC8J,IAAI,CAAC1J,GAAG,EAAIA,GAAG,CAACC,EAAE,GAAKyH,OAAO,CAAC7I,QAAQ,CAAC,CAC/E2N,UAAU,CAAG3N,QAAQ,CAAGA,QAAQ,CAACqB,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,IAAIwH,OAAO,CAAC7I,QAAQ,EAAI6I,OAAO,CAAC7I,QAAQ,CAACoB,EAAE,CAAE,CAChD,KAAM,CAAApB,QAAQ,CAAGa,aAAa,CAACE,OAAO,CAAC8J,IAAI,CAAC1J,GAAG,EAAIA,GAAG,CAACC,EAAE,GAAKyH,OAAO,CAAC7I,QAAQ,CAACoB,EAAE,CAAC,CAClFuM,UAAU,CAAG3N,QAAQ,CAAGA,QAAQ,CAACqB,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,CACHsM,UAAU,CAAG,KAAK,CACpB,CAEA,MAAO,CAAAA,UAAU,CACnB,CAAC,CAAC,CAEF;AACA,GAAIb,YAAY,CAAC9M,QAAQ,CAAE,CACzB,KAAM,CAAA6N,gBAAgB,CAAGhN,aAAa,CAACE,OAAO,CAAC8J,IAAI,CAAC1J,GAAG,EAAIA,GAAG,CAACC,EAAE,GAAK0M,QAAQ,CAAChB,YAAY,CAAC9M,QAAQ,CAAC,CAAC,CACtG,GAAI6N,gBAAgB,EAAI,CAACA,gBAAgB,CAACxM,WAAW,CAAE,CACrD;AACArD,WAAW,CAAC,EAAE,CAAC,CACf,OACF,CACF,CAEAA,WAAW,CAAC0P,gBAAgB,CAAC,CAC7BrL,cAAc,CAAC,CAAC,CAAC,CACnB,CAAE,MAAOsJ,GAAG,CAAE,CACZtM,QAAQ,CAAC,yBAAyB,CAAC,CACrC,CAAC,OAAS,CACRJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAqL,eAAe,CAAG5N,WAAW,CAAC,SAAY,CAC9C,GAAI,CACF,KAAM,CAAAyO,QAAQ,CAAG,KAAM,CAAAtO,GAAG,CAACsQ,GAAG,CAAC,2BAA2B,CAAC,CAC3D,GAAI,CAAAY,cAAc,CAAG5C,QAAQ,CAACvI,IAAI,CAACyK,OAAO,EAAIlC,QAAQ,CAACvI,IAAI,CAE3D;AACA,KAAM,CAAA3B,cAAc,CAAGO,IAAI,CAACwM,KAAK,CAAC1M,cAAc,CAAC2M,OAAO,CAAC,oBAAoB,CAAC,EAAI,IAAI,CAAC,CAEvF;AACAF,cAAc,CAAGA,cAAc,CAAC3K,GAAG,CAACjC,GAAG,EAAI,CACzC,KAAM,CAAAwM,UAAU,CAAG1M,cAAc,CAACiN,cAAc,CAAC/M,GAAG,CAACC,EAAE,CAAC,CAAGH,cAAc,CAACE,GAAG,CAACC,EAAE,CAAC,CAAGD,GAAG,CAACE,WAAW,CACnG,OAAAmJ,aAAA,CAAAA,aAAA,IACKrJ,GAAG,MACNE,WAAW,CAAEsM,UAAU,GAE3B,CAAC,CAAC,CAEFzP,aAAa,CAAC6P,cAAc,CAAC,CAC7BpO,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,MAAOgM,GAAG,CAAE,CACZ9F,OAAO,CAACzG,KAAK,CAAC,4BAA4B,CAAEuM,GAAG,CAAC,CAClD,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAwC,sBAAsB,CAAGzR,WAAW,CAAC,MAAO0R,UAAU,CAAEC,aAAa,GAAK,CAC9E,GAAI,CACFxO,mBAAmB,CAAC,IAAI,CAAC,CACzB,KAAM,CAAAyO,SAAS,CAAG,CAACD,aAAa,CAEhC;AACA,KAAM,CAAApN,cAAc,CAAGO,IAAI,CAACwM,KAAK,CAAC1M,cAAc,CAAC2M,OAAO,CAAC,oBAAoB,CAAC,EAAI,IAAI,CAAC,CACvFhN,cAAc,CAACmN,UAAU,CAAC,CAAGE,SAAS,CACtChN,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAACR,cAAc,CAAC,CAAC,CAE5E;AACA/C,aAAa,CAACqQ,cAAc,EAC1BA,cAAc,CAACnL,GAAG,CAACjC,GAAG,EACpBA,GAAG,CAACC,EAAE,GAAKgN,UAAU,CAAA5D,aAAA,CAAAA,aAAA,IAAQrJ,GAAG,MAAEE,WAAW,CAAEiN,SAAS,GAAKnN,GAC/D,CACF,CAAC,CAED;AACAQ,aAAa,CAAC7B,OAAO,CAAC,CAAE;AAExB;AACAmI,UAAU,CAAC,IAAMpI,mBAAmB,CAAC,KAAK,CAAC,CAAE,GAAG,CAAC,CACnD,CAAE,MAAO8L,GAAG,CAAE,CACZtM,QAAQ,CAAC,kCAAkC,CAAC,CAC5CwG,OAAO,CAACzG,KAAK,CAAC,wBAAwB,CAAEuM,GAAG,CAAC,CAC5C9L,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAAE,CAAC5B,UAAU,CAAC,CAAC,CAAE;AAElB,KAAM,CAAAuQ,4BAA4B,CAAG9R,WAAW,CAAC,SAAY,CAC3D,GAAI,CACFmD,mBAAmB,CAAC,IAAI,CAAC,CAEzB;AACA,KAAM,CAAA4O,iBAAiB,CAAG,CAAC,CAAC,CAC5B5N,aAAa,CAACE,OAAO,CAACG,OAAO,CAACC,GAAG,EAAI,CACnCsN,iBAAiB,CAACtN,GAAG,CAACC,EAAE,CAAC,CAAG,IAAI,CAClC,CAAC,CAAC,CAEF;AACAE,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAACgN,iBAAiB,CAAC,CAAC,CAE/E;AACAvQ,aAAa,CAACqQ,cAAc,EAC1BA,cAAc,CAACnL,GAAG,CAACjC,GAAG,EAAAqJ,aAAA,CAAAA,aAAA,IAAUrJ,GAAG,MAAEE,WAAW,CAAE,IAAI,EAAG,CAC3D,CAAC,CAED;AACAM,aAAa,CAAC7B,OAAO,CAAC,CAAE;AAExBP,UAAU,CAAC,0CAA0C,CAAC,CAEtD;AACA0I,UAAU,CAAC,IAAMpI,mBAAmB,CAAC,KAAK,CAAC,CAAE,GAAG,CAAC,CACnD,CAAE,MAAO8L,GAAG,CAAE,CACZtM,QAAQ,CAAC,4BAA4B,CAAC,CACtCwG,OAAO,CAACzG,KAAK,CAAC,uBAAuB,CAAEuM,GAAG,CAAC,CAC3C9L,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAAE,CAAC5B,UAAU,CAAC,CAAC,CAAE;AAElB,KAAM,CAAA2N,sBAAsB,CAAG,KAAO,CAAAG,SAAS,EAAK,CAClD,GAAI,CACF,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAtO,GAAG,CAACsQ,GAAG,kBAAA3J,MAAA,CAAkBuI,SAAS,wBAAsB,CAAC,CAChFtM,oBAAoB,CAACiP,IAAI,EAAAlE,aAAA,CAAAA,aAAA,IACpBkE,IAAI,MACP,CAAC3C,SAAS,EAAGZ,QAAQ,CAACvI,IAAI,CAAC8I,eAAe,EAC1C,CAAC,CACL,CAAE,MAAOC,GAAG,CAAE,CACd,CACF,CAAC,CAED,KAAM,CAAAgD,SAAS,CAAG,QAAAA,CAAC9F,OAAO,CAA0B,IAAxB,CAAA+B,YAAY,CAAAlF,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAE7C;AACA,GAAI,CAAAsF,IAAI,CAAGJ,YAAY,CACvB,GAAI,CAACI,IAAI,EAAInC,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAAC,CAAC,CAAC,CAAE,KAAAiE,oBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACpE,KAAM,CAAAC,cAAc,CAAGlG,OAAO,CAAC8B,gBAAgB,CAAC,CAAC,CAAC,CAClDK,IAAI,CAAG,CACL5J,EAAE,CAAE,EAAAwN,oBAAA,CAAAG,cAAc,CAAC/D,IAAI,UAAA4D,oBAAA,iBAAnBA,oBAAA,CAAqBxN,EAAE,GAAI2N,cAAc,CAAC/D,IAAI,CAClDzM,IAAI,CAAEwQ,cAAc,CAACzK,SAAS,IAAAuK,qBAAA,CAAIE,cAAc,CAAC/D,IAAI,UAAA6D,qBAAA,iBAAnBA,qBAAA,CAAqBtQ,IAAI,GAAI,OAAO,CACtEyQ,MAAM,CAAED,cAAc,CAACE,WAAW,IAAAH,qBAAA,CAAIC,cAAc,CAAC/D,IAAI,UAAA8D,qBAAA,iBAAnBA,qBAAA,CAAqBE,MAAM,GAAI,OACvE,CAAC,CACH,CACA,GAAI,CAAChE,IAAI,CAAE,KAAAkE,kBAAA,CACTlE,IAAI,CAAG,CAAE5J,EAAE,CAAE,EAAA8N,kBAAA,CAAArG,OAAO,CAACsG,SAAS,UAAAD,kBAAA,iBAAjBA,kBAAA,CAAmB9N,EAAE,GAAIyH,OAAO,CAACsG,SAAS,CAAE5Q,IAAI,CAAE,OAAO,CAAEyQ,MAAM,CAAE,OAAQ,CAAC,CAC3F,CAEA;AACA,GAAIhN,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,GAAI,CAACxC,iBAAiB,CAACqJ,OAAO,CAACzH,EAAE,CAAC,CAAE,CAClC/B,QAAQ,CAAC,gDAAgD,CAAC,CAC1D,OACF,CAEA;AACA,KAAM,CAAA+P,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAK4J,IAAI,CAAC5J,EAAE,CAAC,CAGnE,GAAI,CAACqI,aAAa,CAAE,CAClBpK,QAAQ,SAAAmE,MAAA,CAASwH,IAAI,CAACzM,IAAI,mCAAiC,CAAC,CAC5D,OACF,CAEA,GAAI,CAACkL,aAAa,CAACoD,YAAY,CAAE,CAC/BxN,QAAQ,IAAAmE,MAAA,CAAIwH,IAAI,CAACzM,IAAI,oBAAkB,CAAC,CACxC,OACF,CAEA;AACA,GAAIkL,aAAa,CAAC8C,kBAAkB,EAAI,CAAC,CAAE,CACzClN,QAAQ,OAAAmE,MAAA,CAAOwH,IAAI,CAACzM,IAAI,eAAa,CAAC,CACtC,OACF,CACF,CAEA,KAAM,CAAA8Q,YAAY,CAAGlR,IAAI,CAAC0M,IAAI,CAACxH,IAAI,EACjCA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,EACtBiC,IAAI,CAAC8I,OAAO,GAAKnB,IAAI,CAAC5J,EAAE,EACxBiC,IAAI,CAACiM,UAAU,GAAKxN,SACtB,CAAC,CAED;AACA,GAAIuN,YAAY,CAAE,CAChB;AACA,GAAIrN,QAAQ,GAAK,UAAU,CAAE,CAC3B,KAAM,CAAAoN,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAK4J,IAAI,CAAC5J,EAAE,CAAC,CACnE,GAAIqI,aAAa,EAAI4F,YAAY,CAACzK,QAAQ,CAAG,CAAC,CAAG6E,aAAa,CAAC8C,kBAAkB,CAAE,CACjFlN,QAAQ,eAAAmE,MAAA,CAAewH,IAAI,CAACzM,IAAI,sBAAAiF,MAAA,CAAoBiG,aAAa,CAAC8C,kBAAkB,UAAQ,CAAC,CAC7F,OACF,CACF,CACAnO,OAAO,CAACmR,QAAQ,EAAIA,QAAQ,CAACnM,GAAG,CAACC,IAAI,EACnCA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,EAAIiC,IAAI,CAAC8I,OAAO,GAAKnB,IAAI,CAAC5J,EAAE,EAAIiC,IAAI,CAACiM,UAAU,GAAKxN,SAAS,CAAA0I,aAAA,CAAAA,aAAA,IAC1EnH,IAAI,MAAEuB,QAAQ,CAAEvB,IAAI,CAACuB,QAAQ,CAAG,CAAC,GACtCvB,IACN,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,GAAIrB,QAAQ,GAAK,UAAU,CAAE,CAC3B,KAAM,CAAAoN,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAK4J,IAAI,CAAC5J,EAAE,CAAC,CACnE,GAAIqI,aAAa,EAAI,CAAC,CAAGA,aAAa,CAAC8C,kBAAkB,CAAE,CACzDlN,QAAQ,eAAAmE,MAAA,CAAewH,IAAI,CAACzM,IAAI,sBAAAiF,MAAA,CAAoBiG,aAAa,CAAC8C,kBAAkB,UAAQ,CAAC,CAC7F,OACF,CACF,CACA;AACA,KAAM,CAAA6C,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAK4J,IAAI,CAAC5J,EAAE,CAAC,CAEnE,KAAM,CAAAoO,WAAW,CAAAhF,aAAA,CAAAA,aAAA,IACZ3B,OAAO,MACVjE,QAAQ,CAAE,CAAC,CACXuH,OAAO,CAAEnB,IAAI,CAAC5J,EAAE,CAChBkD,SAAS,CAAE0G,IAAI,CAACzM,IAAI,CACpB0Q,WAAW,CAAEjE,IAAI,CAACgE,MAAM,CACxBxK,UAAU,CAAEgF,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,EAAIb,eAAe,CAACC,OAAO,CAAC,CACnFyG,UAAU,CAAExN,SAAS,EACtB,CACD1D,OAAO,CAACmR,QAAQ,EAAI,CAAC,GAAGA,QAAQ,CAAEC,WAAW,CAAC,CAAC,CACjD,CAEA;AACA,GAAI3G,OAAO,CAAC4G,aAAa,EAAI5G,OAAO,CAAC6G,eAAe,CAAE,CACpDzH,UAAU,CAAC,IAAM,CACf0H,yBAAyB,CAAC9G,OAAO,CAAEmC,IAAI,CAAC,CAC1C,CAAC,CAAE,CAAC,CAAC,CACP,CAEA3L,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAAuQ,cAAc,CAAG,QAAAA,CAAC7D,SAAS,CAAE8D,MAAM,CAAEjL,QAAQ,CAAuB,IAArB,CAAA9C,SAAS,CAAA4D,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACnE,GAAId,QAAQ,EAAI,CAAC,CAAE,CACjBxG,OAAO,CAACD,IAAI,CAAC8E,MAAM,CAACI,IAAI,EAAI,EAAEA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,EAAI1I,IAAI,CAAC8I,OAAO,GAAK0D,MAAM,EAAIxM,IAAI,CAACiM,UAAU,GAAKxN,SAAS,CAAC,CAAC,CAAC,CAClH;AACAU,gBAAgB,CAACD,aAAa,CAACU,MAAM,CAACI,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,CAAC,CAAC,CACvE,CAAC,IAAM,CACL;AACA,GAAI/J,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,KAAM,CAAAoN,gBAAgB,CAAGtD,2BAA2B,CAACC,SAAS,CAAC,CAC/D,KAAM,CAAAtC,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAKyO,MAAM,CAAC,CAElE,GAAI,CAACpG,aAAa,EAAI,CAACA,aAAa,CAACoD,YAAY,CAAE,CACjDxN,QAAQ,uBAAuB,CAAC,CAChC,OACF,CAEA;AACA,KAAM,CAAAyQ,mBAAmB,CAAG3R,IAAI,CAC7B8E,MAAM,CAACI,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,EAAI1I,IAAI,CAAC8I,OAAO,GAAK0D,MAAM,EAAIxM,IAAI,CAACiM,UAAU,GAAKxN,SAAS,CAAC,CACjGoH,MAAM,CAAC,CAAC6G,GAAG,CAAE1M,IAAI,GAAK0M,GAAG,CAAG1M,IAAI,CAACuB,QAAQ,CAAE,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAoL,UAAU,CAAGvG,aAAa,CAAC8C,kBAAkB,CAAGuD,mBAAmB,CAEzE,GAAIlL,QAAQ,CAAGoL,UAAU,CAAE,CACzB3Q,QAAQ,qCAAAmE,MAAA,CAAqCwM,UAAU,CAAE,CAAC,CAC1D,OACF,CACF,CAEA5R,OAAO,CAACD,IAAI,CAACiF,GAAG,CAACC,IAAI,EACnBA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,EAAI1I,IAAI,CAAC8I,OAAO,GAAK0D,MAAM,EAAIxM,IAAI,CAACiM,UAAU,GAAKxN,SAAS,CAAA0I,aAAA,CAAAA,aAAA,IACxEnH,IAAI,MAAEuB,QAAQ,GACnBvB,IACN,CAAC,CAAC,CAEF;AACA,KAAM,CAAAwF,OAAO,CAAG9K,QAAQ,CAAC8M,IAAI,CAACoF,CAAC,EAAIA,CAAC,CAAC7O,EAAE,GAAK2K,SAAS,CAAC,CACtD,GAAIlD,OAAO,EAAIA,OAAO,CAAC4G,aAAa,EAAI5G,OAAO,CAAC6G,eAAe,CAAE,CAC/D,KAAM,CAAA1E,IAAI,CAAG,CAAE5J,EAAE,CAAEyO,MAAO,CAAC,CAC3BK,oCAAoC,CAACrH,OAAO,CAAEmC,IAAI,CAAEpG,QAAQ,CAAC,CAC/D,CAEAvF,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAED,KAAM,CAAA8Q,cAAc,CAAG,QAAAA,CAACpE,SAAS,CAAE8D,MAAM,CAAuB,IAArB,CAAA/N,SAAS,CAAA4D,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACzDtH,OAAO,CAACD,IAAI,CAAC8E,MAAM,CAACI,IAAI,EAAI,EAAEA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,EAAI1I,IAAI,CAAC8I,OAAO,GAAK0D,MAAM,EAAIxM,IAAI,CAACiM,UAAU,GAAKxN,SAAS,CAAC,CAAC,CAAC,CACpH,CAAC,CAED;AACA,KAAM,CAAA6N,yBAAyB,CAAGA,CAAC9G,OAAO,CAAEmC,IAAI,GAAK,CACnD,GAAI,CAACnC,OAAO,CAAC4G,aAAa,EAAI,CAAC5G,OAAO,CAAC6G,eAAe,CAAE,CACtD,OACF,CAEA;AACAtR,OAAO,CAACgS,WAAW,EAAI,CACrB;AACA,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAACvF,IAAI,CAACxH,IAAI,EACrCA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,EACtBiC,IAAI,CAAC8I,OAAO,GAAKnB,IAAI,CAAC5J,EAAE,EACxBiC,IAAI,CAACiM,UAAU,GAAKxN,SACtB,CAAC,CAED,GAAI,CAACuO,SAAS,CAAE,MAAO,CAAAD,WAAW,CAElC;AACA,KAAM,CAAAhB,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAK4J,IAAI,CAAC5J,EAAE,CAAC,CAEnE;AACA;AACA,GAAI,CAAAkP,iBAAiB,CAAGD,SAAS,CAACzL,QAAQ,CAE1C;AACA,GAAI6E,aAAa,EAAI,CAACA,aAAa,CAACK,YAAY,EAAIL,aAAa,CAAC2C,iBAAiB,CAAE,CACnFkE,iBAAiB,CAAGD,SAAS,CAACzL,QAAQ,CAAG6E,aAAa,CAAC2C,iBAAiB,CAC1E,CAEA;AACA5J,gBAAgB,CAAC+N,oBAAoB,EAAI,CACvC,KAAM,CAAAC,iBAAiB,CAAGD,oBAAoB,CAAC1F,IAAI,CAACxH,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,CAAC,CACnF,GAAIoP,iBAAiB,CAAE,CACrB;AACA,MAAO,CAAAD,oBAAoB,CAACnN,GAAG,CAACC,IAAI,EAClCA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,CAAAoJ,aAAA,CAAAA,aAAA,IAEbnH,IAAI,MACPuB,QAAQ,CAAE0L,iBAAiB,CAC3BxL,WAAW,CAAEP,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAAGY,iBAAiB,GAEtEjN,IACN,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAoN,gBAAgB,CAAAjG,aAAA,CAAAA,aAAA,IACjB3B,OAAO,MACVjE,QAAQ,CAAE0L,iBAAiB,CAC3B9L,UAAU,CAAED,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAC/C5K,WAAW,CAAEP,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAAGY,iBAAiB,CACpEzM,MAAM,CAAE,cAAc,CAAE;AACxBC,aAAa,CAAEzF,YAAY,CAACE,IAAI,CAChCyF,cAAc,CAAE3F,YAAY,CAACG,KAAK,CAClCkS,aAAa,CAAE1F,IAAI,CAAC5J,EAAE,CAAE;AACxBuP,eAAe,CAAE3F,IAAI,CAACzM,IAAI,CAC1BqS,iBAAiB,CAAE5F,IAAI,CAACgE,MAAM,EAC/B,CACD,MAAO,CAAC,GAAGuB,oBAAoB,CAAEE,gBAAgB,CAAC,CACpD,CACF,CAAC,CAAC,CAEF,MAAO,CAAAL,WAAW,CACpB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,kBAAkB,CAAIhI,OAAO,EAAK,CACtC,GAAI,CAACA,OAAO,CAAC4G,aAAa,EAAI,CAAC5G,OAAO,CAAC6G,eAAe,CAAE,CACtDrQ,QAAQ,CAAC,mDAAmD,CAAC,CAC7D,OACF,CAEA,KAAM,CAAAmR,iBAAiB,CAAGjO,aAAa,CAACsI,IAAI,CAACxH,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,CAAC,CAC5E,GAAIoP,iBAAiB,CAAE,CACrBhO,gBAAgB,CAACD,aAAa,CAACa,GAAG,CAACC,IAAI,EACrCA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,CAAAoJ,aAAA,CAAAA,aAAA,IACbnH,IAAI,MAAEuB,QAAQ,CAAEvB,IAAI,CAACuB,QAAQ,CAAG,CAAC,GACtCvB,IACN,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,KAAM,CAAAoN,gBAAgB,CAAAjG,aAAA,CAAAA,aAAA,IACjB3B,OAAO,MACVjE,QAAQ,CAAE,CAAC,CACXJ,UAAU,CAAED,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAC/C5K,WAAW,CAAEP,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAChD7L,MAAM,CAAE,cAAc,CACtBC,aAAa,CAAEzF,YAAY,CAACE,IAAI,CAChCyF,cAAc,CAAE3F,YAAY,CAACG,KAAK,EACnC,CACDgE,gBAAgB,CAAC,CAAC,GAAGD,aAAa,CAAEkO,gBAAgB,CAAC,CAAC,CACxD,CACApR,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAA6Q,oCAAoC,CAAGA,CAACrH,OAAO,CAAEmC,IAAI,CAAE8F,aAAa,GAAK,CAC7E,GAAI,CAACjI,OAAO,CAAC4G,aAAa,EAAI,CAAC5G,OAAO,CAAC6G,eAAe,CAAE,CACtD,OACF,CAEA;AACA,KAAM,CAAAN,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAK4J,IAAI,CAAC5J,EAAE,CAAC,CAEnE;AACA,GAAI,CAAAkP,iBAAiB,CAAGQ,aAAa,CAErC;AACA,GAAIrH,aAAa,EAAI,CAACA,aAAa,CAACK,YAAY,EAAIL,aAAa,CAAC2C,iBAAiB,CAAE,CACnFkE,iBAAiB,CAAGQ,aAAa,CAAGrH,aAAa,CAAC2C,iBAAiB,CACrE,CAEA5J,gBAAgB,CAAC+N,oBAAoB,EAAI,CACvC,KAAM,CAAAC,iBAAiB,CAAGD,oBAAoB,CAAC1F,IAAI,CAACxH,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,CAAC,CACnF,GAAIoP,iBAAiB,CAAE,CACrB;AACA,MAAO,CAAAD,oBAAoB,CAACnN,GAAG,CAACC,IAAI,EAClCA,IAAI,CAACjC,EAAE,GAAKyH,OAAO,CAACzH,EAAE,CAAAoJ,aAAA,CAAAA,aAAA,IAEbnH,IAAI,MACPuB,QAAQ,CAAE0L,iBAAiB,CAC3BxL,WAAW,CAAEP,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAAGY,iBAAiB,GAEtEjN,IACN,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAoN,gBAAgB,CAAAjG,aAAA,CAAAA,aAAA,IACjB3B,OAAO,MACVjE,QAAQ,CAAE0L,iBAAiB,CAC3B9L,UAAU,CAAED,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAC/C5K,WAAW,CAAEP,UAAU,CAACsE,OAAO,CAAC6G,eAAe,CAAC,CAAGY,iBAAiB,CACpEzM,MAAM,CAAE,cAAc,CAAE;AACxBC,aAAa,CAAEzF,YAAY,CAACE,IAAI,CAChCyF,cAAc,CAAE3F,YAAY,CAACG,KAAK,CAClCkS,aAAa,CAAE1F,IAAI,CAAC5J,EAAE,CACtBuP,eAAe,CAAE3F,IAAI,CAACzM,IAAI,CAC1BqS,iBAAiB,CAAE5F,IAAI,CAACgE,MAAM,EAC/B,CACD,MAAO,CAAC,GAAGuB,oBAAoB,CAAEE,gBAAgB,CAAC,CACpD,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAM,uBAAuB,CAAGA,CAAChF,SAAS,CAAEnH,QAAQ,GAAK,CACvD,GAAIA,QAAQ,EAAI,CAAC,CAAE,CACjBpC,gBAAgB,CAACD,aAAa,CAACU,MAAM,CAACI,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,CAAC,CAAC,CACvE,CAAC,IAAM,CACLvJ,gBAAgB,CAACD,aAAa,CAACa,GAAG,CAACC,IAAI,EACrCA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,CAAAvB,aAAA,CAAAA,aAAA,IACZnH,IAAI,MAAEuB,QAAQ,CAAEE,WAAW,CAAEzB,IAAI,CAACmB,UAAU,CAAGI,QAAQ,GAC5DvB,IACN,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAA2N,qBAAqB,CAAGA,CAACjF,SAAS,CAAElI,MAAM,GAAK,CACnDrB,gBAAgB,CAACD,aAAa,CAACa,GAAG,CAACC,IAAI,EACrCA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,CAAAvB,aAAA,CAAAA,aAAA,IACZnH,IAAI,MAAEQ,MAAM,GACjBR,IACN,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA4N,uBAAuB,CAAIlF,SAAS,EAAK,CAC7CvJ,gBAAgB,CAACD,aAAa,CAACU,MAAM,CAACI,IAAI,EAAIA,IAAI,CAACjC,EAAE,GAAK2K,SAAS,CAAC,CAAC,CACvE,CAAC,CAED,KAAM,CAAAxC,uBAAuB,CAAGA,CAAA,GAAM,CACpC,MAAO,CAAAhH,aAAa,CAAC2G,MAAM,CAAC,CAACC,KAAK,CAAE9F,IAAI,GAAK,CAC3C;AACA;AACA,GAAIA,IAAI,CAACQ,MAAM,GAAK,cAAc,CAAE,CAClC,MAAO,CAAAsF,KAAK,EAAI9F,IAAI,CAACyB,WAAW,EAAI,CAAC,CAAC,CACxC,CACA,MAAO,CAAAqE,KAAK,CACd,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAED,KAAM,CAAA+H,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,MAAO,CAAA/S,IAAI,CAAC+K,MAAM,CAAC,CAACC,KAAK,CAAE9F,IAAI,GAAK8F,KAAK,CAAI9F,IAAI,CAACuB,QAAQ,CAAGvB,IAAI,CAACmB,UAAW,CAAE,CAAC,CAAC,CACnF,CAAC,CAED,KAAM,CAAA2M,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChBjT,IAAI,CAAC+C,OAAO,CAACmC,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACgO,QAAQ,EAAIhO,IAAI,CAACgO,QAAQ,CAAG,CAAC,CAAE,CACtC;AACA,KAAM,CAAAC,OAAO,CAAIjO,IAAI,CAACuB,QAAQ,CAAGvB,IAAI,CAACmB,UAAU,CAAGnB,IAAI,CAACgO,QAAQ,EAAK,GAAG,CAAGhO,IAAI,CAACgO,QAAQ,CAAC,CACzFD,QAAQ,EAAIE,OAAO,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAF,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAAAC,SAAS,CAAG,CAAC,CACjBrT,IAAI,CAAC+C,OAAO,CAACmC,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACgO,QAAQ,EAAIhO,IAAI,CAACgO,QAAQ,CAAG,CAAC,CAAE,CACtC;AACA,KAAM,CAAAI,QAAQ,CAAIpO,IAAI,CAACuB,QAAQ,CAAGvB,IAAI,CAACmB,UAAU,CAAG,GAAG,EAAK,GAAG,CAAGnB,IAAI,CAACgO,QAAQ,CAAC,CAChFG,SAAS,EAAIC,QAAQ,CACvB,CAAC,IAAM,CACL;AACAD,SAAS,EAAInO,IAAI,CAACuB,QAAQ,CAAGvB,IAAI,CAACmB,UAAU,CAC9C,CACF,CAAC,CAAC,CACF,MAAO,CAAAgN,SAAS,CAClB,CAAC,CAED;AACA,KAAM,CAAA9I,gBAAgB,CAAG,QAAAA,CAACgJ,UAAU,CAA+B,IAA7B,CAAAC,UAAU,CAAAjM,SAAA,CAAAhE,MAAA,IAAAgE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,WAAW,CAC5D,KAAM,CAAAyD,KAAK,CAAG+H,iBAAiB,CAAC,CAAC,CACjC,KAAM,CAAAU,SAAS,CAAGzI,KAAK,CAAGrK,UAAU,CAEpC,MAAO,CACL8E,WAAW,CAAE8N,UAAU,CACvB5N,aAAa,CAAEzF,YAAY,CAACE,IAAI,EAAI,kBAAkB,CACtDyF,cAAc,CAAE3F,YAAY,CAACG,KAAK,EAAI,EAAE,CACxCqT,cAAc,CAAExT,YAAY,CAACI,KAAK,EAAI,EAAE,CACxCqT,SAAS,CAAE,CAAAhU,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsH,QAAQ,GAAI,cAAc,CAC3C2M,OAAO,CAAE,CAAAjU,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsD,EAAE,GAAI,SAAS,CAC9B4Q,UAAU,CAAE,GAAI,CAAAvO,IAAI,CAAC,CAAC,CAACwO,WAAW,CAAC,CAAC,CACpCC,eAAe,CAAE,GAAI,CAAAzO,IAAI,CAAC,CAAC,CAACwO,WAAW,CAAC,CAAC,CACzC5M,QAAQ,UAAA7B,MAAA,CAAWC,IAAI,CAACkF,GAAG,CAAC,CAAC,MAAAnF,MAAA,CAAI0G,IAAI,CAACiI,MAAM,CAAC,CAAC,CAACtN,QAAQ,CAAC,EAAE,CAAC,CAACuN,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAC1EvO,MAAM,CAAE8N,UAAU,CAClB1M,YAAY,CAAEkE,KAAK,CACnBjE,WAAW,CAAEpG,UAAU,CACvBqG,gBAAgB,CAAEyM,SAAS,CAC3BrO,cAAc,CAAEqO,SAAS,CAAG,CAAC,CAAG,SAAS,CAAG,MAAM,CAClDS,QAAQ,CAAET,SAAS,CAAG,CAAC,CAAG,GAAI,CAAAnO,IAAI,CAACA,IAAI,CAACkF,GAAG,CAAC,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAACjF,kBAAkB,CAAC,CAAC,CAAG,IAAI,CAAE;AACvGb,KAAK,CAAE1E,IAAI,CAACiF,GAAG,CAACC,IAAI,OAAAiP,UAAA,OAAK,CACvBjO,YAAY,CAAEhB,IAAI,CAAC9E,IAAI,CACvBgU,WAAW,CAAElP,IAAI,CAACmP,GAAG,CACrB5N,QAAQ,CAAEvB,IAAI,CAACuB,QAAQ,CACvBN,SAAS,CAAEjB,IAAI,CAACiB,SAAS,IAAAgO,UAAA,CAAIjP,IAAI,CAAC2H,IAAI,UAAAsH,UAAA,iBAATA,UAAA,CAAW/T,IAAI,GAAI,OAAO,CACvDiG,UAAU,CAAEnB,IAAI,CAACmB,UAAU,CAC3BM,WAAW,CAAEzB,IAAI,CAACmB,UAAU,CAAGnB,IAAI,CAACuB,QACtC,CAAC,EAAC,CACJ,CAAC,CACH,CAAC,CAED,KAAM,CAAA6N,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAItU,IAAI,CAACuD,MAAM,GAAK,CAAC,CAAE,CACrBrC,QAAQ,CAACxB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAC7B,OACF,CAEAsB,aAAa,CAAC,IAAI,CAAC,CACnBE,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,GAAI,CAAC2C,QAAQ,GAAK,UAAU,EAAIpD,WAAW,GAAK,SAAS,IAAM,CAACP,YAAY,CAACE,IAAI,EAAI,CAACF,YAAY,CAACE,IAAI,CAACmU,IAAI,CAAC,CAAC,CAAC,CAAE,CAC/GrT,QAAQ,CAAC,4DAA4D,CAAC,CACtEF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA;AACA,KAAM,CAAAgK,KAAK,CAAGH,cAAc,CAAC,CAAC,CAC9B,GAAIlK,UAAU,CAAGqK,KAAK,CAAE,CACtB9J,QAAQ,CAAC,4CAA4C,CAAC,CACtDF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,GAAIL,UAAU,CAAG,CAAC,CAAE,CAClBO,QAAQ,CAAC,gCAAgC,CAAC,CAC1CF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,GAAI,CACF,KAAM,CAAAwT,QAAQ,CAAG,CACfC,SAAS,CAAE,MAAM,CACjB9O,aAAa,CAAEzF,YAAY,CAACE,IAAI,CAChCyF,cAAc,CAAE3F,YAAY,CAACG,KAAK,CAClCqT,cAAc,CAAExT,YAAY,CAACI,KAAK,CAClCoU,cAAc,CAAEnU,aAAa,CAC7BwG,WAAW,CAAEpG,UAAU,CACvB+D,KAAK,CAAE1E,IAAI,CAACiF,GAAG,CAACC,IAAI,EAAI,CACtB;AACA,GAAI,CAAAwM,MAAM,CAAGxM,IAAI,CAAC8I,OAAO,CACzB,GAAI,MAAO,CAAA0D,MAAM,GAAK,QAAQ,EAAIA,MAAM,GAAK,IAAI,CAAE,CACjDA,MAAM,CAAGA,MAAM,CAACzO,EAAE,EAAIyO,MAAM,CAC9B,CAEA,MAAO,CACLhH,OAAO,CAAExF,IAAI,CAACjC,EAAE,CAChBwD,QAAQ,CAAEL,UAAU,CAAClB,IAAI,CAACuB,QAAQ,CAAC,CACnCoG,IAAI,CAAE8C,QAAQ,CAAC+B,MAAM,CAAC,CACtBrL,UAAU,CAAED,UAAU,CAAClB,IAAI,CAACmB,UAAU,CAAC,CACvC8K,UAAU,CAAEjM,IAAI,CAACiM,UAAU,EAAI,UACjC,CAAC,CACH,CAAC,CAAC,CACFwD,eAAe,CAAEvQ,aAAa,CAACa,GAAG,CAACC,IAAI,GAAK,CAC1CwF,OAAO,CAAExF,IAAI,CAACjC,EAAE,CAChBwD,QAAQ,CAAEL,UAAU,CAAClB,IAAI,CAACuB,QAAQ,CAAC,CACnCoG,IAAI,CAAE,CAAC,CAAE;AACTxG,UAAU,CAAED,UAAU,CAAClB,IAAI,CAACmB,UAAU,CAAC,CACvCX,MAAM,CAAER,IAAI,CAACQ,MAAM,EAAI,cAAc,CACrCC,aAAa,CAAET,IAAI,CAACS,aAAa,EAAIzF,YAAY,CAACE,IAAI,CACtDyF,cAAc,CAAEX,IAAI,CAACW,cAAc,EAAI3F,YAAY,CAACG,KAAK,CACzDuU,KAAK,CAAE1P,IAAI,CAAC0P,KAAK,EAAI,EACvB,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAA5H,QAAQ,CAAG,KAAM,CAAAtO,GAAG,CAACuO,IAAI,CAAC,aAAa,CAAEuH,QAAQ,CAAC,CACxD,KAAM,CAAAK,MAAM,CAAG7H,QAAQ,CAACvI,IAAI,CAACxB,EAAE,CAC/B,KAAM,CAAAsQ,UAAU,CAAGvG,QAAQ,CAACvI,IAAI,CAACgB,WAAW,CAE5C,GAAI5B,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,GAAI,CACF,KAAM,CAAAiR,kBAAkB,CAAG,KAAM,CAAApW,GAAG,CAACuO,IAAI,eAAA5H,MAAA,CAAewP,MAAM,cAAY,CAAC,CAE3E;AACA,GAAI9Q,YAAY,CAAE,CAChB;AACA,KAAM,CAAAsD,SAAS,CAAGkD,gBAAgB,CAACgJ,UAAU,CAAE,WAAW,CAAC,CAC3D,KAAM,CAAAnM,kBAAkB,CAACC,SAAS,CAAE3H,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAC/D,CAEA;AACAO,OAAO,CAAC,EAAE,CAAC,CACXoE,gBAAgB,CAAC,EAAE,CAAC,CACpBlE,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACnDM,aAAa,CAAC,CAAC,CAAC,CAEhB;AACAgD,YAAY,CAAC,UAAU,CAAC,CAExB;AACA,KAAM,IAAI,CAAA4E,OAAO,CAACC,OAAO,EAAIqB,UAAU,CAACrB,OAAO,CAAE,IAAI,CAAC,CAAC,CAAE;AAEzD;AACA,KAAM,CAAAjF,aAAa,CAAC,CAAC,CAErB;AACA,KAAM,IAAI,CAAAgF,OAAO,CAACC,OAAO,EAAIqB,UAAU,CAACrB,OAAO,CAAE,GAAG,CAAC,CAAC,CAAE;AAExD;AACAiF,wBAAwB,CAAC,CAAC,CAE1B;AACA,GAAI,CAAAqH,cAAc,8CAAA1P,MAAA,CAAgDkO,UAAU,CAAE,CAC9E,GAAIuB,kBAAkB,CAACrQ,IAAI,CAACuQ,qBAAqB,CAAE,CACjD,KAAM,CAAAC,cAAc,CAAGH,kBAAkB,CAACrQ,IAAI,CAACuQ,qBAAqB,CACpED,cAAc,oEAAA1P,MAAA,CAAsE4P,cAAc,CAACC,kBAAkB,eAAA7P,MAAA,CAAa4P,cAAc,CAACnO,YAAY,QAAM,CACrK,CACAc,KAAK,CAACmN,cAAc,CAAC,CACvB,CAAE,MAAOI,aAAa,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CACtB;AACAnU,QAAQ,kBAAAmE,MAAA,CAAkBkO,UAAU,8BAAAlO,MAAA,CAA4B,EAAA+P,qBAAA,CAAAD,aAAa,CAACnI,QAAQ,UAAAoI,qBAAA,kBAAAC,sBAAA,CAAtBD,qBAAA,CAAwB3Q,IAAI,UAAA4Q,sBAAA,iBAA5BA,sBAAA,CAA8BpU,KAAK,GAAIkU,aAAa,CAACG,OAAO,CAAE,CAAC,CAE/H;AACArV,OAAO,CAAC,EAAE,CAAC,CACXoE,gBAAgB,CAAC,EAAE,CAAC,CACpBlE,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACnDM,aAAa,CAAC,CAAC,CAAC,CAEhB;AACA,KAAM,IAAI,CAAA4H,OAAO,CAACC,OAAO,EAAIqB,UAAU,CAACrB,OAAO,CAAE,IAAI,CAAC,CAAC,CAEvD;AACA,KAAM,CAAAjF,aAAa,CAAC,CAAC,CACrB,KAAM,IAAI,CAAAgF,OAAO,CAACC,OAAO,EAAIqB,UAAU,CAACrB,OAAO,CAAE,GAAG,CAAC,CAAC,CACtDiF,wBAAwB,CAAC,CAAC,CAC5B,CACF,CAAC,IAAM,CACL;AAEA;AACA,GAAI3J,YAAY,CAAE,CAChB;AACA,KAAM,CAAAsD,SAAS,CAAGkD,gBAAgB,CAACgJ,UAAU,CAAE,SAAS,CAAC,CACzD,KAAM,CAAAnM,kBAAkB,CAACC,SAAS,CAAE3H,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAC/D,CAEA;AACAO,OAAO,CAAC,EAAE,CAAC,CACXoE,gBAAgB,CAAC,EAAE,CAAC,CACpBlE,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACnDM,aAAa,CAAC,CAAC,CAAC,CAEhB;AACAgD,YAAY,CAAC,UAAU,CAAC,CAExBgE,KAAK,oDAAAvC,MAAA,CAAoDkO,UAAU,CAAE,CAAC,CACxE,CACF,CAAE,MAAO/F,GAAG,CAAE,KAAA+H,aAAA,CAAAC,kBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,mBAAA,CACZ;AACA,IAAAP,aAAA,CAAI/H,GAAG,CAACR,QAAQ,UAAAuI,aAAA,YAAAC,kBAAA,CAAZD,aAAA,CAAc9Q,IAAI,UAAA+Q,kBAAA,WAAlBA,kBAAA,CAAoBvU,KAAK,CAAE,CAC7BC,QAAQ,CAACsM,GAAG,CAACR,QAAQ,CAACvI,IAAI,CAACxD,KAAK,CAAC,CACnC,CAAC,IAAM,KAAAwU,cAAA,CAAIjI,GAAG,CAACR,QAAQ,UAAAyI,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAchR,IAAI,UAAAiR,mBAAA,WAAlBA,mBAAA,CAAoBK,MAAM,CAAE,CACrC7U,QAAQ,CAACsM,GAAG,CAACR,QAAQ,CAACvI,IAAI,CAACsR,MAAM,CAAC,CACpC,CAAC,IAAM,KAAAJ,cAAA,CAAInI,GAAG,CAACR,QAAQ,UAAA2I,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAclR,IAAI,UAAAmR,mBAAA,WAAlBA,mBAAA,CAAoBjQ,aAAa,CAAE,CAC5CzE,QAAQ,CAACsM,GAAG,CAACR,QAAQ,CAACvI,IAAI,CAACkB,aAAa,CAAC,CAAC,CAAC,CAAC,CAC9C,CAAC,IAAM,KAAAkQ,cAAA,CAAIrI,GAAG,CAACR,QAAQ,UAAA6I,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAcpR,IAAI,UAAAqR,mBAAA,WAAlBA,mBAAA,CAAoB/O,WAAW,CAAE,CAC1C7F,QAAQ,CAACsM,GAAG,CAACR,QAAQ,CAACvI,IAAI,CAACsC,WAAW,CAAC,CAAC,CAAC,CAAC,CAC5C,CAAC,IAAM,CACL7F,QAAQ,CAAC,8DAA8D,CAAC,CAC1E,CACF,CAAC,OAAS,CACRF,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAgV,SAAS,CAAGA,CAAA,GAAM,CACtB/V,OAAO,CAAC,EAAE,CAAC,CACXoE,gBAAgB,CAAC,EAAE,CAAC,CACpBnD,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAA+U,kBAAkB,CAAG1X,WAAW,CAAC,CAAC2X,UAAU,CAAEC,KAAK,GAAK,CAC5D,GAAID,UAAU,GAAK,QAAQ,CAAE,CAC3B;AACAlU,cAAc,CAACmU,KAAK,CAAC,CACvB,CAAC,IAAM,CACL;AACA,KAAM,CAAA/J,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQ7J,UAAU,CAACI,OAAO,MAAE,CAACsT,UAAU,EAAGC,KAAK,EAAE,CACjEvU,UAAU,CAACwK,UAAU,CAAC,CACtB5I,aAAa,CAAC4I,UAAU,CAAC,CAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAgK,YAAY,CAAG7X,WAAW,CAAC,IAAM,CACrC,KAAM,CAAA8X,cAAc,CAAG,CAAExU,QAAQ,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CACnDF,UAAU,CAACyU,cAAc,CAAC,CAC1BrU,cAAc,CAAC,EAAE,CAAC,CAAE;AAEpB;AACA,GAAIW,mBAAmB,CAACC,OAAO,EAAIF,aAAa,CAACE,OAAO,CAACW,MAAM,CAAG,CAAC,CAAE,CACnEC,aAAa,CAAC6S,cAAc,CAAC,CAC/B,CACF,CAAC,CAAE,CAAC9U,gBAAgB,CAAEzB,UAAU,CAACyD,MAAM,CAAC,CAAC,CAEzC,KAAM,CAAA+S,mBAAmB,CAAIpR,IAAI,EAAK,CACpChD,kBAAkB,IAAAmD,MAAA,CAAIH,IAAI,CAACjC,EAAE,MAAAoC,MAAA,CAAIH,IAAI,CAAC8I,OAAO,CAAE,CAAC,CAChD5L,eAAe,CAAC8C,IAAI,CAACuB,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC,CAC3C,CAAC,CAED,KAAM,CAAA6P,oBAAoB,CAAIC,CAAC,EAAK,CAClC,KAAM,CAAAL,KAAK,CAAGK,CAAC,CAACC,MAAM,CAACN,KAAK,CAC5B;AACA,GAAIA,KAAK,GAAK,EAAE,EAAI,OAAO,CAACnR,IAAI,CAACmR,KAAK,CAAC,CAAE,CACvC/T,eAAe,CAAC+T,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAO,oBAAoB,CAAIxR,IAAI,EAAK,CACrC,KAAM,CAAAyR,WAAW,CAAGvQ,UAAU,CAACjE,YAAY,CAAC,CAE5C,GAAIA,YAAY,GAAK,EAAE,EAAI8J,KAAK,CAAC0K,WAAW,CAAC,EAAIA,WAAW,CAAG,CAAC,CAAE,CAChEzV,QAAQ,CAAC,+BAA+B,CAAC,CACzCgB,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CAEA;AACA,GAAI2B,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,KAAM,CAAAoN,gBAAgB,CAAGtD,2BAA2B,CAACzI,IAAI,CAACjC,EAAE,CAAC,CAC7D,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAKiC,IAAI,CAAC8I,OAAO,CAAC,CAExE,GAAI,CAAC1C,aAAa,EAAI,CAACA,aAAa,CAACoD,YAAY,CAAE,CACjDxN,QAAQ,uBAAuB,CAAC,CAChCgB,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CAEA;AACA,KAAM,CAAAyP,mBAAmB,CAAG3R,IAAI,CAC7B8E,MAAM,CAAC8R,QAAQ,EAAIA,QAAQ,CAAC3T,EAAE,GAAKiC,IAAI,CAACjC,EAAE,EAAI2T,QAAQ,CAAC5I,OAAO,GAAK9I,IAAI,CAAC8I,OAAO,EAAI4I,QAAQ,CAACzF,UAAU,GAAKjM,IAAI,CAACiM,UAAU,CAAC,CAC3HpG,MAAM,CAAC,CAAC6G,GAAG,CAAEgF,QAAQ,GAAKhF,GAAG,CAAGgF,QAAQ,CAACnQ,QAAQ,CAAE,CAAC,CAAC,CAExD;AACA,KAAM,CAAAoL,UAAU,CAAGvG,aAAa,CAAC8C,kBAAkB,CAAGuD,mBAAmB,CAEzE,GAAIgF,WAAW,CAAG9E,UAAU,CAAE,CAC5B3Q,QAAQ,qCAAAmE,MAAA,CAAqCwM,UAAU,CAAE,CAAC,CAC1D3P,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CACF,CAEA,GAAIyU,WAAW,GAAK,CAAC,CAAE,CACrB;AACA3E,cAAc,CAAC9M,IAAI,CAACjC,EAAE,CAAEiC,IAAI,CAAC8I,OAAO,CAAE9I,IAAI,CAACiM,UAAU,CAAC,CACxD,CAAC,IAAM,CACLM,cAAc,CAACvM,IAAI,CAACjC,EAAE,CAAEiC,IAAI,CAAC8I,OAAO,CAAE2I,WAAW,CAAEzR,IAAI,CAACiM,UAAU,CAAC,CACrE,CAEAjP,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,EAAE,CAAC,CACnBlB,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAA2V,oBAAoB,CAAGA,CAAA,GAAM,CACjC3U,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,EAAE,CAAC,CACrB,CAAC,CAED,KAAM,CAAA0U,sBAAsB,CAAGA,CAACN,CAAC,CAAEtR,IAAI,GAAK,CAC1C,GAAIsR,CAAC,CAACzR,GAAG,GAAK,OAAO,CAAE,CACrB2R,oBAAoB,CAACxR,IAAI,CAAC,CAC5B,CAAC,IAAM,IAAIsR,CAAC,CAACzR,GAAG,GAAK,QAAQ,CAAE,CAC7B8R,oBAAoB,CAAC,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAE,mBAAmB,CAAGA,CAACnJ,SAAS,CAAE8D,MAAM,GAAK,CACjDpP,gBAAgB,CAACiO,IAAI,EAAAlE,aAAA,CAAAA,aAAA,IAChBkE,IAAI,MACP,CAAC3C,SAAS,EAAG8D,MAAM,EACnB,CAAC,CACL,CAAC,CAED,KAAM,CAAAsF,sBAAsB,CAAItM,OAAO,EAAK,CAC1C;AACA,GAAI7G,QAAQ,GAAK,UAAU,EAAI6G,OAAO,CAACuM,cAAc,EAAI,CAAC,CAAE,CAC1D,OACF,CAEA,GAAIvM,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAACjJ,MAAM,CAAG,CAAC,CAAE,CACnE;AACA,KAAM,CAAA2T,cAAc,CAAG7U,aAAa,CAACqI,OAAO,CAACzH,EAAE,CAAC,CAEhD,GAAIiU,cAAc,CAAE,CAClB,KAAM,CAAAC,sBAAsB,CAAGzM,OAAO,CAAC8B,gBAAgB,CAACE,IAAI,CAACC,CAAC,OAAAyK,OAAA,OAAI,CAAC,EAAAA,OAAA,CAAAzK,CAAC,CAACE,IAAI,UAAAuK,OAAA,iBAANA,OAAA,CAAQnU,EAAE,GAAI0J,CAAC,CAACE,IAAI,IAAMqK,cAAc,GAAC,CAE5G,GAAIC,sBAAsB,CAAE,KAAAE,sBAAA,CAC1B;AACA,KAAM,CAAApG,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,OAAA2K,qBAAA,OAAI,CAAA3K,CAAC,CAAC1J,EAAE,IAAM,EAAAqU,qBAAA,CAAAH,sBAAsB,CAACtK,IAAI,UAAAyK,qBAAA,iBAA3BA,qBAAA,CAA6BrU,EAAE,GAAIkU,sBAAsB,CAACtK,IAAI,CAAC,GAAC,CAC5H,KAAM,CAAA5B,SAAS,CAAGI,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,EAAIb,eAAe,CAACC,OAAO,CAAC,CAEzF;AACA,KAAM,CAAA+B,YAAY,CAAG,CACnBxJ,EAAE,CAAE,EAAAoU,sBAAA,CAAAF,sBAAsB,CAACtK,IAAI,UAAAwK,sBAAA,iBAA3BA,sBAAA,CAA6BpU,EAAE,GAAIkU,sBAAsB,CAACtK,IAAI,CAClEzM,IAAI,CAAE+W,sBAAsB,CAAChR,SAAS,CACtC0K,MAAM,CAAEsG,sBAAsB,CAACrG,WAAW,CAC1ClG,KAAK,CAAEK,SACT,CAAC,CACDuF,SAAS,CAAC9F,OAAO,CAAE+B,YAAY,CAAC,CAClC,CACF,CACF,CAAC,IAAM,CACL;AACA+D,SAAS,CAAC9F,OAAO,CAAC,CACpB,CACF,CAAC,CAED,GAAI7J,OAAO,CAAE,CACX,mBACEzB,IAAA,QAAKmY,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBlY,KAAA,QAAKiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpY,IAAA,QAAKmY,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BnY,IAAA,SAAAoY,QAAA,CAAM,qBAAmB,CAAM,CAAC,EAC7B,CAAC,CACH,CAAC,CAEV,CAEA,mBACElY,KAAA,QAAKiY,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBlY,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpY,IAAA,OAAAoY,QAAA,CAAK9X,CAAC,CAAC,sBAAsB,CAAC,CAAK,CAAC,cACpCN,IAAA,QAAKmY,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBlY,KAAA,SAAAkY,QAAA,EAAM,WAAS,CAAC7X,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsH,QAAQ,EAAO,CAAC,CACnC,CAAC,EACH,CAAC,cAEN3H,KAAA,QAAKiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1BlY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,OAAAoY,QAAA,CAAI,UAAQ,CAAI,CAAC,cAGjBlY,KAAA,SAAMiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3BlY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,UAAAoY,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBlY,KAAA,WACE6W,KAAK,CAAExU,OAAO,CAACE,QAAS,CACxB4V,QAAQ,CAAGjB,CAAC,EAAKP,kBAAkB,CAAC,UAAU,CAAEO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CAAAqB,QAAA,eAEhEpY,IAAA,WAAQ+W,KAAK,CAAC,EAAE,CAAAqB,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvC1X,UAAU,CAACgF,MAAM,CAAC9B,GAAG,EAAIA,GAAG,CAACE,WAAW,CAAC,CAAC+B,GAAG,CAACpD,QAAQ,eACrDzC,IAAA,WAA0B+W,KAAK,CAAEtU,QAAQ,CAACoB,EAAG,CAAAuU,QAAA,CAC1C3V,QAAQ,CAACzB,IAAI,EADHyB,QAAQ,CAACoB,EAEd,CACT,CAAC,EACI,CAAC,cACT3D,KAAA,CAACX,MAAM,EACL+Y,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMlU,qBAAqB,CAAC,CAACD,kBAAkB,CAAE,CAC1DoF,KAAK,CAAE,CAAEgP,SAAS,CAAE,QAAS,CAAE,CAAAL,QAAA,EAE9B/T,kBAAkB,CAAG,MAAM,CAAG,QAAQ,CAAC,aAC1C,EAAQ,CAAC,EACN,CAAC,cAENnE,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,UAAAoY,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1BlY,KAAA,QAAKiY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpY,IAAA,WACEkJ,IAAI,CAAC,QAAQ,CACbiP,SAAS,mBAAAlS,MAAA,CAAoB1B,SAAS,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACxEiU,OAAO,CAAEA,CAAA,GAAMhU,YAAY,CAAC,UAAU,CAAE,CAAA4T,QAAA,CACzC,UAED,CAAQ,CAAC,cACTpY,IAAA,WACEkJ,IAAI,CAAC,QAAQ,CACbiP,SAAS,mBAAAlS,MAAA,CAAoB1B,SAAS,GAAK,WAAW,CAAG,QAAQ,CAAG,EAAE,CAAG,CACzEiU,OAAO,CAAEA,CAAA,GAAMhU,YAAY,CAAC,WAAW,CAAE,CAAA4T,QAAA,CAC1C,WAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENlY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,UAAAoY,QAAA,CAAO,YAAU,CAAO,CAAC,cACzBlY,KAAA,QAAKiY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BpY,IAAA,WACEkJ,IAAI,CAAC,QAAQ,CACbiP,SAAS,kBAAAlS,MAAA,CAAmBxB,QAAQ,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACtE+T,OAAO,CAAEA,CAAA,GAAM9T,WAAW,CAAC,UAAU,CAAE,CACvCwD,KAAK,CAAE5H,CAAC,CAAC,+BAA+B,CAAE,CAAA8X,QAAA,CAC3C,UAED,CAAQ,CAAC,cACTpY,IAAA,WACEkJ,IAAI,CAAC,QAAQ,CACbiP,SAAS,kBAAAlS,MAAA,CAAmBxB,QAAQ,GAAK,SAAS,CAAG,QAAQ,CAAG,EAAE,CAAG,CACrE+T,OAAO,CAAEA,CAAA,GAAM9T,WAAW,CAAC,SAAS,CAAE,CACtCwD,KAAK,CAAE5H,CAAC,CAAC,qCAAqC,CAAE,CAAA8X,QAAA,CACjD,SAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENlY,KAAA,QAAKiY,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/CpY,IAAA,UAAAoY,QAAA,CAAO,gBAAc,CAAO,CAAC,cAC7BlY,KAAA,QAAKiY,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpDpY,IAAA,WACEkJ,IAAI,CAAC,QAAQ,CACbiP,SAAS,oCAAAlS,MAAA,CAAqCtB,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC7E6T,OAAO,CAAEA,CAAA,GAAM5T,eAAe,CAAC,IAAI,CAAE,CACrCsD,KAAK,CAAE5H,CAAC,CAAC,iCAAiC,CAAE,CAAA8X,QAAA,CAC7C,KAED,CAAQ,CAAC,cACTpY,IAAA,WACEkJ,IAAI,CAAC,QAAQ,CACbiP,SAAS,oCAAAlS,MAAA,CAAqC,CAACtB,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC9E6T,OAAO,CAAEA,CAAA,GAAM5T,eAAe,CAAC,KAAK,CAAE,CACtCsD,KAAK,CAAE5H,CAAC,CAAC,wBAAwB,CAAE,CAAA8X,QAAA,CACpC,IAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENlY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,UAAAoY,QAAA,CAAO,SAAO,CAAO,CAAC,cACtBpY,IAAA,UAEE0Y,GAAG,CAAEvV,cAAe,CACpB+F,IAAI,CAAC,MAAM,CACXyP,WAAW,CAAErY,CAAC,CAAC,qBAAqB,CAAE,CACtCyW,KAAK,CAAEpU,WAAY,CACnB0V,QAAQ,CAAGjB,CAAC,EAAKP,kBAAkB,CAAC,QAAQ,CAAEO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,EAL1D,cAML,CAAC,EACC,CAAC,cACN/W,IAAA,QAAKmY,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BpY,IAAA,CAACT,MAAM,EAAC+Y,OAAO,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAExB,YAAa,CAAAoB,QAAA,CAAC,OAE9D,CAAQ,CAAC,CACN,CAAC,EACF,CAAC,CAGN/T,kBAAkB,eACjBnE,KAAA,QAAKiY,SAAS,CAAC,qBAAqB,CAAC1O,KAAK,CAAE,CAC1CmP,YAAY,CAAE,MAAM,CACpBC,OAAO,CAAE,MAAM,CACfC,eAAe,CAAE,SAAS,CAC1BC,YAAY,CAAE,QAAQ,CACtBhP,MAAM,CAAE,mBACV,CAAE,CAAAqO,QAAA,eACAlY,KAAA,QAAKuJ,KAAK,CAAE,CACVuP,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QAAQ,CACpBN,YAAY,CAAE,MAChB,CAAE,CAAAR,QAAA,eACAlY,KAAA,OAAIuJ,KAAK,CAAE,CAAE0P,MAAM,CAAE,GAAG,CAAEC,QAAQ,CAAE,MAAM,CAAEC,UAAU,CAAE,KAAM,CAAE,CAAAjB,QAAA,EAAC,4BAE/D,CAAC/V,gBAAgB,eAAIrC,IAAA,SAAMyJ,KAAK,CAAE,CAAE6P,UAAU,CAAE,QAAQ,CAAEC,KAAK,CAAE,SAAU,CAAE,CAAAnB,QAAA,CAAC,QAAC,CAAM,CAAC,EACpF,CAAC,cACLpY,IAAA,WACEwY,OAAO,CAAEvH,4BAA6B,CACtCuI,QAAQ,CAAEnX,gBAAiB,CAC3BoH,KAAK,CAAE,CACLoP,OAAO,CAAE,aAAa,CACtBO,QAAQ,CAAE,UAAU,CACpBL,YAAY,CAAE,UAAU,CACxBhP,MAAM,CAAE,mBAAmB,CAC3B0P,MAAM,CAAEpX,gBAAgB,CAAG,aAAa,CAAG,SAAS,CACpDyW,eAAe,CAAEzW,gBAAgB,CAAG,SAAS,CAAG,SAAS,CACzDkX,KAAK,CAAE,OAAO,CACdF,UAAU,CAAE,KAAK,CACjBK,OAAO,CAAErX,gBAAgB,CAAG,GAAG,CAAG,CACpC,CAAE,CAAA+V,QAAA,CACH,uBAED,CAAQ,CAAC,EACN,CAAC,cACNpY,IAAA,QAAKyJ,KAAK,CAAE,CACVuP,OAAO,CAAE,MAAM,CACfW,mBAAmB,CAAE,uCAAuC,CAC5DC,GAAG,CAAE,QACP,CAAE,CAAAxB,QAAA,CACC1X,UAAU,CAACmF,GAAG,CAACpD,QAAQ,eACtBvC,KAAA,QAAuBuJ,KAAK,CAAE,CAC5BuP,OAAO,CAAE,MAAM,CACfE,UAAU,CAAE,QAAQ,CACpBD,cAAc,CAAE,eAAe,CAC/BJ,OAAO,CAAE,QAAQ,CACjBC,eAAe,CAAE,OAAO,CACxBC,YAAY,CAAE,UAAU,CACxBhP,MAAM,CAAE,mBACV,CAAE,CAAAqO,QAAA,eACApY,IAAA,SAAMyJ,KAAK,CAAE,CAAE2P,QAAQ,CAAE,UAAU,CAAEC,UAAU,CAAE,KAAM,CAAE,CAAAjB,QAAA,CACtD3V,QAAQ,CAACzB,IAAI,CACV,CAAC,cACPhB,IAAA,WACEwY,OAAO,CAAEA,CAAA,GAAM5H,sBAAsB,CAACnO,QAAQ,CAACoB,EAAE,CAAEpB,QAAQ,CAACqB,WAAW,CAAE,CACzE2F,KAAK,CAAE,CACLoP,OAAO,CAAE,gBAAgB,CACzBO,QAAQ,CAAE,SAAS,CACnBL,YAAY,CAAE,SAAS,CACvBhP,MAAM,CAAE,WAAW,CACnB0P,MAAM,CAAE,SAAS,CACjBX,eAAe,CAAErW,QAAQ,CAACqB,WAAW,CAAG,SAAS,CAAG,SAAS,CAC7D+V,WAAW,CAAEpX,QAAQ,CAACqB,WAAW,CAAG,SAAS,CAAG,SAAS,CACzDyV,KAAK,CAAE9W,QAAQ,CAACqB,WAAW,CAAG,SAAS,CAAG,SAC5C,CAAE,CAAAsU,QAAA,CAED3V,QAAQ,CAACqB,WAAW,CAAG,UAAU,CAAG,cAAc,CAC7C,CAAC,GA1BDrB,QAAQ,CAACoB,EA2Bd,CACN,CAAC,CACC,CAAC,EACH,CACN,cAED7D,IAAA,QAAKmY,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BlY,KAAA,MAAGiY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC1B5X,QAAQ,CAAC2D,MAAM,CAAC,UAAQ,CAAC3D,QAAQ,CAAC2D,MAAM,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,QAC7D,EAAG,CAAC,CACD,CAAC,cAENnE,IAAA,QAAKmY,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3B5X,QAAQ,CACNqG,KAAK,CAAC,CAAChC,WAAW,CAAG,CAAC,EAAIE,SAAS,CAAEF,WAAW,CAAGE,SAAS,CAAC,CAC7Dc,GAAG,CAACyF,OAAO,OAAAwO,sBAAA,oBACZ9Z,IAAA,QAEEmY,SAAS,iBAAAlS,MAAA,CAAkBqF,OAAO,CAACuM,cAAc,EAAI,CAAC,EAAIpT,QAAQ,GAAK,UAAU,CAAG,cAAc,CAAG,EAAE,cAAa,CACpH+T,OAAO,CAAEA,CAAA,GAAMZ,sBAAsB,CAACtM,OAAO,CAAE,CAAA8M,QAAA,cAE/ClY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,OAAAoY,QAAA,CAAK9M,OAAO,CAACtK,IAAI,CAAK,CAAC,cACvBhB,IAAA,MAAGmY,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE9M,OAAO,CAAC2J,GAAG,CAAI,CAAC,cAC5C/U,KAAA,MAAGiY,SAAS,CAAC,eAAe,CAAAC,QAAA,EACzB,CAAC2B,qBAAA,EAAM,CACN;AACA,KAAM,CAAAjL,QAAQ,EAAAiL,qBAAA,CAAGzO,OAAO,CAAC8B,gBAAgB,UAAA2M,qBAAA,iBAAxBA,qBAAA,CAA0BzM,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAAClB,YAAY,CAAC,CACzE,GAAIuC,QAAQ,EAAI7M,iBAAiB,CAACqJ,OAAO,CAACzH,EAAE,CAAC,CAAE,CAC7C,KAAM,CAAAgO,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAmW,iBAAiB,CAAGnI,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,OAAA0M,cAAA,OAAI,CAAA1M,CAAC,CAAC1J,EAAE,IAAM,EAAAoW,cAAA,CAAAnL,QAAQ,CAACrB,IAAI,UAAAwM,cAAA,iBAAbA,cAAA,CAAepW,EAAE,GAAIiL,QAAQ,CAACrB,IAAI,CAAC,GAAC,CACpG,GAAIuM,iBAAiB,CAAE,CACrB,MAAO,CAAA/N,mBAAmB,CAACX,OAAO,CAAE0O,iBAAiB,CAAC,CAAC9S,OAAO,CAAC,CAAC,CAAC,CACnE,CACF,CACA;AACA,MAAO,CAAAmE,eAAe,CAACC,OAAO,CAAC,CAACpE,OAAO,CAAC,CAAC,CAAC,CAC5C,CAAC,EAAE,CAAC,CAAC,MACL,CAACoE,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAACjJ,MAAM,CAAG,CAAC,kBAAA8B,MAAA,CAC9C,EAAA6T,sBAAA,CAAAxO,OAAO,CAAC8B,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAAClB,YAAY,CAAC,UAAAuN,sBAAA,iBAAvDA,sBAAA,CAAyDrM,IAAI,CAACgE,MAAM,GAAI,OAAO,KAAG,EAEnG,CAAC,cACJvR,KAAA,MAAGiY,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SACpB,CAAC9M,OAAO,CAACuM,cAAc,CAAC,GAAC,CAACvM,OAAO,CAACmC,IAAI,CAC5CxL,iBAAiB,CAACqJ,OAAO,CAACzH,EAAE,CAAC,EAAIyH,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAACjJ,MAAM,CAAG,CAAC,eAC/FnE,IAAA,SAAMmY,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC5B,CAAC,IAAM,CACN,KAAM,CAAAvG,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,MAAO,CAAAyH,OAAO,CAAC8B,gBAAgB,CAACvH,GAAG,CAAC2L,cAAc,EAAI,KAAA0I,qBAAA,CAAAC,qBAAA,CACpD,KAAM,CAAAjO,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,OAAA6M,qBAAA,OAAI,CAAA7M,CAAC,CAAC1J,EAAE,IAAM,EAAAuW,qBAAA,CAAA5I,cAAc,CAAC/D,IAAI,UAAA2M,qBAAA,iBAAnBA,qBAAA,CAAqBvW,EAAE,GAAI2N,cAAc,CAAC/D,IAAI,CAAC,GAAC,CAC5G,GAAI,CAACvB,aAAa,CAAE,MAAO,KAAI,CAE/B;AACA,KAAM,CAAAmO,QAAQ,CAAG,CAAAnO,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAElL,IAAI,KAAAkZ,qBAAA,CAAI1I,cAAc,CAAC/D,IAAI,UAAAyM,qBAAA,iBAAnBA,qBAAA,CAAqBlZ,IAAI,GAAIwQ,cAAc,CAACzK,SAAS,CAE7F,mBACE7G,KAAA,SAA2DiY,SAAS,eAAAlS,MAAA,CAAgBiG,aAAa,CAACoD,YAAY,CAAG,WAAW,CAAG,aAAa,CAAG,CAAA8I,QAAA,EAC5IiC,QAAQ,CAAC,IAAE,CAACpO,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,CAAChF,OAAO,CAAC,CAAC,CAAC,CAAC,QAAM,CAACgF,aAAa,CAAC8C,kBAAkB,CAAC,aAC9G,GAFW,EAAAmL,qBAAA,CAAA3I,cAAc,CAAC/D,IAAI,UAAA0M,qBAAA,iBAAnBA,qBAAA,CAAqBtW,EAAE,GAAI2N,cAAc,CAAC/D,IAE/C,CAAC,CAEX,CAAC,CAAC,CAAC/H,MAAM,CAAC4U,OAAO,CAAC,CACpB,CAAC,EAAE,CAAC,CACA,CACP,EACA,CAAC,CAGHhP,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAACjJ,MAAM,CAAG,CAAC,eAC9DjE,KAAA,QAAKiY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpY,IAAA,UAAAoY,QAAA,CAAO,OAAK,CAAO,CAAC,cACpBlY,KAAA,WACEiY,SAAS,CAAC,aAAa,CACvBpB,KAAK,CAAE9T,aAAa,CAACqI,OAAO,CAACzH,EAAE,CAAC,EAAI,EAAG,CACvCwU,QAAQ,CAAGjB,CAAC,EAAK,CACf,KAAM,CAAA9E,MAAM,CAAG/B,QAAQ,CAAC6G,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC,CACvCY,mBAAmB,CAACrM,OAAO,CAACzH,EAAE,CAAEyO,MAAM,CAAC,CACzC,CAAE,CACFkG,OAAO,CAAGpB,CAAC,EAAKA,CAAC,CAACmD,eAAe,CAAC,CAAE,CAAAnC,QAAA,eAEpCpY,IAAA,WAAQ+W,KAAK,CAAC,EAAE,CAAAqB,QAAA,CAAC,aAAW,CAAQ,CAAC,CACpC9M,OAAO,CAAC8B,gBAAgB,CAACvH,GAAG,CAAC,CAAC2L,cAAc,CAAEgJ,KAAK,GAAK,KAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACvD;AACA,KAAM,CAAA/I,gBAAgB,CAAGtD,2BAA2B,CAACjD,OAAO,CAACzH,EAAE,CAAC,CAChE,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,OAAAsN,qBAAA,OAAI,CAAAtN,CAAC,CAAC1J,EAAE,IAAM,EAAAgX,qBAAA,CAAArJ,cAAc,CAAC/D,IAAI,UAAAoN,qBAAA,iBAAnBA,qBAAA,CAAqBhX,EAAE,GAAI2N,cAAc,CAAC/D,IAAI,CAAC,GAAC,CAC5G,KAAM,CAAA2B,WAAW,CAAGlD,aAAa,CAAGA,aAAa,CAACoD,YAAY,CAAG,KAAK,CACtE,KAAM,CAAAwL,YAAY,CAAG5O,aAAa,CAAGA,aAAa,CAAC8C,kBAAkB,CAAG,CAAC,CAEzE;AACA,KAAM,CAAAqL,QAAQ,CAAG,CAAAnO,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAElL,IAAI,KAAAyZ,qBAAA,CAAIjJ,cAAc,CAAC/D,IAAI,UAAAgN,qBAAA,iBAAnBA,qBAAA,CAAqBzZ,IAAI,GAAIwQ,cAAc,CAACzK,SAAS,CAC7F,KAAM,CAAAgU,UAAU,CAAG,CAAA7O,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEuF,MAAM,KAAAiJ,qBAAA,CAAIlJ,cAAc,CAAC/D,IAAI,UAAAiN,qBAAA,iBAAnBA,qBAAA,CAAqBjJ,MAAM,GAAID,cAAc,CAACE,WAAW,CAGrG,mBACExR,KAAA,WAEE6W,KAAK,CAAE,EAAA6D,qBAAA,CAAApJ,cAAc,CAAC/D,IAAI,UAAAmN,qBAAA,iBAAnBA,qBAAA,CAAqB/W,EAAE,GAAI2N,cAAc,CAAC/D,IAAK,CACtD+L,QAAQ,CAAE/U,QAAQ,GAAK,UAAU,CAAG,CAAC2K,WAAW,CAAG,KAAM,CAAAgJ,QAAA,EAExDiC,QAAQ,CAAC,IAAE,CAACU,UAAU,CAAC,MAAI,CAAC9O,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,CAAChF,OAAO,CAAC,CAAC,CAAC,CAAC,MACpF,CAAC,CAACkI,WAAW,EAAI3K,QAAQ,GAAK,UAAU,CAAG,iBAAiB,CAAG,EAAE,GAL5D,EAAAkW,qBAAA,CAAAnJ,cAAc,CAAC/D,IAAI,UAAAkN,qBAAA,iBAAnBA,qBAAA,CAAqB9W,EAAE,GAAI2N,cAAc,CAAC/D,IAMzC,CAAC,CAEb,CAAC,CAAC,EACI,CAAC,EACN,CACN,CAGA,CAAC,CAACnC,OAAO,CAAC8B,gBAAgB,EAAI9B,OAAO,CAAC8B,gBAAgB,CAACjJ,MAAM,EAAI,CAAC,gBACjEnE,IAAA,CAACT,MAAM,EACL+Y,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMpH,SAAS,CAAC9F,OAAO,CAAE,CAClCkO,QAAQ,CAAE,CAAC,IAAM,CACf;AACA,GAAI/U,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,MAAK,CAAE;AAChB,CAEA;AACA,GAAI,CAACxC,iBAAiB,CAACqJ,OAAO,CAACzH,EAAE,CAAC,CAAE,CAClC,MAAO,KAAI,CAAE;AACf,CAEA;AACA,MAAO,CAAAyH,OAAO,CAACuM,cAAc,EAAI,CAAC,CACpC,CAAC,EAAE,CAAE,CACLM,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAE1B,CAAC,IAAM,CACN,GAAI,CAACnW,iBAAiB,CAACqJ,OAAO,CAACzH,EAAE,CAAC,CAAE,CAClC,MAAO,YAAY,CACrB,CAEA;AACA,GAAIY,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,aAAa,CACtB,CAEA,MAAO,CAAA6G,OAAO,CAACuM,cAAc,EAAI,CAAC,CAAG,cAAc,CAAG,aAAa,CACrE,CAAC,EAAE,CAAC,CACE,CACT,CAGAvM,OAAO,CAAC4G,aAAa,EAAI5G,OAAO,CAAC6G,eAAe,eAC/CnS,IAAA,QAAKmY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BlY,KAAA,UAAOiY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EAAC,aACtB,CAAC9M,OAAO,CAAC6G,eAAe,CAAC,mBACtC,EAAO,CAAC,CACL,CACN,CAGA7G,OAAO,CAAC6C,eAAe,EAAI7C,OAAO,CAAC6C,eAAe,CAAChK,MAAM,CAAG,CAAC,eAC5DnE,IAAA,QAAKmY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BpY,IAAA,MAAAoY,QAAA,CAAG,0CAAwC,CAAG,CAAC,CAC5C,CACN,EACE,CAAC,EA9ID9M,OAAO,CAACzH,EA+IV,CAAC,EACP,CAAC,CACC,CAAC,CAGLrD,QAAQ,CAAC2D,MAAM,CAAGY,SAAS,eAC1B7E,KAAA,QAAKiY,SAAS,CAAC,qBAAqB,CAAC1O,KAAK,CAAE,CAAEuP,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEW,GAAG,CAAE,MAAM,CAAEnB,SAAS,CAAE,MAAO,CAAE,CAAAL,QAAA,eACxHpY,IAAA,CAACT,MAAM,EACL+Y,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAM1T,cAAc,CAAC4N,CAAC,EAAI/F,IAAI,CAACuC,GAAG,CAAC,CAAC,CAAEwD,CAAC,CAAG,CAAC,CAAC,CAAE,CACvD8G,QAAQ,CAAE3U,WAAW,GAAK,CAAE,CAAAuT,QAAA,CAC7B,MAED,CAAQ,CAAC,cACTlY,KAAA,SAAMuJ,KAAK,CAAE,CAAEuR,SAAS,CAAE,QAAS,CAAE,CAAA5C,QAAA,EAAC,OAC/B,CAACvT,WAAW,CAAC,MAAI,CAAC8H,IAAI,CAACsO,IAAI,CAACza,QAAQ,CAAC2D,MAAM,CAAGY,SAAS,CAAC,EACzD,CAAC,cACP/E,IAAA,CAACT,MAAM,EACL+Y,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAM1T,cAAc,CAAC4N,CAAC,EAAI/F,IAAI,CAACuO,GAAG,CAACvO,IAAI,CAACsO,IAAI,CAACza,QAAQ,CAAC2D,MAAM,CAAGY,SAAS,CAAC,CAAE2N,CAAC,CAAG,CAAC,CAAC,CAAE,CAC5F8G,QAAQ,CAAE3U,WAAW,EAAI8H,IAAI,CAACsO,IAAI,CAACza,QAAQ,CAAC2D,MAAM,CAAGY,SAAS,CAAE,CAAAqT,QAAA,CACjE,MAED,CAAQ,CAAC,EACN,CACN,EACE,CAAC,cAGNlY,KAAA,QAAKiY,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBlY,KAAA,QAAKiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpY,IAAA,OAAAoY,QAAA,CAAI,eAAa,CAAI,CAAC,CACrBxX,IAAI,CAACuD,MAAM,CAAG,CAAC,eACdnE,IAAA,CAACT,MAAM,EAAC+Y,OAAO,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAE5B,SAAU,CAAAwB,QAAA,CAAC,YAE3D,CAAQ,CACT,EACE,CAAC,CAELvW,KAAK,eACJ7B,IAAA,QAAKmY,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BvW,KAAK,CACH,CACN,cAED7B,IAAA,QAAKmY,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBxX,IAAI,CAACuD,MAAM,GAAK,CAAC,cAChBjE,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpY,IAAA,MAAAoY,QAAA,CAAG,eAAa,CAAG,CAAC,cACpBpY,IAAA,MAAGmY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,iDAA+C,CAAG,CAAC,EAC/E,CAAC,cAENlY,KAAA,CAAAE,SAAA,EAAAgY,QAAA,eACElY,KAAA,QAAKiY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpY,IAAA,QAAKmY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cAC7CpY,IAAA,QAAKmY,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAAI,CAAK,CAAC,cACvCpY,IAAA,QAAKmY,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAK,CAAC,cACzCpY,IAAA,QAAKmY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,KAAG,CAAK,CAAC,cAC1CpY,IAAA,QAAKmY,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAM,CAAK,CAAC,cAC3CpY,IAAA,QAAKmY,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAK,CAAC,cACzCpY,IAAA,QAAKmY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,EAC1C,CAAC,CACLxX,IAAI,CAACiF,GAAG,CAACC,IAAI,eACZ5F,KAAA,QAA2DiY,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC9ElY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpY,IAAA,OAAAoY,QAAA,CAAKtS,IAAI,CAAC9E,IAAI,CAAK,CAAC,cACpBd,KAAA,MAAGiY,SAAS,CAAC,UAAU,CAAAC,QAAA,EAAC,OAAK,CAACtS,IAAI,CAACmP,GAAG,EAAI,CAAC,cAC3CjV,IAAA,SAAMmY,SAAS,qBAAAlS,MAAA,CAAsBH,IAAI,CAACiM,UAAU,CAAG,CAAAqG,QAAA,CACpDtS,IAAI,CAACiM,UAAU,GAAK,WAAW,CAAG,IAAI,CAAG,KAAK,CAC3C,CAAC,EACJ,CAAC,cACN/R,IAAA,QAAKmY,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBtS,IAAI,CAAC4L,WAAW,EAAI,OAAO,CACzB,CAAC,cACNxR,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxBpR,UAAU,CAAClB,IAAI,CAACmB,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,MAC1C,EAAK,CAAC,cACNlH,IAAA,QAAKmY,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BlY,KAAA,QAAKiY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpY,IAAA,CAACT,MAAM,EACLgZ,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBE,OAAO,CAAEA,CAAA,GAAMnG,cAAc,CAACvM,IAAI,CAACjC,EAAE,CAAEiC,IAAI,CAAC8I,OAAO,CAAE9I,IAAI,CAACuB,QAAQ,CAAG,CAAC,CAAEvB,IAAI,CAACiM,UAAU,CAAE,CAAAqG,QAAA,CAC1F,GAED,CAAQ,CAAC,CACRvV,eAAe,MAAAoD,MAAA,CAAQH,IAAI,CAACjC,EAAE,MAAAoC,MAAA,CAAIH,IAAI,CAAC8I,OAAO,CAAE,cAC/C5O,IAAA,QAAKmY,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BpY,IAAA,UACEkJ,IAAI,CAAC,QAAQ,CACb6N,KAAK,CAAEhU,YAAa,CACpBsV,QAAQ,CAAElB,oBAAqB,CAC/BgE,UAAU,CAAG/D,CAAC,EAAKM,sBAAsB,CAACN,CAAC,CAAEtR,IAAI,CAAE,CACnDsV,MAAM,CAAEA,CAAA,GAAM9D,oBAAoB,CAACxR,IAAI,CAAE,CACzCqS,SAAS,CAAC,gBAAgB,CAC1B+C,GAAG,CAAC,GAAG,CACPhM,GAAG,CAAEpJ,IAAI,CAAC+R,cAAe,CACzBwD,SAAS,MACV,CAAC,CACC,CAAC,cAENrb,IAAA,SACEmY,SAAS,CAAC,oBAAoB,CAC9BK,OAAO,CAAEA,CAAA,GAAMtB,mBAAmB,CAACpR,IAAI,CAAE,CACzCoC,KAAK,CAAE5H,CAAC,CAAC,+BAA+B,CAAE,CAAA8X,QAAA,CAEzCtS,IAAI,CAACuB,QAAQ,CACV,CACP,cACDrH,IAAA,CAACT,MAAM,EACLgZ,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBE,OAAO,CAAEA,CAAA,GAAMnG,cAAc,CAACvM,IAAI,CAACjC,EAAE,CAAEiC,IAAI,CAAC8I,OAAO,CAAE9I,IAAI,CAACuB,QAAQ,CAAG,CAAC,CAAEvB,IAAI,CAACiM,UAAU,CAAE,CACzFyH,QAAQ,CAAE,CAAC,IAAM,CACf;AACA,GAAI/U,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,MAAK,CAAE;AAChB,CAEA,KAAM,CAAAoN,gBAAgB,CAAGtD,2BAA2B,CAACzI,IAAI,CAACjC,EAAE,CAAC,CAC7D,KAAM,CAAAqI,aAAa,CAAG2F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEvE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC1J,EAAE,GAAKiC,IAAI,CAAC8I,OAAO,CAAC,CACxE,KAAM,CAAA2D,mBAAmB,CAAG3R,IAAI,CAC7B8E,MAAM,CAAC8R,QAAQ,EAAIA,QAAQ,CAAC3T,EAAE,GAAKiC,IAAI,CAACjC,EAAE,EAAI2T,QAAQ,CAAC5I,OAAO,GAAK9I,IAAI,CAAC8I,OAAO,EAAI4I,QAAQ,CAACzF,UAAU,GAAKjM,IAAI,CAACiM,UAAU,CAAC,CAC3HpG,MAAM,CAAC,CAAC6G,GAAG,CAAEgF,QAAQ,GAAKhF,GAAG,CAAGgF,QAAQ,CAACnQ,QAAQ,CAAE,CAAC,CAAC,CACxD,KAAM,CAAAoL,UAAU,CAAG,CAAC,CAAAvG,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE8C,kBAAkB,GAAI,CAAC,EAAIuD,mBAAmB,CACjF,MAAO,CAAAzM,IAAI,CAACuB,QAAQ,EAAIoL,UAAU,CACpC,CAAC,EAAE,CAAE,CAAA2F,QAAA,CACN,GAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,cACNpY,IAAA,QAAKmY,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BpY,IAAA,SAAMmY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,CACzC,CAAC,cACNlY,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB,CAACtS,IAAI,CAACuB,QAAQ,CAAGvB,IAAI,CAACmB,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,MAChD,EAAK,CAAC,cACNlH,IAAA,QAAKmY,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BpY,IAAA,CAACT,MAAM,EACLgZ,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,QAAQ,CAChBE,OAAO,CAAEA,CAAA,GAAM5F,cAAc,CAAC9M,IAAI,CAACjC,EAAE,CAAEiC,IAAI,CAAC8I,OAAO,CAAE9I,IAAI,CAACiM,UAAU,CAAE,CACtE7J,KAAK,CAAE5H,CAAC,CAAC,oBAAoB,CAAE,CAAA8X,QAAA,CAChC,MAED,CAAQ,CAAC,CACN,CAAC,MAAAnS,MAAA,CApFKH,IAAI,CAACjC,EAAE,MAAAoC,MAAA,CAAIH,IAAI,CAAC8I,OAAO,MAAA3I,MAAA,CAAIH,IAAI,CAACiM,UAAU,CAqFlD,CACN,CAAC,CAGD/M,aAAa,CAACb,MAAM,CAAG,CAAC,eACvBjE,KAAA,CAAAE,SAAA,EAAAgY,QAAA,eACEpY,IAAA,QAAKmY,SAAS,CAAC,0BAA0B,CAAAC,QAAA,cACvCpY,IAAA,OAAAoY,QAAA,CAAI,mCAAiC,CAAI,CAAC,CACvC,CAAC,CACLpT,aAAa,CAACa,GAAG,CAACC,IAAI,eACrB5F,KAAA,QAAkCiY,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACpElY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlY,KAAA,OAAAkY,QAAA,EAAKtS,IAAI,CAAC9E,IAAI,CAAC,cAAY,EAAI,CAAC,cAChCd,KAAA,MAAGiY,SAAS,CAAC,UAAU,CAAAC,QAAA,EAAC,OAAK,CAACtS,IAAI,CAACmP,GAAG,EAAI,CAAC,CAC1CnP,IAAI,CAACsN,eAAe,eACnBlT,KAAA,MAAGiY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,QACxB,CAACtS,IAAI,CAACuB,QAAQ,CAAC,GAAC,CAACvB,IAAI,CAACuN,iBAAiB,EAAI,OAAO,EACvD,CACJ,EACE,CAAC,cACNrT,IAAA,QAAKmY,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,OAE3B,CAAK,CAAC,cACNlY,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxBpR,UAAU,CAAClB,IAAI,CAACmB,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,MAC1C,EAAK,CAAC,cACNhH,KAAA,QAAKiY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpY,IAAA,SAAMmY,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACvCtS,IAAI,CAACuB,QAAQ,CACV,CAAC,cACPrH,IAAA,UAAOmY,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,MAAI,CAAO,CAAC,EACvC,CAAC,cACNpY,IAAA,QAAKmY,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BlY,KAAA,WACE6W,KAAK,CAAEjR,IAAI,CAACQ,MAAO,CACnB+R,QAAQ,CAAGjB,CAAC,EAAK3D,qBAAqB,CAAC3N,IAAI,CAACjC,EAAE,CAAEuT,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CAChEoB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eAEnCpY,IAAA,WAAQ+W,KAAK,CAAC,cAAc,CAAAqB,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACtDpY,IAAA,WAAQ+W,KAAK,CAAC,UAAU,CAAAqB,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1CpY,IAAA,WAAQ+W,KAAK,CAAC,KAAK,CAAAqB,QAAA,CAAC,uBAAqB,CAAQ,CAAC,EAC5C,CAAC,CACN,CAAC,cACNlY,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB,CAACtS,IAAI,CAACuB,QAAQ,CAAGvB,IAAI,CAACmB,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,MAChD,EAAK,CAAC,cACNlH,IAAA,QAAKmY,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BpY,IAAA,CAACT,MAAM,EACLgZ,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,QAAQ,CAChBE,OAAO,CAAEA,CAAA,GAAM9E,uBAAuB,CAAC5N,IAAI,CAACjC,EAAE,CAAE,CAChDqE,KAAK,CAAC,uBAAuB,CAAAkQ,QAAA,CAC9B,MAED,CAAQ,CAAC,CACN,CAAC,gBAAAnS,MAAA,CA7CeH,IAAI,CAACjC,EAAE,CA8CzB,CACN,CAAC,EACF,CACH,EACD,CACH,CACE,CAAC,CAELjD,IAAI,CAACuD,MAAM,CAAG,CAAC,eACdjE,KAAA,CAAAE,SAAA,EAAAgY,QAAA,eACElY,KAAA,QAAKiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlY,KAAA,QAAKiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpY,IAAA,SAAAoY,QAAA,CAAM,cAAY,CAAM,CAAC,cACzBlY,KAAA,SAAAkY,QAAA,EAAOzE,iBAAiB,CAAC,CAAC,CAACzM,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC9C,CAAC,CACLlC,aAAa,CAACb,MAAM,CAAG,CAAC,eACvBjE,KAAA,QAAKiY,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9CpY,IAAA,SAAAoY,QAAA,CAAM,kBAAgB,CAAM,CAAC,cAC7BlY,KAAA,SAAAkY,QAAA,EAAOpM,uBAAuB,CAAC,CAAC,CAAC9E,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACpD,CACN,cACDhH,KAAA,QAAKiY,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzCpY,IAAA,SAAAoY,QAAA,CAAM,mBAAiB,CAAM,CAAC,cAC9BlY,KAAA,SAAAkY,QAAA,EAAOpE,aAAa,CAAC,CAAC,CAAC9M,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC1C,CAAC,cACNhH,KAAA,QAAKiY,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxCpY,IAAA,SAAAoY,QAAA,CAAM,eAAa,CAAM,CAAC,cAC1BlY,KAAA,SAAAkY,QAAA,EAAOxE,YAAY,CAAC,CAAC,CAAC1M,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACzC,CAAC,cACNhH,KAAA,QAAKiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpY,IAAA,SAAAoY,QAAA,CAAM,iBAAe,CAAM,CAAC,cAC5BlY,KAAA,SAAAkY,QAAA,EAAO3M,cAAc,CAAC,CAAC,CAACvE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC3C,CAAC,CACLlC,aAAa,CAACb,MAAM,CAAG,CAAC,eACvBjE,KAAA,QAAKiY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpY,IAAA,SAAAoY,QAAA,CAAM,kBAAgB,CAAM,CAAC,cAC7BlY,KAAA,SAAAkY,QAAA,EAAOpM,uBAAuB,CAAC,CAAC,CAAC9E,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACpD,CACN,cACDhH,KAAA,QAAKiY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpY,IAAA,SAAAoY,QAAA,CAAM,wBAAsB,CAAM,CAAC,cACnClY,KAAA,SAAAkY,QAAA,EAAO3M,cAAc,CAAC,CAAC,CAACvE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC3C,CAAC,EACH,CAAC,cAENhH,KAAA,SAAMiY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC/BlY,KAAA,QAAKiY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpY,IAAA,OAAAoY,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BpY,IAAA,QAAKmY,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpY,IAAA,UACEkJ,IAAI,CAAC,MAAM,CACXyP,WAAW,CAAGlU,QAAQ,GAAK,UAAU,EAAIpD,WAAW,GAAK,SAAS,CAAI,8CAA8C,CAAG,0BAA2B,CAClJ0V,KAAK,CAAEjW,YAAY,CAACE,IAAK,CACzBqX,QAAQ,CAAGjB,CAAC,EAAKrW,eAAe,CAAAkM,aAAA,CAAAA,aAAA,IAAKnM,YAAY,MAAEE,IAAI,CAAEoW,CAAC,CAACC,MAAM,CAACN,KAAK,EAAC,CAAE,CAC1EoB,SAAS,CAAE,CAAC1T,QAAQ,GAAK,UAAU,EAAIpD,WAAW,GAAK,SAAS,GAAK,CAACP,YAAY,CAACE,IAAI,CAAG,gBAAgB,CAAG,EAAG,CACjH,CAAC,CACC,CAAC,cACNhB,IAAA,QAAKmY,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpY,IAAA,UACEkJ,IAAI,CAAC,KAAK,CACVyP,WAAW,CAAC,yBAAyB,CACrC5B,KAAK,CAAEjW,YAAY,CAACG,KAAM,CAC1BoX,QAAQ,CAAGjB,CAAC,EAAKrW,eAAe,CAAAkM,aAAA,CAAAA,aAAA,IAAKnM,YAAY,MAAEG,KAAK,CAAEmW,CAAC,CAACC,MAAM,CAACN,KAAK,EAAC,CAAE,CAC5E,CAAC,CACC,CAAC,cACN/W,IAAA,QAAKmY,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpY,IAAA,UACEkJ,IAAI,CAAC,OAAO,CACZyP,WAAW,CAAC,kBAAkB,CAC9B5B,KAAK,CAAEjW,YAAY,CAACI,KAAM,CAC1BmX,QAAQ,CAAGjB,CAAC,EAAKrW,eAAe,CAAAkM,aAAA,CAAAA,aAAA,IAAKnM,YAAY,MAAEI,KAAK,CAAEkW,CAAC,CAACC,MAAM,CAACN,KAAK,EAAC,CAAE,CAC5E,CAAC,CACC,CAAC,EACH,CAAC,cAEN7W,KAAA,QAAKiY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpY,IAAA,OAAAoY,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBpY,IAAA,QAAKmY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7B,CAAC,MAAM,CAAE,MAAM,CAAE,cAAc,CAAE,eAAe,CAAC,CAACvS,GAAG,CAACyV,MAAM,eAC3Dpb,KAAA,UAAoBiY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC5CpY,IAAA,UACEkJ,IAAI,CAAC,OAAO,CACZlI,IAAI,CAAC,SAAS,CACd+V,KAAK,CAAEuE,MAAO,CACdC,OAAO,CAAEpa,aAAa,GAAKma,MAAO,CAClCjD,QAAQ,CAAGjB,CAAC,EAAKhW,gBAAgB,CAACgW,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CACnD,CAAC,cACF/W,IAAA,SAAAoY,QAAA,CAAOkD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,CAAO,CAAC,GAR3CH,MASL,CACR,CAAC,CACC,CAAC,cAENtb,IAAA,OAAAoY,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBlY,KAAA,QAAKiY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlY,KAAA,UAAOiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC7BpY,IAAA,UACEkJ,IAAI,CAAC,OAAO,CACZlI,IAAI,CAAC,aAAa,CAClB+V,KAAK,CAAC,MAAM,CACZwE,OAAO,CAAEla,WAAW,GAAK,MAAO,CAChCgX,QAAQ,CAAGjB,CAAC,EAAK9V,cAAc,CAAC8V,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CACjD,CAAC,cACF/W,IAAA,SAAAoY,QAAA,CAAM,qBAAmB,CAAM,CAAC,EAC3B,CAAC,cACRlY,KAAA,UAAOiY,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC7BpY,IAAA,UACEkJ,IAAI,CAAC,OAAO,CACZlI,IAAI,CAAC,aAAa,CAClB+V,KAAK,CAAC,SAAS,CACfwE,OAAO,CAAEla,WAAW,GAAK,SAAU,CACnCgX,QAAQ,CAAGjB,CAAC,EAAK9V,cAAc,CAAC8V,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CACjD,CAAC,cACF/W,IAAA,SAAAoY,QAAA,CAAM,4BAA0B,CAAM,CAAC,EAClC,CAAC,EACL,CAAC,CAEL/W,WAAW,GAAK,SAAS,eACxBnB,KAAA,QAAKiY,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpY,IAAA,UAAAoY,QAAA,CAAO,eAAa,CAAO,CAAC,cAC5BpY,IAAA,UACEkJ,IAAI,CAAC,QAAQ,CACbwS,IAAI,CAAC,MAAM,CACXR,GAAG,CAAC,GAAG,CACPhM,GAAG,CAAEzD,cAAc,CAAC,CAAE,CACtBsL,KAAK,CAAExV,UAAU,EAAI,CAAE,CACvB8W,QAAQ,CAAGjB,CAAC,EAAK,CACf,KAAM,CAAAL,KAAK,CAAG/P,UAAU,CAACoQ,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC,EAAI,CAAC,CAC7CvV,aAAa,CAACuV,KAAK,CAAC,CACtB,CAAE,CACF4B,WAAW,CAAErY,CAAC,CAAC,2BAA2B,CAAE,CAC7C,CAAC,cACFJ,KAAA,UAAAkY,QAAA,EAAO,mBAAiB,CAAC3M,cAAc,CAAC,CAAC,CAACvE,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAe,CAAC,CAACuE,cAAc,CAAC,CAAC,EAAIlK,UAAU,EAAI,CAAC,CAAC,EAAE2F,OAAO,CAAC,CAAC,CAAC,EAAQ,CAAC,EAC5H,CACN,EACE,CAAC,EACA,CAAC,cAEPhH,KAAA,QAAKiY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAE/BpY,IAAA,CAACT,MAAM,EACL+Y,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEtN,kBAAmB,CAC5BiN,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC9B,kCAED,CAAQ,CAAC,cAETlY,KAAA,CAACX,MAAM,EACLiZ,OAAO,CAAEtD,cAAe,CACxBzT,OAAO,CAAEE,UAAW,CACpBwW,SAAS,CAAC,iBAAiB,CAC3BI,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBkB,QAAQ,CAAE5Y,IAAI,CAACuD,MAAM,GAAK,CAAE,CAAAiU,QAAA,EAE3B3T,QAAQ,GAAK,UAAU,CAAGnE,CAAC,CAAC,mBAAmB,CAAC,CAAGA,CAAC,CAAC,yBAAyB,CAAC,CAC/EqE,YAAY,EAAIrE,CAAC,CAAC,mBAAmB,CAAC,EACjC,CAAC,EACN,CAAC,EACN,CACH,EACE,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}