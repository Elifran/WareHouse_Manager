{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton, { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PointOfSale = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n\n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n\n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n\n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit;\n        }\n      }\n    });\n    console.log('All default units set:', defaultUnits);\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n\n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      console.log('Bulk stock availability response:', response.data);\n      console.log('Processed stock data:', stockData);\n\n      // Log Apple Juice stock availability specifically\n      if (stockData[4]) {\n        // Assuming Apple Juice has ID 4\n        console.log('Apple Juice stock availability after refresh:', stockData[4]);\n      }\n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      console.log('Refreshing stock availability for', products.length, 'products');\n      fetchBulkStockAvailability();\n    } else {\n      console.log('No products to refresh stock availability for');\n    }\n  };\n  const getUpdatedStockAvailability = productId => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart.filter(item => item.id === productId).reduce((total, item) => {\n      // Find the unit info to get conversion factor\n      const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n      if (unitInfo && unitInfo.conversion_factor) {\n        // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n        return total + item.quantity * unitInfo.conversion_factor;\n      } else if (unitInfo && unitInfo.is_base_unit) {\n        // If it's the base unit (pieces), no conversion needed\n        return total + item.quantity;\n      }\n      return total;\n    }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n\n      // Always filter for active products\n      params.append('is_active', 'true');\n\n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      console.log('Fetching products from:', url);\n      const response = await api.get(url);\n      const newProducts = response.data.results || response.data;\n      console.log('Fetched products:', newProducts.length, 'products');\n\n      // Log stock quantities for Apple Juice specifically\n      const appleJuice = newProducts.find(p => p.name === 'Apple Juice');\n      if (appleJuice) {\n        console.log('Apple Juice stock after refresh:', appleJuice.stock_quantity);\n      }\n      setProducts(newProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n  const fetchStockAvailability = async productId => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n  const addToCart = (product, selectedUnit = null) => {\n    console.log('addToCart called with:', {\n      product: product.name,\n      selectedUnit\n    });\n\n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || product.compatible_units && product.compatible_units[0] || {\n      id: product.base_unit,\n      name: 'Piece',\n      symbol: 'piece'\n    };\n    console.log('Using unit:', unit);\n\n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      console.log('Stock availability not loaded for product:', product.id);\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n\n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unit.id);\n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n\n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item => item.id === product.id && item.unit_id === unit.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      };\n      console.log('Adding new item to cart:', newCartItem);\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unitId);\n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n\n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart.filter(item => item.id === productId && item.unit_id === unitId).reduce((sum, item) => sum + item.quantity, 0);\n\n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      setCart(cart.map(item => item.id === productId && item.unit_id === unitId ? {\n        ...item,\n        quantity\n      } : item));\n      setError('');\n    }\n  };\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + item.quantity * item.unit_price, 0);\n  };\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = item.quantity * item.unit_price * item.tax_rate / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = item.quantity * item.unit_price * 100 / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n  const autoPrintReceipt = async (saleNumber, saleData) => {\n    try {\n      // Create print content for the completed sale\n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: (user === null || user === void 0 ? void 0 : user.username) || 'Unknown User',\n        user_id: (user === null || user === void 0 ? void 0 : user.id) || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: 'completed',\n        total_amount: calculateSubtotal(),\n        items: cart.map(item => {\n          var _item$unit;\n          return {\n            product_name: item.name,\n            product_sku: item.sku,\n            quantity: item.quantity,\n            unit_name: ((_item$unit = item.unit) === null || _item$unit === void 0 ? void 0 : _item$unit.name) || 'piece',\n            unit_price: item.price,\n            total_price: item.price * item.quantity\n          };\n        })\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale');\n\n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n\n      // Wait for content to load then print\n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n    setProcessing(true);\n    setError('');\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n\n        // Auto-print the receipt after successful sale completion\n        await autoPrintReceipt(saleNumber, response.data);\n\n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({\n          name: '',\n          phone: '',\n          email: ''\n        });\n\n        // Wait a moment for the backend to process stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n\n        // Refresh product data to update stock quantities\n        await fetchProducts();\n\n        // Wait another moment for stock availability to be updated\n        await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n\n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        var _completeError$respon, _completeError$respon2;\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${((_completeError$respon = completeError.response) === null || _completeError$respon === void 0 ? void 0 : (_completeError$respon2 = _completeError$respon.data) === null || _completeError$respon2 === void 0 ? void 0 : _completeError$respon2.error) || completeError.message}`);\n\n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({\n          name: '',\n          phone: '',\n          email: ''\n        });\n\n        // Wait for backend to process any completed stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Refresh data\n        await fetchProducts();\n        await new Promise(resolve => setTimeout(resolve, 500));\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n  const handleFilterChange = (filterType, value) => {\n    const newFilters = {\n      ...filters,\n      [filterType]: value\n    };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n  };\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      search: ''\n    };\n    setFilters(clearedFilters);\n    fetchProducts(clearedFilters);\n  };\n  const handleQuantityClick = item => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n  const handleQuantityChange = e => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n  const handleQuantitySubmit = item => {\n    const newQuantity = parseInt(tempQuantity);\n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n\n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === item.unit_id);\n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n\n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n\n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n  const handleUnitSelection = (productId, unitId) => {\n    console.log(`Unit selection changed for product ${productId} to unit ${unitId}`);\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n  const handleProductCardClick = product => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      console.log(`Product ${product.name} clicked, selectedUnitId:`, selectedUnitId);\n      console.log('Type of selectedUnitId:', typeof selectedUnitId);\n      console.log('Available compatible units:', product.compatible_units);\n      console.log('Current selectedUnits state:', selectedUnits);\n      if (selectedUnitId) {\n        console.log('Looking for unit with ID:', selectedUnitId);\n        console.log('Available compatible units structure:', product.compatible_units.map(u => {\n          var _u$unit;\n          return {\n            unit_id: u.unit,\n            unit_object: u.unit,\n            is_default: u.is_default,\n            is_base_unit: (_u$unit = u.unit) === null || _u$unit === void 0 ? void 0 : _u$unit.is_base_unit\n          };\n        }));\n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        console.log('Found selectedCompatibleUnit:', selectedCompatibleUnit);\n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === selectedCompatibleUnit.unit);\n          const unitPrice = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.price) || product.price;\n\n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          console.log('Adding to cart with unit:', selectedUnit);\n          console.log('Unit price from stock info:', unitPrice);\n          addToCart(product, selectedUnit);\n        } else {\n          console.log('No compatible unit found for selectedUnitId:', selectedUnitId);\n        }\n      } else {\n        console.log('No selectedUnitId for product:', product.name);\n      }\n    } else {\n      // For single-unit products, add directly\n      console.log('Adding single-unit product to cart:', product.name);\n      addToCart(product);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading products...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pos\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Point of Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-user\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Cashier: \", user === null || user === void 0 ? void 0 : user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-products\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pos-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: filters.category,\n              onChange: e => handleFilterChange('category', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 17\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.id,\n                children: category.name\n              }, category.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Search:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search products...\",\n              value: filters.search,\n              onChange: e => handleFilterChange('search', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"small\",\n              onClick: clearFilters,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"products-count\",\n            children: [products.length, \" product\", products.length !== 1 ? 's' : '', \" found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-grid\",\n          children: products.map(product => {\n            var _product$compatible_u;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`,\n              onClick: () => handleProductCardClick(product),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-sku\",\n                  children: product.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-price\",\n                  children: [\"$\", parseFloat(product.price).toFixed(2), product.compatible_units && product.compatible_units.length > 1 && ` (base unit: ${((_product$compatible_u = product.compatible_units.find(u => u.unit.is_base_unit)) === null || _product$compatible_u === void 0 ? void 0 : _product$compatible_u.unit.symbol) || 'piece'})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-stock\",\n                  children: [\"Stock: \", product.stock_quantity, \" \", product.unit, stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stock-details\",\n                    children: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      return product.compatible_units.map(compatibleUnit => {\n                        const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === compatibleUnit.unit);\n                        if (!unitStockInfo) return null;\n\n                        // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                        const unitName = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.name) || compatibleUnit.unit.name;\n                        return /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`,\n                          children: [unitName, \": \", unitStockInfo.available_quantity]\n                        }, compatibleUnit.unit, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 726,\n                          columnNumber: 31\n                        }, this);\n                      }).filter(Boolean);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 19\n                }, this), product.compatible_units && product.compatible_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-selection\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Unit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"unit-select\",\n                    value: selectedUnits[product.id] || '',\n                    onChange: e => {\n                      const unitId = parseInt(e.target.value);\n                      handleUnitSelection(product.id, unitId);\n                    },\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 25\n                    }, this), product.compatible_units.map((compatibleUnit, index) => {\n                      var _unitStockInfo$price;\n                      // Use updated stock availability that considers cart contents\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === compatibleUnit.unit);\n                      const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                      const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n\n                      // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                      const unitName = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.name) || compatibleUnit.unit.name;\n                      const unitSymbol = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.symbol) || compatibleUnit.unit.symbol;\n\n                      // Debug logging\n                      if (index === 0) {\n                        console.log(`Rendering units for ${product.name}:`, {\n                          compatibleUnit,\n                          is_default: compatibleUnit.is_default,\n                          is_base_unit: compatibleUnit.unit.is_base_unit,\n                          selectedUnitId: selectedUnits[product.id]\n                        });\n                      }\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: compatibleUnit.unit,\n                        disabled: !isAvailable,\n                        children: [unitName, \" (\", unitSymbol, \") - $\", (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : (_unitStockInfo$price = unitStockInfo.price) === null || _unitStockInfo$price === void 0 ? void 0 : _unitStockInfo$price.toFixed(2)) || 'N/A', !isAvailable ? ' - OUT OF STOCK' : ` - ${availableQty} available`]\n                      }, compatibleUnit.unit, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 772,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 21\n                }, this), (!product.compatible_units || product.compatible_units.length <= 1) && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"small\",\n                  onClick: () => addToCart(product),\n                  disabled: (() => {\n                    // Check if any unit has available stock\n                    if (!stockAvailability[product.id]) {\n                      return true; // Disable if stock data not loaded\n                    }\n\n                    // For single unit products, check base stock\n                    return product.stock_quantity <= 0;\n                  })(),\n                  className: \"add-to-cart-btn\",\n                  children: (() => {\n                    if (!stockAvailability[product.id]) {\n                      return 'Loading...';\n                    }\n                    return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 21\n                }, this), product.available_units && product.available_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-instruction\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Click card or select unit to add to cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 17\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Shopping Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"small\",\n            onClick: clearCart,\n            children: \"Clear Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-items\",\n          children: cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-cart\",\n            children: \"Cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-unit\",\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-price\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-quantity\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-total\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-actions\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 17\n            }, this), cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-product\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"item-sku\",\n                  children: [\"SKU: \", item.sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-unit\",\n                children: item.unit_symbol || 'piece'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-price\",\n                children: [\"$\", parseFloat(item.unit_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-quantity\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quantity-controls\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity - 1),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 870,\n                    columnNumber: 25\n                  }, this), editingQuantity === `${item.id}-${item.unit_id}` ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"quantity-edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: tempQuantity,\n                      onChange: handleQuantityChange,\n                      onKeyPress: e => handleQuantityKeyPress(e, item),\n                      onBlur: () => handleQuantitySubmit(item),\n                      className: \"quantity-input\",\n                      min: \"0\",\n                      max: item.stock_quantity,\n                      autoFocus: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 879,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"quantity clickable\",\n                    onClick: () => handleQuantityClick(item),\n                    title: \"Click to edit quantity\",\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 892,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity + 1),\n                    disabled: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === item.unit_id);\n                      const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                      const maxAllowed = ((unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.available_quantity) || 0) + currentCartQuantity;\n                      return item.quantity >= maxAllowed;\n                    })(),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 900,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-total\",\n                children: [\"$\", (item.quantity * item.unit_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-actions\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"danger\",\n                  onClick: () => removeFromCart(item.id, item.unit_id),\n                  title: \"Remove item\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 21\n              }, this)]\n            }, `${item.id}-${item.unit_id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row cost-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cost (excl. tax):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateCost().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row tax-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tax included:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateTax().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row total\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customer-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Customer Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Customer Name (Optional)\",\n                value: customerInfo.name,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                placeholder: \"Phone Number (Optional)\",\n                value: customerInfo.phone,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  phone: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email (Optional)\",\n                value: customerInfo.email,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-methods\",\n              children: ['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payment-method\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"payment\",\n                  value: method,\n                  checked: paymentMethod === method,\n                  onChange: e => setPaymentMethod(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: method.replace('_', ' ').toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 23\n                }, this)]\n              }, method, true, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkout-actions\",\n            children: [/*#__PURE__*/_jsxDEV(PrintButton, {\n              data: {\n                sale_number: `TEMP-${Date.now()}`,\n                customer_name: customerInfo.name || 'Walk-in Customer',\n                customer_phone: customerInfo.phone || '',\n                customer_email: customerInfo.email || '',\n                user_name: (user === null || user === void 0 ? void 0 : user.username) || 'Unknown User',\n                user_id: (user === null || user === void 0 ? void 0 : user.id) || 'unknown',\n                created_at: new Date().toISOString(),\n                print_timestamp: new Date().toISOString(),\n                print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                status: 'pending',\n                total_amount: calculateSubtotal(),\n                items: cart.map(item => {\n                  var _item$unit2;\n                  return {\n                    product_name: item.name,\n                    product_sku: item.sku,\n                    quantity: item.quantity,\n                    unit_name: ((_item$unit2 = item.unit) === null || _item$unit2 === void 0 ? void 0 : _item$unit2.name) || 'piece',\n                    unit_price: item.price,\n                    total_price: item.price * item.quantity\n                  };\n                })\n              },\n              title: \"Sale Receipt\",\n              type: \"sale\",\n              printText: \"Print Receipt\",\n              validateText: \"Validate Sale\",\n              showValidateOption: true,\n              onValidate: handleCheckout,\n              disabled: cart.length === 0,\n              className: \"print-receipt-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCheckout,\n              loading: processing,\n              className: \"validate-button\",\n              size: \"large\",\n              variant: \"primary\",\n              children: \"Validate Sale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 645,\n    columnNumber: 5\n  }, this);\n};\n_s(PointOfSale, \"gsj++ujKaHHfuq8/8esd1aBCZAg=\", false, function () {\n  return [useAuth];\n});\n_c = PointOfSale;\nexport default PointOfSale;\nvar _c;\n$RefreshReg$(_c, \"PointOfSale\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","Button","PrintButton","generatePrintContent","jsxDEV","_jsxDEV","Fragment","_Fragment","PointOfSale","_s","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","fetchProducts","fetchCategories","length","fetchBulkStockAvailability","defaultUnits","forEach","product","compatible_units","selectedUnit","find","u","is_default","unit","is_base_unit","id","console","log","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","item","reduce","total","unitInfo","unit_id","conversion_factor","quantity","baseUnit","totalBaseStock","available_quantity","remainingPieces","Math","max","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","url","toString","get","newProducts","results","appleJuice","p","stock_quantity","prev","addToCart","base_unit","symbol","updatedStockInfo","unitStockInfo","existingItem","newCartItem","unit_name","unit_symbol","unit_price","price","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","printData","sale_number","customer_name","customer_phone","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","status","total_amount","items","_item$unit","product_name","product_sku","sku","total_price","printContent","printWindow","window","open","document","write","close","onload","focus","print","setTimeout","handleCheckout","payment_method","saleId","Promise","resolve","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","detail","clearCart","handleFilterChange","filterType","value","newFilters","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","parseInt","isNaN","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","selectedUnitId","_u$unit","unit_object","selectedCompatibleUnit","unitPrice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","variant","size","onClick","_product$compatible_u","parseFloat","toFixed","compatibleUnit","unitName","Boolean","stopPropagation","index","_unitStockInfo$price","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","title","method","checked","replace","toUpperCase","_item$unit2","printText","validateText","showValidateOption","onValidate","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton, { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit;\n        }\n      }\n    });\n    console.log('All default units set:', defaultUnits);\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      console.log('Bulk stock availability response:', response.data);\n      console.log('Processed stock data:', stockData);\n      \n      // Log Apple Juice stock availability specifically\n      if (stockData[4]) { // Assuming Apple Juice has ID 4\n        console.log('Apple Juice stock availability after refresh:', stockData[4]);\n      }\n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      console.log('Refreshing stock availability for', products.length, 'products');\n      fetchBulkStockAvailability();\n    } else {\n      console.log('No products to refresh stock availability for');\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      console.log('Fetching products from:', url);\n      const response = await api.get(url);\n      const newProducts = response.data.results || response.data;\n      console.log('Fetched products:', newProducts.length, 'products');\n      \n      // Log stock quantities for Apple Juice specifically\n      const appleJuice = newProducts.find(p => p.name === 'Apple Juice');\n      if (appleJuice) {\n        console.log('Apple Juice stock after refresh:', appleJuice.stock_quantity);\n      }\n      \n      setProducts(newProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    console.log('addToCart called with:', { product: product.name, selectedUnit });\n    \n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || (product.compatible_units && product.compatible_units[0]) || { id: product.base_unit, name: 'Piece', symbol: 'piece' };\n    console.log('Using unit:', unit);\n    \n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      console.log('Stock availability not loaded for product:', product.id);\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    \n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    \n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n    \n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    \n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      };\n      console.log('Adding new item to cart:', newCartItem);\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n      \n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(item => item.id === productId && item.unit_id === unitId)\n        .reduce((sum, item) => sum + item.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData) => {\n    try {\n      // Create print content for the completed sale\n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: 'completed',\n        total_amount: calculateSubtotal(),\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit?.name || 'piece',\n          unit_price: item.price,\n          total_price: item.price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale');\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n        \n        // Auto-print the receipt after successful sale completion\n        await autoPrintReceipt(saleNumber, response.data);\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Wait a moment for the backend to process stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n        \n        // Refresh product data to update stock quantities\n        await fetchProducts();\n        \n        // Wait another moment for stock availability to be updated\n        await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n        \n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        \n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n        \n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Wait for backend to process any completed stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Refresh data\n        await fetchProducts();\n        await new Promise(resolve => setTimeout(resolve, 500));\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    const newFilters = { ...filters, [filterType]: value };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    fetchProducts(clearedFilters);\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseInt(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n    \n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart\n      .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n      .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n    \n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    \n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    console.log(`Unit selection changed for product ${productId} to unit ${unitId}`);\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      console.log(`Product ${product.name} clicked, selectedUnitId:`, selectedUnitId);\n      console.log('Type of selectedUnitId:', typeof selectedUnitId);\n      console.log('Available compatible units:', product.compatible_units);\n      console.log('Current selectedUnits state:', selectedUnits);\n      \n      if (selectedUnitId) {\n        console.log('Looking for unit with ID:', selectedUnitId);\n        console.log('Available compatible units structure:', product.compatible_units.map(u => ({\n          unit_id: u.unit,\n          unit_object: u.unit,\n          is_default: u.is_default,\n          is_base_unit: u.unit?.is_base_unit\n        })));\n        \n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        console.log('Found selectedCompatibleUnit:', selectedCompatibleUnit);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === selectedCompatibleUnit.unit);\n          const unitPrice = unitStockInfo?.price || product.price;\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          console.log('Adding to cart with unit:', selectedUnit);\n          console.log('Unit price from stock info:', unitPrice);\n          addToCart(product, selectedUnit);\n        } else {\n          console.log('No compatible unit found for selectedUnitId:', selectedUnitId);\n        }\n      } else {\n        console.log('No selectedUnitId for product:', product.name);\n      }\n    } else {\n      // For single-unit products, add directly\n      console.log('Adding single-unit product to cart:', product.name);\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>Point of Sale</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <div className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={filters.search}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    ${parseFloat(product.price).toFixed(2)}\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {unitStockInfo.available_quantity}\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit.symbol;\n                          \n                          // Debug logging\n                          if (index === 0) {\n                            console.log(`Rendering units for ${product.name}:`, {\n                              compatibleUnit,\n                              is_default: compatibleUnit.is_default,\n                              is_base_unit: compatibleUnit.unit.is_base_unit,\n                              selectedUnitId: selectedUnits[product.id]\n                            });\n                          }\n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit} \n                              value={compatibleUnit.unit}\n                              disabled={!isAvailable}\n                            >\n                              {unitName} ({unitSymbol}) - ${unitStockInfo?.price?.toFixed(2) || 'N/A'} \n                              {!isAvailable ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <p className=\"empty-cart\">Cart is empty</p>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      ${parseFloat(item.unit_price).toFixed(2)}\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title=\"Click to edit quantity\"\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1)}\n                          disabled={(() => {\n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      ${(item.quantity * item.unit_price).toFixed(2)}\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id)}\n                        title=\"Remove item\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>${calculateSubtotal().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>${calculateCost().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>${calculateTax().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>${calculateSubtotal().toFixed(2)}</span>\n                </div>\n              </div>\n\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customer Name (Optional)\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"checkout-actions\">\n                <PrintButton\n                  data={{\n                    sale_number: `TEMP-${Date.now()}`,\n                    customer_name: customerInfo.name || 'Walk-in Customer',\n                    customer_phone: customerInfo.phone || '',\n                    customer_email: customerInfo.email || '',\n                    user_name: user?.username || 'Unknown User',\n                    user_id: user?.id || 'unknown',\n                    created_at: new Date().toISOString(),\n                    print_timestamp: new Date().toISOString(),\n                    print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                    status: 'pending',\n                    total_amount: calculateSubtotal(),\n                    items: cart.map(item => ({\n                      product_name: item.name,\n                      product_sku: item.sku,\n                      quantity: item.quantity,\n                      unit_name: item.unit?.name || 'piece',\n                      unit_price: item.price,\n                      total_price: item.price * item.quantity\n                    }))\n                  }}\n                  title=\"Sale Receipt\"\n                  type=\"sale\"\n                  printText=\"Print Receipt\"\n                  validateText=\"Validate Sale\"\n                  showValidateOption={true}\n                  onValidate={handleCheckout}\n                  disabled={cart.length === 0}\n                  className=\"print-receipt-btn\"\n                />\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                >\n                  Validate Sale\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}