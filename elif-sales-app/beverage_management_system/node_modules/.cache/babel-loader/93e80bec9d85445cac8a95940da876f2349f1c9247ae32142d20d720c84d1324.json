{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import{generatePrintContent}from'../components/PrintButton';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{t}=useTranslation();const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[paymentType,setPaymentType]=useState('full');// 'full' or 'partial'\nconst[paidAmount,setPaidAmount]=useState(0);const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\n// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Calculate total amount\nconst calculateTotal=()=>{const total=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);return total;};// Update paid amount when payment type changes\nuseEffect(()=>{const total=calculateTotal();if(paymentType==='full'){setPaidAmount(total);}else if(paymentType==='partial'){// Only reset to 0 if it's currently set to the full amount\nif(paidAmount===total){setPaidAmount(0);}}},[paymentType,cart]);// Function to get the current price for a specific unit\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!(unitStockInfo!==null&&unitStockInfo!==void 0&&unitStockInfo.price))return 0;// If we're in standard mode, return the standard unit price\nif(priceMode==='standard'){return unitStockInfo.price;}// If we're in wholesale mode, we need to calculate the wholesale price for this unit\nif(priceMode==='wholesale'&&product.wholesale_price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);// Handle edge cases\nif(!standardBasePrice||standardBasePrice<=0){return unitStockInfo.price;}// Calculate the conversion factor from standard to wholesale\nconst wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;// For wholesale pricing, we need to apply the wholesale conversion factor\n// to the base unit price, then convert to the selected unit\nlet wholesaleUnitPrice;if(unitStockInfo.is_base_unit){// If this is the base unit, apply wholesale factor directly\nwholesaleUnitPrice=standardBasePrice*wholesaleConversionFactor;}else{// If this is not the base unit, we need to:\n// 1. Get the wholesale base price\n// 2. Convert it to the selected unit using the same conversion factor as the standard price\nconst standardUnitPrice=unitStockInfo.price;const unitConversionFactor=standardUnitPrice/standardBasePrice;wholesaleUnitPrice=wholesaleBasePrice*unitConversionFactor;}// Round to 2 decimal places to avoid floating point precision issues\nconst roundedPrice=Math.round(wholesaleUnitPrice*100)/100;// Ensure we return a valid number\nreturn isNaN(roundedPrice)||roundedPrice<0?unitStockInfo.price:roundedPrice;}// Fallback to standard price\nreturn unitStockInfo.price;};useEffect(()=>{const initializeData=async()=>{await fetchCategories();await fetchProducts();// Wait for categories to be loaded before fetching products\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categories.length>0&&products.length>0){fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categories.length]);// Only when categories are loaded\n// Debounced search effect - completely rewritten for stability\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Set new timeout\nsearchTimeoutRef.current=setTimeout(()=>{if(searchInput!==filters.search){const newFilters=_objectSpread(_objectSpread({},filters),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);}},500);// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput,filters]);// Depend on searchInput and filters\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/api/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const url=\"/products/\".concat(params.toString()?'?'+params.toString():'');const response=await api.get(url);const allProducts=response.data.results||response.data;// Debug: Log the first product to see its structure\nif(allProducts.length>0){}// If categories are not loaded yet, show all products but log a warning\nif(categories.length===0){setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category information, check if category is sellable\nif(product.category&&product.category.is_sellable!==undefined){isSellable=product.category.is_sellable;}// If product has category_name, find the category in our categories list\nelse if(product.category_name){const category=categories.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categories.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}// Debug: Log filtering decision\nif(!isSellable){}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categories.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);}catch(err){setError('Failed to load products');}finally{setLoading(false);}};const fetchCategories=async()=>{try{const response=await api.get('/api/products/categories/');setCategories(response.data.results||response.data);}catch(err){}};const fetchStockAvailability=async productId=>{try{const response=await api.get(\"/api/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nlet unit=selectedUnit;if(!unit&&product.compatible_units&&product.compatible_units[0]){var _compatibleUnit$unit,_compatibleUnit$unit2,_compatibleUnit$unit3;const compatibleUnit=product.compatible_units[0];unit={id:((_compatibleUnit$unit=compatibleUnit.unit)===null||_compatibleUnit$unit===void 0?void 0:_compatibleUnit$unit.id)||compatibleUnit.unit,name:compatibleUnit.unit_name||((_compatibleUnit$unit2=compatibleUnit.unit)===null||_compatibleUnit$unit2===void 0?void 0:_compatibleUnit$unit2.name)||'Piece',symbol:compatibleUnit.unit_symbol||((_compatibleUnit$unit3=compatibleUnit.unit)===null||_compatibleUnit$unit3===void 0?void 0:_compatibleUnit$unit3.symbol)||'piece'};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(cart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}// Get unit stock info for price calculation\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product),price_mode:priceMode});setCart([...cart,newCartItem]);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};const autoPrintReceipt=async function(saleNumber,saleData){let saleStatus=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'completed';try{// Create print content for the sale\nconst total=calculateSubtotal();const remaining=total-paidAmount;const printData={sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:total,paid_amount:paidAmount,remaining_amount:remaining,payment_status:remaining>0?'partial':'paid',due_date:remaining>0?new Date(Date.now()+30*24*60*60*1000).toLocaleDateString():null,// 30 days from now\nitems:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};// Generate print content using the same logic as PrintButton\nconst printContent=generatePrintContent(printData,'Sale Receipt','sale',t);// Open print window\nconst printWindow=window.open('','_blank','width=800,height=600');printWindow.document.write(printContent);printWindow.document.close();// Wait for content to load then print\nconst printAfterLoad=()=>{printWindow.focus();printWindow.print();// Close the window after a short delay\nsetTimeout(()=>{printWindow.close();},1000);};// Check if window is already loaded\nif(printWindow.document.readyState==='complete'){printAfterLoad();}else{printWindow.onload=printAfterLoad;}}catch(error){// Don't show error to user as it's not critical\n}};const handleCheckout=async()=>{if(cart.length===0){setError(t('pos.cart_empty'));return;}setProcessing(true);setError('');// Validate customer name for partial payments\nif(paymentType==='partial'&&(!customerInfo.name||!customerInfo.name.trim())){setError('Customer name is required for partial payments');setProcessing(false);return;}// Validate paid amount\nconst total=calculateTotal();if(paidAmount>total){setError('Paid amount cannot exceed the total amount');setProcessing(false);return;}if(paidAmount<0){setError('Paid amount cannot be negative');setProcessing(false);return;}try{const saleData={sale_type:'sale',customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,paid_amount:paidAmount,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};})};// Create the sale\nconst response=await api.post('/api/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{await api.post(\"/api/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'completed');}// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();alert(\"Sale completed successfully! Sale Number: \".concat(saleNumber));}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nsetError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'pending');}// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');alert(t('messages.pending_sale_created',{saleNumber}));}}catch(err){var _err$response,_err$response$data,_err$response2,_err$response2$data,_err$response3,_err$response3$data,_err$response4,_err$response4$data;// Handle different types of errors\nif((_err$response=err.response)!==null&&_err$response!==void 0&&(_err$response$data=_err$response.data)!==null&&_err$response$data!==void 0&&_err$response$data.error){setError(err.response.data.error);}else if((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.detail){setError(err.response.data.detail);}else if((_err$response3=err.response)!==null&&_err$response3!==void 0&&(_err$response3$data=_err$response3.data)!==null&&_err$response3$data!==void 0&&_err$response3$data.customer_name){setError(err.response.data.customer_name[0]);}else if((_err$response4=err.response)!==null&&_err$response4!==void 0&&(_err$response4$data=_err$response4.data)!==null&&_err$response4$data!==void 0&&_err$response4$data.paid_amount){setError(err.response.data.paid_amount[0]);}else{setError('Failed to create sale. Please check the console for details.');}}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setError('');};const handleFilterChange=(filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filters),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}};const clearFilters=()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\nfetchProducts(clearedFilters);};const toggleCategorySellable=async(categoryId,isSellable)=>{try{await api.patch(\"/products/categories/\".concat(categoryId,\"/\"),{is_sellable:!isSellable});// Refresh categories to show updated status\nawait fetchCategories();// Refresh products to apply new sellable filter\nfetchProducts(filters);}catch(err){setError('Failed to update category status');}};const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products (only for complete sales)\nif(saleMode==='complete'&&product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>{var _u$unit;return(((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.id)||u.unit)===selectedUnitId;});if(selectedCompatibleUnit){var _selectedCompatibleUn2;// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _selectedCompatibleUn;return u.id===(((_selectedCompatibleUn=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn===void 0?void 0:_selectedCompatibleUn.id)||selectedCompatibleUnit.unit);});const unitPrice=getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product);// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:((_selectedCompatibleUn2=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn2===void 0?void 0:_selectedCompatibleUn2.id)||selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.point_of_sale')}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:t('alerts.sale_will_be_completed'),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:t('alerts.sale_will_be_created_pending'),children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group print-receipt-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle print-receipt-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:t('alerts.print_receipt_after_sale'),children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:t('pos.dont_print_receipt'),children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:t('pos.search_products'),value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 1rem 0',fontSize:'1rem',fontWeight:'600'},children:\"Manage Sellable Categories\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.map(product=>{var _product$compatible_u2;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0&&saleMode==='complete'?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[(_product$compatible_u=>{// Find the actual base unit and get its price\nconst baseUnit=(_product$compatible_u=product.compatible_units)===null||_product$compatible_u===void 0?void 0:_product$compatible_u.find(u=>u.unit.is_base_unit);if(baseUnit&&stockAvailability[product.id]){const updatedStockInfo=getUpdatedStockAvailability(product.id);const baseUnitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _baseUnit$unit;return u.id===(((_baseUnit$unit=baseUnit.unit)===null||_baseUnit$unit===void 0?void 0:_baseUnit$unit.id)||baseUnit.unit);});if(baseUnitStockInfo){return getCurrentUnitPrice(product,baseUnitStockInfo).toFixed(2);}}// Fallback to the original price\nreturn getCurrentPrice(product).toFixed(2);})(),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u2=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u2===void 0?void 0:_product$compatible_u2.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{var _compatibleUnit$unit5,_compatibleUnit$unit6;const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit4;return u.id===(((_compatibleUnit$unit4=compatibleUnit.unit)===null||_compatibleUnit$unit4===void 0?void 0:_compatibleUnit$unit4.id)||compatibleUnit.unit);});if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit5=compatibleUnit.unit)===null||_compatibleUnit$unit5===void 0?void 0:_compatibleUnit$unit5.name)||compatibleUnit.unit_name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA (\",unitStockInfo.available_quantity,\" available)\"]},((_compatibleUnit$unit6=compatibleUnit.unit)===null||_compatibleUnit$unit6===void 0?void 0:_compatibleUnit$unit6.id)||compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _compatibleUnit$unit8,_compatibleUnit$unit9,_compatibleUnit$unit0,_compatibleUnit$unit1;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit7;return u.id===(((_compatibleUnit$unit7=compatibleUnit.unit)===null||_compatibleUnit$unit7===void 0?void 0:_compatibleUnit$unit7.id)||compatibleUnit.unit);});const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit8=compatibleUnit.unit)===null||_compatibleUnit$unit8===void 0?void 0:_compatibleUnit$unit8.name)||compatibleUnit.unit_name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||((_compatibleUnit$unit9=compatibleUnit.unit)===null||_compatibleUnit$unit9===void 0?void 0:_compatibleUnit$unit9.symbol)||compatibleUnit.unit_symbol;return/*#__PURE__*/_jsxs(\"option\",{value:((_compatibleUnit$unit1=compatibleUnit.unit)===null||_compatibleUnit$unit1===void 0?void 0:_compatibleUnit$unit1.id)||compatibleUnit.unit,disabled:saleMode==='complete'?!isAvailable:false,children:[unitName,\" (\",unitSymbol,\") - \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA\",!isAvailable&&saleMode==='complete'?' - OUT OF STOCK':'']},((_compatibleUnit$unit0=compatibleUnit.unit)===null||_compatibleUnit$unit0===void 0?void 0:_compatibleUnit$unit0.id)||compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Cart is empty\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart-hint\",children:\"Add items from the product list to start a sale\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:t('alerts.click_to_edit_quantity'),children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:t('alerts.remove_item'),children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode)))]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:paymentType==='partial'?\"Customer Name (Required for Partial Payment)\":\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value})),className:paymentType==='partial'&&!customerInfo.name?'required-field':''})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"full\",checked:paymentType==='full',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"partial\",checked:paymentType==='partial',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]}),paymentType==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateTotal(),value:paidAmount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setPaidAmount(value);},placeholder:t('forms.enter_amount_to_pay')}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Total: $\",calculateTotal().toFixed(2),\" | Remaining: $\",(calculateTotal()-(paidAmount||0)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkout-actions\",children:/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?t('pos.complete_sale'):t('pos.create_pending_sale'),printReceipt&&t('pos.print_receipt')]})})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useTranslation","useAuth","api","Button","generatePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","t","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","paymentType","setPaymentType","paidAmount","setPaidAmount","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","searchTimeoutRef","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","getCurrentPrice","product","wholesale_price","parseFloat","price","calculateTotal","total","reduce","item","unitPrice","unit_price","quantity","getCurrentUnitPrice","unitStockInfo","standardBasePrice","wholesaleBasePrice","wholesaleConversionFactor","wholesaleUnitPrice","is_base_unit","standardUnitPrice","unitConversionFactor","roundedPrice","Math","round","isNaN","initializeData","fetchCategories","fetchProducts","length","current","clearTimeout","setTimeout","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","forEach","compatible_units","selectedUnit","find","u","is_default","unit","_selectedUnit$unit","id","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","unitInfo","unit_id","conversion_factor","baseUnit","totalBaseStock","available_quantity","remainingPieces","max","availableQuantity","isAvailable","floor","is_available","filterParams","arguments","undefined","params","URLSearchParams","append","url","concat","toString","get","allProducts","results","sellableProducts","isSellable","is_sellable","category_name","cat","selectedCategory","parseInt","prev","addToCart","_compatibleUnit$unit","_compatibleUnit$unit2","_compatibleUnit$unit3","compatibleUnit","unit_name","symbol","unit_symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","newCartItem","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","saleStatus","remaining","printData","sale_number","customer_name","customer_phone","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","status","total_amount","paid_amount","remaining_amount","payment_status","due_date","toLocaleDateString","items","_item$unit","product_name","product_sku","sku","total_price","printContent","printWindow","window","open","document","write","close","printAfterLoad","focus","print","readyState","onload","handleCheckout","trim","sale_type","payment_method","saleId","Promise","resolve","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","toggleCategorySellable","categoryId","patch","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","_u$unit","_selectedCompatibleUn2","_selectedCompatibleUn","className","children","onChange","variant","size","onClick","style","marginTop","type","title","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","margin","fontSize","fontWeight","display","gridTemplateColumns","gap","alignItems","justifyContent","cursor","borderColor","color","_product$compatible_u2","_product$compatible_u","baseUnitStockInfo","_baseUnit$unit","toFixed","_compatibleUnit$unit5","_compatibleUnit$unit6","_compatibleUnit$unit4","unitName","Boolean","stopPropagation","index","_compatibleUnit$unit8","_compatibleUnit$unit9","_compatibleUnit$unit0","_compatibleUnit$unit1","_compatibleUnit$unit7","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","method","checked","replace","toUpperCase","step"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [paymentType, setPaymentType] = useState('full'); // 'full' or 'partial'\n  const [paidAmount, setPaidAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Calculate total amount\n  const calculateTotal = () => {\n    const total = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    return total;\n  };\n\n  // Update paid amount when payment type changes\n  useEffect(() => {\n    const total = calculateTotal();\n    if (paymentType === 'full') {\n      setPaidAmount(total);\n    } else if (paymentType === 'partial') {\n      // Only reset to 0 if it's currently set to the full amount\n      if (paidAmount === total) {\n        setPaidAmount(0);\n      }\n    }\n  }, [paymentType, cart]);\n\n  // Function to get the current price for a specific unit\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo?.price) return 0;\n    \n    // If we're in standard mode, return the standard unit price\n    if (priceMode === 'standard') {\n      return unitStockInfo.price;\n    }\n    \n    // If we're in wholesale mode, we need to calculate the wholesale price for this unit\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      const standardBasePrice = parseFloat(product.price);\n      const wholesaleBasePrice = parseFloat(product.wholesale_price);\n      \n      // Handle edge cases\n      if (!standardBasePrice || standardBasePrice <= 0) {\n        return unitStockInfo.price;\n      }\n      \n      // Calculate the conversion factor from standard to wholesale\n      const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n      \n      // For wholesale pricing, we need to apply the wholesale conversion factor\n      // to the base unit price, then convert to the selected unit\n      let wholesaleUnitPrice;\n      \n      if (unitStockInfo.is_base_unit) {\n        // If this is the base unit, apply wholesale factor directly\n        wholesaleUnitPrice = standardBasePrice * wholesaleConversionFactor;\n      } else {\n        // If this is not the base unit, we need to:\n        // 1. Get the wholesale base price\n        // 2. Convert it to the selected unit using the same conversion factor as the standard price\n        const standardUnitPrice = unitStockInfo.price;\n        const unitConversionFactor = standardUnitPrice / standardBasePrice;\n        wholesaleUnitPrice = wholesaleBasePrice * unitConversionFactor;\n      }\n      \n      // Round to 2 decimal places to avoid floating point precision issues\n      const roundedPrice = Math.round(wholesaleUnitPrice * 100) / 100;\n      \n      // Ensure we return a valid number\n      return isNaN(roundedPrice) || roundedPrice < 0 ? unitStockInfo.price : roundedPrice;\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      await fetchProducts(); // Wait for categories to be loaded before fetching products\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categories.length > 0 && products.length > 0) {\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categories.length]); // Only when categories are loaded\n\n  // Debounced search effect - completely rewritten for stability\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout\n    searchTimeoutRef.current = setTimeout(() => {\n      if (searchInput !== filters.search) {\n        const newFilters = { ...filters, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }\n    }, 500);\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput, filters]); // Depend on searchInput and filters\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/api/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      \n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // Debug: Log the first product to see its structure\n      if (allProducts.length > 0) {\n      }\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categories.length === 0) {\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category information, check if category is sellable\n        if (product.category && product.category.is_sellable !== undefined) {\n          isSellable = product.category.is_sellable;\n        }\n        // If product has category_name, find the category in our categories list\n        else if (product.category_name) {\n          const category = categories.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categories.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        // Debug: Log filtering decision\n        if (!isSellable) {\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categories.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n    }\n  };\n\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/api/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.compatible_units && product.compatible_units[0]) {\n      const compatibleUnit = product.compatible_units[0];\n      unit = {\n        id: compatibleUnit.unit?.id || compatibleUnit.unit,\n        name: compatibleUnit.unit_name || compatibleUnit.unit?.name || 'Piece',\n        symbol: compatibleUnit.unit_symbol || compatibleUnit.unit?.symbol || 'piece'\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      // Get unit stock info for price calculation\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product),\n        price_mode: priceMode\n      };\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData, saleStatus = 'completed') => {\n    try {\n      // Create print content for the sale\n      const total = calculateSubtotal();\n      const remaining = total - paidAmount;\n      \n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: saleStatus,\n        total_amount: total,\n        paid_amount: paidAmount,\n        remaining_amount: remaining,\n        payment_status: remaining > 0 ? 'partial' : 'paid',\n        due_date: remaining > 0 ? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString() : null, // 30 days from now\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit_name || item.unit?.name || 'piece',\n          unit_price: item.unit_price,\n          total_price: item.unit_price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale', t);\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      const printAfterLoad = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n      // Check if window is already loaded\n      if (printWindow.document.readyState === 'complete') {\n        printAfterLoad();\n      } else {\n        printWindow.onload = printAfterLoad;\n      }\n      \n    } catch (error) {\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError(t('pos.cart_empty'));\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    // Validate customer name for partial payments\n    if (paymentType === 'partial' && (!customerInfo.name || !customerInfo.name.trim())) {\n      setError('Customer name is required for partial payments');\n      setProcessing(false);\n      return;\n    }\n\n    // Validate paid amount\n    const total = calculateTotal();\n    if (paidAmount > total) {\n      setError('Paid amount cannot exceed the total amount');\n      setProcessing(false);\n      return;\n    }\n\n    if (paidAmount < 0) {\n      setError('Paid amount cannot be negative');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const saleData = {\n        sale_type: 'sale',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        paid_amount: paidAmount,\n          items: cart.map(item => {\n            // More robust unit ID extraction\n            let unitId = item.unit_id;\n            if (typeof unitId === 'object' && unitId !== null) {\n              unitId = unitId.id || unitId;\n            }\n            \n            return {\n          product: item.id,\n              quantity: parseFloat(item.quantity),\n              unit: parseInt(unitId),\n              unit_price: parseFloat(item.unit_price),\n              price_mode: item.price_mode || 'standard'\n            };\n          })\n        };\n\n\n      // Create the sale\n      const response = await api.post('/api/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          await api.post(`/api/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            await autoPrintReceipt(saleNumber, response.data, 'completed');\n          }\n      \n      // Clear cart and customer info\n      setCart([]);\n      setCustomerInfo({ name: '', phone: '', email: '' });\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          await autoPrintReceipt(saleNumber, response.data, 'pending');\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(t('messages.pending_sale_created', { saleNumber }));\n      }\n    } catch (err) {\n      \n      // Handle different types of errors\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.data?.detail) {\n        setError(err.response.data.detail);\n      } else if (err.response?.data?.customer_name) {\n        setError(err.response.data.customer_name[0]);\n      } else if (err.response?.data?.paid_amount) {\n        setError(err.response.data.paid_amount[0]);\n      } else {\n        setError('Failed to create sale. Please check the console for details.');\n      }\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n    const newFilters = { ...filters, [filterType]: value };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n    }\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    fetchProducts(clearedFilters);\n  };\n\n  const toggleCategorySellable = async (categoryId, isSellable) => {\n    try {\n      await api.patch(`/products/categories/${categoryId}/`, {\n        is_sellable: !isSellable\n      });\n      // Refresh categories to show updated status\n      await fetchCategories();\n      // Refresh products to apply new sellable filter\n      fetchProducts(filters);\n    } catch (err) {\n      setError('Failed to update category status');\n    }\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products (only for complete sales)\n    if (saleMode === 'complete' && product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => (u.unit?.id || u.unit) === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === (selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit));\n          const unitPrice = getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product);\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>{t('titles.point_of_sale')}</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title={t('alerts.sale_will_be_completed')}\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title={t('alerts.sale_will_be_created_pending')}\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group print-receipt-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle print-receipt-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title={t('alerts.print_receipt_after_sale')}\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title={t('pos.dont_print_receipt')}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder={t('pos.search_products')}\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <h3 style={{ margin: '0 0 1rem 0', fontSize: '1rem', fontWeight: '600' }}>\n                Manage Sellable Categories\n              </h3>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n          </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 && saleMode === 'complete' ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {(() => {\n                      // Find the actual base unit and get its price\n                      const baseUnit = product.compatible_units?.find(u => u.unit.is_base_unit);\n                      if (baseUnit && stockAvailability[product.id]) {\n                        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                        const baseUnitStockInfo = updatedStockInfo?.find(u => u.id === (baseUnit.unit?.id || baseUnit.unit));\n                        if (baseUnitStockInfo) {\n                          return getCurrentUnitPrice(product, baseUnitStockInfo).toFixed(2);\n                        }\n                      }\n                      // Fallback to the original price\n                      return getCurrentPrice(product).toFixed(2);\n                    })()} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit?.id || compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA ({unitStockInfo.available_quantity} available)\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit?.symbol || compatibleUnit.unit_symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit?.id || compatibleUnit.unit} \n                              value={compatibleUnit.unit?.id || compatibleUnit.unit}\n                              disabled={saleMode === 'complete' ? !isAvailable : false}\n                            >\n                              {unitName} ({unitSymbol}) - {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA\n                              {!isAvailable && saleMode === 'complete' ? ' - OUT OF STOCK' : ''}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <div className=\"empty-cart\">\n                <p>Cart is empty</p>\n                <p className=\"empty-cart-hint\">Add items from the product list to start a sale</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title={t('alerts.click_to_edit_quantity')}\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title={t('alerts.remove_item')}\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder={paymentType === 'partial' ? \"Customer Name (Required for Partial Payment)\" : \"Customer Name (Optional)\"}\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className={paymentType === 'partial' && !customerInfo.name ? 'required-field' : ''}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n                \n                <h3>Payment Type</h3>\n                <div className=\"payment-types\">\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"full\"\n                      checked={paymentType === 'full'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Full Payment (100%)</span>\n                  </label>\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"partial\"\n                      checked={paymentType === 'partial'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Partial Payment (0-99.99%)</span>\n                  </label>\n                </div>\n                \n                {paymentType === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateTotal()}\n                      value={paidAmount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setPaidAmount(value);\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                    />\n                    <small>Total: ${calculateTotal().toFixed(2)} | Remaining: ${(calculateTotal() - (paidAmount || 0)).toFixed(2)}</small>\n                  </div>\n                )}\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? t('pos.complete_sale') : t('pos.create_pending_sale')}\n                  {printReceipt && t('pos.print_receipt')}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,OAASC,oBAAoB,KAAQ,2BAA2B,CAChE,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,CAAE,CAAC,CAAGZ,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEa,IAAK,CAAC,CAAGZ,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACmB,UAAU,CAAEC,aAAa,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACqB,IAAI,CAAEC,OAAO,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACuB,YAAY,CAAEC,eAAe,CAAC,CAAGxB,QAAQ,CAAC,CAC/CyB,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG7B,QAAQ,CAAC,MAAM,CAAC,CAC1D,KAAM,CAAC8B,WAAW,CAAEC,cAAc,CAAC,CAAG/B,QAAQ,CAAC,MAAM,CAAC,CAAE;AACxD,KAAM,CAACgC,UAAU,CAAEC,aAAa,CAAC,CAAGjC,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACkC,OAAO,CAAEC,UAAU,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACoC,UAAU,CAAEC,aAAa,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACsC,KAAK,CAAEC,QAAQ,CAAC,CAAGvC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACwC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGzC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9D,KAAM,CAAC0C,OAAO,CAAEC,UAAU,CAAC,CAAG3C,QAAQ,CAAC,CACrC4C,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,EACV,CAAC,CAAC,CACF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAAE;AACpD,KAAM,CAACgD,eAAe,CAAEC,kBAAkB,CAAC,CAAGjD,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACkD,YAAY,CAAEC,eAAe,CAAC,CAAGnD,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACoD,aAAa,CAAEC,gBAAgB,CAAC,CAAGrD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AACxD,KAAM,CAAAsD,cAAc,CAAGpD,MAAM,CAAC,IAAI,CAAC,CAAE;AACrC,KAAM,CAAAqD,gBAAgB,CAAGrD,MAAM,CAAC,IAAI,CAAC,CAAE;AACvC,KAAM,CAACsD,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGzD,QAAQ,CAAC,KAAK,CAAC,CAAE;AACrE,KAAM,CAAC0D,SAAS,CAAEC,YAAY,CAAC,CAAG3D,QAAQ,CAAC,UAAU,CAAC,CAAE;AACxD,KAAM,CAAC4D,QAAQ,CAAEC,WAAW,CAAC,CAAG7D,QAAQ,CAAC,UAAU,CAAC,CAAE;AACtD,KAAM,CAAC8D,YAAY,CAAEC,eAAe,CAAC,CAAG/D,QAAQ,CAAC,IAAI,CAAC,CAAE;AAExD;AACA,KAAM,CAAAgE,eAAe,CAAIC,OAAO,EAAK,CACnC,GAAIP,SAAS,GAAK,WAAW,EAAIO,OAAO,CAACC,eAAe,CAAE,CACxD,MAAO,CAAAC,UAAU,CAACF,OAAO,CAACC,eAAe,CAAC,CAC5C,CACA,MAAO,CAAAC,UAAU,CAACF,OAAO,CAACG,KAAK,CAAC,CAClC,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,KAAK,CAAGjD,IAAI,CAACkD,MAAM,CAAC,CAACD,KAAK,CAAEE,IAAI,GAAK,CACzC,KAAM,CAAAC,SAAS,CAAGD,IAAI,CAACE,UAAU,EAAI,CAAC,CACtC,MAAO,CAAAJ,KAAK,CAAIG,SAAS,CAAGD,IAAI,CAACG,QAAS,CAC5C,CAAC,CAAE,CAAC,CAAC,CACL,MAAO,CAAAL,KAAK,CACd,CAAC,CAED;AACArE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqE,KAAK,CAAGD,cAAc,CAAC,CAAC,CAC9B,GAAIvC,WAAW,GAAK,MAAM,CAAE,CAC1BG,aAAa,CAACqC,KAAK,CAAC,CACtB,CAAC,IAAM,IAAIxC,WAAW,GAAK,SAAS,CAAE,CACpC;AACA,GAAIE,UAAU,GAAKsC,KAAK,CAAE,CACxBrC,aAAa,CAAC,CAAC,CAAC,CAClB,CACF,CACF,CAAC,CAAE,CAACH,WAAW,CAAET,IAAI,CAAC,CAAC,CAEvB;AACA,KAAM,CAAAuD,mBAAmB,CAAGA,CAACX,OAAO,CAAEY,aAAa,GAAK,CACtD,GAAI,EAACA,aAAa,SAAbA,aAAa,WAAbA,aAAa,CAAET,KAAK,EAAE,MAAO,EAAC,CAEnC;AACA,GAAIV,SAAS,GAAK,UAAU,CAAE,CAC5B,MAAO,CAAAmB,aAAa,CAACT,KAAK,CAC5B,CAEA;AACA,GAAIV,SAAS,GAAK,WAAW,EAAIO,OAAO,CAACC,eAAe,CAAE,CACxD,KAAM,CAAAY,iBAAiB,CAAGX,UAAU,CAACF,OAAO,CAACG,KAAK,CAAC,CACnD,KAAM,CAAAW,kBAAkB,CAAGZ,UAAU,CAACF,OAAO,CAACC,eAAe,CAAC,CAE9D;AACA,GAAI,CAACY,iBAAiB,EAAIA,iBAAiB,EAAI,CAAC,CAAE,CAChD,MAAO,CAAAD,aAAa,CAACT,KAAK,CAC5B,CAEA;AACA,KAAM,CAAAY,yBAAyB,CAAGD,kBAAkB,CAAGD,iBAAiB,CAExE;AACA;AACA,GAAI,CAAAG,kBAAkB,CAEtB,GAAIJ,aAAa,CAACK,YAAY,CAAE,CAC9B;AACAD,kBAAkB,CAAGH,iBAAiB,CAAGE,yBAAyB,CACpE,CAAC,IAAM,CACL;AACA;AACA;AACA,KAAM,CAAAG,iBAAiB,CAAGN,aAAa,CAACT,KAAK,CAC7C,KAAM,CAAAgB,oBAAoB,CAAGD,iBAAiB,CAAGL,iBAAiB,CAClEG,kBAAkB,CAAGF,kBAAkB,CAAGK,oBAAoB,CAChE,CAEA;AACA,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACN,kBAAkB,CAAG,GAAG,CAAC,CAAG,GAAG,CAE/D;AACA,MAAO,CAAAO,KAAK,CAACH,YAAY,CAAC,EAAIA,YAAY,CAAG,CAAC,CAAGR,aAAa,CAACT,KAAK,CAAGiB,YAAY,CACrF,CAEA;AACA,MAAO,CAAAR,aAAa,CAACT,KAAK,CAC5B,CAAC,CAEDnE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwF,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,eAAe,CAAC,CAAC,CACvB,KAAM,CAAAC,aAAa,CAAC,CAAC,CAAE;AACzB,CAAC,CACDF,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAxF,SAAS,CAAC,IAAM,CACd,GAAIkB,UAAU,CAACyE,MAAM,CAAG,CAAC,EAAI3E,QAAQ,CAAC2E,MAAM,CAAG,CAAC,CAAE,CAChDD,aAAa,CAACjD,OAAO,CAAC,CAAE;AAC1B,CACF,CAAC,CAAE,CAACvB,UAAU,CAACyE,MAAM,CAAC,CAAC,CAAE;AAEzB;AACA3F,SAAS,CAAC,IAAM,CACd;AACA,GAAIsD,gBAAgB,CAACsC,OAAO,CAAE,CAC5BC,YAAY,CAACvC,gBAAgB,CAACsC,OAAO,CAAC,CACxC,CAEA;AACAtC,gBAAgB,CAACsC,OAAO,CAAGE,UAAU,CAAC,IAAM,CAC1C,GAAIjD,WAAW,GAAKJ,OAAO,CAACG,MAAM,CAAE,CAClC,KAAM,CAAAmD,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQvD,OAAO,MAAEG,MAAM,CAAEC,WAAW,EAAE,CACtDH,UAAU,CAACqD,UAAU,CAAC,CACtBL,aAAa,CAACK,UAAU,CAAC,CAC3B,CACF,CAAC,CAAE,GAAG,CAAC,CAEP;AACA,MAAO,IAAM,CACX,GAAIzC,gBAAgB,CAACsC,OAAO,CAAE,CAC5BC,YAAY,CAACvC,gBAAgB,CAACsC,OAAO,CAAC,CACxC,CACF,CAAC,CACH,CAAC,CAAE,CAAC/C,WAAW,CAAEJ,OAAO,CAAC,CAAC,CAAE;AAE5BzC,SAAS,CAAC,IAAM,CACd;AACA,GAAIgB,QAAQ,CAAC2E,MAAM,CAAG,CAAC,CAAE,CACvBM,0BAA0B,CAAC,CAAC,CAC9B,CAEA;AACA,KAAM,CAAAC,YAAY,CAAG,CAAC,CAAC,CACvBlF,QAAQ,CAACmF,OAAO,CAACnC,OAAO,EAAI,CAC1B,GAAIA,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACT,MAAM,CAAG,CAAC,CAAE,CAEnE;AACA,GAAI,CAAAU,YAAY,CAAGrC,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,CAAC,CAEnE;AACA,GAAI,CAACH,YAAY,CAAE,CACjBA,YAAY,CAAGrC,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAACxB,YAAY,CAAC,CACxE,CAEA;AACA,GAAI,CAACoB,YAAY,CAAE,CACjBA,YAAY,CAAGrC,OAAO,CAACoC,gBAAgB,CAAC,CAAC,CAAC,CAC5C,CAEA,GAAIC,YAAY,CAAE,KAAAK,kBAAA,CAChBR,YAAY,CAAClC,OAAO,CAAC2C,EAAE,CAAC,CAAG,EAAAD,kBAAA,CAAAL,YAAY,CAACI,IAAI,UAAAC,kBAAA,iBAAjBA,kBAAA,CAAmBC,EAAE,GAAIN,YAAY,CAACI,IAAI,CACvE,CACF,CACF,CAAC,CAAC,CACFrD,gBAAgB,CAAC8C,YAAY,CAAC,CAChC,CAAC,CAAE,CAAClF,QAAQ,CAAC,CAAC,CAAE;AAEhB,KAAM,CAAAiF,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC7C,GAAI,CACF,KAAM,CAAAW,UAAU,CAAG5F,QAAQ,CAAC6F,GAAG,CAAC7C,OAAO,EAAIA,OAAO,CAAC2C,EAAE,CAAC,CACtD,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAA1G,GAAG,CAAC2G,IAAI,CAAC,wCAAwC,CAAE,CACxEC,WAAW,CAAEJ,UACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAAK,SAAS,CAAG,CAAC,CAAC,CACpBC,MAAM,CAACC,MAAM,CAACL,QAAQ,CAACM,IAAI,CAAC,CAACjB,OAAO,CAACkB,YAAY,EAAI,CACnDJ,SAAS,CAACI,YAAY,CAACC,UAAU,CAAC,CAAGD,YAAY,CAACE,eAAe,CACnE,CAAC,CAAC,CAIF/E,oBAAoB,CAACyE,SAAS,CAAC,CACjC,CAAE,MAAOO,GAAG,CAAE,CACZ;AACAxG,QAAQ,CAACmF,OAAO,CAACnC,OAAO,EAAI,CAC1ByD,sBAAsB,CAACzD,OAAO,CAAC2C,EAAE,CAAC,CACpC,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAe,wBAAwB,CAAGA,CAAA,GAAM,CACrC;AACA,GAAI1G,QAAQ,CAAC2E,MAAM,CAAG,CAAC,CAAE,CACvBM,0BAA0B,CAAC,CAAC,CAC9B,CACF,CAAC,CAGD,KAAM,CAAA0B,2BAA2B,CAAIC,SAAS,EAAK,CACjD;AACA,KAAM,CAAAC,aAAa,CAAGtF,iBAAiB,CAACqF,SAAS,CAAC,CAClD,GAAI,CAACC,aAAa,CAAE,CAClB,MAAO,KAAI,CACb,CAEA;AACA,KAAM,CAAAC,iBAAiB,CAAG1G,IAAI,CAC3B2G,MAAM,CAACxD,IAAI,EAAIA,IAAI,CAACoC,EAAE,GAAKiB,SAAS,CAAC,CACrCtD,MAAM,CAAC,CAACD,KAAK,CAAEE,IAAI,GAAK,CACvB;AACA,KAAM,CAAAyD,QAAQ,CAAGH,aAAa,CAACvB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKpC,IAAI,CAAC0D,OAAO,CAAC,CAC/D,GAAID,QAAQ,EAAIA,QAAQ,CAACE,iBAAiB,CAAE,CAC1C;AACA,MAAO,CAAA7D,KAAK,CAAIE,IAAI,CAACG,QAAQ,CAAGsD,QAAQ,CAACE,iBAAkB,CAC7D,CAAC,IAAM,IAAIF,QAAQ,EAAIA,QAAQ,CAAC/C,YAAY,CAAE,CAC5C;AACA,MAAO,CAAAZ,KAAK,CAAGE,IAAI,CAACG,QAAQ,CAC9B,CACA,MAAO,CAAAL,KAAK,CACd,CAAC,CAAE,CAAC,CAAC,CAEP;AACA,KAAM,CAAA8D,QAAQ,CAAGN,aAAa,CAACvB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACtB,YAAY,CAAC,CACxD,KAAM,CAAAmD,cAAc,CAAGD,QAAQ,CAAGA,QAAQ,CAACE,kBAAkB,CAAG,CAAC,CACjE,KAAM,CAAAC,eAAe,CAAGjD,IAAI,CAACkD,GAAG,CAAC,CAAC,CAAEH,cAAc,CAAGN,iBAAiB,CAAC,CAGvE;AACA,MAAO,CAAAD,aAAa,CAAChB,GAAG,CAACJ,IAAI,EAAI,CAC/B,GAAI,CAAA+B,iBAAiB,CAAG,CAAC,CACzB,GAAI,CAAAC,WAAW,CAAG,KAAK,CAEvB,GAAIhC,IAAI,CAACxB,YAAY,CAAE,CACrB;AACAuD,iBAAiB,CAAGF,eAAe,CACnCG,WAAW,CAAGH,eAAe,CAAG,CAAC,CACnC,CAAC,IAAM,IAAI7B,IAAI,CAACyB,iBAAiB,CAAE,CACjC;AACA;AACAM,iBAAiB,CAAGnD,IAAI,CAACqD,KAAK,CAACJ,eAAe,CAAG7B,IAAI,CAACyB,iBAAiB,CAAC,CACxEO,WAAW,CAAGD,iBAAiB,CAAG,CAAC,CACrC,CAEA,OAAAxC,aAAA,CAAAA,aAAA,IACKS,IAAI,MACP4B,kBAAkB,CAAEG,iBAAiB,CACrCG,YAAY,CAAEF,WAAW,GAE7B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA/C,aAAa,CAAG,cAAAA,CAAA,CAA6B,IAAtB,CAAAkD,YAAY,CAAAC,SAAA,CAAAlD,MAAA,IAAAkD,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CAC5C,GAAI,CACF3G,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAA6G,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CAEpC;AACAD,MAAM,CAACE,MAAM,CAAC,WAAW,CAAE,MAAM,CAAC,CAElC;AACA,GAAIL,YAAY,CAACjG,QAAQ,CAAEoG,MAAM,CAACE,MAAM,CAAC,UAAU,CAAEL,YAAY,CAACjG,QAAQ,CAAC,CAC3E,GAAIiG,YAAY,CAAChG,MAAM,CAAEmG,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAEL,YAAY,CAAChG,MAAM,CAAC,CAErE,KAAM,CAAAsG,GAAG,cAAAC,MAAA,CAAgBJ,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAG,GAAG,CAAGL,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAG,EAAE,CAAE,CAC3E,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAA1G,GAAG,CAACiJ,GAAG,CAACH,GAAG,CAAC,CACnC,KAAM,CAAAI,WAAW,CAAGxC,QAAQ,CAACM,IAAI,CAACmC,OAAO,EAAIzC,QAAQ,CAACM,IAAI,CAE1D;AACA,GAAIkC,WAAW,CAAC3D,MAAM,CAAG,CAAC,CAAE,CAC5B,CAEA;AACA,GAAIzE,UAAU,CAACyE,MAAM,GAAK,CAAC,CAAE,CAC3B1E,WAAW,CAACqI,WAAW,CAAC,CACxB,OACF,CAEA;AACA,KAAM,CAAAE,gBAAgB,CAAGF,WAAW,CAACvB,MAAM,CAAC/D,OAAO,EAAI,CACrD,GAAI,CAAAyF,UAAU,CAAG,KAAK,CAEtB;AACA,GAAIzF,OAAO,CAACrB,QAAQ,EAAIqB,OAAO,CAACrB,QAAQ,CAAC+G,WAAW,GAAKZ,SAAS,CAAE,CAClEW,UAAU,CAAGzF,OAAO,CAACrB,QAAQ,CAAC+G,WAAW,CAC3C,CACA;AAAA,IACK,IAAI1F,OAAO,CAAC2F,aAAa,CAAE,CAC9B,KAAM,CAAAhH,QAAQ,CAAGzB,UAAU,CAACoF,IAAI,CAACsD,GAAG,EAAIA,GAAG,CAACpI,IAAI,GAAKwC,OAAO,CAAC2F,aAAa,CAAC,CAC3EF,UAAU,CAAG9G,QAAQ,CAAGA,QAAQ,CAAC+G,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,IAAI1F,OAAO,CAACrB,QAAQ,EAAI,MAAO,CAAAqB,OAAO,CAACrB,QAAQ,GAAK,QAAQ,CAAE,CACjE,KAAM,CAAAA,QAAQ,CAAGzB,UAAU,CAACoF,IAAI,CAACsD,GAAG,EAAIA,GAAG,CAACjD,EAAE,GAAK3C,OAAO,CAACrB,QAAQ,CAAC,CACpE8G,UAAU,CAAG9G,QAAQ,CAAGA,QAAQ,CAAC+G,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,CACHD,UAAU,CAAG,KAAK,CACpB,CAEA;AACA,GAAI,CAACA,UAAU,CAAE,CACjB,CAEA,MAAO,CAAAA,UAAU,CACnB,CAAC,CAAC,CAEF;AACA,GAAIb,YAAY,CAACjG,QAAQ,CAAE,CACzB,KAAM,CAAAkH,gBAAgB,CAAG3I,UAAU,CAACoF,IAAI,CAACsD,GAAG,EAAIA,GAAG,CAACjD,EAAE,GAAKmD,QAAQ,CAAClB,YAAY,CAACjG,QAAQ,CAAC,CAAC,CAC3F,GAAIkH,gBAAgB,EAAI,CAACA,gBAAgB,CAACH,WAAW,CAAE,CACrD;AACAzI,WAAW,CAAC,EAAE,CAAC,CACf,OACF,CACF,CAEAA,WAAW,CAACuI,gBAAgB,CAAC,CAC/B,CAAE,MAAOhC,GAAG,CAAE,CACZlF,QAAQ,CAAC,yBAAyB,CAAC,CACrC,CAAC,OAAS,CACRJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAuD,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,KAAM,CAAAqB,QAAQ,CAAG,KAAM,CAAA1G,GAAG,CAACiJ,GAAG,CAAC,2BAA2B,CAAC,CAC3DlI,aAAa,CAAC2F,QAAQ,CAACM,IAAI,CAACmC,OAAO,EAAIzC,QAAQ,CAACM,IAAI,CAAC,CACvD,CAAE,MAAOI,GAAG,CAAE,CACd,CACF,CAAC,CAGD,KAAM,CAAAC,sBAAsB,CAAG,KAAO,CAAAG,SAAS,EAAK,CAClD,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAA1G,GAAG,CAACiJ,GAAG,kBAAAF,MAAA,CAAkBvB,SAAS,wBAAsB,CAAC,CAChFpF,oBAAoB,CAACuH,IAAI,EAAA/D,aAAA,CAAAA,aAAA,IACpB+D,IAAI,MACP,CAACnC,SAAS,EAAGd,QAAQ,CAACM,IAAI,CAACG,eAAe,EAC1C,CAAC,CACL,CAAE,MAAOC,GAAG,CAAE,CACd,CACF,CAAC,CAED,KAAM,CAAAwC,SAAS,CAAG,QAAAA,CAAChG,OAAO,CAA0B,IAAxB,CAAAqC,YAAY,CAAAwC,SAAA,CAAAlD,MAAA,IAAAkD,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAE7C;AACA,GAAI,CAAApC,IAAI,CAAGJ,YAAY,CACvB,GAAI,CAACI,IAAI,EAAIzC,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAAC,CAAC,CAAC,CAAE,KAAA6D,oBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACpE,KAAM,CAAAC,cAAc,CAAGpG,OAAO,CAACoC,gBAAgB,CAAC,CAAC,CAAC,CAClDK,IAAI,CAAG,CACLE,EAAE,CAAE,EAAAsD,oBAAA,CAAAG,cAAc,CAAC3D,IAAI,UAAAwD,oBAAA,iBAAnBA,oBAAA,CAAqBtD,EAAE,GAAIyD,cAAc,CAAC3D,IAAI,CAClDjF,IAAI,CAAE4I,cAAc,CAACC,SAAS,IAAAH,qBAAA,CAAIE,cAAc,CAAC3D,IAAI,UAAAyD,qBAAA,iBAAnBA,qBAAA,CAAqB1I,IAAI,GAAI,OAAO,CACtE8I,MAAM,CAAEF,cAAc,CAACG,WAAW,IAAAJ,qBAAA,CAAIC,cAAc,CAAC3D,IAAI,UAAA0D,qBAAA,iBAAnBA,qBAAA,CAAqBG,MAAM,GAAI,OACvE,CAAC,CACH,CACA,GAAI,CAAC7D,IAAI,CAAE,KAAA+D,kBAAA,CACT/D,IAAI,CAAG,CAAEE,EAAE,CAAE,EAAA6D,kBAAA,CAAAxG,OAAO,CAACyG,SAAS,UAAAD,kBAAA,iBAAjBA,kBAAA,CAAmB7D,EAAE,GAAI3C,OAAO,CAACyG,SAAS,CAAEjJ,IAAI,CAAE,OAAO,CAAE8I,MAAM,CAAE,OAAQ,CAAC,CAC3F,CAEA;AACA,GAAI3G,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,GAAI,CAACpB,iBAAiB,CAACyB,OAAO,CAAC2C,EAAE,CAAC,CAAE,CAClCrE,QAAQ,CAAC,gDAAgD,CAAC,CAC1D,OACF,CAEA;AACA,KAAM,CAAAoI,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKF,IAAI,CAACE,EAAE,CAAC,CAGnE,GAAI,CAAC/B,aAAa,CAAE,CAClBtC,QAAQ,SAAA6G,MAAA,CAAS1C,IAAI,CAACjF,IAAI,mCAAiC,CAAC,CAC5D,OACF,CAEA,GAAI,CAACoD,aAAa,CAAC+D,YAAY,CAAE,CAC/BrG,QAAQ,IAAA6G,MAAA,CAAI1C,IAAI,CAACjF,IAAI,oBAAkB,CAAC,CACxC,OACF,CAEA;AACA,GAAIoD,aAAa,CAACyD,kBAAkB,EAAI,CAAC,CAAE,CACzC/F,QAAQ,OAAA6G,MAAA,CAAO1C,IAAI,CAACjF,IAAI,eAAa,CAAC,CACtC,OACF,CACF,CAEA,KAAM,CAAAmJ,YAAY,CAAGvJ,IAAI,CAACkF,IAAI,CAAC/B,IAAI,EACjCA,IAAI,CAACoC,EAAE,GAAK3C,OAAO,CAAC2C,EAAE,EACtBpC,IAAI,CAAC0D,OAAO,GAAKxB,IAAI,CAACE,EAAE,EACxBpC,IAAI,CAACqG,UAAU,GAAKnH,SACtB,CAAC,CACD,GAAIkH,YAAY,CAAE,CAChB;AACA,GAAIhH,QAAQ,GAAK,UAAU,CAAE,CAC3B,KAAM,CAAA+G,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKF,IAAI,CAACE,EAAE,CAAC,CACnE,GAAI/B,aAAa,EAAI+F,YAAY,CAACjG,QAAQ,CAAG,CAAC,CAAGE,aAAa,CAACyD,kBAAkB,CAAE,CACjF/F,QAAQ,eAAA6G,MAAA,CAAe1C,IAAI,CAACjF,IAAI,sBAAA2H,MAAA,CAAoBvE,aAAa,CAACyD,kBAAkB,UAAQ,CAAC,CAC7F,OACF,CACF,CACAhH,OAAO,CAACD,IAAI,CAACyF,GAAG,CAACtC,IAAI,EACnBA,IAAI,CAACoC,EAAE,GAAK3C,OAAO,CAAC2C,EAAE,EAAIpC,IAAI,CAAC0D,OAAO,GAAKxB,IAAI,CAACE,EAAE,EAAIpC,IAAI,CAACqG,UAAU,GAAKnH,SAAS,CAAAuC,aAAA,CAAAA,aAAA,IAC1EzB,IAAI,MAAEG,QAAQ,CAAEH,IAAI,CAACG,QAAQ,CAAG,CAAC,GACtCH,IACN,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,GAAIZ,QAAQ,GAAK,UAAU,CAAE,CAC3B,KAAM,CAAA+G,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKF,IAAI,CAACE,EAAE,CAAC,CACnE,GAAI/B,aAAa,EAAI,CAAC,CAAGA,aAAa,CAACyD,kBAAkB,CAAE,CACzD/F,QAAQ,eAAA6G,MAAA,CAAe1C,IAAI,CAACjF,IAAI,sBAAA2H,MAAA,CAAoBvE,aAAa,CAACyD,kBAAkB,UAAQ,CAAC,CAC7F,OACF,CACF,CACA;AACA,KAAM,CAAAqC,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKF,IAAI,CAACE,EAAE,CAAC,CAEnE,KAAM,CAAAkE,WAAW,CAAA7E,aAAA,CAAAA,aAAA,IACZhC,OAAO,MACVU,QAAQ,CAAE,CAAC,CACXuD,OAAO,CAAExB,IAAI,CAACE,EAAE,CAChB0D,SAAS,CAAE5D,IAAI,CAACjF,IAAI,CACpB+I,WAAW,CAAE9D,IAAI,CAAC6D,MAAM,CACxB7F,UAAU,CAAEE,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,EAAIb,eAAe,CAACC,OAAO,CAAC,CACnF4G,UAAU,CAAEnH,SAAS,EACtB,CACDpC,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAEyJ,WAAW,CAAC,CAAC,CACjC,CACAvI,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAAwI,cAAc,CAAG,QAAAA,CAAClD,SAAS,CAAEmD,MAAM,CAAErG,QAAQ,CAAuB,IAArB,CAAAjB,SAAS,CAAAoF,SAAA,CAAAlD,MAAA,IAAAkD,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACnE,GAAInE,QAAQ,EAAI,CAAC,CAAE,CACjBrD,OAAO,CAACD,IAAI,CAAC2G,MAAM,CAACxD,IAAI,EAAI,EAAEA,IAAI,CAACoC,EAAE,GAAKiB,SAAS,EAAIrD,IAAI,CAAC0D,OAAO,GAAK8C,MAAM,EAAIxG,IAAI,CAACqG,UAAU,GAAKnH,SAAS,CAAC,CAAC,CAAC,CACpH,CAAC,IAAM,CACL;AACA,GAAIE,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,KAAM,CAAA+G,gBAAgB,CAAG/C,2BAA2B,CAACC,SAAS,CAAC,CAC/D,KAAM,CAAAhD,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKoE,MAAM,CAAC,CAElE,GAAI,CAACnG,aAAa,EAAI,CAACA,aAAa,CAAC+D,YAAY,CAAE,CACjDrG,QAAQ,uBAAuB,CAAC,CAChC,OACF,CAEA;AACA,KAAM,CAAA0I,mBAAmB,CAAG5J,IAAI,CAC7B2G,MAAM,CAACxD,IAAI,EAAIA,IAAI,CAACoC,EAAE,GAAKiB,SAAS,EAAIrD,IAAI,CAAC0D,OAAO,GAAK8C,MAAM,EAAIxG,IAAI,CAACqG,UAAU,GAAKnH,SAAS,CAAC,CACjGa,MAAM,CAAC,CAAC2G,GAAG,CAAE1G,IAAI,GAAK0G,GAAG,CAAG1G,IAAI,CAACG,QAAQ,CAAE,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAwG,UAAU,CAAGtG,aAAa,CAACyD,kBAAkB,CAAG2C,mBAAmB,CAEzE,GAAItG,QAAQ,CAAGwG,UAAU,CAAE,CACzB5I,QAAQ,qCAAA6G,MAAA,CAAqC+B,UAAU,CAAE,CAAC,CAC1D,OACF,CACF,CAEA7J,OAAO,CAACD,IAAI,CAACyF,GAAG,CAACtC,IAAI,EACnBA,IAAI,CAACoC,EAAE,GAAKiB,SAAS,EAAIrD,IAAI,CAAC0D,OAAO,GAAK8C,MAAM,EAAIxG,IAAI,CAACqG,UAAU,GAAKnH,SAAS,CAAAuC,aAAA,CAAAA,aAAA,IACxEzB,IAAI,MAAEG,QAAQ,GACnBH,IACN,CAAC,CAAC,CACFjC,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAED,KAAM,CAAA6I,cAAc,CAAG,QAAAA,CAACvD,SAAS,CAAEmD,MAAM,CAAuB,IAArB,CAAAtH,SAAS,CAAAoF,SAAA,CAAAlD,MAAA,IAAAkD,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACzDxH,OAAO,CAACD,IAAI,CAAC2G,MAAM,CAACxD,IAAI,EAAI,EAAEA,IAAI,CAACoC,EAAE,GAAKiB,SAAS,EAAIrD,IAAI,CAAC0D,OAAO,GAAK8C,MAAM,EAAIxG,IAAI,CAACqG,UAAU,GAAKnH,SAAS,CAAC,CAAC,CAAC,CACpH,CAAC,CAED,KAAM,CAAA2H,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,MAAO,CAAAhK,IAAI,CAACkD,MAAM,CAAC,CAACD,KAAK,CAAEE,IAAI,GAAKF,KAAK,CAAIE,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAW,CAAE,CAAC,CAAC,CACnF,CAAC,CAED,KAAM,CAAA4G,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChBlK,IAAI,CAAC+E,OAAO,CAAC5B,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACgH,QAAQ,EAAIhH,IAAI,CAACgH,QAAQ,CAAG,CAAC,CAAE,CACtC;AACA,KAAM,CAAAC,OAAO,CAAIjH,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,CAAGF,IAAI,CAACgH,QAAQ,EAAK,GAAG,CAAGhH,IAAI,CAACgH,QAAQ,CAAC,CACzFD,QAAQ,EAAIE,OAAO,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAF,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAAAC,SAAS,CAAG,CAAC,CACjBtK,IAAI,CAAC+E,OAAO,CAAC5B,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACgH,QAAQ,EAAIhH,IAAI,CAACgH,QAAQ,CAAG,CAAC,CAAE,CACtC;AACA,KAAM,CAAAI,QAAQ,CAAIpH,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,CAAG,GAAG,EAAK,GAAG,CAAGF,IAAI,CAACgH,QAAQ,CAAC,CAChFG,SAAS,EAAIC,QAAQ,CACvB,CAAC,IAAM,CACL;AACAD,SAAS,EAAInH,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,CAC9C,CACF,CAAC,CAAC,CACF,MAAO,CAAAiH,SAAS,CAClB,CAAC,CAGD,KAAM,CAAAE,gBAAgB,CAAG,cAAAA,CAAOC,UAAU,CAAEC,QAAQ,CAA+B,IAA7B,CAAAC,UAAU,CAAAlD,SAAA,CAAAlD,MAAA,IAAAkD,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,WAAW,CAC5E,GAAI,CACF;AACA,KAAM,CAAAxE,KAAK,CAAG+G,iBAAiB,CAAC,CAAC,CACjC,KAAM,CAAAY,SAAS,CAAG3H,KAAK,CAAGtC,UAAU,CAEpC,KAAM,CAAAkK,SAAS,CAAG,CAChBC,WAAW,CAAEL,UAAU,CACvBM,aAAa,CAAE7K,YAAY,CAACE,IAAI,EAAI,kBAAkB,CACtD4K,cAAc,CAAE9K,YAAY,CAACG,KAAK,EAAI,EAAE,CACxC4K,cAAc,CAAE/K,YAAY,CAACI,KAAK,EAAI,EAAE,CACxC4K,SAAS,CAAE,CAAAvL,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEwL,QAAQ,GAAI,cAAc,CAC3CC,OAAO,CAAE,CAAAzL,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE4F,EAAE,GAAI,SAAS,CAC9B8F,UAAU,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACpCC,eAAe,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACzCE,QAAQ,UAAA1D,MAAA,CAAWuD,IAAI,CAACI,GAAG,CAAC,CAAC,MAAA3D,MAAA,CAAI9D,IAAI,CAAC0H,MAAM,CAAC,CAAC,CAAC3D,QAAQ,CAAC,EAAE,CAAC,CAAC4D,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAC1EC,MAAM,CAAElB,UAAU,CAClBmB,YAAY,CAAE7I,KAAK,CACnB8I,WAAW,CAAEpL,UAAU,CACvBqL,gBAAgB,CAAEpB,SAAS,CAC3BqB,cAAc,CAAErB,SAAS,CAAG,CAAC,CAAG,SAAS,CAAG,MAAM,CAClDsB,QAAQ,CAAEtB,SAAS,CAAG,CAAC,CAAG,GAAI,CAAAU,IAAI,CAACA,IAAI,CAACI,GAAG,CAAC,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAACS,kBAAkB,CAAC,CAAC,CAAG,IAAI,CAAE;AACvGC,KAAK,CAAEpM,IAAI,CAACyF,GAAG,CAACtC,IAAI,OAAAkJ,UAAA,OAAK,CACvBC,YAAY,CAAEnJ,IAAI,CAAC/C,IAAI,CACvBmM,WAAW,CAAEpJ,IAAI,CAACqJ,GAAG,CACrBlJ,QAAQ,CAAEH,IAAI,CAACG,QAAQ,CACvB2F,SAAS,CAAE9F,IAAI,CAAC8F,SAAS,IAAAoD,UAAA,CAAIlJ,IAAI,CAACkC,IAAI,UAAAgH,UAAA,iBAATA,UAAA,CAAWjM,IAAI,GAAI,OAAO,CACvDiD,UAAU,CAAEF,IAAI,CAACE,UAAU,CAC3BoJ,WAAW,CAAEtJ,IAAI,CAACE,UAAU,CAAGF,IAAI,CAACG,QACtC,CAAC,EAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAoJ,YAAY,CAAGxN,oBAAoB,CAAC2L,SAAS,CAAE,cAAc,CAAE,MAAM,CAAEnL,CAAC,CAAC,CAE/E;AACA,KAAM,CAAAiN,WAAW,CAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAE,QAAQ,CAAE,sBAAsB,CAAC,CACrEF,WAAW,CAACG,QAAQ,CAACC,KAAK,CAACL,YAAY,CAAC,CACxCC,WAAW,CAACG,QAAQ,CAACE,KAAK,CAAC,CAAC,CAE5B;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BN,WAAW,CAACO,KAAK,CAAC,CAAC,CACnBP,WAAW,CAACQ,KAAK,CAAC,CAAC,CACnB;AACAzI,UAAU,CAAC,IAAM,CACfiI,WAAW,CAACK,KAAK,CAAC,CAAC,CACrB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED;AACA,GAAIL,WAAW,CAACG,QAAQ,CAACM,UAAU,GAAK,UAAU,CAAE,CAClDH,cAAc,CAAC,CAAC,CAClB,CAAC,IAAM,CACLN,WAAW,CAACU,MAAM,CAAGJ,cAAc,CACrC,CAEF,CAAE,MAAOhM,KAAK,CAAE,CACd;AAAA,CAEJ,CAAC,CAED,KAAM,CAAAqM,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAItN,IAAI,CAACuE,MAAM,GAAK,CAAC,CAAE,CACrBrD,QAAQ,CAACxB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAC7B,OACF,CAEAsB,aAAa,CAAC,IAAI,CAAC,CACnBE,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,GAAIT,WAAW,GAAK,SAAS,GAAK,CAACP,YAAY,CAACE,IAAI,EAAI,CAACF,YAAY,CAACE,IAAI,CAACmN,IAAI,CAAC,CAAC,CAAC,CAAE,CAClFrM,QAAQ,CAAC,gDAAgD,CAAC,CAC1DF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA;AACA,KAAM,CAAAiC,KAAK,CAAGD,cAAc,CAAC,CAAC,CAC9B,GAAIrC,UAAU,CAAGsC,KAAK,CAAE,CACtB/B,QAAQ,CAAC,4CAA4C,CAAC,CACtDF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,GAAIL,UAAU,CAAG,CAAC,CAAE,CAClBO,QAAQ,CAAC,gCAAgC,CAAC,CAC1CF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,GAAI,CACF,KAAM,CAAA0J,QAAQ,CAAG,CACf8C,SAAS,CAAE,MAAM,CACjBzC,aAAa,CAAE7K,YAAY,CAACE,IAAI,CAChC4K,cAAc,CAAE9K,YAAY,CAACG,KAAK,CAClC4K,cAAc,CAAE/K,YAAY,CAACI,KAAK,CAClCmN,cAAc,CAAElN,aAAa,CAC7BwL,WAAW,CAAEpL,UAAU,CACrByL,KAAK,CAAEpM,IAAI,CAACyF,GAAG,CAACtC,IAAI,EAAI,CACtB;AACA,GAAI,CAAAwG,MAAM,CAAGxG,IAAI,CAAC0D,OAAO,CACzB,GAAI,MAAO,CAAA8C,MAAM,GAAK,QAAQ,EAAIA,MAAM,GAAK,IAAI,CAAE,CACjDA,MAAM,CAAGA,MAAM,CAACpE,EAAE,EAAIoE,MAAM,CAC9B,CAEA,MAAO,CACT/G,OAAO,CAAEO,IAAI,CAACoC,EAAE,CACZjC,QAAQ,CAAER,UAAU,CAACK,IAAI,CAACG,QAAQ,CAAC,CACnC+B,IAAI,CAAEqD,QAAQ,CAACiB,MAAM,CAAC,CACtBtG,UAAU,CAAEP,UAAU,CAACK,IAAI,CAACE,UAAU,CAAC,CACvCmG,UAAU,CAAErG,IAAI,CAACqG,UAAU,EAAI,UACjC,CAAC,CACH,CAAC,CACH,CAAC,CAGH;AACA,KAAM,CAAA9D,QAAQ,CAAG,KAAM,CAAA1G,GAAG,CAAC2G,IAAI,CAAC,aAAa,CAAE+E,QAAQ,CAAC,CACxD,KAAM,CAAAgD,MAAM,CAAGhI,QAAQ,CAACM,IAAI,CAACT,EAAE,CAC/B,KAAM,CAAAkF,UAAU,CAAG/E,QAAQ,CAACM,IAAI,CAAC8E,WAAW,CAE5C,GAAIvI,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,GAAI,CACF,KAAM,CAAAvD,GAAG,CAAC2G,IAAI,eAAAoC,MAAA,CAAe2F,MAAM,cAAY,CAAC,CAEhD;AACA,GAAIjL,YAAY,CAAE,CAChB,KAAM,CAAA+H,gBAAgB,CAACC,UAAU,CAAE/E,QAAQ,CAACM,IAAI,CAAE,WAAW,CAAC,CAChE,CAEJ;AACA/F,OAAO,CAAC,EAAE,CAAC,CACXE,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAE/C;AACAgC,YAAY,CAAC,UAAU,CAAC,CAExB;AACA,KAAM,IAAI,CAAAqL,OAAO,CAACC,OAAO,EAAIlJ,UAAU,CAACkJ,OAAO,CAAE,IAAI,CAAC,CAAC,CAAE;AAEzD;AACA,KAAM,CAAAtJ,aAAa,CAAC,CAAC,CAErB;AACA,KAAM,IAAI,CAAAqJ,OAAO,CAACC,OAAO,EAAIlJ,UAAU,CAACkJ,OAAO,CAAE,GAAG,CAAC,CAAC,CAAE;AAExD;AACAtH,wBAAwB,CAAC,CAAC,CAE1BuH,KAAK,8CAAA9F,MAAA,CAA8C0C,UAAU,CAAE,CAAC,CAClE,CAAE,MAAOqD,aAAa,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CACtB;AACA9M,QAAQ,kBAAA6G,MAAA,CAAkB0C,UAAU,8BAAA1C,MAAA,CAA4B,EAAAgG,qBAAA,CAAAD,aAAa,CAACpI,QAAQ,UAAAqI,qBAAA,kBAAAC,sBAAA,CAAtBD,qBAAA,CAAwB/H,IAAI,UAAAgI,sBAAA,iBAA5BA,sBAAA,CAA8B/M,KAAK,GAAI6M,aAAa,CAACG,OAAO,CAAE,CAAC,CAE/H;AACAhO,OAAO,CAAC,EAAE,CAAC,CACXE,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAEnD;AACA,KAAM,IAAI,CAAAqN,OAAO,CAACC,OAAO,EAAIlJ,UAAU,CAACkJ,OAAO,CAAE,IAAI,CAAC,CAAC,CAEvD;AACA,KAAM,CAAAtJ,aAAa,CAAC,CAAC,CACrB,KAAM,IAAI,CAAAqJ,OAAO,CAACC,OAAO,EAAIlJ,UAAU,CAACkJ,OAAO,CAAE,GAAG,CAAC,CAAC,CACtDtH,wBAAwB,CAAC,CAAC,CAC5B,CACF,CAAC,IAAM,CACL;AAEA;AACA,GAAI7D,YAAY,CAAE,CAChB,KAAM,CAAA+H,gBAAgB,CAACC,UAAU,CAAE/E,QAAQ,CAACM,IAAI,CAAE,SAAS,CAAC,CAC9D,CAEA;AACA/F,OAAO,CAAC,EAAE,CAAC,CACXE,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAEnD;AACAgC,YAAY,CAAC,UAAU,CAAC,CAExBuL,KAAK,CAACnO,CAAC,CAAC,+BAA+B,CAAE,CAAE+K,UAAW,CAAC,CAAC,CAAC,CAC3D,CACF,CAAE,MAAOrE,GAAG,CAAE,KAAA8H,aAAA,CAAAC,kBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAEZ;AACA,IAAAP,aAAA,CAAI9H,GAAG,CAACV,QAAQ,UAAAwI,aAAA,YAAAC,kBAAA,CAAZD,aAAA,CAAclI,IAAI,UAAAmI,kBAAA,WAAlBA,kBAAA,CAAoBlN,KAAK,CAAE,CAC7BC,QAAQ,CAACkF,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC/E,KAAK,CAAC,CACnC,CAAC,IAAM,KAAAmN,cAAA,CAAIhI,GAAG,CAACV,QAAQ,UAAA0I,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAcpI,IAAI,UAAAqI,mBAAA,WAAlBA,mBAAA,CAAoBK,MAAM,CAAE,CACrCxN,QAAQ,CAACkF,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC0I,MAAM,CAAC,CACpC,CAAC,IAAM,KAAAJ,cAAA,CAAIlI,GAAG,CAACV,QAAQ,UAAA4I,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAActI,IAAI,UAAAuI,mBAAA,WAAlBA,mBAAA,CAAoBxD,aAAa,CAAE,CAC5C7J,QAAQ,CAACkF,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC+E,aAAa,CAAC,CAAC,CAAC,CAAC,CAC9C,CAAC,IAAM,KAAAyD,cAAA,CAAIpI,GAAG,CAACV,QAAQ,UAAA8I,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAcxI,IAAI,UAAAyI,mBAAA,WAAlBA,mBAAA,CAAoB1C,WAAW,CAAE,CAC1C7K,QAAQ,CAACkF,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC+F,WAAW,CAAC,CAAC,CAAC,CAAC,CAC5C,CAAC,IAAM,CACL7K,QAAQ,CAAC,8DAA8D,CAAC,CAC1E,CACF,CAAC,OAAS,CACRF,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAA2N,SAAS,CAAGA,CAAA,GAAM,CACtB1O,OAAO,CAAC,EAAE,CAAC,CACXiB,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAA0N,kBAAkB,CAAGA,CAACC,UAAU,CAAEC,KAAK,GAAK,CAChD,GAAID,UAAU,GAAK,QAAQ,CAAE,CAC3B;AACAnN,cAAc,CAACoN,KAAK,CAAC,CACvB,CAAC,IAAM,CACL;AACF,KAAM,CAAAnK,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQvD,OAAO,MAAE,CAACwN,UAAU,EAAGC,KAAK,EAAE,CACtDxN,UAAU,CAACqD,UAAU,CAAC,CACtBL,aAAa,CAACK,UAAU,CAAC,CACzB,CACF,CAAC,CAED,KAAM,CAAAoK,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,cAAc,CAAG,CAAEzN,QAAQ,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CACnDF,UAAU,CAAC0N,cAAc,CAAC,CAC1BtN,cAAc,CAAC,EAAE,CAAC,CAAE;AACpB4C,aAAa,CAAC0K,cAAc,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAC,sBAAsB,CAAG,KAAAA,CAAOC,UAAU,CAAE7G,UAAU,GAAK,CAC/D,GAAI,CACF,KAAM,CAAArJ,GAAG,CAACmQ,KAAK,yBAAApH,MAAA,CAAyBmH,UAAU,MAAK,CACrD5G,WAAW,CAAE,CAACD,UAChB,CAAC,CAAC,CACF;AACA,KAAM,CAAAhE,eAAe,CAAC,CAAC,CACvB;AACAC,aAAa,CAACjD,OAAO,CAAC,CACxB,CAAE,MAAO+E,GAAG,CAAE,CACZlF,QAAQ,CAAC,kCAAkC,CAAC,CAC9C,CACF,CAAC,CAED,KAAM,CAAAkO,mBAAmB,CAAIjM,IAAI,EAAK,CACpCvB,kBAAkB,IAAAmG,MAAA,CAAI5E,IAAI,CAACoC,EAAE,MAAAwC,MAAA,CAAI5E,IAAI,CAAC0D,OAAO,CAAE,CAAC,CAChD/E,eAAe,CAACqB,IAAI,CAACG,QAAQ,CAAC0E,QAAQ,CAAC,CAAC,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAqH,oBAAoB,CAAIC,CAAC,EAAK,CAClC,KAAM,CAAAR,KAAK,CAAGQ,CAAC,CAACC,MAAM,CAACT,KAAK,CAC5B;AACA,GAAIA,KAAK,GAAK,EAAE,EAAI,OAAO,CAACU,IAAI,CAACV,KAAK,CAAC,CAAE,CACvChN,eAAe,CAACgN,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAW,oBAAoB,CAAItM,IAAI,EAAK,CACrC,KAAM,CAAAuM,WAAW,CAAG5M,UAAU,CAACjB,YAAY,CAAC,CAE5C,GAAIA,YAAY,GAAK,EAAE,EAAIsC,KAAK,CAACuL,WAAW,CAAC,EAAIA,WAAW,CAAG,CAAC,CAAE,CAChExO,QAAQ,CAAC,+BAA+B,CAAC,CACzCU,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CAEA;AACA,GAAIW,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,KAAM,CAAA+G,gBAAgB,CAAG/C,2BAA2B,CAACpD,IAAI,CAACoC,EAAE,CAAC,CAC7D,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKpC,IAAI,CAAC0D,OAAO,CAAC,CAExE,GAAI,CAACrD,aAAa,EAAI,CAACA,aAAa,CAAC+D,YAAY,CAAE,CACjDrG,QAAQ,uBAAuB,CAAC,CAChCU,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CAEA;AACA,KAAM,CAAAgI,mBAAmB,CAAG5J,IAAI,CAC7B2G,MAAM,CAACgJ,QAAQ,EAAIA,QAAQ,CAACpK,EAAE,GAAKpC,IAAI,CAACoC,EAAE,EAAIoK,QAAQ,CAAC9I,OAAO,GAAK1D,IAAI,CAAC0D,OAAO,EAAI8I,QAAQ,CAACnG,UAAU,GAAKrG,IAAI,CAACqG,UAAU,CAAC,CAC3HtG,MAAM,CAAC,CAAC2G,GAAG,CAAE8F,QAAQ,GAAK9F,GAAG,CAAG8F,QAAQ,CAACrM,QAAQ,CAAE,CAAC,CAAC,CAExD;AACA,KAAM,CAAAwG,UAAU,CAAGtG,aAAa,CAACyD,kBAAkB,CAAG2C,mBAAmB,CAEzE,GAAI8F,WAAW,CAAG5F,UAAU,CAAE,CAC5B5I,QAAQ,qCAAA6G,MAAA,CAAqC+B,UAAU,CAAE,CAAC,CAC1DlI,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CACF,CAEA,GAAI8N,WAAW,GAAK,CAAC,CAAE,CACrB;AACA3F,cAAc,CAAC5G,IAAI,CAACoC,EAAE,CAAEpC,IAAI,CAAC0D,OAAO,CAAE1D,IAAI,CAACqG,UAAU,CAAC,CACxD,CAAC,IAAM,CACLE,cAAc,CAACvG,IAAI,CAACoC,EAAE,CAAEpC,IAAI,CAAC0D,OAAO,CAAE6I,WAAW,CAAEvM,IAAI,CAACqG,UAAU,CAAC,CACrE,CAEA5H,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,EAAE,CAAC,CACnBZ,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAA0O,oBAAoB,CAAGA,CAAA,GAAM,CACjChO,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,EAAE,CAAC,CACrB,CAAC,CAED,KAAM,CAAA+N,sBAAsB,CAAGA,CAACP,CAAC,CAAEnM,IAAI,GAAK,CAC1C,GAAImM,CAAC,CAACQ,GAAG,GAAK,OAAO,CAAE,CACrBL,oBAAoB,CAACtM,IAAI,CAAC,CAC5B,CAAC,IAAM,IAAImM,CAAC,CAACQ,GAAG,GAAK,QAAQ,CAAE,CAC7BF,oBAAoB,CAAC,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAG,mBAAmB,CAAGA,CAACvJ,SAAS,CAAEmD,MAAM,GAAK,CACjD3H,gBAAgB,CAAC2G,IAAI,EAAA/D,aAAA,CAAAA,aAAA,IAChB+D,IAAI,MACP,CAACnC,SAAS,EAAGmD,MAAM,EACnB,CAAC,CACL,CAAC,CAED,KAAM,CAAAqG,sBAAsB,CAAIpN,OAAO,EAAK,CAC1C;AACA,GAAIL,QAAQ,GAAK,UAAU,EAAIK,OAAO,CAACqN,cAAc,EAAI,CAAC,CAAE,CAC1D,OACF,CAEA,GAAIrN,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACT,MAAM,CAAG,CAAC,CAAE,CACnE;AACA,KAAM,CAAA2L,cAAc,CAAGnO,aAAa,CAACa,OAAO,CAAC2C,EAAE,CAAC,CAEhD,GAAI2K,cAAc,CAAE,CAClB,KAAM,CAAAC,sBAAsB,CAAGvN,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,OAAAiL,OAAA,OAAI,CAAC,EAAAA,OAAA,CAAAjL,CAAC,CAACE,IAAI,UAAA+K,OAAA,iBAANA,OAAA,CAAQ7K,EAAE,GAAIJ,CAAC,CAACE,IAAI,IAAM6K,cAAc,GAAC,CAE5G,GAAIC,sBAAsB,CAAE,KAAAE,sBAAA,CAC1B;AACA,KAAM,CAAA/G,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,OAAAmL,qBAAA,OAAI,CAAAnL,CAAC,CAACI,EAAE,IAAM,EAAA+K,qBAAA,CAAAH,sBAAsB,CAAC9K,IAAI,UAAAiL,qBAAA,iBAA3BA,qBAAA,CAA6B/K,EAAE,GAAI4K,sBAAsB,CAAC9K,IAAI,CAAC,GAAC,CAC5H,KAAM,CAAAjC,SAAS,CAAGG,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,EAAIb,eAAe,CAACC,OAAO,CAAC,CAEzF;AACA,KAAM,CAAAqC,YAAY,CAAG,CACnBM,EAAE,CAAE,EAAA8K,sBAAA,CAAAF,sBAAsB,CAAC9K,IAAI,UAAAgL,sBAAA,iBAA3BA,sBAAA,CAA6B9K,EAAE,GAAI4K,sBAAsB,CAAC9K,IAAI,CAClEjF,IAAI,CAAE+P,sBAAsB,CAAClH,SAAS,CACtCC,MAAM,CAAEiH,sBAAsB,CAAChH,WAAW,CAC1CpG,KAAK,CAAEK,SACT,CAAC,CACDwF,SAAS,CAAChG,OAAO,CAAEqC,YAAY,CAAC,CAClC,CACF,CACF,CAAC,IAAM,CACL;AACA2D,SAAS,CAAChG,OAAO,CAAC,CACpB,CACF,CAAC,CAED,GAAI/B,OAAO,CAAE,CACX,mBACEzB,IAAA,QAAKmR,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBlR,KAAA,QAAKiR,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpR,IAAA,QAAKmR,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BnR,IAAA,SAAAoR,QAAA,CAAM,qBAAmB,CAAM,CAAC,EAC7B,CAAC,CACH,CAAC,CAEV,CAEA,mBACElR,KAAA,QAAKiR,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBlR,KAAA,QAAKiR,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpR,IAAA,OAAAoR,QAAA,CAAK9Q,CAAC,CAAC,sBAAsB,CAAC,CAAK,CAAC,cACpCN,IAAA,QAAKmR,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBlR,KAAA,SAAAkR,QAAA,EAAM,WAAS,CAAC7Q,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEwL,QAAQ,EAAO,CAAC,CACnC,CAAC,EACH,CAAC,cAEN7L,KAAA,QAAKiR,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1BlR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,OAAAoR,QAAA,CAAI,UAAQ,CAAI,CAAC,cAGjBlR,KAAA,SAAMiR,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3BlR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,UAAAoR,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBlR,KAAA,WACEwP,KAAK,CAAEzN,OAAO,CAACE,QAAS,CACxBkP,QAAQ,CAAGnB,CAAC,EAAKV,kBAAkB,CAAC,UAAU,CAAEU,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE,CAAA0B,QAAA,eAEhEpR,IAAA,WAAQ0P,KAAK,CAAC,EAAE,CAAA0B,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvC1Q,UAAU,CAAC6G,MAAM,CAAC6B,GAAG,EAAIA,GAAG,CAACF,WAAW,CAAC,CAAC7C,GAAG,CAAClE,QAAQ,eACrDnC,IAAA,WAA0B0P,KAAK,CAAEvN,QAAQ,CAACgE,EAAG,CAAAiL,QAAA,CAC1CjP,QAAQ,CAACnB,IAAI,EADHmB,QAAQ,CAACgE,EAEd,CACT,CAAC,EACI,CAAC,cACTjG,KAAA,CAACL,MAAM,EACLyR,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMxO,qBAAqB,CAAC,CAACD,kBAAkB,CAAE,CAC1D0O,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAN,QAAA,EAE9BrO,kBAAkB,CAAG,MAAM,CAAG,QAAQ,CAAC,aAC1C,EAAQ,CAAC,EACN,CAAC,cAEN7C,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,UAAAoR,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1BlR,KAAA,QAAKiR,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpR,IAAA,WACE2R,IAAI,CAAC,QAAQ,CACbR,SAAS,mBAAAxI,MAAA,CAAoB1F,SAAS,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACxEuO,OAAO,CAAEA,CAAA,GAAMtO,YAAY,CAAC,UAAU,CAAE,CAAAkO,QAAA,CACzC,UAED,CAAQ,CAAC,cACTpR,IAAA,WACE2R,IAAI,CAAC,QAAQ,CACbR,SAAS,mBAAAxI,MAAA,CAAoB1F,SAAS,GAAK,WAAW,CAAG,QAAQ,CAAG,EAAE,CAAG,CACzEuO,OAAO,CAAEA,CAAA,GAAMtO,YAAY,CAAC,WAAW,CAAE,CAAAkO,QAAA,CAC1C,WAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENlR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,UAAAoR,QAAA,CAAO,YAAU,CAAO,CAAC,cACzBlR,KAAA,QAAKiR,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BpR,IAAA,WACE2R,IAAI,CAAC,QAAQ,CACbR,SAAS,kBAAAxI,MAAA,CAAmBxF,QAAQ,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACtEqO,OAAO,CAAEA,CAAA,GAAMpO,WAAW,CAAC,UAAU,CAAE,CACvCwO,KAAK,CAAEtR,CAAC,CAAC,+BAA+B,CAAE,CAAA8Q,QAAA,CAC3C,UAED,CAAQ,CAAC,cACTpR,IAAA,WACE2R,IAAI,CAAC,QAAQ,CACbR,SAAS,kBAAAxI,MAAA,CAAmBxF,QAAQ,GAAK,SAAS,CAAG,QAAQ,CAAG,EAAE,CAAG,CACrEqO,OAAO,CAAEA,CAAA,GAAMpO,WAAW,CAAC,SAAS,CAAE,CACtCwO,KAAK,CAAEtR,CAAC,CAAC,qCAAqC,CAAE,CAAA8Q,QAAA,CACjD,SAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENlR,KAAA,QAAKiR,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/CpR,IAAA,UAAAoR,QAAA,CAAO,gBAAc,CAAO,CAAC,cAC7BlR,KAAA,QAAKiR,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpDpR,IAAA,WACE2R,IAAI,CAAC,QAAQ,CACbR,SAAS,oCAAAxI,MAAA,CAAqCtF,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC7EmO,OAAO,CAAEA,CAAA,GAAMlO,eAAe,CAAC,IAAI,CAAE,CACrCsO,KAAK,CAAEtR,CAAC,CAAC,iCAAiC,CAAE,CAAA8Q,QAAA,CAC7C,KAED,CAAQ,CAAC,cACTpR,IAAA,WACE2R,IAAI,CAAC,QAAQ,CACbR,SAAS,oCAAAxI,MAAA,CAAqC,CAACtF,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC9EmO,OAAO,CAAEA,CAAA,GAAMlO,eAAe,CAAC,KAAK,CAAE,CACtCsO,KAAK,CAAEtR,CAAC,CAAC,wBAAwB,CAAE,CAAA8Q,QAAA,CACpC,IAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAENlR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,UAAAoR,QAAA,CAAO,SAAO,CAAO,CAAC,cACtBpR,IAAA,UACE6R,GAAG,CAAEhP,cAAe,CACpB8O,IAAI,CAAC,MAAM,CACXG,WAAW,CAAExR,CAAC,CAAC,qBAAqB,CAAE,CACtCoP,KAAK,CAAErN,WAAY,CACnBgP,QAAQ,CAAGnB,CAAC,EAAKV,kBAAkB,CAAC,QAAQ,CAAEU,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE,CAC/D,CAAC,EACC,CAAC,cACN1P,IAAA,QAAKmR,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BpR,IAAA,CAACH,MAAM,EAACyR,OAAO,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAE7B,YAAa,CAAAyB,QAAA,CAAC,OAE9D,CAAQ,CAAC,CACN,CAAC,EACF,CAAC,CAGNrO,kBAAkB,eACjB7C,KAAA,QAAKiR,SAAS,CAAC,qBAAqB,CAACM,KAAK,CAAE,CAC1CM,YAAY,CAAE,MAAM,CACpBC,OAAO,CAAE,MAAM,CACfC,eAAe,CAAE,SAAS,CAC1BC,YAAY,CAAE,QAAQ,CACtBC,MAAM,CAAE,mBACV,CAAE,CAAAf,QAAA,eACApR,IAAA,OAAIyR,KAAK,CAAE,CAAEW,MAAM,CAAE,YAAY,CAAEC,QAAQ,CAAE,MAAM,CAAEC,UAAU,CAAE,KAAM,CAAE,CAAAlB,QAAA,CAAC,4BAE1E,CAAI,CAAC,cACLpR,IAAA,QAAKyR,KAAK,CAAE,CACVc,OAAO,CAAE,MAAM,CACfC,mBAAmB,CAAE,uCAAuC,CAC5DC,GAAG,CAAE,QACP,CAAE,CAAArB,QAAA,CACC1Q,UAAU,CAAC2F,GAAG,CAAClE,QAAQ,eACtBjC,KAAA,QAAuBuR,KAAK,CAAE,CAC5Bc,OAAO,CAAE,MAAM,CACfG,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,eAAe,CAC/BX,OAAO,CAAE,QAAQ,CACjBC,eAAe,CAAE,OAAO,CACxBC,YAAY,CAAE,UAAU,CACxBC,MAAM,CAAE,mBACV,CAAE,CAAAf,QAAA,eACApR,IAAA,SAAMyR,KAAK,CAAE,CAAEY,QAAQ,CAAE,UAAU,CAAEC,UAAU,CAAE,KAAM,CAAE,CAAAlB,QAAA,CACtDjP,QAAQ,CAACnB,IAAI,CACV,CAAC,cACPhB,IAAA,WACEwR,OAAO,CAAEA,CAAA,GAAM3B,sBAAsB,CAAC1N,QAAQ,CAACgE,EAAE,CAAEhE,QAAQ,CAAC+G,WAAW,CAAE,CACzEuI,KAAK,CAAE,CACLO,OAAO,CAAE,gBAAgB,CACzBK,QAAQ,CAAE,SAAS,CACnBH,YAAY,CAAE,SAAS,CACvBC,MAAM,CAAE,WAAW,CACnBS,MAAM,CAAE,SAAS,CACjBX,eAAe,CAAE9P,QAAQ,CAAC+G,WAAW,CAAG,SAAS,CAAG,SAAS,CAC7D2J,WAAW,CAAE1Q,QAAQ,CAAC+G,WAAW,CAAG,SAAS,CAAG,SAAS,CACzD4J,KAAK,CAAE3Q,QAAQ,CAAC+G,WAAW,CAAG,SAAS,CAAG,SAC5C,CAAE,CAAAkI,QAAA,CAEDjP,QAAQ,CAAC+G,WAAW,CAAG,UAAU,CAAG,cAAc,CAC7C,CAAC,GA1BD/G,QAAQ,CAACgE,EA2BtB,CACE,CAAC,CACC,CAAC,EACH,CACN,cAEDnG,IAAA,QAAKmR,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BlR,KAAA,MAAGiR,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC1B5Q,QAAQ,CAAC2E,MAAM,CAAC,UAAQ,CAAC3E,QAAQ,CAAC2E,MAAM,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,QAC7D,EAAG,CAAC,CACD,CAAC,cAENnF,IAAA,QAAKmR,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3B5Q,QAAQ,CAAC6F,GAAG,CAAC7C,OAAO,OAAAuP,sBAAA,oBACnB/S,IAAA,QAEEmR,SAAS,iBAAAxI,MAAA,CAAkBnF,OAAO,CAACqN,cAAc,EAAI,CAAC,EAAI1N,QAAQ,GAAK,UAAU,CAAG,cAAc,CAAG,EAAE,cAAa,CACpHqO,OAAO,CAAEA,CAAA,GAAMZ,sBAAsB,CAACpN,OAAO,CAAE,CAAA4N,QAAA,cAE/ClR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,OAAAoR,QAAA,CAAK5N,OAAO,CAACxC,IAAI,CAAK,CAAC,cACvBhB,IAAA,MAAGmR,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE5N,OAAO,CAAC4J,GAAG,CAAI,CAAC,cAC5ClN,KAAA,MAAGiR,SAAS,CAAC,eAAe,CAAAC,QAAA,EACzB,CAAC4B,qBAAA,EAAM,CACN;AACA,KAAM,CAAArL,QAAQ,EAAAqL,qBAAA,CAAGxP,OAAO,CAACoC,gBAAgB,UAAAoN,qBAAA,iBAAxBA,qBAAA,CAA0BlN,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAACxB,YAAY,CAAC,CACzE,GAAIkD,QAAQ,EAAI5F,iBAAiB,CAACyB,OAAO,CAAC2C,EAAE,CAAC,CAAE,CAC7C,KAAM,CAAA+D,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA8M,iBAAiB,CAAG/I,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,OAAAmN,cAAA,OAAI,CAAAnN,CAAC,CAACI,EAAE,IAAM,EAAA+M,cAAA,CAAAvL,QAAQ,CAAC1B,IAAI,UAAAiN,cAAA,iBAAbA,cAAA,CAAe/M,EAAE,GAAIwB,QAAQ,CAAC1B,IAAI,CAAC,GAAC,CACpG,GAAIgN,iBAAiB,CAAE,CACrB,MAAO,CAAA9O,mBAAmB,CAACX,OAAO,CAAEyP,iBAAiB,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CACnE,CACF,CACA;AACA,MAAO,CAAA5P,eAAe,CAACC,OAAO,CAAC,CAAC2P,OAAO,CAAC,CAAC,CAAC,CAC5C,CAAC,EAAE,CAAC,CAAC,MACL,CAAC3P,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACT,MAAM,CAAG,CAAC,kBAAAwD,MAAA,CAC9C,EAAAoK,sBAAA,CAAAvP,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAACxB,YAAY,CAAC,UAAAsO,sBAAA,iBAAvDA,sBAAA,CAAyD9M,IAAI,CAAC6D,MAAM,GAAI,OAAO,KAAG,EAEnG,CAAC,cACJ5J,KAAA,MAAGiR,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SACpB,CAAC5N,OAAO,CAACqN,cAAc,CAAC,GAAC,CAACrN,OAAO,CAACyC,IAAI,CAC5ClE,iBAAiB,CAACyB,OAAO,CAAC2C,EAAE,CAAC,EAAI3C,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACT,MAAM,CAAG,CAAC,eAC/FnF,IAAA,SAAMmR,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC5B,CAAC,IAAM,CACN,KAAM,CAAAlH,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,MAAO,CAAA3C,OAAO,CAACoC,gBAAgB,CAACS,GAAG,CAACuD,cAAc,EAAI,KAAAwJ,qBAAA,CAAAC,qBAAA,CACpD,KAAM,CAAAjP,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,OAAAuN,qBAAA,OAAI,CAAAvN,CAAC,CAACI,EAAE,IAAM,EAAAmN,qBAAA,CAAA1J,cAAc,CAAC3D,IAAI,UAAAqN,qBAAA,iBAAnBA,qBAAA,CAAqBnN,EAAE,GAAIyD,cAAc,CAAC3D,IAAI,CAAC,GAAC,CAC5G,GAAI,CAAC7B,aAAa,CAAE,MAAO,KAAI,CAE/B;AACA,KAAM,CAAAmP,QAAQ,CAAG,CAAAnP,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEpD,IAAI,KAAAoS,qBAAA,CAAIxJ,cAAc,CAAC3D,IAAI,UAAAmN,qBAAA,iBAAnBA,qBAAA,CAAqBpS,IAAI,GAAI4I,cAAc,CAACC,SAAS,CAE7F,mBACE3J,KAAA,SAA2DiR,SAAS,eAAAxI,MAAA,CAAgBvE,aAAa,CAAC+D,YAAY,CAAG,WAAW,CAAG,aAAa,CAAG,CAAAiJ,QAAA,EAC5ImC,QAAQ,CAAC,IAAE,CAACpP,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,CAAC+O,OAAO,CAAC,CAAC,CAAC,CAAC,QAAM,CAAC/O,aAAa,CAACyD,kBAAkB,CAAC,aAC9G,GAFW,EAAAwL,qBAAA,CAAAzJ,cAAc,CAAC3D,IAAI,UAAAoN,qBAAA,iBAAnBA,qBAAA,CAAqBlN,EAAE,GAAIyD,cAAc,CAAC3D,IAE/C,CAAC,CAEX,CAAC,CAAC,CAACsB,MAAM,CAACiM,OAAO,CAAC,CACpB,CAAC,EAAE,CAAC,CACA,CACP,EACA,CAAC,CAGHhQ,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACT,MAAM,CAAG,CAAC,eAC9DjF,KAAA,QAAKiR,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpR,IAAA,UAAAoR,QAAA,CAAO,OAAK,CAAO,CAAC,cACpBlR,KAAA,WACEiR,SAAS,CAAC,aAAa,CACvBzB,KAAK,CAAE/M,aAAa,CAACa,OAAO,CAAC2C,EAAE,CAAC,EAAI,EAAG,CACvCkL,QAAQ,CAAGnB,CAAC,EAAK,CACf,KAAM,CAAA3F,MAAM,CAAGjB,QAAQ,CAAC4G,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC,CACvCiB,mBAAmB,CAACnN,OAAO,CAAC2C,EAAE,CAAEoE,MAAM,CAAC,CACzC,CAAE,CACFiH,OAAO,CAAGtB,CAAC,EAAKA,CAAC,CAACuD,eAAe,CAAC,CAAE,CAAArC,QAAA,eAEpCpR,IAAA,WAAQ0P,KAAK,CAAC,EAAE,CAAA0B,QAAA,CAAC,aAAW,CAAQ,CAAC,CACpC5N,OAAO,CAACoC,gBAAgB,CAACS,GAAG,CAAC,CAACuD,cAAc,CAAE8J,KAAK,GAAK,KAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACvD;AACA,KAAM,CAAA5J,gBAAgB,CAAG/C,2BAA2B,CAAC3D,OAAO,CAAC2C,EAAE,CAAC,CAChE,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,OAAAgO,qBAAA,OAAI,CAAAhO,CAAC,CAACI,EAAE,IAAM,EAAA4N,qBAAA,CAAAnK,cAAc,CAAC3D,IAAI,UAAA8N,qBAAA,iBAAnBA,qBAAA,CAAqB5N,EAAE,GAAIyD,cAAc,CAAC3D,IAAI,CAAC,GAAC,CAC5G,KAAM,CAAAgC,WAAW,CAAG7D,aAAa,CAAGA,aAAa,CAAC+D,YAAY,CAAG,KAAK,CACtE,KAAM,CAAA6L,YAAY,CAAG5P,aAAa,CAAGA,aAAa,CAACyD,kBAAkB,CAAG,CAAC,CAEzE;AACA,KAAM,CAAA0L,QAAQ,CAAG,CAAAnP,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEpD,IAAI,KAAA2S,qBAAA,CAAI/J,cAAc,CAAC3D,IAAI,UAAA0N,qBAAA,iBAAnBA,qBAAA,CAAqB3S,IAAI,GAAI4I,cAAc,CAACC,SAAS,CAC7F,KAAM,CAAAoK,UAAU,CAAG,CAAA7P,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE0F,MAAM,KAAA8J,qBAAA,CAAIhK,cAAc,CAAC3D,IAAI,UAAA2N,qBAAA,iBAAnBA,qBAAA,CAAqB9J,MAAM,GAAIF,cAAc,CAACG,WAAW,CAGrG,mBACE7J,KAAA,WAEEwP,KAAK,CAAE,EAAAoE,qBAAA,CAAAlK,cAAc,CAAC3D,IAAI,UAAA6N,qBAAA,iBAAnBA,qBAAA,CAAqB3N,EAAE,GAAIyD,cAAc,CAAC3D,IAAK,CACtDiO,QAAQ,CAAE/Q,QAAQ,GAAK,UAAU,CAAG,CAAC8E,WAAW,CAAG,KAAM,CAAAmJ,QAAA,EAExDmC,QAAQ,CAAC,IAAE,CAACU,UAAU,CAAC,MAAI,CAAC9P,mBAAmB,CAACX,OAAO,CAAEY,aAAa,CAAC,CAAC+O,OAAO,CAAC,CAAC,CAAC,CAAC,MACpF,CAAC,CAAClL,WAAW,EAAI9E,QAAQ,GAAK,UAAU,CAAG,iBAAiB,CAAG,EAAE,GAL5D,EAAA0Q,qBAAA,CAAAjK,cAAc,CAAC3D,IAAI,UAAA4N,qBAAA,iBAAnBA,qBAAA,CAAqB1N,EAAE,GAAIyD,cAAc,CAAC3D,IAMzC,CAAC,CAEb,CAAC,CAAC,EACI,CAAC,EACN,CACN,CAGA,CAAC,CAACzC,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACT,MAAM,EAAI,CAAC,gBACjEnF,IAAA,CAACH,MAAM,EACLyR,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMhI,SAAS,CAAChG,OAAO,CAAE,CAClC0Q,QAAQ,CAAE,CAAC,IAAM,CACf;AACA,GAAI/Q,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,MAAK,CAAE;AAChB,CAEA;AACA,GAAI,CAACpB,iBAAiB,CAACyB,OAAO,CAAC2C,EAAE,CAAC,CAAE,CAClC,MAAO,KAAI,CAAE;AACf,CAEA;AACA,MAAO,CAAA3C,OAAO,CAACqN,cAAc,EAAI,CAAC,CACpC,CAAC,EAAE,CAAE,CACLM,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAE1B,CAAC,IAAM,CACN,GAAI,CAACrP,iBAAiB,CAACyB,OAAO,CAAC2C,EAAE,CAAC,CAAE,CAClC,MAAO,YAAY,CACrB,CAEA;AACA,GAAIhD,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,aAAa,CACtB,CAEA,MAAO,CAAAK,OAAO,CAACqN,cAAc,EAAI,CAAC,CAAG,cAAc,CAAG,aAAa,CACrE,CAAC,EAAE,CAAC,CACE,CACT,CAGArN,OAAO,CAACuD,eAAe,EAAIvD,OAAO,CAACuD,eAAe,CAAC5B,MAAM,CAAG,CAAC,eAC5DnF,IAAA,QAAKmR,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BpR,IAAA,MAAAoR,QAAA,CAAG,0CAAwC,CAAG,CAAC,CAC5C,CACN,EACE,CAAC,EArID5N,OAAO,CAAC2C,EAsIV,CAAC,EACP,CAAC,CACC,CAAC,EACH,CAAC,cAINjG,KAAA,QAAKiR,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBlR,KAAA,QAAKiR,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpR,IAAA,OAAAoR,QAAA,CAAI,eAAa,CAAI,CAAC,CACrBxQ,IAAI,CAACuE,MAAM,CAAG,CAAC,eACdnF,IAAA,CAACH,MAAM,EAACyR,OAAO,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAEjC,SAAU,CAAA6B,QAAA,CAAC,YAE3D,CAAQ,CACT,EACE,CAAC,CAELvP,KAAK,eACJ7B,IAAA,QAAKmR,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BvP,KAAK,CACH,CACN,cAED7B,IAAA,QAAKmR,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBxQ,IAAI,CAACuE,MAAM,GAAK,CAAC,cAChBjF,KAAA,QAAKiR,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpR,IAAA,MAAAoR,QAAA,CAAG,eAAa,CAAG,CAAC,cACpBpR,IAAA,MAAGmR,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,iDAA+C,CAAG,CAAC,EAC/E,CAAC,cAENlR,KAAA,CAAAE,SAAA,EAAAgR,QAAA,eACElR,KAAA,QAAKiR,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpR,IAAA,QAAKmR,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cAC7CpR,IAAA,QAAKmR,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAAI,CAAK,CAAC,cACvCpR,IAAA,QAAKmR,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAK,CAAC,cACzCpR,IAAA,QAAKmR,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,KAAG,CAAK,CAAC,cAC1CpR,IAAA,QAAKmR,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAK,CAAC,cACzCpR,IAAA,QAAKmR,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,EAC1C,CAAC,CACLxQ,IAAI,CAACyF,GAAG,CAACtC,IAAI,eACZ7D,KAAA,QAA2DiR,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC9ElR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpR,IAAA,OAAAoR,QAAA,CAAKrN,IAAI,CAAC/C,IAAI,CAAK,CAAC,cACpBd,KAAA,MAAGiR,SAAS,CAAC,UAAU,CAAAC,QAAA,EAAC,OAAK,CAACrN,IAAI,CAACqJ,GAAG,EAAI,CAAC,cAC3CpN,IAAA,SAAMmR,SAAS,qBAAAxI,MAAA,CAAsB5E,IAAI,CAACqG,UAAU,CAAG,CAAAgH,QAAA,CACpDrN,IAAI,CAACqG,UAAU,GAAK,WAAW,CAAG,IAAI,CAAG,KAAK,CAC3C,CAAC,EACJ,CAAC,cACNpK,IAAA,QAAKmR,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBrN,IAAI,CAACgG,WAAW,EAAI,OAAO,CACzB,CAAC,cACN7J,KAAA,QAAKiR,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB1N,UAAU,CAACK,IAAI,CAACE,UAAU,CAAC,CAACkP,OAAO,CAAC,CAAC,CAAC,CAAC,MAC1C,EAAK,CAAC,cACNnT,IAAA,QAAKmR,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BlR,KAAA,QAAKiR,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpR,IAAA,CAACH,MAAM,EACL0R,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBE,OAAO,CAAEA,CAAA,GAAMlH,cAAc,CAACvG,IAAI,CAACoC,EAAE,CAAEpC,IAAI,CAAC0D,OAAO,CAAE1D,IAAI,CAACG,QAAQ,CAAG,CAAC,CAAEH,IAAI,CAACqG,UAAU,CAAE,CAAAgH,QAAA,CAC1F,GAED,CAAQ,CAAC,CACR7O,eAAe,MAAAoG,MAAA,CAAQ5E,IAAI,CAACoC,EAAE,MAAAwC,MAAA,CAAI5E,IAAI,CAAC0D,OAAO,CAAE,cAC/CzH,IAAA,QAAKmR,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BpR,IAAA,UACE2R,IAAI,CAAC,QAAQ,CACbjC,KAAK,CAAEjN,YAAa,CACpB4O,QAAQ,CAAEpB,oBAAqB,CAC/BkE,UAAU,CAAGjE,CAAC,EAAKO,sBAAsB,CAACP,CAAC,CAAEnM,IAAI,CAAE,CACnDqQ,MAAM,CAAEA,CAAA,GAAM/D,oBAAoB,CAACtM,IAAI,CAAE,CACzCoN,SAAS,CAAC,gBAAgB,CAC1BkD,GAAG,CAAC,GAAG,CACPtM,GAAG,CAAEhE,IAAI,CAAC8M,cAAe,CACzByD,SAAS,MACV,CAAC,CACC,CAAC,cAENtU,IAAA,SACEmR,SAAS,CAAC,oBAAoB,CAC9BK,OAAO,CAAEA,CAAA,GAAMxB,mBAAmB,CAACjM,IAAI,CAAE,CACzC6N,KAAK,CAAEtR,CAAC,CAAC,+BAA+B,CAAE,CAAA8Q,QAAA,CAEzCrN,IAAI,CAACG,QAAQ,CACV,CACP,cACDlE,IAAA,CAACH,MAAM,EACL0R,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBE,OAAO,CAAEA,CAAA,GAAMlH,cAAc,CAACvG,IAAI,CAACoC,EAAE,CAAEpC,IAAI,CAAC0D,OAAO,CAAE1D,IAAI,CAACG,QAAQ,CAAG,CAAC,CAAEH,IAAI,CAACqG,UAAU,CAAE,CACzF8J,QAAQ,CAAE,CAAC,IAAM,CACf;AACA,GAAI/Q,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,MAAK,CAAE;AAChB,CAEA,KAAM,CAAA+G,gBAAgB,CAAG/C,2BAA2B,CAACpD,IAAI,CAACoC,EAAE,CAAC,CAC7D,KAAM,CAAA/B,aAAa,CAAG8F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEpE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACI,EAAE,GAAKpC,IAAI,CAAC0D,OAAO,CAAC,CACxE,KAAM,CAAA+C,mBAAmB,CAAG5J,IAAI,CAC7B2G,MAAM,CAACgJ,QAAQ,EAAIA,QAAQ,CAACpK,EAAE,GAAKpC,IAAI,CAACoC,EAAE,EAAIoK,QAAQ,CAAC9I,OAAO,GAAK1D,IAAI,CAAC0D,OAAO,EAAI8I,QAAQ,CAACnG,UAAU,GAAKrG,IAAI,CAACqG,UAAU,CAAC,CAC3HtG,MAAM,CAAC,CAAC2G,GAAG,CAAE8F,QAAQ,GAAK9F,GAAG,CAAG8F,QAAQ,CAACrM,QAAQ,CAAE,CAAC,CAAC,CACxD,KAAM,CAAAwG,UAAU,CAAG,CAAC,CAAAtG,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEyD,kBAAkB,GAAI,CAAC,EAAI2C,mBAAmB,CACjF,MAAO,CAAAzG,IAAI,CAACG,QAAQ,EAAIwG,UAAU,CACpC,CAAC,EAAE,CAAE,CAAA0G,QAAA,CACN,GAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,cACNlR,KAAA,QAAKiR,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB,CAACrN,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,EAAEkP,OAAO,CAAC,CAAC,CAAC,CAAC,MAChD,EAAK,CAAC,cACNnT,IAAA,QAAKmR,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BpR,IAAA,CAACH,MAAM,EACL0R,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,QAAQ,CAChBE,OAAO,CAAEA,CAAA,GAAM7G,cAAc,CAAC5G,IAAI,CAACoC,EAAE,CAAEpC,IAAI,CAAC0D,OAAO,CAAE1D,IAAI,CAACqG,UAAU,CAAE,CACtEwH,KAAK,CAAEtR,CAAC,CAAC,oBAAoB,CAAE,CAAA8Q,QAAA,CAChC,MAED,CAAQ,CAAC,CACN,CAAC,MAAAzI,MAAA,CAjFK5E,IAAI,CAACoC,EAAE,MAAAwC,MAAA,CAAI5E,IAAI,CAAC0D,OAAO,MAAAkB,MAAA,CAAI5E,IAAI,CAACqG,UAAU,CAkFlD,CACN,CAAC,EACF,CACH,CACE,CAAC,CAELxJ,IAAI,CAACuE,MAAM,CAAG,CAAC,eACdjF,KAAA,CAAAE,SAAA,EAAAgR,QAAA,eACElR,KAAA,QAAKiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlR,KAAA,QAAKiR,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpR,IAAA,SAAAoR,QAAA,CAAM,eAAa,CAAM,CAAC,cAC1BlR,KAAA,SAAAkR,QAAA,EAAOxG,iBAAiB,CAAC,CAAC,CAACuI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC9C,CAAC,cACNjT,KAAA,QAAKiR,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzCpR,IAAA,SAAAoR,QAAA,CAAM,mBAAiB,CAAM,CAAC,cAC9BlR,KAAA,SAAAkR,QAAA,EAAOnG,aAAa,CAAC,CAAC,CAACkI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC1C,CAAC,cACNjT,KAAA,QAAKiR,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxCpR,IAAA,SAAAoR,QAAA,CAAM,eAAa,CAAM,CAAC,cAC1BlR,KAAA,SAAAkR,QAAA,EAAOvG,YAAY,CAAC,CAAC,CAACsI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACzC,CAAC,cACNjT,KAAA,QAAKiR,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpR,IAAA,SAAAoR,QAAA,CAAM,QAAM,CAAM,CAAC,cACnBlR,KAAA,SAAAkR,QAAA,EAAOxG,iBAAiB,CAAC,CAAC,CAACuI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC9C,CAAC,EACH,CAAC,cAENjT,KAAA,SAAMiR,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC/BlR,KAAA,QAAKiR,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpR,IAAA,OAAAoR,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BpR,IAAA,QAAKmR,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpR,IAAA,UACE2R,IAAI,CAAC,MAAM,CACXG,WAAW,CAAEzQ,WAAW,GAAK,SAAS,CAAG,8CAA8C,CAAG,0BAA2B,CACrHqO,KAAK,CAAE5O,YAAY,CAACE,IAAK,CACzBqQ,QAAQ,CAAGnB,CAAC,EAAKnP,eAAe,CAAAyE,aAAA,CAAAA,aAAA,IAAK1E,YAAY,MAAEE,IAAI,CAAEkP,CAAC,CAACC,MAAM,CAACT,KAAK,EAAC,CAAE,CAC1EyB,SAAS,CAAE9P,WAAW,GAAK,SAAS,EAAI,CAACP,YAAY,CAACE,IAAI,CAAG,gBAAgB,CAAG,EAAG,CACpF,CAAC,CACC,CAAC,cACNhB,IAAA,QAAKmR,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpR,IAAA,UACE2R,IAAI,CAAC,KAAK,CACVG,WAAW,CAAC,yBAAyB,CACrCpC,KAAK,CAAE5O,YAAY,CAACG,KAAM,CAC1BoQ,QAAQ,CAAGnB,CAAC,EAAKnP,eAAe,CAAAyE,aAAA,CAAAA,aAAA,IAAK1E,YAAY,MAAEG,KAAK,CAAEiP,CAAC,CAACC,MAAM,CAACT,KAAK,EAAC,CAAE,CAC5E,CAAC,CACC,CAAC,cACN1P,IAAA,QAAKmR,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpR,IAAA,UACE2R,IAAI,CAAC,OAAO,CACZG,WAAW,CAAC,kBAAkB,CAC9BpC,KAAK,CAAE5O,YAAY,CAACI,KAAM,CAC1BmQ,QAAQ,CAAGnB,CAAC,EAAKnP,eAAe,CAAAyE,aAAA,CAAAA,aAAA,IAAK1E,YAAY,MAAEI,KAAK,CAAEgP,CAAC,CAACC,MAAM,CAACT,KAAK,EAAC,CAAE,CAC5E,CAAC,CACC,CAAC,EACH,CAAC,cAENxP,KAAA,QAAKiR,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpR,IAAA,OAAAoR,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBpR,IAAA,QAAKmR,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7B,CAAC,MAAM,CAAE,MAAM,CAAE,cAAc,CAAE,eAAe,CAAC,CAAC/K,GAAG,CAACkO,MAAM,eAC3DrU,KAAA,UAAoBiR,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC5CpR,IAAA,UACE2R,IAAI,CAAC,OAAO,CACZ3Q,IAAI,CAAC,SAAS,CACd0O,KAAK,CAAE6E,MAAO,CACdC,OAAO,CAAErT,aAAa,GAAKoT,MAAO,CAClClD,QAAQ,CAAGnB,CAAC,EAAK9O,gBAAgB,CAAC8O,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE,CACnD,CAAC,cACF1P,IAAA,SAAAoR,QAAA,CAAOmD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,CAAO,CAAC,GAR3CH,MASL,CACR,CAAC,CACC,CAAC,cAENvU,IAAA,OAAAoR,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBlR,KAAA,QAAKiR,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlR,KAAA,UAAOiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC7BpR,IAAA,UACE2R,IAAI,CAAC,OAAO,CACZ3Q,IAAI,CAAC,aAAa,CAClB0O,KAAK,CAAC,MAAM,CACZ8E,OAAO,CAAEnT,WAAW,GAAK,MAAO,CAChCgQ,QAAQ,CAAGnB,CAAC,EAAK5O,cAAc,CAAC4O,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE,CACjD,CAAC,cACF1P,IAAA,SAAAoR,QAAA,CAAM,qBAAmB,CAAM,CAAC,EAC3B,CAAC,cACRlR,KAAA,UAAOiR,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC7BpR,IAAA,UACE2R,IAAI,CAAC,OAAO,CACZ3Q,IAAI,CAAC,aAAa,CAClB0O,KAAK,CAAC,SAAS,CACf8E,OAAO,CAAEnT,WAAW,GAAK,SAAU,CACnCgQ,QAAQ,CAAGnB,CAAC,EAAK5O,cAAc,CAAC4O,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE,CACjD,CAAC,cACF1P,IAAA,SAAAoR,QAAA,CAAM,4BAA0B,CAAM,CAAC,EAClC,CAAC,EACL,CAAC,CAEL/P,WAAW,GAAK,SAAS,eACxBnB,KAAA,QAAKiR,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpR,IAAA,UAAAoR,QAAA,CAAO,eAAa,CAAO,CAAC,cAC5BpR,IAAA,UACE2R,IAAI,CAAC,QAAQ,CACbgD,IAAI,CAAC,MAAM,CACXN,GAAG,CAAC,GAAG,CACPtM,GAAG,CAAEnE,cAAc,CAAC,CAAE,CACtB8L,KAAK,CAAEnO,UAAU,EAAI,CAAE,CACvB8P,QAAQ,CAAGnB,CAAC,EAAK,CACf,KAAM,CAAAR,KAAK,CAAGhM,UAAU,CAACwM,CAAC,CAACC,MAAM,CAACT,KAAK,CAAC,EAAI,CAAC,CAC7ClO,aAAa,CAACkO,KAAK,CAAC,CACtB,CAAE,CACFoC,WAAW,CAAExR,CAAC,CAAC,2BAA2B,CAAE,CAC7C,CAAC,cACFJ,KAAA,UAAAkR,QAAA,EAAO,UAAQ,CAACxN,cAAc,CAAC,CAAC,CAACuP,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAe,CAAC,CAACvP,cAAc,CAAC,CAAC,EAAIrC,UAAU,EAAI,CAAC,CAAC,EAAE4R,OAAO,CAAC,CAAC,CAAC,EAAQ,CAAC,EACnH,CACN,EACE,CAAC,EACA,CAAC,cAEPnT,IAAA,QAAKmR,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BlR,KAAA,CAACL,MAAM,EACL2R,OAAO,CAAEtD,cAAe,CACxBzM,OAAO,CAAEE,UAAW,CACpBwP,SAAS,CAAC,iBAAiB,CAC3BI,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjB4C,QAAQ,CAAEtT,IAAI,CAACuE,MAAM,GAAK,CAAE,CAAAiM,QAAA,EAE3BjO,QAAQ,GAAK,UAAU,CAAG7C,CAAC,CAAC,mBAAmB,CAAC,CAAGA,CAAC,CAAC,yBAAyB,CAAC,CAC/E+C,YAAY,EAAI/C,CAAC,CAAC,mBAAmB,CAAC,EACjC,CAAC,CACN,CAAC,EACN,CACH,EACE,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}