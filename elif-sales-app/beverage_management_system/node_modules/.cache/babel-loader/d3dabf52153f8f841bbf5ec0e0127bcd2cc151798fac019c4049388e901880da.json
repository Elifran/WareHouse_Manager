{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/components/LanguageSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './LanguageSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const languages = [{\n    code: 'en',\n    name: 'English',\n    flag: 'ðŸ‡ºðŸ‡¸'\n  }, {\n    code: 'fr',\n    name: 'FranÃ§ais',\n    flag: 'ðŸ‡«ðŸ‡·'\n  }, {\n    code: 'mg',\n    name: 'Malagasy',\n    flag: 'ðŸ‡²ðŸ‡¬'\n  }];\n  const currentLanguage = languages.find(lang => lang.code === i18n.language) || languages[0];\n\n  // Ensure language is loaded from localStorage on mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('i18nextLng');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n]);\n  const handleLanguageChange = languageCode => {\n    i18n.changeLanguage(languageCode);\n    setIsOpen(false);\n\n    // Explicitly save to localStorage to ensure persistence\n    localStorage.setItem('i18nextLng', languageCode);\n\n    // Show success message\n    const message = t('language.language_changed');\n    // You can add a toast notification here if you have one\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"language-selector-button\",\n      onClick: toggleDropdown,\n      \"aria-label\": t('language.select_language'),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"language-flag\",\n        children: currentLanguage.flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"language-name\",\n        children: currentLanguage.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dropdown-arrow ${isOpen ? 'open' : ''}`,\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-dropdown\",\n      children: languages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `language-option ${i18n.language === language.code ? 'active' : ''}`,\n        onClick: () => handleLanguageChange(language.code),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-flag\",\n          children: language.flag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"language-name\",\n          children: language.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), i18n.language === language.code && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, language.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"gzO7RMZv4DKrHEECBF5vAH+yNJ0=\", false, function () {\n  return [useTranslation];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","jsxDEV","_jsxDEV","LanguageSelector","_s","i18n","t","isOpen","setIsOpen","languages","code","name","flag","currentLanguage","find","lang","language","savedLanguage","localStorage","getItem","changeLanguage","handleLanguageChange","languageCode","setItem","message","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/components/LanguageSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './LanguageSelector.css';\n\nconst LanguageSelector = () => {\n  const { i18n, t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const languages = [\n    { code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },\n    { code: 'fr', name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },\n    { code: 'mg', name: 'Malagasy', flag: 'ðŸ‡²ðŸ‡¬' }\n  ];\n\n  const currentLanguage = languages.find(lang => lang.code === i18n.language) || languages[0];\n\n  // Ensure language is loaded from localStorage on mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('i18nextLng');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n]);\n\n  const handleLanguageChange = (languageCode) => {\n    i18n.changeLanguage(languageCode);\n    setIsOpen(false);\n    \n    // Explicitly save to localStorage to ensure persistence\n    localStorage.setItem('i18nextLng', languageCode);\n    \n    // Show success message\n    const message = t('language.language_changed');\n    // You can add a toast notification here if you have one\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"language-selector\">\n      <button \n        className=\"language-selector-button\"\n        onClick={toggleDropdown}\n        aria-label={t('language.select_language')}\n      >\n        <span className=\"language-flag\">{currentLanguage.flag}</span>\n        <span className=\"language-name\">{currentLanguage.name}</span>\n        <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>â–¼</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"language-dropdown\">\n          {languages.map((language) => (\n            <button\n              key={language.code}\n              className={`language-option ${i18n.language === language.code ? 'active' : ''}`}\n              onClick={() => handleLanguageChange(language.code)}\n            >\n              <span className=\"language-flag\">{language.flag}</span>\n              <span className=\"language-name\">{language.name}</span>\n              {i18n.language === language.code && (\n                <span className=\"checkmark\">âœ“</span>\n              )}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}