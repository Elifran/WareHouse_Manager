{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import PrintButton,{generatePrintContent}from'../components/PrintButton';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nuseEffect(()=>{const initializeData=async()=>{await fetchCategories();await fetchProducts();// Wait for categories to be loaded before fetching products\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categories.length>0&&products.length>0){console.log('Categories loaded, re-filtering products to apply sellable filtering');fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categories.length]);// Only when categories are loaded\n// Debounced search effect - completely rewritten for stability\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Set new timeout\nsearchTimeoutRef.current=setTimeout(()=>{if(searchInput!==filters.search){const newFilters=_objectSpread(_objectSpread({},filters),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);}},500);// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput,filters]);// Depend on searchInput and filters\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){defaultUnits[product.id]=selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){console.error('Bulk stock availability error:',err);// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const url=\"/products/\".concat(params.toString()?'?'+params.toString():'');const response=await api.get(url);const allProducts=response.data.results||response.data;// Debug: Log the first product to see its structure\nif(allProducts.length>0){console.log('First product structure:',allProducts[0]);console.log('Categories loaded:',categories.length);}// If categories are not loaded yet, show all products but log a warning\nif(categories.length===0){console.warn('Categories not loaded yet, showing all products (filtering will be applied once categories load)');setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category information, check if category is sellable\nif(product.category&&product.category.is_sellable!==undefined){isSellable=product.category.is_sellable;}// If product has category_name, find the category in our categories list\nelse if(product.category_name){const category=categories.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categories.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}// Debug: Log filtering decision\nif(!isSellable){console.log(\"Filtering out product: \".concat(product.name,\" (category: \").concat(product.category_name||product.category,\")\"));}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categories.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);}catch(err){setError('Failed to load products');console.error('Products error:',err);}finally{setLoading(false);}};const fetchCategories=async()=>{try{const response=await api.get('/products/categories/');setCategories(response.data.results||response.data);}catch(err){console.error('Categories error:',err);}};const fetchStockAvailability=async productId=>{try{const response=await api.get(\"/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){console.error('Stock availability error:',err);}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nconst unit=selectedUnit||product.compatible_units&&product.compatible_units[0]||{id:product.base_unit,name:'Piece',symbol:'piece'};// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id);if(existingItem){// Check if adding 1 more would exceed available quantity\nif(existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}setCart(cart.map(item=>item.id===product.id&&item.unit_id===unit.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity\nif(1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:unit.price||product.price});setCart([...cart,newCartItem]);}setError('');};const updateQuantity=(productId,unitId,quantity)=>{if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId)));}else{// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId?_objectSpread(_objectSpread({},item),{},{quantity}):item));setError('');}};const removeFromCart=(productId,unitId)=>{setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId)));};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};const autoPrintReceipt=async(saleNumber,saleData)=>{try{// Create print content for the completed sale\nconst printData={sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:'completed',total_amount:calculateSubtotal(),items:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.price,total_price:item.price*item.quantity};})};// Generate print content using the same logic as PrintButton\nconst printContent=generatePrintContent(printData,'Sale Receipt','sale');// Open print window\nconst printWindow=window.open('','_blank','width=800,height=600');printWindow.document.write(printContent);printWindow.document.close();// Wait for content to load then print\nprintWindow.onload=()=>{printWindow.focus();printWindow.print();// Close the window after a short delay\nsetTimeout(()=>{printWindow.close();},1000);};}catch(error){console.error('Auto-print error:',error);// Don't show error to user as it's not critical\n}};const handleCheckout=async()=>{if(cart.length===0){setError('Cart is empty');return;}setProcessing(true);setError('');try{const saleData={customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,items:cart.map(item=>({product:item.id,quantity:item.quantity,unit:item.unit_id,unit_price:item.unit_price}))};// Create the sale\nconst response=await api.post('/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;try{// Complete the sale\nawait api.post(\"/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion\nawait autoPrintReceipt(saleNumber,response.data);// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();alert(\"Sale completed successfully! Sale Number: \".concat(saleNumber));}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nconsole.error('Sale completion error:',completeError);setError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Failed to create sale');console.error('Sale creation error:',err);}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setError('');};const handleFilterChange=(filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filters),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}};const clearFilters=()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\nfetchProducts(clearedFilters);};const toggleCategorySellable=async(categoryId,isSellable)=>{try{await api.patch(\"/products/categories/\".concat(categoryId,\"/\"),{is_sellable:!isSellable});// Refresh categories to show updated status\nawait fetchCategories();// Refresh products to apply new sellable filter\nfetchProducts(filters);}catch(err){console.error('Error updating category sellable status:',err);setError('Failed to update category status');}};const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseInt(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id);}else{updateQuantity(item.id,item.unit_id,newQuantity);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products\nif(product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>u.unit===selectedUnitId);if(selectedCompatibleUnit){// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===selectedCompatibleUnit.unit);const unitPrice=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.price)||product.price;// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Point of Sale\"}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:\"Search products...\",value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 1rem 0',fontSize:'1rem',fontWeight:'600'},children:\"Manage Sellable Categories\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.map(product=>{var _product$compatible_u;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[parseFloat(product.price).toFixed(2),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u===void 0?void 0:_product$compatible_u.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===compatibleUnit.unit);if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||compatibleUnit.unit.name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",unitStockInfo.available_quantity]},compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _unitStockInfo$price;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===compatibleUnit.unit);const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||compatibleUnit.unit.name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||compatibleUnit.unit.symbol;return/*#__PURE__*/_jsxs(\"option\",{value:compatibleUnit.unit,disabled:!isAvailable,children:[unitName,\" (\",unitSymbol,\") - \",(unitStockInfo===null||unitStockInfo===void 0?void 0:(_unitStockInfo$price=unitStockInfo.price)===null||_unitStockInfo$price===void 0?void 0:_unitStockInfo$price.toFixed(2))||'N/A',\" MGA\",!isAvailable?' - OUT OF STOCK':\" - \".concat(availableQty,\" available\")]},compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart\",children:\"Cart is empty\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:\"Click to edit quantity\",children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1),disabled:(()=>{const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id),title:\"Remove item\",children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id)))]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkout-actions\",children:[/*#__PURE__*/_jsx(PrintButton,{data:{sale_number:\"TEMP-\".concat(Date.now()),customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:'pending',total_amount:calculateSubtotal(),items:cart.map(item=>{var _item$unit2;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:((_item$unit2=item.unit)===null||_item$unit2===void 0?void 0:_item$unit2.name)||'piece',unit_price:item.price,total_price:item.price*item.quantity};})},title:\"Sale Receipt\",type:\"sale\",printText:\"Print Receipt\",validateText:\"Validate Sale\",showValidateOption:true,onValidate:handleCheckout,disabled:cart.length===0,className:\"print-receipt-btn\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",children:\"Validate Sale\"})]})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","api","Button","PrintButton","generatePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","searchTimeoutRef","showSellableToggle","setShowSellableToggle","initializeData","fetchCategories","fetchProducts","length","console","log","current","clearTimeout","setTimeout","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","forEach","product","compatible_units","selectedUnit","find","u","is_default","unit","is_base_unit","id","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","item","reduce","total","unitInfo","unit_id","conversion_factor","quantity","baseUnit","totalBaseStock","available_quantity","remainingPieces","Math","max","availableQuantity","isAvailable","floor","is_available","filterParams","arguments","undefined","params","URLSearchParams","append","url","concat","toString","get","allProducts","results","warn","sellableProducts","isSellable","is_sellable","category_name","cat","selectedCategory","parseInt","prev","addToCart","base_unit","symbol","updatedStockInfo","unitStockInfo","existingItem","newCartItem","unit_name","unit_symbol","unit_price","price","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","printData","sale_number","customer_name","customer_phone","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","status","total_amount","items","_item$unit","product_name","product_sku","sku","total_price","printContent","printWindow","window","open","document","write","close","onload","focus","print","handleCheckout","payment_method","saleId","Promise","resolve","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","toggleCategorySellable","categoryId","patch","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","isNaN","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","unitPrice","className","children","onChange","variant","size","onClick","style","marginTop","ref","type","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","margin","fontSize","fontWeight","display","gridTemplateColumns","gap","alignItems","justifyContent","cursor","borderColor","color","_product$compatible_u","parseFloat","toFixed","compatibleUnit","unitName","Boolean","stopPropagation","index","_unitStockInfo$price","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","title","method","checked","replace","toUpperCase","_item$unit2","printText","validateText","showValidateOption","onValidate"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton, { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      await fetchProducts(); // Wait for categories to be loaded before fetching products\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categories.length > 0 && products.length > 0) {\n      console.log('Categories loaded, re-filtering products to apply sellable filtering');\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categories.length]); // Only when categories are loaded\n\n  // Debounced search effect - completely rewritten for stability\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout\n    searchTimeoutRef.current = setTimeout(() => {\n      if (searchInput !== filters.search) {\n        const newFilters = { ...filters, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }\n    }, 500);\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput, filters]); // Depend on searchInput and filters\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      \n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // Debug: Log the first product to see its structure\n      if (allProducts.length > 0) {\n        console.log('First product structure:', allProducts[0]);\n        console.log('Categories loaded:', categories.length);\n      }\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categories.length === 0) {\n        console.warn('Categories not loaded yet, showing all products (filtering will be applied once categories load)');\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category information, check if category is sellable\n        if (product.category && product.category.is_sellable !== undefined) {\n          isSellable = product.category.is_sellable;\n        }\n        // If product has category_name, find the category in our categories list\n        else if (product.category_name) {\n          const category = categories.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categories.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        // Debug: Log filtering decision\n        if (!isSellable) {\n          console.log(`Filtering out product: ${product.name} (category: ${product.category_name || product.category})`);\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categories.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || (product.compatible_units && product.compatible_units[0]) || { id: product.base_unit, name: 'Piece', symbol: 'piece' };\n    \n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    \n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    \n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n    \n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    \n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      };\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n      \n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(item => item.id === productId && item.unit_id === unitId)\n        .reduce((sum, item) => sum + item.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData) => {\n    try {\n      // Create print content for the completed sale\n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: 'completed',\n        total_amount: calculateSubtotal(),\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit?.name || 'piece',\n          unit_price: item.price,\n          total_price: item.price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale');\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n        \n        // Auto-print the receipt after successful sale completion\n        await autoPrintReceipt(saleNumber, response.data);\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Wait a moment for the backend to process stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n        \n        // Refresh product data to update stock quantities\n        await fetchProducts();\n        \n        // Wait another moment for stock availability to be updated\n        await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n        \n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        \n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n        \n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Wait for backend to process any completed stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Refresh data\n        await fetchProducts();\n        await new Promise(resolve => setTimeout(resolve, 500));\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = { ...filters, [filterType]: value };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    fetchProducts(clearedFilters);\n  };\n\n  const toggleCategorySellable = async (categoryId, isSellable) => {\n    try {\n      await api.patch(`/products/categories/${categoryId}/`, {\n        is_sellable: !isSellable\n      });\n      // Refresh categories to show updated status\n      await fetchCategories();\n      // Refresh products to apply new sellable filter\n      fetchProducts(filters);\n    } catch (err) {\n      console.error('Error updating category sellable status:', err);\n      setError('Failed to update category status');\n    }\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseInt(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n    \n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart\n      .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n      .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n    \n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    \n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === selectedCompatibleUnit.unit);\n          const unitPrice = unitStockInfo?.price || product.price;\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>Point of Sale</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <div className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </div>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <h3 style={{ margin: '0 0 1rem 0', fontSize: '1rem', fontWeight: '600' }}>\n                Manage Sellable Categories\n              </h3>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {parseFloat(product.price).toFixed(2)} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {unitStockInfo.available_quantity}\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit.symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit} \n                              value={compatibleUnit.unit}\n                              disabled={!isAvailable}\n                            >\n                              {unitName} ({unitSymbol}) - {unitStockInfo?.price?.toFixed(2) || 'N/A'} MGA\n                              {!isAvailable ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <p className=\"empty-cart\">Cart is empty</p>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title=\"Click to edit quantity\"\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1)}\n                          disabled={(() => {\n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id)}\n                        title=\"Remove item\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customer Name (Optional)\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"checkout-actions\">\n                <PrintButton\n                  data={{\n                    sale_number: `TEMP-${Date.now()}`,\n                    customer_name: customerInfo.name || 'Walk-in Customer',\n                    customer_phone: customerInfo.phone || '',\n                    customer_email: customerInfo.email || '',\n                    user_name: user?.username || 'Unknown User',\n                    user_id: user?.id || 'unknown',\n                    created_at: new Date().toISOString(),\n                    print_timestamp: new Date().toISOString(),\n                    print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                    status: 'pending',\n                    total_amount: calculateSubtotal(),\n                    items: cart.map(item => ({\n                      product_name: item.name,\n                      product_sku: item.sku,\n                      quantity: item.quantity,\n                      unit_name: item.unit?.name || 'piece',\n                      unit_price: item.price,\n                      total_price: item.price * item.quantity\n                    }))\n                  }}\n                  title=\"Sale Receipt\"\n                  type=\"sale\"\n                  printText=\"Print Receipt\"\n                  validateText=\"Validate Sale\"\n                  showValidateOption={true}\n                  onValidate={handleCheckout}\n                  disabled={cart.length === 0}\n                  className=\"print-receipt-btn\"\n                />\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                >\n                  Validate Sale\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}