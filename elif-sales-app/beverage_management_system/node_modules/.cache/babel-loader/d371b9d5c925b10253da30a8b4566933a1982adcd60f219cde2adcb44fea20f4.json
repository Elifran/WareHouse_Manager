{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import PackagingManager from'../components/PackagingManager';import{isMobileDevice,openPrintWindow,openPrintPreview,downloadReceiptFile,generateXprinterPrintContent,generateMobilePrintContent}from'../utils/printUtils';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{t}=useTranslation();const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[paymentType,setPaymentType]=useState('full');// 'full' or 'partial'\nconst[paidAmount,setPaidAmount]=useState(0);const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[categoriesLoaded,setCategoriesLoaded]=useState(false);const[categoryUpdating,setCategoryUpdating]=useState(false);const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst filtersRef=useRef(filters);// Ref to store current filters\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst categoriesRef=useRef(categories);// Ref to store current categories\nconst categoriesLoadedRef=useRef(categoriesLoaded);// Ref to store categories loaded state\n// Update refs whenever state changes\nuseEffect(()=>{filtersRef.current=filters;},[filters]);useEffect(()=>{categoriesRef.current=categories;},[categories]);useEffect(()=>{categoriesLoadedRef.current=categoriesLoaded;},[categoriesLoaded]);// Function to sync session storage with categories state\nconst syncSessionStorage=useCallback(()=>{const sellableStatus={};categories.forEach(cat=>{sellableStatus[cat.id]=cat.is_sellable;});sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));},[categories]);// Sync session storage whenever categories change\nuseEffect(()=>{if(categories.length>0){syncSessionStorage();}},[categories,syncSessionStorage]);// Handle case where filters are cleared but categories aren't loaded yet\nuseEffect(()=>{if(categoriesLoadedRef.current&&categoriesRef.current.length>0&&filtersRef.current.category===''&&filtersRef.current.search===''){fetchProducts(filtersRef.current);}},[categoriesLoaded,categories.length,filters]);const[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\n// Packaging state\nconst[packagingCart,setPackagingCart]=useState([]);const[showPackagingManager,setShowPackagingManager]=useState(false);// Copy the generatePrintContent function from PrintButton.js\nconst generatePrintContent=(data,title,type)=>{const currentDate=new Date().toLocaleDateString();const currentTime=new Date().toLocaleTimeString();let content=\"\\n      <!DOCTYPE html>\\n      <html>\\n      <head>\\n        <title>\".concat(title,\"</title>\\n        <meta charset=\\\"UTF-8\\\">\\n        <style>\\n          /* 80mm Thermal Printer Receipt Styles */\\n          * {\\n            margin: 0;\\n            padding: 0;\\n            box-sizing: border-box;\\n          }\\n          \\n          body {\\n            font-family: 'Courier New', Courier, monospace;\\n            font-size: 12px;\\n            line-height: 1.2;\\n            color: #000;\\n            width: 80mm;\\n            max-width: 80mm;\\n            margin: 0 auto;\\n            padding: 3mm;\\n            background: white;\\n          }\\n          \\n          .receipt-header {\\n            text-align: center;\\n            margin-bottom: 8px;\\n            padding-bottom: 6px;\\n            border-bottom: 1px dashed #000;\\n          }\\n          \\n          .company-name {\\n            font-weight: bold;\\n            font-size: 14px;\\n            margin-bottom: 2px;\\n            text-transform: uppercase;\\n          }\\n          \\n          .document-title {\\n            font-weight: bold;\\n            font-size: 13px;\\n            margin-bottom: 3px;\\n            text-transform: uppercase;\\n          }\\n          \\n          .receipt-date {\\n            font-size: 11px;\\n            color: #555;\\n          }\\n          \\n          .receipt-section {\\n            margin-bottom: 8px;\\n            padding-bottom: 6px;\\n            border-bottom: 1px dotted #ccc;\\n          }\\n          \\n          .section-title {\\n            font-weight: bold;\\n            font-size: 11px;\\n            margin-bottom: 4px;\\n            text-transform: uppercase;\\n            background: #f0f0f0;\\n            padding: 2px 4px;\\n          }\\n          \\n          .receipt-row {\\n            display: flex;\\n            justify-content: space-between;\\n            margin-bottom: 3px;\\n            font-size: 11px;\\n          }\\n          \\n          .product-item,\\n          .order-item,\\n          .delivery-item,\\n          .sale-item,\\n          .packaging-item,\\n          .sale-summary {\\n            margin-bottom: 4px;\\n            padding: 2px 0;\\n          }\\n          \\n          .product-name,\\n          .item-name {\\n            font-weight: bold;\\n            margin-bottom: 1px;\\n            word-wrap: break-word;\\n          }\\n          \\n          .product-details,\\n          .item-details,\\n          .sale-info {\\n            display: flex;\\n            justify-content: space-between;\\n            font-size: 10px;\\n            color: #555;\\n          }\\n          \\n          .receipt-totals,\\n          .receipt-total {\\n            margin: 8px 0;\\n            padding-top: 6px;\\n            border-top: 2px solid #000;\\n          }\\n          \\n          .total-row {\\n            display: flex;\\n            justify-content: space-between;\\n            margin-bottom: 3px;\\n            font-weight: bold;\\n          }\\n          \\n          .due-amount {\\n            color: #d00;\\n          }\\n          \\n          .no-data {\\n            text-align: center;\\n            color: #888;\\n            font-style: italic;\\n            padding: 8px 0;\\n          }\\n          \\n          .truncated-warning {\\n            text-align: center;\\n            color: #888;\\n            font-size: 10px;\\n            font-style: italic;\\n            margin-top: 4px;\\n          }\\n          \\n          .thank-you {\\n            text-align: center;\\n            font-weight: bold;\\n            margin: 6px 0;\\n          }\\n          \\n          .receipt-footer {\\n            text-align: center;\\n            margin-top: 10px;\\n            padding-top: 6px;\\n            border-top: 1px dashed #000;\\n            font-size: 10px;\\n            color: #666;\\n          }\\n          \\n          .footer-text {\\n            margin-bottom: 2px;\\n          }\\n          \\n          .status-consignation { color: #090; }\\n          .status-exchange { color: #009; }\\n          .status-due { color: #d00; font-weight: bold; }\\n          \\n          /* Print-specific styles */\\n          @media print {\\n            body {\\n              margin: 0;\\n              padding: 2mm;\\n              width: 80mm;\\n            }\\n            \\n            .no-print {\\n              display: none;\\n            }\\n            \\n            /* Ensure proper sizing for thermal paper */\\n            @page {\\n              size: 80mm auto;\\n              margin: 0;\\n            }\\n          }\\n          \\n          /* Force monospace and proper breaking */\\n          * {\\n            font-family: 'Courier New', Courier, monospace !important;\\n          }\\n          \\n          .default-content {\\n            text-align: center;\\n            padding: 10px 0;\\n            color: #666;\\n          }\\n        </style>\\n      </head>\\n      <body>\\n    \");// Add type-specific content using PrintButton's logic\nswitch(type){case'sale':content+=generateSaleContent(data,t);break;default:content+=generateDefaultContent(data,t);}content+=\"\\n      </body>\\n      </html>\\n    \";return content;};// Copy the exact helper functions from PrintButton\nconst generateSaleContent=(data,t)=>{let items=data.items;if(!items){const numberedKeys=Object.keys(data).filter(key=>/^\\d+$/.test(key));if(numberedKeys.length>0){items=numberedKeys.map(key=>data[key]).filter(item=>item&&typeof item==='object');}}const paymentStatusText=data.payment_status==='paid'?'PAID':data.payment_status==='partial'?'PARTIAL':data.payment_status==='pending'?'PENDING':'UNKNOWN';return\"\\n      <div class=\\\"receipt-header\\\">\\n        <div class=\\\"company-name\\\">Beverage Management</div>\\n        <div class=\\\"document-title\\\">SALE RECEIPT</div>\\n        <div class=\\\"receipt-date\\\">\".concat(new Date().toLocaleDateString(),\" \").concat(new Date().toLocaleTimeString(),\"</div>\\n      </div>\\n      \\n      <div class=\\\"receipt-section\\\">\\n        <div class=\\\"section-title\\\">SALE INFO</div>\\n        <div class=\\\"receipt-row\\\">\\n          <span>Sale No:</span>\\n          <span>\").concat(data.sale_number||'N/A',\"</span>\\n        </div>\\n        <div class=\\\"receipt-row\\\">\\n          <span>Customer:</span>\\n          <span>\").concat((data.customer_name||'Walk-in Customer').substring(0,25),\"</span>\\n        </div>\\n        \").concat(data.customer_phone?\"\\n          <div class=\\\"receipt-row\\\">\\n            <span>Phone:</span>\\n            <span>\".concat(data.customer_phone,\"</span>\\n          </div>\\n        \"):'',\"\\n        <div class=\\\"receipt-row\\\">\\n          <span>Status:</span>\\n          <span>\").concat(paymentStatusText,\"</span>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"receipt-section\\\">\\n        <div class=\\\"section-title\\\">ITEMS SOLD</div>\\n        \").concat(items&&Array.isArray(items)?items.slice(0,20).map(item=>\"\\n          <div class=\\\"sale-item\\\">\\n            <div class=\\\"item-name\\\">\".concat((item.product_name||'N/A').substring(0,25),\"</div>\\n            <div class=\\\"item-details\\\">\\n              <span>\").concat(item.quantity_display||item.quantity||0,\" x \").concat(parseFloat(item.unit_price||0).toFixed(2),\"</span>\\n              <span>\").concat(parseFloat(item.total_price||0).toFixed(2),\" MGA</span>\\n            </div>\\n          </div>\\n        \")).join(''):'<div class=\"no-data\">No items found</div>',\"\\n      </div>\\n      \\n      <div class=\\\"receipt-totals\\\">\\n        <div class=\\\"total-row\\\">\\n          <span>Subtotal:</span>\\n          <span>\").concat(parseFloat(data.total_amount||0).toFixed(2),\" MGA</span>\\n        </div>\\n        <div class=\\\"total-row\\\">\\n          <span>Paid:</span>\\n          <span>\").concat(parseFloat(data.paid_amount||0).toFixed(2),\" MGA</span>\\n        </div>\\n        \").concat(data.payment_status==='partial'?\"\\n          <div class=\\\"total-row due-amount\\\">\\n            <span>Due:</span>\\n            <span>\".concat(parseFloat(data.remaining_amount||0).toFixed(2),\" MGA</span>\\n          </div>\\n        \"):'',\"\\n      </div>\\n      \\n      <div class=\\\"receipt-footer\\\">\\n        <div class=\\\"thank-you\\\">Thank you for your business!</div>\\n        <div class=\\\"footer-text\\\">\").concat(data.sale_number||'',\"</div>\\n      </div>\\n    \");};const generateDefaultContent=(data,t)=>{return\"\\n      <div class=\\\"receipt-header\\\">\\n        <div class=\\\"company-name\\\">Beverage Management</div>\\n        <div class=\\\"document-title\\\">DOCUMENT</div>\\n        <div class=\\\"receipt-date\\\">\".concat(new Date().toLocaleDateString(),\" \").concat(new Date().toLocaleTimeString(),\"</div>\\n      </div>\\n      \\n      <div class=\\\"receipt-section\\\">\\n        <div class=\\\"section-title\\\">CONTENT</div>\\n        <div class=\\\"default-content\\\">\\n          Document generated successfully\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"receipt-footer\\\">\\n        <div class=\\\"footer-text\\\">Document printed</div>\\n      </div>\\n    \");};// Replace the handlePrintReceipt function with PrintButton's robust logic\nconst handlePrintReceipt=async function(printData){let title=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Sale Receipt';let usePreview=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;try{// Validate data structure\nif(!printData){console.error('No data provided for printing');window.alert('No data available to print.');return false;}const isMobile=isMobileDevice();let printContent;// Use the same content generation logic as PrintButton\nif(isMobile){// Use mobile-optimized content\nprintContent=generateMobilePrintContent(printData,title,'sale',t);}else{// Use Xprinter-optimized content for better compatibility\nprintContent=generateXprinterPrintContent(printData,title,'sale',t);}// Handle print preview\nif(usePreview){const previewSuccess=openPrintPreview(printContent,title);if(previewSuccess){return true;}else{throw new Error('Failed to open print preview window.');}}// Use mobile-friendly printing for mobile devices\nif(isMobile){// Try direct print window for mobile\nconst success=await openPrintWindow(printContent,title);if(!success){// If mobile printing fails, offer receipt app option\nconst useReceiptApp=window.confirm('Mobile printing failed. Would you like to download a file for receipt printer apps instead?');if(useReceiptApp){const downloadSuccess=downloadReceiptFile(printData,title);if(downloadSuccess){window.alert('Receipt file downloaded! You can now open it with any receipt printer app to print directly to your Xprinter.');return true;}}throw new Error('Mobile printing failed. Please try again or check your printer connection.');}return true;}else{// Desktop printing with enhanced error handling\n// Try print preview first for better visibility\nconst previewSuccess=openPrintPreview(printContent,title);if(previewSuccess){// Preview opened successfully, user can print from there\nreturn true;}else{// Fallback to direct print window\nconst success=await openPrintWindow(printContent,title);if(!success){throw new Error('Failed to open print window. Please check popup blockers and try again.');}return true;}}}catch(error){console.error('Print error:',error);// Provide more specific error messages\nlet errorMessage='Failed to print. Please try again.';if(error.message.includes('popup')){errorMessage='Popup blocked. Please allow popups for this site and try again.';}else if(error.message.includes('Mobile printing failed')){errorMessage='Mobile printing failed. Please check your printer connection and try again.';}else if(error.message.includes('window.open')){errorMessage='Could not open print window. Please check your browser settings.';}else if(error.message.includes('Failed to download')){errorMessage='Failed to download receipt file. Please try again.';}window.alert(errorMessage);return false;}};// Update the print preview button in the checkout actions\nconst handlePrintPreview=async()=>{const printData=preparePrintData(\"PREVIEW-\".concat(Date.now()),saleMode==='pending'?'pending':'completed');await handlePrintReceipt(printData,t('titles.sale_receipt'),true);};// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Calculate total amount (products only, excluding packaging)\nconst calculateTotal=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);return cartTotal;};// Calculate total amount including packaging (for display purposes)\nconst calculateTotalWithPackaging=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);const packagingTotal=calculatePackagingTotal();return cartTotal+packagingTotal;};// Update paid amount when payment type changes\nuseEffect(()=>{const total=calculateTotal();if(paymentType==='full'){setPaidAmount(total);}else if(paymentType==='partial'){// Only reset to 0 if it's currently set to the full amount\nif(paidAmount===total){setPaidAmount(0);}}},[paymentType,cart,packagingCart]);// Function to get the current price for a specific unit\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!(unitStockInfo!==null&&unitStockInfo!==void 0&&unitStockInfo.price))return 0;// If we're in standard mode, return the standard unit price\nif(priceMode==='standard'){return unitStockInfo.price;}// If we're in wholesale mode, we need to calculate the wholesale price for this unit\nif(priceMode==='wholesale'&&product.wholesale_price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);// Handle edge cases\nif(!standardBasePrice||standardBasePrice<=0){return unitStockInfo.price;}// Calculate the conversion factor from standard to wholesale\nconst wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;// For wholesale pricing, we need to apply the wholesale conversion factor\n// to the base unit price, then convert to the selected unit\nlet wholesaleUnitPrice;if(unitStockInfo.is_base_unit){// If this is the base unit, apply wholesale factor directly\nwholesaleUnitPrice=standardBasePrice*wholesaleConversionFactor;}else{// If this is not the base unit, we need to:\n// 1. Get the wholesale base price\n// 2. Convert it to the selected unit using the same conversion factor as the standard price\nconst standardUnitPrice=unitStockInfo.price;const unitConversionFactor=standardUnitPrice/standardBasePrice;wholesaleUnitPrice=wholesaleBasePrice*unitConversionFactor;}// Round to 2 decimal places to avoid floating point precision issues\nconst roundedPrice=Math.round(wholesaleUnitPrice*100)/100;// Ensure we return a valid number\nreturn isNaN(roundedPrice)||roundedPrice<0?unitStockInfo.price:roundedPrice;}// Fallback to standard price\nreturn unitStockInfo.price;};useEffect(()=>{const initializeData=async()=>{await fetchCategories();// Don't fetch products here - let the categories useEffect handle it\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categoriesLoaded&&categories.length>0){fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categoriesLoaded]);// Only depend on categoriesLoaded flag\n// Debounced search effect - optimized to prevent focus loss\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Only set timeout if searchInput is not empty or if it was cleared\nif(searchInput!==''){searchTimeoutRef.current=setTimeout(()=>{const newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);},500);}else if(filtersRef.current.search!==''){// If search input is cleared, immediately update filters\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:''});setFilters(newFilters);fetchProducts(newFilters);}// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput]);// Only depend on searchInput to prevent re-renders\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/api/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=useCallback(async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const url=\"/api/products/\".concat(params.toString()?'?'+params.toString():'');const response=await api.get(url);const allProducts=response.data.results||response.data;// If categories are not loaded yet, show all products but log a warning\nif(categoriesRef.current.length===0||!categoriesLoadedRef.current){setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category_name, find the category in our categories list\nif(product.category_name){const category=categoriesRef.current.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categoriesRef.current.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category object with ID, find the category in our categories list\nelse if(product.category&&product.category.id){const category=categoriesRef.current.find(cat=>cat.id===product.category.id);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categoriesRef.current.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);}catch(err){setError('Failed to load products');}finally{setLoading(false);}},[]);// No dependencies to avoid circular references\nconst fetchCategories=useCallback(async()=>{try{const response=await api.get('/api/products/categories/');let categoriesData=response.data.results||response.data;// Load session-based sellable status from sessionStorage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');// Apply session-based sellable status\ncategoriesData=categoriesData.map(cat=>{const isSellable=sellableStatus.hasOwnProperty(cat.id)?sellableStatus[cat.id]:cat.is_sellable;return _objectSpread(_objectSpread({},cat),{},{is_sellable:isSellable});});setCategories(categoriesData);setCategoriesLoaded(true);}catch(err){console.error('Error fetching categories:',err);}},[]);// No dependencies needed for fetchCategories\nconst toggleCategorySellable=useCallback(async(categoryId,currentStatus)=>{try{setCategoryUpdating(true);const newStatus=!currentStatus;// Update session storage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');sellableStatus[categoryId]=newStatus;sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));// Update categories state immediately for UI feedback\nsetCategories(prevCategories=>prevCategories.map(cat=>cat.id===categoryId?_objectSpread(_objectSpread({},cat),{},{is_sellable:newStatus}):cat));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\n// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to update category status');console.error('Category toggle error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst resetAllCategoriesToSellable=useCallback(async()=>{try{setCategoryUpdating(true);// Create a sellable status object with all categories set to true\nconst allSellableStatus={};categoriesRef.current.forEach(cat=>{allSellableStatus[cat.id]=true;});// Save to session storage\nsessionStorage.setItem('sellableCategories',JSON.stringify(allSellableStatus));// Update categories state immediately\nsetCategories(prevCategories=>prevCategories.map(cat=>_objectSpread(_objectSpread({},cat),{},{is_sellable:true})));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\nsetSuccess('All categories have been set to sellable');// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to reset categories');console.error('Category reset error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst fetchStockAvailability=async productId=>{try{const response=await api.get(\"/api/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nlet unit=selectedUnit;if(!unit&&product.compatible_units&&product.compatible_units[0]){var _compatibleUnit$unit,_compatibleUnit$unit2,_compatibleUnit$unit3;const compatibleUnit=product.compatible_units[0];unit={id:((_compatibleUnit$unit=compatibleUnit.unit)===null||_compatibleUnit$unit===void 0?void 0:_compatibleUnit$unit.id)||compatibleUnit.unit,name:compatibleUnit.unit_name||((_compatibleUnit$unit2=compatibleUnit.unit)===null||_compatibleUnit$unit2===void 0?void 0:_compatibleUnit$unit2.name)||'Piece',symbol:compatibleUnit.unit_symbol||((_compatibleUnit$unit3=compatibleUnit.unit)===null||_compatibleUnit$unit3===void 0?void 0:_compatibleUnit$unit3.symbol)||'piece'};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);// Update cart first\nif(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(prevCart=>prevCart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}// Get unit stock info for price calculation\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product),price_mode:priceMode});setCart(prevCart=>[...prevCart,newCartItem]);}// Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\nif(product.has_packaging&&product.packaging_price){setTimeout(()=>{addPackagingAutomatically(product,unit);},0);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));// Also remove packaging if sales item is removed\nsetPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));// Update packaging quantity automatically if product has packaging\nconst product=products.find(p=>p.id===productId);if(product&&product.has_packaging&&product.packaging_price){const unit={id:unitId};updatePackagingQuantityAutomatically(product,unit,quantity);}setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};// Packaging functions\nconst addPackagingAutomatically=(product,unit)=>{if(!product.has_packaging||!product.packaging_price){return;}// Use a callback to get the current cart state\nsetCart(currentCart=>{// Calculate packaging quantity based on sales quantity\nconst salesItem=currentCart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(!salesItem)return currentCart;// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// For packaging, we use the base unit (pieces) to calculate quantity\n// If the sales unit is not the base unit, we need to convert to pieces\nlet packagingQuantity=salesItem.quantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesItem.quantity*unitStockInfo.conversion_factor;}// Update packaging cart\nsetPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,// Track which sales unit this packaging is for\nsales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});return currentCart;});};const addToPackagingCart=product=>{if(!product.has_packaging||!product.packaging_price){setError('This product does not have packaging consignation');return;}const existingPackaging=packagingCart.find(item=>item.id===product.id);if(existingPackaging){setPackagingCart(packagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{const newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price),status:'consignation',customer_name:customerInfo.name,customer_phone:customerInfo.phone});setPackagingCart([...packagingCart,newPackagingItem]);}setError('');};const updatePackagingQuantityAutomatically=(product,unit,salesQuantity)=>{if(!product.has_packaging||!product.packaging_price){return;}// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// Calculate packaging quantity based on sales quantity\nlet packagingQuantity=salesQuantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesQuantity*unitStockInfo.conversion_factor;}setPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item if it doesn't exist\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,sales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});};const updatePackagingQuantity=(productId,quantity)=>{if(quantity<=0){setPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity,total_price:item.unit_price*quantity}):item));}};const updatePackagingStatus=(productId,status)=>{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{status}):item));};const removeFromPackagingCart=productId=>{setPackagingCart(packagingCart.filter(item=>item.id!==productId));};const calculatePackagingTotal=()=>{return packagingCart.reduce((total,item)=>{// Only \"consignation\" (paid) packaging should be included in the total\n// \"exchange\" and \"due\" packaging are not payable\nif(item.status==='consignation'){return total+(item.total_price||0);}return total;},0);};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};// Prepare print data for printing\nconst preparePrintData=function(saleNumber){let saleStatus=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'completed';const total=calculateSubtotal();const remaining=total-paidAmount;return{sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:total,paid_amount:paidAmount,remaining_amount:remaining,payment_status:remaining>0?'partial':'paid',due_date:remaining>0?new Date(Date.now()+30*24*60*60*1000).toLocaleDateString():null,// 30 days from now\nitems:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};};const handleCheckout=async()=>{if(cart.length===0){setError(t('pos.cart_empty'));return;}setProcessing(true);setError('');// Validate customer name for partial payments\nif(paymentType==='partial'&&(!customerInfo.name||!customerInfo.name.trim())){setError('Customer name is required for partial payments');setProcessing(false);return;}// Validate paid amount\nconst total=calculateTotal();if(paidAmount>total){setError('Paid amount cannot exceed the total amount');setProcessing(false);return;}if(paidAmount<0){setError('Paid amount cannot be negative');setProcessing(false);return;}try{const saleData={sale_type:'sale',customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,paid_amount:paidAmount,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};}),packaging_items:packagingCart.map(item=>({product:item.id,quantity:parseFloat(item.quantity),unit:7,// Use the correct piece unit ID (7) for packaging\nunit_price:parseFloat(item.unit_price),status:item.status||'consignation',customer_name:item.customer_name||customerInfo.name,customer_phone:item.customer_phone||customerInfo.phone,notes:item.notes||''}))};// Create the sale\nconst response=await api.post('/api/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{const completionResponse=await api.post(\"/api/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){// Use the improved printing logic for completed sale\nconst printData=preparePrintData(saleNumber,'completed');await handlePrintReceipt(printData,t('titles.sale_receipt'));}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();// Show success message with packaging transaction info if created\nlet successMessage=\"Sale completed successfully! Sale Number: \".concat(saleNumber);if(completionResponse.data.packaging_transaction){const pkgTransaction=completionResponse.data.packaging_transaction;successMessage+=\"\\n\\nPackaging transaction automatically created:\\nTransaction: \".concat(pkgTransaction.transaction_number,\"\\nAmount: \").concat(pkgTransaction.total_amount,\" MGA\");}alert(successMessage);}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nsetError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){// Use the improved printing logic for pending sale\nconst printData=preparePrintData(saleNumber,'pending');await handlePrintReceipt(printData,t('titles.sale_receipt'));}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Reset price mode to standard after sale\nsetPriceMode('standard');alert(\"Pending sale created successfully! Sale Number: \".concat(saleNumber));}}catch(err){var _err$response,_err$response$data,_err$response2,_err$response2$data,_err$response3,_err$response3$data,_err$response4,_err$response4$data;// Handle different types of errors\nif((_err$response=err.response)!==null&&_err$response!==void 0&&(_err$response$data=_err$response.data)!==null&&_err$response$data!==void 0&&_err$response$data.error){setError(err.response.data.error);}else if((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.detail){setError(err.response.data.detail);}else if((_err$response3=err.response)!==null&&_err$response3!==void 0&&(_err$response3$data=_err$response3.data)!==null&&_err$response3$data!==void 0&&_err$response3$data.customer_name){setError(err.response.data.customer_name[0]);}else if((_err$response4=err.response)!==null&&_err$response4!==void 0&&(_err$response4$data=_err$response4.data)!==null&&_err$response4$data!==void 0&&_err$response4$data.paid_amount){setError(err.response.data.paid_amount[0]);}else{setError('Failed to create sale. Please check the console for details.');}}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setPackagingCart([]);setError('');};const handleFilterChange=useCallback((filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}},[]);// No dependencies needed since we use ref\nconst clearFilters=useCallback(()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\n// Only fetch products if categories are loaded\nif(categoriesLoadedRef.current&&categoriesRef.current.length>0){fetchProducts(clearedFilters);}},[categoriesLoaded,categories.length]);const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products (only for complete sales)\nif(saleMode==='complete'&&product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>{var _u$unit;return(((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.id)||u.unit)===selectedUnitId;});if(selectedCompatibleUnit){var _selectedCompatibleUn2;// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _selectedCompatibleUn;return u.id===(((_selectedCompatibleUn=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn===void 0?void 0:_selectedCompatibleUn.id)||selectedCompatibleUnit.unit);});const unitPrice=getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product);// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:((_selectedCompatibleUn2=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn2===void 0?void 0:_selectedCompatibleUn2.id)||selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.point_of_sale')}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:t('alerts.sale_will_be_completed'),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:t('alerts.sale_will_be_created_pending'),children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group print-receipt-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle print-receipt-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:t('alerts.print_receipt_after_sale'),children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:t('pos.dont_print_receipt'),children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:t('pos.search_products'),value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)},\"search-input\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{margin:'0',fontSize:'1rem',fontWeight:'600'},children:[\"Manage Sellable Categories\",categoryUpdating&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'0.5rem',color:'#3b82f6'},children:\"\\u27F3\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetAllCategoriesToSellable,disabled:categoryUpdating,style:{padding:'0.5rem 1rem',fontSize:'0.875rem',borderRadius:'0.375rem',border:'1px solid #3b82f6',cursor:categoryUpdating?'not-allowed':'pointer',backgroundColor:categoryUpdating?'#9ca3af':'#3b82f6',color:'white',fontWeight:'500',opacity:categoryUpdating?0.6:1},children:\"Reset All to Sellable\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.map(product=>{var _product$compatible_u2;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0&&saleMode==='complete'?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[(_product$compatible_u=>{// Find the actual base unit and get its price\nconst baseUnit=(_product$compatible_u=product.compatible_units)===null||_product$compatible_u===void 0?void 0:_product$compatible_u.find(u=>u.unit.is_base_unit);if(baseUnit&&stockAvailability[product.id]){const updatedStockInfo=getUpdatedStockAvailability(product.id);const baseUnitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _baseUnit$unit;return u.id===(((_baseUnit$unit=baseUnit.unit)===null||_baseUnit$unit===void 0?void 0:_baseUnit$unit.id)||baseUnit.unit);});if(baseUnitStockInfo){return getCurrentUnitPrice(product,baseUnitStockInfo).toFixed(2);}}// Fallback to the original price\nreturn getCurrentPrice(product).toFixed(2);})(),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u2=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u2===void 0?void 0:_product$compatible_u2.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{var _compatibleUnit$unit5,_compatibleUnit$unit6;const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit4;return u.id===(((_compatibleUnit$unit4=compatibleUnit.unit)===null||_compatibleUnit$unit4===void 0?void 0:_compatibleUnit$unit4.id)||compatibleUnit.unit);});if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit5=compatibleUnit.unit)===null||_compatibleUnit$unit5===void 0?void 0:_compatibleUnit$unit5.name)||compatibleUnit.unit_name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA (\",unitStockInfo.available_quantity,\" available)\"]},((_compatibleUnit$unit6=compatibleUnit.unit)===null||_compatibleUnit$unit6===void 0?void 0:_compatibleUnit$unit6.id)||compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _compatibleUnit$unit8,_compatibleUnit$unit9,_compatibleUnit$unit0,_compatibleUnit$unit1;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit7;return u.id===(((_compatibleUnit$unit7=compatibleUnit.unit)===null||_compatibleUnit$unit7===void 0?void 0:_compatibleUnit$unit7.id)||compatibleUnit.unit);});const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit8=compatibleUnit.unit)===null||_compatibleUnit$unit8===void 0?void 0:_compatibleUnit$unit8.name)||compatibleUnit.unit_name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||((_compatibleUnit$unit9=compatibleUnit.unit)===null||_compatibleUnit$unit9===void 0?void 0:_compatibleUnit$unit9.symbol)||compatibleUnit.unit_symbol;return/*#__PURE__*/_jsxs(\"option\",{value:((_compatibleUnit$unit1=compatibleUnit.unit)===null||_compatibleUnit$unit1===void 0?void 0:_compatibleUnit$unit1.id)||compatibleUnit.unit,disabled:saleMode==='complete'?!isAvailable:false,children:[unitName,\" (\",unitSymbol,\") - \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA\",!isAvailable&&saleMode==='complete'?' - OUT OF STOCK':'']},((_compatibleUnit$unit0=compatibleUnit.unit)===null||_compatibleUnit$unit0===void 0?void 0:_compatibleUnit$unit0.id)||compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.has_packaging&&product.packaging_price&&/*#__PURE__*/_jsx(\"div\",{className:\"packaging-info\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"packaging-price\",children:[\"Packaging: \",product.packaging_price,\" MGA (Auto-added)\"]})}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Cart is empty\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart-hint\",children:\"Add items from the product list to start a sale\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-status\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:t('alerts.click_to_edit_quantity'),children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sales-item-status\",children:\"-\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:t('alerts.remove_item'),children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode))),packagingCart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"packaging-section-header\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Packaging Items (Auto-calculated)\"})}),packagingCart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item packaging-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[item.name,\" (Packaging)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),item.sales_unit_name&&/*#__PURE__*/_jsxs(\"p\",{className:\"packaging-source\",children:[\"From: \",item.quantity,\" \",item.sales_unit_symbol||'piece']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:\"piece\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-quantity\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quantity auto-calculated\",children:item.quantity}),/*#__PURE__*/_jsx(\"small\",{className:\"auto-label\",children:\"Auto\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.status,onChange:e=>updatePackagingStatus(item.id,e.target.value),className:\"packaging-status-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"consignation\",children:\"Consigned (Paid)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"exchange\",children:\"Exchange\"}),/*#__PURE__*/_jsx(\"option\",{value:\"due\",children:\"Due (Return Required)\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromPackagingCart(item.id),title:\"Remove packaging item\",children:\"\\xD7\"})})]},\"packaging-\".concat(item.id)))]})]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Items Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row packaging-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Products Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total (Products Only):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:paymentType==='partial'?\"Customer Name (Required for Partial Payment)\":\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value})),className:paymentType==='partial'&&!customerInfo.name?'required-field':''})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"full\",checked:paymentType==='full',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"partial\",checked:paymentType==='partial',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]}),paymentType==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateTotal(),value:paidAmount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setPaidAmount(value);},placeholder:t('forms.enter_amount_to_pay')}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Products Total: $\",calculateTotal().toFixed(2),\" | Remaining: $\",(calculateTotal()-(paidAmount||0)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkout-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"large\",onClick:handlePrintPreview,className:\"print-preview-btn\",children:\"\\uD83D\\uDDA8\\uFE0F Print Preview\"}),/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?t('pos.complete_sale'):t('pos.create_pending_sale'),printReceipt&&t('pos.print_receipt')]})]})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useTranslation","useAuth","api","Button","PackagingManager","isMobileDevice","openPrintWindow","openPrintPreview","downloadReceiptFile","generateXprinterPrintContent","generateMobilePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","t","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","paymentType","setPaymentType","paidAmount","setPaidAmount","loading","setLoading","processing","setProcessing","error","setError","success","setSuccess","stockAvailability","setStockAvailability","categoriesLoaded","setCategoriesLoaded","categoryUpdating","setCategoryUpdating","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","filtersRef","searchTimeoutRef","categoriesRef","categoriesLoadedRef","current","syncSessionStorage","sellableStatus","forEach","cat","id","is_sellable","sessionStorage","setItem","JSON","stringify","length","fetchProducts","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","packagingCart","setPackagingCart","showPackagingManager","setShowPackagingManager","generatePrintContent","data","title","type","currentDate","Date","toLocaleDateString","currentTime","toLocaleTimeString","content","concat","generateSaleContent","generateDefaultContent","items","numberedKeys","Object","keys","filter","key","test","map","item","paymentStatusText","payment_status","sale_number","customer_name","substring","customer_phone","Array","isArray","slice","product_name","quantity_display","quantity","parseFloat","unit_price","toFixed","total_price","join","total_amount","paid_amount","remaining_amount","handlePrintReceipt","printData","arguments","undefined","usePreview","console","window","alert","isMobile","printContent","previewSuccess","Error","useReceiptApp","confirm","downloadSuccess","errorMessage","message","includes","handlePrintPreview","preparePrintData","now","getCurrentPrice","product","wholesale_price","price","calculateTotal","cartTotal","reduce","total","unitPrice","calculateTotalWithPackaging","packagingTotal","calculatePackagingTotal","getCurrentUnitPrice","unitStockInfo","standardBasePrice","wholesaleBasePrice","wholesaleConversionFactor","wholesaleUnitPrice","is_base_unit","standardUnitPrice","unitConversionFactor","roundedPrice","Math","round","isNaN","initializeData","fetchCategories","clearTimeout","setTimeout","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","compatible_units","selectedUnit","find","u","is_default","unit","_selectedUnit$unit","productIds","response","post","product_ids","stockData","values","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","unitInfo","unit_id","conversion_factor","baseUnit","totalBaseStock","available_quantity","remainingPieces","max","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","url","toString","get","allProducts","results","sellableProducts","isSellable","category_name","selectedCategory","parseInt","categoriesData","parse","getItem","hasOwnProperty","toggleCategorySellable","categoryId","currentStatus","newStatus","prevCategories","resetAllCategoriesToSellable","allSellableStatus","prev","addToCart","_compatibleUnit$unit","_compatibleUnit$unit2","_compatibleUnit$unit3","compatibleUnit","unit_name","symbol","unit_symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","prevCart","newCartItem","has_packaging","packaging_price","addPackagingAutomatically","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","p","updatePackagingQuantityAutomatically","removeFromCart","currentCart","salesItem","packagingQuantity","currentPackagingCart","existingPackaging","newPackagingItem","status","sales_unit_id","sales_unit_name","sales_unit_symbol","addToPackagingCart","salesQuantity","updatePackagingQuantity","updatePackagingStatus","removeFromPackagingCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","saleNumber","saleStatus","remaining","customer_email","user_name","username","user_id","created_at","toISOString","print_timestamp","print_id","random","substr","due_date","_item$unit","product_sku","sku","handleCheckout","trim","saleData","sale_type","payment_method","packaging_items","notes","saleId","completionResponse","Promise","resolve","successMessage","packaging_transaction","pkgTransaction","transaction_number","completeError","_completeError$respon","_completeError$respon2","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","handleQuantitySubmit","newQuantity","cartItem","handleQuantityCancel","handleQuantityKeyPress","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","_u$unit","_selectedCompatibleUn2","_selectedCompatibleUn","className","children","onChange","variant","size","onClick","style","marginTop","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","display","justifyContent","alignItems","margin","fontSize","fontWeight","marginLeft","color","disabled","cursor","opacity","gridTemplateColumns","gap","borderColor","_product$compatible_u2","_product$compatible_u","baseUnitStockInfo","_baseUnit$unit","_compatibleUnit$unit5","_compatibleUnit$unit6","_compatibleUnit$unit4","unitName","Boolean","stopPropagation","index","_compatibleUnit$unit8","_compatibleUnit$unit9","_compatibleUnit$unit0","_compatibleUnit$unit1","_compatibleUnit$unit7","availableQty","unitSymbol","onKeyPress","onBlur","min","autoFocus","method","checked","replace","toUpperCase","step"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PackagingManager from '../components/PackagingManager';\nimport { \n  isMobileDevice,\n  openPrintWindow,\n  openPrintPreview,\n  downloadReceiptFile,\n  generateXprinterPrintContent,\n  generateMobilePrintContent\n} from '../utils/printUtils';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [paymentType, setPaymentType] = useState('full'); // 'full' or 'partial'\n  const [paidAmount, setPaidAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [categoriesLoaded, setCategoriesLoaded] = useState(false);\n  const [categoryUpdating, setCategoryUpdating] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const filtersRef = useRef(filters); // Ref to store current filters\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const categoriesRef = useRef(categories); // Ref to store current categories\n  const categoriesLoadedRef = useRef(categoriesLoaded); // Ref to store categories loaded state\n\n  // Update refs whenever state changes\n  useEffect(() => {\n    filtersRef.current = filters;\n  }, [filters]);\n\n  useEffect(() => {\n    categoriesRef.current = categories;\n  }, [categories]);\n\n  useEffect(() => {\n    categoriesLoadedRef.current = categoriesLoaded;\n  }, [categoriesLoaded]);\n\n  // Function to sync session storage with categories state\n  const syncSessionStorage = useCallback(() => {\n    const sellableStatus = {};\n    categories.forEach(cat => {\n      sellableStatus[cat.id] = cat.is_sellable;\n    });\n    sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n  }, [categories]);\n\n  // Sync session storage whenever categories change\n  useEffect(() => {\n    if (categories.length > 0) {\n      syncSessionStorage();\n    }\n  }, [categories, syncSessionStorage]);\n\n  // Handle case where filters are cleared but categories aren't loaded yet\n  useEffect(() => {\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0 && filtersRef.current.category === '' && filtersRef.current.search === '') {\n      fetchProducts(filtersRef.current);\n    }\n  }, [categoriesLoaded, categories.length, filters]);\n\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n  \n  // Packaging state\n  const [packagingCart, setPackagingCart] = useState([]);\n  const [showPackagingManager, setShowPackagingManager] = useState(false);\n\n  // Copy the generatePrintContent function from PrintButton.js\n  const generatePrintContent = (data, title, type) => {\n    const currentDate = new Date().toLocaleDateString();\n    const currentTime = new Date().toLocaleTimeString();\n    \n    let content = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>${title}</title>\n        <meta charset=\"UTF-8\">\n        <style>\n          /* 80mm Thermal Printer Receipt Styles */\n          * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n          }\n          \n          body {\n            font-family: 'Courier New', Courier, monospace;\n            font-size: 12px;\n            line-height: 1.2;\n            color: #000;\n            width: 80mm;\n            max-width: 80mm;\n            margin: 0 auto;\n            padding: 3mm;\n            background: white;\n          }\n          \n          .receipt-header {\n            text-align: center;\n            margin-bottom: 8px;\n            padding-bottom: 6px;\n            border-bottom: 1px dashed #000;\n          }\n          \n          .company-name {\n            font-weight: bold;\n            font-size: 14px;\n            margin-bottom: 2px;\n            text-transform: uppercase;\n          }\n          \n          .document-title {\n            font-weight: bold;\n            font-size: 13px;\n            margin-bottom: 3px;\n            text-transform: uppercase;\n          }\n          \n          .receipt-date {\n            font-size: 11px;\n            color: #555;\n          }\n          \n          .receipt-section {\n            margin-bottom: 8px;\n            padding-bottom: 6px;\n            border-bottom: 1px dotted #ccc;\n          }\n          \n          .section-title {\n            font-weight: bold;\n            font-size: 11px;\n            margin-bottom: 4px;\n            text-transform: uppercase;\n            background: #f0f0f0;\n            padding: 2px 4px;\n          }\n          \n          .receipt-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 3px;\n            font-size: 11px;\n          }\n          \n          .product-item,\n          .order-item,\n          .delivery-item,\n          .sale-item,\n          .packaging-item,\n          .sale-summary {\n            margin-bottom: 4px;\n            padding: 2px 0;\n          }\n          \n          .product-name,\n          .item-name {\n            font-weight: bold;\n            margin-bottom: 1px;\n            word-wrap: break-word;\n          }\n          \n          .product-details,\n          .item-details,\n          .sale-info {\n            display: flex;\n            justify-content: space-between;\n            font-size: 10px;\n            color: #555;\n          }\n          \n          .receipt-totals,\n          .receipt-total {\n            margin: 8px 0;\n            padding-top: 6px;\n            border-top: 2px solid #000;\n          }\n          \n          .total-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 3px;\n            font-weight: bold;\n          }\n          \n          .due-amount {\n            color: #d00;\n          }\n          \n          .no-data {\n            text-align: center;\n            color: #888;\n            font-style: italic;\n            padding: 8px 0;\n          }\n          \n          .truncated-warning {\n            text-align: center;\n            color: #888;\n            font-size: 10px;\n            font-style: italic;\n            margin-top: 4px;\n          }\n          \n          .thank-you {\n            text-align: center;\n            font-weight: bold;\n            margin: 6px 0;\n          }\n          \n          .receipt-footer {\n            text-align: center;\n            margin-top: 10px;\n            padding-top: 6px;\n            border-top: 1px dashed #000;\n            font-size: 10px;\n            color: #666;\n          }\n          \n          .footer-text {\n            margin-bottom: 2px;\n          }\n          \n          .status-consignation { color: #090; }\n          .status-exchange { color: #009; }\n          .status-due { color: #d00; font-weight: bold; }\n          \n          /* Print-specific styles */\n          @media print {\n            body {\n              margin: 0;\n              padding: 2mm;\n              width: 80mm;\n            }\n            \n            .no-print {\n              display: none;\n            }\n            \n            /* Ensure proper sizing for thermal paper */\n            @page {\n              size: 80mm auto;\n              margin: 0;\n            }\n          }\n          \n          /* Force monospace and proper breaking */\n          * {\n            font-family: 'Courier New', Courier, monospace !important;\n          }\n          \n          .default-content {\n            text-align: center;\n            padding: 10px 0;\n            color: #666;\n          }\n        </style>\n      </head>\n      <body>\n    `;\n\n    // Add type-specific content using PrintButton's logic\n    switch (type) {\n      case 'sale':\n        content += generateSaleContent(data, t);\n        break;\n      default:\n        content += generateDefaultContent(data, t);\n    }\n\n    content += `\n      </body>\n      </html>\n    `;\n\n    return content;\n  };\n\n  // Copy the exact helper functions from PrintButton\n  const generateSaleContent = (data, t) => {\n    let items = data.items;\n    if (!items) {\n      const numberedKeys = Object.keys(data).filter(key => /^\\d+$/.test(key));\n      if (numberedKeys.length > 0) {\n        items = numberedKeys.map(key => data[key]).filter(item => item && typeof item === 'object');\n      }\n    }\n\n    const paymentStatusText = data.payment_status === 'paid' ? 'PAID' : \n                            data.payment_status === 'partial' ? 'PARTIAL' : \n                            data.payment_status === 'pending' ? 'PENDING' : \n                            'UNKNOWN';\n\n    return `\n      <div class=\"receipt-header\">\n        <div class=\"company-name\">Beverage Management</div>\n        <div class=\"document-title\">SALE RECEIPT</div>\n        <div class=\"receipt-date\">${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}</div>\n      </div>\n      \n      <div class=\"receipt-section\">\n        <div class=\"section-title\">SALE INFO</div>\n        <div class=\"receipt-row\">\n          <span>Sale No:</span>\n          <span>${data.sale_number || 'N/A'}</span>\n        </div>\n        <div class=\"receipt-row\">\n          <span>Customer:</span>\n          <span>${(data.customer_name || 'Walk-in Customer').substring(0, 25)}</span>\n        </div>\n        ${data.customer_phone ? `\n          <div class=\"receipt-row\">\n            <span>Phone:</span>\n            <span>${data.customer_phone}</span>\n          </div>\n        ` : ''}\n        <div class=\"receipt-row\">\n          <span>Status:</span>\n          <span>${paymentStatusText}</span>\n        </div>\n      </div>\n      \n      <div class=\"receipt-section\">\n        <div class=\"section-title\">ITEMS SOLD</div>\n        ${items && Array.isArray(items) ? items.slice(0, 20).map(item => `\n          <div class=\"sale-item\">\n            <div class=\"item-name\">${(item.product_name || 'N/A').substring(0, 25)}</div>\n            <div class=\"item-details\">\n              <span>${item.quantity_display || item.quantity || 0} x ${parseFloat(item.unit_price || 0).toFixed(2)}</span>\n              <span>${parseFloat(item.total_price || 0).toFixed(2)} MGA</span>\n            </div>\n          </div>\n        `).join('') : '<div class=\"no-data\">No items found</div>'}\n      </div>\n      \n      <div class=\"receipt-totals\">\n        <div class=\"total-row\">\n          <span>Subtotal:</span>\n          <span>${parseFloat(data.total_amount || 0).toFixed(2)} MGA</span>\n        </div>\n        <div class=\"total-row\">\n          <span>Paid:</span>\n          <span>${parseFloat(data.paid_amount || 0).toFixed(2)} MGA</span>\n        </div>\n        ${data.payment_status === 'partial' ? `\n          <div class=\"total-row due-amount\">\n            <span>Due:</span>\n            <span>${parseFloat(data.remaining_amount || 0).toFixed(2)} MGA</span>\n          </div>\n        ` : ''}\n      </div>\n      \n      <div class=\"receipt-footer\">\n        <div class=\"thank-you\">Thank you for your business!</div>\n        <div class=\"footer-text\">${data.sale_number || ''}</div>\n      </div>\n    `;\n  };\n\n  const generateDefaultContent = (data, t) => {\n    return `\n      <div class=\"receipt-header\">\n        <div class=\"company-name\">Beverage Management</div>\n        <div class=\"document-title\">DOCUMENT</div>\n        <div class=\"receipt-date\">${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}</div>\n      </div>\n      \n      <div class=\"receipt-section\">\n        <div class=\"section-title\">CONTENT</div>\n        <div class=\"default-content\">\n          Document generated successfully\n        </div>\n      </div>\n      \n      <div class=\"receipt-footer\">\n        <div class=\"footer-text\">Document printed</div>\n      </div>\n    `;\n  };\n\n  // Replace the handlePrintReceipt function with PrintButton's robust logic\n  const handlePrintReceipt = async (printData, title = 'Sale Receipt', usePreview = false) => {\n    try {\n      // Validate data structure\n      if (!printData) {\n        console.error('No data provided for printing');\n        window.alert('No data available to print.');\n        return false;\n      }\n\n      const isMobile = isMobileDevice();\n      let printContent;\n      \n      // Use the same content generation logic as PrintButton\n      if (isMobile) {\n        // Use mobile-optimized content\n        printContent = generateMobilePrintContent(printData, title, 'sale', t);\n      } else {\n        // Use Xprinter-optimized content for better compatibility\n        printContent = generateXprinterPrintContent(printData, title, 'sale', t);\n      }\n\n      // Handle print preview\n      if (usePreview) {\n        const previewSuccess = openPrintPreview(printContent, title);\n        if (previewSuccess) {\n          return true;\n        } else {\n          throw new Error('Failed to open print preview window.');\n        }\n      }\n\n      // Use mobile-friendly printing for mobile devices\n      if (isMobile) {\n        // Try direct print window for mobile\n        const success = await openPrintWindow(printContent, title);\n        if (!success) {\n          // If mobile printing fails, offer receipt app option\n          const useReceiptApp = window.confirm('Mobile printing failed. Would you like to download a file for receipt printer apps instead?');\n          if (useReceiptApp) {\n            const downloadSuccess = downloadReceiptFile(printData, title);\n            if (downloadSuccess) {\n              window.alert('Receipt file downloaded! You can now open it with any receipt printer app to print directly to your Xprinter.');\n              return true;\n            }\n          }\n          throw new Error('Mobile printing failed. Please try again or check your printer connection.');\n        }\n        return true;\n      } else {\n        // Desktop printing with enhanced error handling\n        // Try print preview first for better visibility\n        const previewSuccess = openPrintPreview(printContent, title);\n        if (previewSuccess) {\n          // Preview opened successfully, user can print from there\n          return true;\n        } else {\n          // Fallback to direct print window\n          const success = await openPrintWindow(printContent, title);\n          if (!success) {\n            throw new Error('Failed to open print window. Please check popup blockers and try again.');\n          }\n          return true;\n        }\n      }\n      \n    } catch (error) {\n      console.error('Print error:', error);\n      \n      // Provide more specific error messages\n      let errorMessage = 'Failed to print. Please try again.';\n      \n      if (error.message.includes('popup')) {\n        errorMessage = 'Popup blocked. Please allow popups for this site and try again.';\n      } else if (error.message.includes('Mobile printing failed')) {\n        errorMessage = 'Mobile printing failed. Please check your printer connection and try again.';\n      } else if (error.message.includes('window.open')) {\n        errorMessage = 'Could not open print window. Please check your browser settings.';\n      } else if (error.message.includes('Failed to download')) {\n        errorMessage = 'Failed to download receipt file. Please try again.';\n      }\n      \n      window.alert(errorMessage);\n      return false;\n    }\n  };\n\n  // Update the print preview button in the checkout actions\n  const handlePrintPreview = async () => {\n    const printData = preparePrintData(`PREVIEW-${Date.now()}`, saleMode === 'pending' ? 'pending' : 'completed');\n    await handlePrintReceipt(printData, t('titles.sale_receipt'), true);\n  };\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Calculate total amount (products only, excluding packaging)\n  const calculateTotal = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    return cartTotal;\n  };\n\n  // Calculate total amount including packaging (for display purposes)\n  const calculateTotalWithPackaging = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    const packagingTotal = calculatePackagingTotal();\n    return cartTotal + packagingTotal;\n  };\n\n  // Update paid amount when payment type changes\n  useEffect(() => {\n    const total = calculateTotal();\n    if (paymentType === 'full') {\n      setPaidAmount(total);\n    } else if (paymentType === 'partial') {\n      // Only reset to 0 if it's currently set to the full amount\n      if (paidAmount === total) {\n        setPaidAmount(0);\n      }\n    }\n  }, [paymentType, cart, packagingCart]);\n\n  // Function to get the current price for a specific unit\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo?.price) return 0;\n    \n    // If we're in standard mode, return the standard unit price\n    if (priceMode === 'standard') {\n      return unitStockInfo.price;\n    }\n    \n    // If we're in wholesale mode, we need to calculate the wholesale price for this unit\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      const standardBasePrice = parseFloat(product.price);\n      const wholesaleBasePrice = parseFloat(product.wholesale_price);\n      \n      // Handle edge cases\n      if (!standardBasePrice || standardBasePrice <= 0) {\n        return unitStockInfo.price;\n      }\n      \n      // Calculate the conversion factor from standard to wholesale\n      const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n      \n      // For wholesale pricing, we need to apply the wholesale conversion factor\n      // to the base unit price, then convert to the selected unit\n      let wholesaleUnitPrice;\n      \n      if (unitStockInfo.is_base_unit) {\n        // If this is the base unit, apply wholesale factor directly\n        wholesaleUnitPrice = standardBasePrice * wholesaleConversionFactor;\n      } else {\n        // If this is not the base unit, we need to:\n        // 1. Get the wholesale base price\n        // 2. Convert it to the selected unit using the same conversion factor as the standard price\n        const standardUnitPrice = unitStockInfo.price;\n        const unitConversionFactor = standardUnitPrice / standardBasePrice;\n        wholesaleUnitPrice = wholesaleBasePrice * unitConversionFactor;\n      }\n      \n      // Round to 2 decimal places to avoid floating point precision issues\n      const roundedPrice = Math.round(wholesaleUnitPrice * 100) / 100;\n      \n      // Ensure we return a valid number\n      return isNaN(roundedPrice) || roundedPrice < 0 ? unitStockInfo.price : roundedPrice;\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      // Don't fetch products here - let the categories useEffect handle it\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categoriesLoaded && categories.length > 0) {\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categoriesLoaded]); // Only depend on categoriesLoaded flag\n\n  // Debounced search effect - optimized to prevent focus loss\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Only set timeout if searchInput is not empty or if it was cleared\n    if (searchInput !== '') {\n      searchTimeoutRef.current = setTimeout(() => {\n        const newFilters = { ...filtersRef.current, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }, 500);\n    } else if (filtersRef.current.search !== '') {\n      // If search input is cleared, immediately update filters\n      const newFilters = { ...filtersRef.current, search: '' };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput]); // Only depend on searchInput to prevent re-renders\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/api/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = useCallback(async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categoriesRef.current.length === 0 || !categoriesLoadedRef.current) {\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category_name, find the category in our categories list\n        if (product.category_name) {\n          const category = categoriesRef.current.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categoriesRef.current.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category object with ID, find the category in our categories list\n        else if (product.category && product.category.id) {\n          const category = categoriesRef.current.find(cat => cat.id === product.category.id);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categoriesRef.current.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  }, []); // No dependencies to avoid circular references\n\n  const fetchCategories = useCallback(async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      let categoriesData = response.data.results || response.data;\n      \n      // Load session-based sellable status from sessionStorage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      \n      // Apply session-based sellable status\n      categoriesData = categoriesData.map(cat => {\n        const isSellable = sellableStatus.hasOwnProperty(cat.id) ? sellableStatus[cat.id] : cat.is_sellable;\n        return {\n          ...cat,\n          is_sellable: isSellable\n        };\n      });\n      \n      setCategories(categoriesData);\n      setCategoriesLoaded(true);\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n    }\n  }, []); // No dependencies needed for fetchCategories\n\n  const toggleCategorySellable = useCallback(async (categoryId, currentStatus) => {\n    try {\n      setCategoryUpdating(true);\n      const newStatus = !currentStatus;\n      \n      // Update session storage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      sellableStatus[categoryId] = newStatus;\n      sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n      \n      // Update categories state immediately for UI feedback\n      setCategories(prevCategories => \n        prevCategories.map(cat => \n          cat.id === categoryId ? { ...cat, is_sellable: newStatus } : cat\n        )\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to update category status');\n      console.error('Category toggle error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const resetAllCategoriesToSellable = useCallback(async () => {\n    try {\n      setCategoryUpdating(true);\n      \n      // Create a sellable status object with all categories set to true\n      const allSellableStatus = {};\n      categoriesRef.current.forEach(cat => {\n        allSellableStatus[cat.id] = true;\n      });\n      \n      // Save to session storage\n      sessionStorage.setItem('sellableCategories', JSON.stringify(allSellableStatus));\n      \n      // Update categories state immediately\n      setCategories(prevCategories => \n        prevCategories.map(cat => ({ ...cat, is_sellable: true }))\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      setSuccess('All categories have been set to sellable');\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to reset categories');\n      console.error('Category reset error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/api/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.compatible_units && product.compatible_units[0]) {\n      const compatibleUnit = product.compatible_units[0];\n      unit = {\n        id: compatibleUnit.unit?.id || compatibleUnit.unit,\n        name: compatibleUnit.unit_name || compatibleUnit.unit?.name || 'Piece',\n        symbol: compatibleUnit.unit_symbol || compatibleUnit.unit?.symbol || 'piece'\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    \n    // Update cart first\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(prevCart => prevCart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      // Get unit stock info for price calculation\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product),\n        price_mode: priceMode\n      };\n      setCart(prevCart => [...prevCart, newCartItem]);\n    }\n\n    // Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\n    if (product.has_packaging && product.packaging_price) {\n      setTimeout(() => {\n        addPackagingAutomatically(product, unit);\n      }, 0);\n    }\n    \n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n      // Also remove packaging if sales item is removed\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n\n      // Update packaging quantity automatically if product has packaging\n      const product = products.find(p => p.id === productId);\n      if (product && product.has_packaging && product.packaging_price) {\n        const unit = { id: unitId };\n        updatePackagingQuantityAutomatically(product, unit, quantity);\n      }\n      \n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  // Packaging functions\n  const addPackagingAutomatically = (product, unit) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Use a callback to get the current cart state\n    setCart(currentCart => {\n      // Calculate packaging quantity based on sales quantity\n      const salesItem = currentCart.find(item => \n        item.id === product.id && \n        item.unit_id === unit.id && \n        item.price_mode === priceMode\n      );\n      \n      if (!salesItem) return currentCart;\n\n      // Get unit information from stock availability\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      // For packaging, we use the base unit (pieces) to calculate quantity\n      // If the sales unit is not the base unit, we need to convert to pieces\n      let packagingQuantity = salesItem.quantity;\n      \n      // If the sales unit is not the base unit, convert to pieces\n      if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n        packagingQuantity = salesItem.quantity * unitStockInfo.conversion_factor;\n      }\n\n      // Update packaging cart\n      setPackagingCart(currentPackagingCart => {\n        const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n        if (existingPackaging) {\n          // Update existing packaging quantity to match sales quantity\n          return currentPackagingCart.map(item =>\n            item.id === product.id\n              ? { \n                  ...item, \n                  quantity: packagingQuantity,\n                  total_price: parseFloat(product.packaging_price) * packagingQuantity\n                }\n              : item\n          );\n        } else {\n          // Create new packaging item\n          const newPackagingItem = {\n            ...product,\n            quantity: packagingQuantity,\n            unit_price: parseFloat(product.packaging_price),\n            total_price: parseFloat(product.packaging_price) * packagingQuantity,\n            status: 'consignation', // Default status\n            customer_name: customerInfo.name,\n            customer_phone: customerInfo.phone,\n            sales_unit_id: unit.id, // Track which sales unit this packaging is for\n            sales_unit_name: unit.name,\n            sales_unit_symbol: unit.symbol\n          };\n          return [...currentPackagingCart, newPackagingItem];\n        }\n      });\n\n      return currentCart;\n    });\n  };\n\n  const addToPackagingCart = (product) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      setError('This product does not have packaging consignation');\n      return;\n    }\n\n    const existingPackaging = packagingCart.find(item => item.id === product.id);\n    if (existingPackaging) {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === product.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      const newPackagingItem = {\n        ...product,\n        quantity: 1,\n        unit_price: parseFloat(product.packaging_price),\n        total_price: parseFloat(product.packaging_price),\n        status: 'consignation',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone\n      };\n      setPackagingCart([...packagingCart, newPackagingItem]);\n    }\n    setError('');\n  };\n\n  const updatePackagingQuantityAutomatically = (product, unit, salesQuantity) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Get unit information from stock availability\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    // Calculate packaging quantity based on sales quantity\n    let packagingQuantity = salesQuantity;\n    \n    // If the sales unit is not the base unit, convert to pieces\n    if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n      packagingQuantity = salesQuantity * unitStockInfo.conversion_factor;\n    }\n\n    setPackagingCart(currentPackagingCart => {\n      const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n      if (existingPackaging) {\n        // Update existing packaging quantity to match sales quantity\n        return currentPackagingCart.map(item =>\n          item.id === product.id\n            ? { \n                ...item, \n                quantity: packagingQuantity,\n                total_price: parseFloat(product.packaging_price) * packagingQuantity\n              }\n            : item\n        );\n      } else {\n        // Create new packaging item if it doesn't exist\n        const newPackagingItem = {\n          ...product,\n          quantity: packagingQuantity,\n          unit_price: parseFloat(product.packaging_price),\n          total_price: parseFloat(product.packaging_price) * packagingQuantity,\n          status: 'consignation', // Default status\n          customer_name: customerInfo.name,\n          customer_phone: customerInfo.phone,\n          sales_unit_id: unit.id,\n          sales_unit_name: unit.name,\n          sales_unit_symbol: unit.symbol\n        };\n        return [...currentPackagingCart, newPackagingItem];\n      }\n    });\n  };\n\n  const updatePackagingQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === productId\n          ? { ...item, quantity, total_price: item.unit_price * quantity }\n          : item\n      ));\n    }\n  };\n\n  const updatePackagingStatus = (productId, status) => {\n    setPackagingCart(packagingCart.map(item =>\n      item.id === productId\n        ? { ...item, status }\n        : item\n    ));\n  };\n\n  const removeFromPackagingCart = (productId) => {\n    setPackagingCart(packagingCart.filter(item => item.id !== productId));\n  };\n\n  const calculatePackagingTotal = () => {\n    return packagingCart.reduce((total, item) => {\n      // Only \"consignation\" (paid) packaging should be included in the total\n      // \"exchange\" and \"due\" packaging are not payable\n      if (item.status === 'consignation') {\n        return total + (item.total_price || 0);\n      }\n      return total;\n    }, 0);\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n  // Prepare print data for printing\n  const preparePrintData = (saleNumber, saleStatus = 'completed') => {\n    const total = calculateSubtotal();\n    const remaining = total - paidAmount;\n    \n    return {\n      sale_number: saleNumber,\n      customer_name: customerInfo.name || 'Walk-in Customer',\n      customer_phone: customerInfo.phone || '',\n      customer_email: customerInfo.email || '',\n      user_name: user?.username || 'Unknown User',\n      user_id: user?.id || 'unknown',\n      created_at: new Date().toISOString(),\n      print_timestamp: new Date().toISOString(),\n      print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      status: saleStatus,\n      total_amount: total,\n      paid_amount: paidAmount,\n      remaining_amount: remaining,\n      payment_status: remaining > 0 ? 'partial' : 'paid',\n      due_date: remaining > 0 ? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString() : null, // 30 days from now\n      items: cart.map(item => ({\n        product_name: item.name,\n        product_sku: item.sku,\n        quantity: item.quantity,\n        unit_name: item.unit_name || item.unit?.name || 'piece',\n        unit_price: item.unit_price,\n        total_price: item.unit_price * item.quantity\n      }))\n    };\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError(t('pos.cart_empty'));\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    // Validate customer name for partial payments\n    if (paymentType === 'partial' && (!customerInfo.name || !customerInfo.name.trim())) {\n      setError('Customer name is required for partial payments');\n      setProcessing(false);\n      return;\n    }\n\n    // Validate paid amount\n    const total = calculateTotal();\n    if (paidAmount > total) {\n      setError('Paid amount cannot exceed the total amount');\n      setProcessing(false);\n      return;\n    }\n\n    if (paidAmount < 0) {\n      setError('Paid amount cannot be negative');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const saleData = {\n        sale_type: 'sale',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        paid_amount: paidAmount,\n        items: cart.map(item => {\n          // More robust unit ID extraction\n          let unitId = item.unit_id;\n          if (typeof unitId === 'object' && unitId !== null) {\n            unitId = unitId.id || unitId;\n          }\n          \n          return {\n            product: item.id,\n            quantity: parseFloat(item.quantity),\n            unit: parseInt(unitId),\n            unit_price: parseFloat(item.unit_price),\n            price_mode: item.price_mode || 'standard'\n          };\n        }),\n        packaging_items: packagingCart.map(item => ({\n          product: item.id,\n          quantity: parseFloat(item.quantity),\n          unit: 7, // Use the correct piece unit ID (7) for packaging\n          unit_price: parseFloat(item.unit_price),\n          status: item.status || 'consignation',\n          customer_name: item.customer_name || customerInfo.name,\n          customer_phone: item.customer_phone || customerInfo.phone,\n          notes: item.notes || ''\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/api/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          const completionResponse = await api.post(`/api/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            // Use the improved printing logic for completed sale\n            const printData = preparePrintData(saleNumber, 'completed');\n            await handlePrintReceipt(printData, t('titles.sale_receipt'));\n          }\n      \n          // Clear cart and customer info\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          setPaidAmount(0);\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          // Show success message with packaging transaction info if created\n          let successMessage = `Sale completed successfully! Sale Number: ${saleNumber}`;\n          if (completionResponse.data.packaging_transaction) {\n            const pkgTransaction = completionResponse.data.packaging_transaction;\n            successMessage += `\\n\\nPackaging transaction automatically created:\\nTransaction: ${pkgTransaction.transaction_number}\\nAmount: ${pkgTransaction.total_amount} MGA`;\n          }\n          alert(successMessage);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          setPaidAmount(0);\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          // Use the improved printing logic for pending sale\n          const printData = preparePrintData(saleNumber, 'pending');\n          await handlePrintReceipt(printData, t('titles.sale_receipt'));\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setPackagingCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        setPaidAmount(0);\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(`Pending sale created successfully! Sale Number: ${saleNumber}`);\n      }\n    } catch (err) {\n      // Handle different types of errors\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.data?.detail) {\n        setError(err.response.data.detail);\n      } else if (err.response?.data?.customer_name) {\n        setError(err.response.data.customer_name[0]);\n      } else if (err.response?.data?.paid_amount) {\n        setError(err.response.data.paid_amount[0]);\n      } else {\n        setError('Failed to create sale. Please check the console for details.');\n      }\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setPackagingCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = useCallback((filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = { ...filtersRef.current, [filterType]: value };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  }, []); // No dependencies needed since we use ref\n\n  const clearFilters = useCallback(() => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    \n    // Only fetch products if categories are loaded\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0) {\n      fetchProducts(clearedFilters);\n    }\n  }, [categoriesLoaded, categories.length]);\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products (only for complete sales)\n    if (saleMode === 'complete' && product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => (u.unit?.id || u.unit) === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === (selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit));\n          const unitPrice = getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product);\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>{t('titles.point_of_sale')}</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title={t('alerts.sale_will_be_completed')}\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title={t('alerts.sale_will_be_created_pending')}\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group print-receipt-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle print-receipt-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title={t('alerts.print_receipt_after_sale')}\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title={t('pos.dont_print_receipt')}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                key=\"search-input\"\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder={t('pos.search_products')}\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                alignItems: 'center',\n                marginBottom: '1rem'\n              }}>\n                <h3 style={{ margin: '0', fontSize: '1rem', fontWeight: '600' }}>\n                  Manage Sellable Categories\n                  {categoryUpdating && <span style={{ marginLeft: '0.5rem', color: '#3b82f6' }}>⟳</span>}\n                </h3>\n                <button\n                  onClick={resetAllCategoriesToSellable}\n                  disabled={categoryUpdating}\n                  style={{\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #3b82f6',\n                    cursor: categoryUpdating ? 'not-allowed' : 'pointer',\n                    backgroundColor: categoryUpdating ? '#9ca3af' : '#3b82f6',\n                    color: 'white',\n                    fontWeight: '500',\n                    opacity: categoryUpdating ? 0.6 : 1\n                  }}\n                >\n                  Reset All to Sellable\n                </button>\n              </div>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 && saleMode === 'complete' ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {(() => {\n                      // Find the actual base unit and get its price\n                      const baseUnit = product.compatible_units?.find(u => u.unit.is_base_unit);\n                      if (baseUnit && stockAvailability[product.id]) {\n                        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                        const baseUnitStockInfo = updatedStockInfo?.find(u => u.id === (baseUnit.unit?.id || baseUnit.unit));\n                        if (baseUnitStockInfo) {\n                          return getCurrentUnitPrice(product, baseUnitStockInfo).toFixed(2);\n                        }\n                      }\n                      // Fallback to the original price\n                      return getCurrentPrice(product).toFixed(2);\n                    })()} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit?.id || compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA ({unitStockInfo.available_quantity} available)\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit?.symbol || compatibleUnit.unit_symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit?.id || compatibleUnit.unit} \n                              value={compatibleUnit.unit?.id || compatibleUnit.unit}\n                              disabled={saleMode === 'complete' ? !isAvailable : false}\n                            >\n                              {unitName} ({unitSymbol}) - {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA\n                              {!isAvailable && saleMode === 'complete' ? ' - OUT OF STOCK' : ''}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* Packaging Info - Show for products with packaging */}\n                  {product.has_packaging && product.packaging_price && (\n                    <div className=\"packaging-info\">\n                      <small className=\"packaging-price\">\n                        Packaging: {product.packaging_price} MGA (Auto-added)\n                      </small>\n                    </div>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <div className=\"empty-cart\">\n                <p>Cart is empty</p>\n                <p className=\"empty-cart-hint\">Add items from the product list to start a sale</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-status\">Status</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title={t('alerts.click_to_edit_quantity')}\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-status\">\n                      <span className=\"sales-item-status\">-</span>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title={t('alerts.remove_item')}\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                \n                {/* Packaging Items */}\n                {packagingCart.length > 0 && (\n                  <>\n                    <div className=\"packaging-section-header\">\n                      <h4>Packaging Items (Auto-calculated)</h4>\n                    </div>\n                    {packagingCart.map(item => (\n                      <div key={`packaging-${item.id}`} className=\"cart-item packaging-item\">\n                        <div className=\"item-product\">\n                          <h4>{item.name} (Packaging)</h4>\n                          <p className=\"item-sku\">SKU: {item.sku}</p>\n                          {item.sales_unit_name && (\n                            <p className=\"packaging-source\">\n                              From: {item.quantity} {item.sales_unit_symbol || 'piece'}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"item-unit\">\n                          piece\n                        </div>\n                        <div className=\"item-price\">\n                          {parseFloat(item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-quantity\">\n                          <span className=\"quantity auto-calculated\">\n                            {item.quantity}\n                          </span>\n                          <small className=\"auto-label\">Auto</small>\n                        </div>\n                        <div className=\"item-status\">\n                          <select\n                            value={item.status}\n                            onChange={(e) => updatePackagingStatus(item.id, e.target.value)}\n                            className=\"packaging-status-select\"\n                          >\n                            <option value=\"consignation\">Consigned (Paid)</option>\n                            <option value=\"exchange\">Exchange</option>\n                            <option value=\"due\">Due (Return Required)</option>\n                          </select>\n                        </div>\n                        <div className=\"item-total\">\n                          {(item.quantity * item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-actions\">\n                          <Button\n                            size=\"small\"\n                            variant=\"danger\"\n                            onClick={() => removeFromPackagingCart(item.id)}\n                            title=\"Remove packaging item\"\n                          >\n                            ×\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Items Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row packaging-breakdown\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span>Products Total:</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row total\">\n                  <span>Total (Products Only):</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder={paymentType === 'partial' ? \"Customer Name (Required for Partial Payment)\" : \"Customer Name (Optional)\"}\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className={paymentType === 'partial' && !customerInfo.name ? 'required-field' : ''}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n                \n                <h3>Payment Type</h3>\n                <div className=\"payment-types\">\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"full\"\n                      checked={paymentType === 'full'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Full Payment (100%)</span>\n                  </label>\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"partial\"\n                      checked={paymentType === 'partial'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Partial Payment (0-99.99%)</span>\n                  </label>\n                </div>\n                \n                {paymentType === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateTotal()}\n                      value={paidAmount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setPaidAmount(value);\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                    />\n                    <small>Products Total: ${calculateTotal().toFixed(2)} | Remaining: ${(calculateTotal() - (paidAmount || 0)).toFixed(2)}</small>\n                  </div>\n                )}\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                {/* Print Preview Button - Using the improved printing logic */}\n                <Button\n                  variant=\"outline\"\n                  size=\"large\"\n                  onClick={handlePrintPreview}\n                  className=\"print-preview-btn\"\n                >\n                  🖨️ Print Preview\n                </Button>\n                \n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? t('pos.complete_sale') : t('pos.create_pending_sale')}\n                  {printReceipt && t('pos.print_receipt')}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}