{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{useApi}from'../hooks/useApi';import Button from'../components/Button';import Table from'../components/Table';import'./PrinterSettings.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PrinterSettings=()=>{const{user}=useAuth();const api=useApi();const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[printers,setPrinters]=useState([]);const[selectedPrinter,setSelectedPrinter]=useState(null);const[showAddModal,setShowAddModal]=useState(false);const[showTestModal,setShowTestModal]=useState(false);const[formData,setFormData]=useState({name:'',type:'network',// network, local, usb\nip_address:'',port:'9100',model:'',location:'',is_default:false,is_active:true});useEffect(()=>{if(user&&user.role==='admin'){fetchPrinters();}},[user]);const fetchPrinters=async()=>{try{setLoading(true);// For now, we'll simulate printer data since we don't have a backend endpoint\n// In a real implementation, this would call an API endpoint\nconst mockPrinters=[{id:1,name:'Office Printer HP',type:'network',ip_address:'192.168.1.100',port:'9100',model:'HP LaserJet Pro',location:'Office',is_default:true,is_active:true,status:'online',last_used:new Date().toISOString()},{id:2,name:'Receipt Printer',type:'usb',ip_address:'',port:'',model:'Epson TM-T20',location:'Cash Register',is_default:false,is_active:true,status:'online',last_used:new Date(Date.now()-3600000).toISOString()},{id:3,name:'Warehouse Printer',type:'network',ip_address:'192.168.1.101',port:'9100',model:'Canon PIXMA',location:'Warehouse',is_default:false,is_active:false,status:'offline',last_used:new Date(Date.now()-86400000).toISOString()}];setPrinters(mockPrinters);setSelectedPrinter(mockPrinters.find(p=>p.is_default)||mockPrinters[0]);}catch(err){setError('Failed to fetch printers');console.error('Fetch printers error:',err);}finally{setLoading(false);}};const handleAddPrinter=async()=>{try{// In a real implementation, this would call an API endpoint\nconst newPrinter=_objectSpread(_objectSpread({id:Date.now()},formData),{},{status:'online',last_used:new Date().toISOString()});setPrinters(prev=>[...prev,newPrinter]);setShowAddModal(false);setFormData({name:'',type:'network',ip_address:'',port:'9100',model:'',location:'',is_default:false,is_active:true});}catch(err){setError('Failed to add printer');console.error('Add printer error:',err);}};const handleUpdatePrinter=async(printerId,updates)=>{try{setPrinters(prev=>prev.map(printer=>printer.id===printerId?_objectSpread(_objectSpread({},printer),updates):printer));}catch(err){setError('Failed to update printer');console.error('Update printer error:',err);}};const handleDeletePrinter=async printerId=>{if(window.confirm('Are you sure you want to delete this printer?')){try{setPrinters(prev=>prev.filter(printer=>printer.id!==printerId));if(selectedPrinter&&selectedPrinter.id===printerId){setSelectedPrinter(printers.find(p=>p.id!==printerId)||null);}}catch(err){setError('Failed to delete printer');console.error('Delete printer error:',err);}}};const handleTestPrint=async printer=>{try{setShowTestModal(false);// Create a test print document\nconst testContent=\"\\n        <!DOCTYPE html>\\n        <html>\\n        <head>\\n          <title>Printer Test</title>\\n          <style>\\n            body { font-family: Arial, sans-serif; margin: 20px; }\\n            .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 10px; }\\n            .info { margin: 20px 0; }\\n            .success { color: green; font-weight: bold; }\\n          </style>\\n        </head>\\n        <body>\\n          <div class=\\\"header\\\">\\n            <h1>Printer Test Document</h1>\\n          </div>\\n          <div class=\\\"info\\\">\\n            <p><strong>Printer:</strong> \".concat(printer.name,\"</p>\\n            <p><strong>Type:</strong> \").concat(printer.type,\"</p>\\n            <p><strong>Model:</strong> \").concat(printer.model,\"</p>\\n            <p><strong>Location:</strong> \").concat(printer.location,\"</p>\\n            <p><strong>Test Date:</strong> \").concat(new Date().toLocaleString(),\"</p>\\n          </div>\\n          <div class=\\\"success\\\">\\n            <p>\\u2705 Printer test successful!</p>\\n            <p>This document was sent to: \").concat(printer.name,\"</p>\\n          </div>\\n        </body>\\n        </html>\\n      \");const printWindow=window.open('','_blank','width=600,height=400');printWindow.document.write(testContent);printWindow.document.close();printWindow.onload=()=>{printWindow.focus();printWindow.print();printWindow.close();};// Update last used time\nhandleUpdatePrinter(printer.id,{last_used:new Date().toISOString()});}catch(err){setError('Failed to test print');console.error('Test print error:',err);}};const scanForPrinters=async()=>{try{setLoading(true);// Simulate network printer scanning\nawait new Promise(resolve=>setTimeout(resolve,2000));const foundPrinters=[{id:Date.now()+1,name:'Network Printer 1',type:'network',ip_address:'192.168.1.102',port:'9100',model:'Unknown',location:'Network',is_default:false,is_active:true,status:'online',last_used:new Date().toISOString()}];setPrinters(prev=>[...prev,...foundPrinters]);alert(\"Found \".concat(foundPrinters.length,\" new printer(s) on the network\"));}catch(err){setError('Failed to scan for printers');console.error('Scan printers error:',err);}finally{setLoading(false);}};const printerColumns=[{key:'name',label:'Name'},{key:'type',label:'Type'},{key:'model',label:'Model'},{key:'location',label:'Location'},{key:'status',label:'Status',render:value=>/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(value),children:value})},{key:'is_default',label:'Default',render:value=>value?'Yes':'No'},{key:'is_active',label:'Active',render:value=>value?'Yes':'No'},{key:'actions',label:'Actions',render:(_,item)=>/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>handleTestPrint(item),children:\"Test\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>{setFormData({name:item.name,type:item.type,ip_address:item.ip_address,port:item.port,model:item.model,location:item.location,is_default:item.is_default,is_active:item.is_active});setShowAddModal(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>handleDeletePrinter(item.id),children:\"Delete\"})]})}];if((user===null||user===void 0?void 0:user.role)!=='admin'){return/*#__PURE__*/_jsx(\"div\",{className:\"printer-settings\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"access-denied\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You don't have permission to access printer settings.\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"printer-settings\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Printer Settings\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Manage network and local printers for the system\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[error,/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(''),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"printer-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowAddModal(true),children:\"Add Printer\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:scanForPrinters,disabled:loading,children:loading?'Scanning...':'Scan Network'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"selected-printer\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Default Printer:\"}),/*#__PURE__*/_jsxs(\"select\",{value:(selectedPrinter===null||selectedPrinter===void 0?void 0:selectedPrinter.id)||'',onChange:e=>{const printer=printers.find(p=>p.id===parseInt(e.target.value));setSelectedPrinter(printer);if(printer){handleUpdatePrinter(printer.id,{is_default:true});// Remove default from other printers\nprinters.forEach(p=>{if(p.id!==printer.id&&p.is_default){handleUpdatePrinter(p.id,{is_default:false});}});}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Default Printer\"}),printers.filter(p=>p.is_active).map(printer=>/*#__PURE__*/_jsxs(\"option\",{value:printer.id,children:[printer.name,\" (\",printer.location,\")\"]},printer.id))]})]})]}),/*#__PURE__*/_jsx(Table,{data:printers,columns:printerColumns,loading:loading,emptyMessage:\"No printers found\"}),showAddModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add/Edit Printer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAddModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Printer Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.name,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{name:e.target.value})),placeholder:\"Enter printer name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.type,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{type:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"network\",children:\"Network Printer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"usb\",children:\"USB Printer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"local\",children:\"Local Printer\"})]})]}),formData.type==='network'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"IP Address:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.ip_address,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{ip_address:e.target.value})),placeholder:\"192.168.1.100\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Port:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.port,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{port:e.target.value})),placeholder:\"9100\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Model:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.model,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{model:e.target.value})),placeholder:\"Enter printer model\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Location:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.location,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{location:e.target.value})),placeholder:\"Enter printer location\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:formData.is_default,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{is_default:e.target.checked}))}),\"Set as default printer\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:formData.is_active,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{is_active:e.target.checked}))}),\"Active\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:()=>setShowAddModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleAddPrinter,children:\"Save Printer\"})]})]})})]});};export default PrinterSettings;","map":{"version":3,"names":["React","useState","useEffect","useAuth","useApi","Button","Table","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PrinterSettings","user","api","loading","setLoading","error","setError","printers","setPrinters","selectedPrinter","setSelectedPrinter","showAddModal","setShowAddModal","showTestModal","setShowTestModal","formData","setFormData","name","type","ip_address","port","model","location","is_default","is_active","role","fetchPrinters","mockPrinters","id","status","last_used","Date","toISOString","now","find","p","err","console","handleAddPrinter","newPrinter","_objectSpread","prev","handleUpdatePrinter","printerId","updates","map","printer","handleDeletePrinter","window","confirm","filter","handleTestPrint","testContent","concat","toLocaleString","printWindow","open","document","write","close","onload","focus","print","scanForPrinters","Promise","resolve","setTimeout","foundPrinters","alert","length","printerColumns","key","label","render","value","className","children","_","item","size","variant","onClick","disabled","onChange","e","parseInt","target","forEach","data","columns","emptyMessage","placeholder","checked"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PrinterSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useApi } from '../hooks/useApi';\nimport Button from '../components/Button';\nimport Table from '../components/Table';\nimport './PrinterSettings.css';\n\nconst PrinterSettings = () => {\n  const { user } = useAuth();\n  const api = useApi();\n  \n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [printers, setPrinters] = useState([]);\n  const [selectedPrinter, setSelectedPrinter] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showTestModal, setShowTestModal] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    type: 'network', // network, local, usb\n    ip_address: '',\n    port: '9100',\n    model: '',\n    location: '',\n    is_default: false,\n    is_active: true\n  });\n\n  useEffect(() => {\n    if (user && user.role === 'admin') {\n      fetchPrinters();\n    }\n  }, [user]);\n\n  const fetchPrinters = async () => {\n    try {\n      setLoading(true);\n      // For now, we'll simulate printer data since we don't have a backend endpoint\n      // In a real implementation, this would call an API endpoint\n      const mockPrinters = [\n        {\n          id: 1,\n          name: 'Office Printer HP',\n          type: 'network',\n          ip_address: '192.168.1.100',\n          port: '9100',\n          model: 'HP LaserJet Pro',\n          location: 'Office',\n          is_default: true,\n          is_active: true,\n          status: 'online',\n          last_used: new Date().toISOString()\n        },\n        {\n          id: 2,\n          name: 'Receipt Printer',\n          type: 'usb',\n          ip_address: '',\n          port: '',\n          model: 'Epson TM-T20',\n          location: 'Cash Register',\n          is_default: false,\n          is_active: true,\n          status: 'online',\n          last_used: new Date(Date.now() - 3600000).toISOString()\n        },\n        {\n          id: 3,\n          name: 'Warehouse Printer',\n          type: 'network',\n          ip_address: '192.168.1.101',\n          port: '9100',\n          model: 'Canon PIXMA',\n          location: 'Warehouse',\n          is_default: false,\n          is_active: false,\n          status: 'offline',\n          last_used: new Date(Date.now() - 86400000).toISOString()\n        }\n      ];\n      \n      setPrinters(mockPrinters);\n      setSelectedPrinter(mockPrinters.find(p => p.is_default) || mockPrinters[0]);\n    } catch (err) {\n      setError('Failed to fetch printers');\n      console.error('Fetch printers error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddPrinter = async () => {\n    try {\n      // In a real implementation, this would call an API endpoint\n      const newPrinter = {\n        id: Date.now(),\n        ...formData,\n        status: 'online',\n        last_used: new Date().toISOString()\n      };\n      \n      setPrinters(prev => [...prev, newPrinter]);\n      setShowAddModal(false);\n      setFormData({\n        name: '',\n        type: 'network',\n        ip_address: '',\n        port: '9100',\n        model: '',\n        location: '',\n        is_default: false,\n        is_active: true\n      });\n    } catch (err) {\n      setError('Failed to add printer');\n      console.error('Add printer error:', err);\n    }\n  };\n\n  const handleUpdatePrinter = async (printerId, updates) => {\n    try {\n      setPrinters(prev => prev.map(printer => \n        printer.id === printerId ? { ...printer, ...updates } : printer\n      ));\n    } catch (err) {\n      setError('Failed to update printer');\n      console.error('Update printer error:', err);\n    }\n  };\n\n  const handleDeletePrinter = async (printerId) => {\n    if (window.confirm('Are you sure you want to delete this printer?')) {\n      try {\n        setPrinters(prev => prev.filter(printer => printer.id !== printerId));\n        if (selectedPrinter && selectedPrinter.id === printerId) {\n          setSelectedPrinter(printers.find(p => p.id !== printerId) || null);\n        }\n      } catch (err) {\n        setError('Failed to delete printer');\n        console.error('Delete printer error:', err);\n      }\n    }\n  };\n\n  const handleTestPrint = async (printer) => {\n    try {\n      setShowTestModal(false);\n      \n      // Create a test print document\n      const testContent = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Printer Test</title>\n          <style>\n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 10px; }\n            .info { margin: 20px 0; }\n            .success { color: green; font-weight: bold; }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Printer Test Document</h1>\n          </div>\n          <div class=\"info\">\n            <p><strong>Printer:</strong> ${printer.name}</p>\n            <p><strong>Type:</strong> ${printer.type}</p>\n            <p><strong>Model:</strong> ${printer.model}</p>\n            <p><strong>Location:</strong> ${printer.location}</p>\n            <p><strong>Test Date:</strong> ${new Date().toLocaleString()}</p>\n          </div>\n          <div class=\"success\">\n            <p>✅ Printer test successful!</p>\n            <p>This document was sent to: ${printer.name}</p>\n          </div>\n        </body>\n        </html>\n      `;\n      \n      const printWindow = window.open('', '_blank', 'width=600,height=400');\n      printWindow.document.write(testContent);\n      printWindow.document.close();\n      \n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        printWindow.close();\n      };\n      \n      // Update last used time\n      handleUpdatePrinter(printer.id, { last_used: new Date().toISOString() });\n      \n    } catch (err) {\n      setError('Failed to test print');\n      console.error('Test print error:', err);\n    }\n  };\n\n  const scanForPrinters = async () => {\n    try {\n      setLoading(true);\n      // Simulate network printer scanning\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const foundPrinters = [\n        {\n          id: Date.now() + 1,\n          name: 'Network Printer 1',\n          type: 'network',\n          ip_address: '192.168.1.102',\n          port: '9100',\n          model: 'Unknown',\n          location: 'Network',\n          is_default: false,\n          is_active: true,\n          status: 'online',\n          last_used: new Date().toISOString()\n        }\n      ];\n      \n      setPrinters(prev => [...prev, ...foundPrinters]);\n      alert(`Found ${foundPrinters.length} new printer(s) on the network`);\n    } catch (err) {\n      setError('Failed to scan for printers');\n      console.error('Scan printers error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const printerColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'type', label: 'Type' },\n    { key: 'model', label: 'Model' },\n    { key: 'location', label: 'Location' },\n    { key: 'status', label: 'Status', render: (value) => (\n      <span className={`status-badge ${value}`}>{value}</span>\n    )},\n    { key: 'is_default', label: 'Default', render: (value) => value ? 'Yes' : 'No' },\n    { key: 'is_active', label: 'Active', render: (value) => value ? 'Yes' : 'No' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button \n            size=\"small\" \n            variant=\"outline\" \n            onClick={() => handleTestPrint(item)}\n          >\n            Test\n          </Button>\n          <Button \n            size=\"small\" \n            variant=\"outline\" \n            onClick={() => {\n              setFormData({\n                name: item.name,\n                type: item.type,\n                ip_address: item.ip_address,\n                port: item.port,\n                model: item.model,\n                location: item.location,\n                is_default: item.is_default,\n                is_active: item.is_active\n              });\n              setShowAddModal(true);\n            }}\n          >\n            Edit\n          </Button>\n          <Button \n            size=\"small\" \n            variant=\"danger\" \n            onClick={() => handleDeletePrinter(item.id)}\n          >\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  if (user?.role !== 'admin') {\n    return (\n      <div className=\"printer-settings\">\n        <div className=\"access-denied\">\n          <h2>Access Denied</h2>\n          <p>You don't have permission to access printer settings.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"printer-settings\">\n      <div className=\"page-header\">\n        <h1>Printer Settings</h1>\n        <p>Manage network and local printers for the system</p>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError('')}>×</button>\n        </div>\n      )}\n\n      <div className=\"printer-controls\">\n        <div className=\"control-group\">\n          <Button onClick={() => setShowAddModal(true)}>\n            Add Printer\n          </Button>\n          <Button variant=\"outline\" onClick={scanForPrinters} disabled={loading}>\n            {loading ? 'Scanning...' : 'Scan Network'}\n          </Button>\n        </div>\n        \n        <div className=\"selected-printer\">\n          <label>Default Printer:</label>\n          <select \n            value={selectedPrinter?.id || ''} \n            onChange={(e) => {\n              const printer = printers.find(p => p.id === parseInt(e.target.value));\n              setSelectedPrinter(printer);\n              if (printer) {\n                handleUpdatePrinter(printer.id, { is_default: true });\n                // Remove default from other printers\n                printers.forEach(p => {\n                  if (p.id !== printer.id && p.is_default) {\n                    handleUpdatePrinter(p.id, { is_default: false });\n                  }\n                });\n              }\n            }}\n          >\n            <option value=\"\">Select Default Printer</option>\n            {printers.filter(p => p.is_active).map(printer => (\n              <option key={printer.id} value={printer.id}>\n                {printer.name} ({printer.location})\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <Table\n        data={printers}\n        columns={printerColumns}\n        loading={loading}\n        emptyMessage=\"No printers found\"\n      />\n\n      {/* Add/Edit Printer Modal */}\n      {showAddModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>Add/Edit Printer</h3>\n              <button onClick={() => setShowAddModal(false)}>×</button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label>Printer Name:</label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => setFormData({...formData, name: e.target.value})}\n                  placeholder=\"Enter printer name\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Type:</label>\n                <select\n                  value={formData.type}\n                  onChange={(e) => setFormData({...formData, type: e.target.value})}\n                >\n                  <option value=\"network\">Network Printer</option>\n                  <option value=\"usb\">USB Printer</option>\n                  <option value=\"local\">Local Printer</option>\n                </select>\n              </div>\n              \n              {formData.type === 'network' && (\n                <>\n                  <div className=\"form-group\">\n                    <label>IP Address:</label>\n                    <input\n                      type=\"text\"\n                      value={formData.ip_address}\n                      onChange={(e) => setFormData({...formData, ip_address: e.target.value})}\n                      placeholder=\"192.168.1.100\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Port:</label>\n                    <input\n                      type=\"text\"\n                      value={formData.port}\n                      onChange={(e) => setFormData({...formData, port: e.target.value})}\n                      placeholder=\"9100\"\n                    />\n                  </div>\n                </>\n              )}\n              \n              <div className=\"form-group\">\n                <label>Model:</label>\n                <input\n                  type=\"text\"\n                  value={formData.model}\n                  onChange={(e) => setFormData({...formData, model: e.target.value})}\n                  placeholder=\"Enter printer model\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Location:</label>\n                <input\n                  type=\"text\"\n                  value={formData.location}\n                  onChange={(e) => setFormData({...formData, location: e.target.value})}\n                  placeholder=\"Enter printer location\"\n                />\n              </div>\n              \n              <div className=\"form-group checkbox-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.is_default}\n                    onChange={(e) => setFormData({...formData, is_default: e.target.checked})}\n                  />\n                  Set as default printer\n                </label>\n              </div>\n              \n              <div className=\"form-group checkbox-group\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.is_active}\n                    onChange={(e) => setFormData({...formData, is_active: e.target.checked})}\n                  />\n                  Active\n                </label>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <Button variant=\"outline\" onClick={() => setShowAddModal(false)}>\n                Cancel\n              </Button>\n              <Button onClick={handleAddPrinter}>\n                Save Printer\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PrinterSettings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}