{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/SalesManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport PrintButton from '../components/PrintButton';\nimport './SalesManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SalesManagement = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth();\n  const [sales, setSales] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [selectedSale, setSelectedSale] = useState(null);\n  const [loadingSale, setLoadingSale] = useState(false);\n  const [deleteFilters, setDeleteFilters] = useState({\n    customer_name: '',\n    start_date: '',\n    end_date: '',\n    status: 'completed'\n  });\n  const [editFormData, setEditFormData] = useState({\n    items: [],\n    payment_type: 'full',\n    paid_amount: 0\n  });\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({\n    status: '',\n    customer_name: '',\n    start_date: '',\n    end_date: ''\n  });\n  const fetchSales = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const params = new URLSearchParams();\n      if (filters.status) params.append('status', filters.status);\n      if (filters.customer_name) params.append('search', filters.customer_name);\n      if (filters.start_date) params.append('created_at__date__gte', filters.start_date);\n      if (filters.end_date) params.append('created_at__date__lte', filters.end_date);\n      const response = await api.get(`/sales/?${params.toString()}`);\n      const salesData = response.data.results || response.data;\n\n      // Ensure salesData is always an array\n      if (!Array.isArray(salesData)) {\n        console.error('Sales data is not an array:', salesData);\n        setSales([]);\n        return;\n      }\n      setSales(salesData);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch sales: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n      console.error('Sales fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n  useEffect(() => {\n    fetchSales();\n    fetchProducts();\n  }, [fetchSales]);\n  const fetchProducts = async () => {\n    try {\n      const response = await api.get('/api/products/?is_active=true');\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      console.error('Products fetch error:', err);\n    }\n  };\n  const handleDeleteSales = async () => {\n    try {\n      setError('');\n      const response = await api.delete('/api/sales/delete/', {\n        data: deleteFilters\n      });\n      alert(`Successfully deleted ${response.data.deleted_count} sales`);\n      setShowDeleteModal(false);\n      setDeleteFilters({\n        customer_name: '',\n        start_date: '',\n        end_date: '',\n        status: 'completed'\n      });\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to delete sales');\n      console.error('Delete sales error:', err);\n    }\n  };\n  const handleEditSale = async () => {\n    try {\n      setError('');\n\n      // Prepare the data to send\n      const updateData = {\n        items: editFormData.items,\n        paid_amount: editFormData.paid_amount\n      };\n      await api.put(`/sales/${selectedSale.id}/edit/`, updateData);\n      alert('Sale updated successfully');\n      setShowEditModal(false);\n      setSelectedSale(null);\n      setEditFormData({\n        items: [],\n        payment_type: 'full',\n        paid_amount: 0\n      });\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Failed to update sale');\n      console.error('Edit sale error:', err);\n    }\n  };\n  const handleMakePayment = async (saleId, paymentAmount) => {\n    try {\n      setError('');\n      await api.post(`/sales/${saleId}/payment/`, {\n        payment_amount: paymentAmount,\n        is_full_payment: true\n      });\n      alert('Payment processed successfully');\n      setShowPaymentModal(false);\n      fetchSales();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Failed to process payment');\n      console.error('Payment error:', err);\n    }\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDeleteFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDeleteFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const clearFilters = () => {\n    setFilters({\n      status: '',\n      customer_name: '',\n      start_date: '',\n      end_date: ''\n    });\n  };\n  const openEditModal = async sale => {\n    try {\n      setLoadingSale(true);\n      setError('');\n\n      // Fetch full sale data including items\n      const response = await api.get(`/sales/${sale.id}/`);\n      const fullSale = response.data;\n      setSelectedSale(fullSale);\n      setEditFormData({\n        items: fullSale.items.map(item => {\n          var _item$unit;\n          return {\n            product: item.product,\n            quantity: item.quantity,\n            unit: ((_item$unit = item.unit) === null || _item$unit === void 0 ? void 0 : _item$unit.id) || item.unit || '',\n            unit_price: item.unit_price,\n            price_mode: item.price_mode || 'standard'\n          };\n        }),\n        payment_type: fullSale.payment_status === 'paid' ? 'full' : fullSale.payment_status === 'partial' ? 'partial' : 'full',\n        paid_amount: fullSale.paid_amount || 0\n      });\n      setShowEditModal(true);\n    } catch (err) {\n      setError('Failed to load sale details');\n      console.error('Sale fetch error:', err);\n    } finally {\n      setLoadingSale(false);\n    }\n  };\n  const cancelSale = async saleId => {\n    try {\n      setError('');\n      const response = await api.post(`/sales/${saleId}/cancel/`);\n      if (response.data.message === 'Sale cancelled and stock restored') {\n        // Show refund information for completed sales\n        if (response.data.refund_amount && response.data.refund_amount > 0) {\n          alert(`Sale cancelled and stock restored successfully!\\n\\nRefund Information:\\nOriginal Sale: ${response.data.original_sale_number}\\nRefund Amount: $${response.data.refund_amount.toFixed(2)}\\n\\nPlease process the refund to the customer.`);\n        } else {\n          alert('Sale cancelled and stock restored successfully');\n        }\n      } else {\n        alert('Sale cancelled successfully');\n      }\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || 'Failed to cancel sale');\n      console.error('Cancel sale error:', err);\n    }\n  };\n  const handlePaymentMethodChange = async (saleId, newPaymentMethod) => {\n    try {\n      setError('');\n      await api.patch(`/sales/${saleId}/payment-method/`, {\n        payment_method: newPaymentMethod\n      });\n\n      // Update the local state to reflect the change immediately\n      setSales(prevSales => prevSales.map(sale => sale.id === saleId ? {\n        ...sale,\n        payment_method: newPaymentMethod\n      } : sale));\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.error) || 'Failed to update payment method');\n      console.error('Payment method update error:', err);\n    }\n  };\n  const addEditItem = () => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        product: '',\n        quantity: 1,\n        unit: '',\n        unit_price: 0\n      }]\n    }));\n  };\n  const removeEditItem = index => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: prev.items.filter((_, i) => i !== index)\n    }));\n  };\n  const updateEditItem = (index, field, value) => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: prev.items.map((item, i) => i === index ? {\n        ...item,\n        [field]: value\n      } : item)\n    }));\n  };\n  const validateEditSale = () => {\n    // Require at least 1 item for all sales (including returns)\n    if (!editFormData.items || editFormData.items.length === 0) {\n      return false;\n    }\n\n    // Check if any item has invalid quantity (allow quantity = 0)\n    for (const item of editFormData.items) {\n      var _selectedSale$items;\n      const quantity = parseFloat(item.quantity);\n      if (isNaN(quantity) || quantity < 0) {\n        return false;\n      }\n\n      // Find the corresponding original item to check stock availability\n      const originalItem = selectedSale === null || selectedSale === void 0 ? void 0 : (_selectedSale$items = selectedSale.items) === null || _selectedSale$items === void 0 ? void 0 : _selectedSale$items.find(original => original.product === item.product && original.unit === item.unit && original.price_mode === item.price_mode);\n      if (originalItem) {\n        // Calculate the quantity difference\n        const originalQuantity = parseFloat(originalItem.quantity);\n        const quantityDiff = quantity - originalQuantity;\n\n        // If increasing quantity, check stock availability\n        if (quantityDiff > 0) {\n          // Find the product to get current stock\n          const product = products.find(p => p.id === parseInt(item.product));\n          if (product) {\n            // Convert quantity difference to base units for stock check\n            // This is a simplified check - in a real scenario, you'd need proper unit conversion\n            const stockNeeded = quantityDiff;\n            if (product.stock_quantity < stockNeeded) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    // Validate payment logic\n    if (editFormData.payment_type === 'partial') {\n      const total = calculateEditTotal();\n      const paidAmount = parseFloat(editFormData.paid_amount) || 0;\n\n      // For partial payment, paid amount must be less than total and greater than 0\n      if (paidAmount >= total || paidAmount <= 0) {\n        return false;\n      }\n    } else if (editFormData.payment_type === 'full') {\n      const total = calculateEditTotal();\n      const paidAmount = parseFloat(editFormData.paid_amount) || 0;\n\n      // For full payment, paid amount must equal total\n      if (paidAmount !== total) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const getProductPrice = productId => {\n    const product = products.find(p => p.id === parseInt(productId));\n    return product ? product.price : 0;\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  const getStatusBadge = status => {\n    const statusClasses = {\n      pending: 'status-pending',\n      completed: 'status-completed',\n      cancelled: 'status-cancelled',\n      returned: 'status-returned',\n      refunded: 'status-refunded'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `status-badge ${statusClasses[status] || ''}`,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 12\n    }, this);\n  };\n  const getPaymentStatusBadge = paymentStatus => {\n    const paymentClasses = {\n      pending: 'payment-pending',\n      partial: 'payment-partial',\n      paid: 'payment-paid'\n    };\n    const paymentLabels = {\n      pending: 'Unpaid',\n      partial: 'Partial',\n      paid: 'Paid'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `payment-badge ${paymentClasses[paymentStatus] || ''}`,\n      children: paymentLabels[paymentStatus] || paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 12\n    }, this);\n  };\n  const calculateEditTotal = () => {\n    return editFormData.items.reduce((total, item) => {\n      return total + parseFloat(item.unit_price || 0) * parseFloat(item.quantity || 0);\n    }, 0);\n  };\n\n  // Update paid_amount when payment_type changes\n  useEffect(() => {\n    if (editFormData.payment_type === 'full') {\n      setEditFormData(prev => ({\n        ...prev,\n        paid_amount: calculateEditTotal()\n      }));\n    }\n  }, [editFormData.payment_type, editFormData.items]);\n\n  // Check if user has permission to manage sales\n  const canManageSales = (user === null || user === void 0 ? void 0 : user.role) === 'admin' || (user === null || user === void 0 ? void 0 : user.role) === 'manager';\n  if (!canManageSales) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sales-management\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"access-denied\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You don't have permission to manage sales.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('titles.sales_management')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(PrintButton, {\n          data: {\n            ...sales,\n            user_name: (user === null || user === void 0 ? void 0 : user.username) || t('app.unknown_user'),\n            user_id: (user === null || user === void 0 ? void 0 : user.id) || 'unknown',\n            print_timestamp: new Date().toISOString(),\n            print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n          },\n          title: t('titles.sales_management_report'),\n          type: \"sales_history\",\n          printText: t('buttons.print_sales_report'),\n          className: \"print-sales-report-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => setShowDeleteModal(true),\n          children: \"Delete Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(''),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"status\",\n            value: filters.status,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cancelled\",\n              children: \"Cancelled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"returned\",\n              children: \"Returned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"customer_name\",\n            value: filters.customer_name,\n            onChange: handleFilterChange,\n            placeholder: t('forms.search_by_customer_name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"start_date\",\n            value: filters.start_date,\n            onChange: handleFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"end_date\",\n            value: filters.end_date,\n            onChange: handleFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-actions\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: clearFilters,\n          children: \"Clear Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading sales...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        data: sales,\n        columns: [{\n          key: 'sale_number',\n          header: t('table_headers.sale_number'),\n          render: (value, row) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sale-number\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 19\n          }, this)\n        }, {\n          key: 'customer_name',\n          header: t('table_headers.customer'),\n          render: value => value || 'N/A'\n        }, {\n          key: 'status',\n          header: t('table_headers.status'),\n          render: (value, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sale-status\",\n              children: getStatusBadge(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 19\n          }, this)\n        }, {\n          key: 'payment_status',\n          header: t('table_headers.payment'),\n          render: (value, row) => {\n            const paymentClasses = {\n              'pending': 'payment-pending',\n              'partial': 'payment-partial',\n              'paid': 'payment-paid'\n            };\n            const paymentLabels = {\n              'pending': t('status_labels.pending'),\n              'partial': t('status_labels.partial'),\n              'paid': t('status_labels.paid')\n            };\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `payment-badge ${paymentClasses[value] || ''}`,\n              children: paymentLabels[value] || value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 26\n            }, this);\n          }\n        }, {\n          key: 'items',\n          header: t('table_headers.items'),\n          render: (items, row) => {\n            if (!items || items.length === 0) {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"no-items\",\n                children: \"No items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 28\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sale-items\",\n              children: [items.slice(0, 2).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sale-item-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-name\",\n                  children: [item.product_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `price-mode-badge ${item.price_mode || 'standard'}`,\n                    children: item.price_mode === 'wholesale' ? 'WS' : 'STD'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"item-details\",\n                  children: [item.quantity_display || item.quantity, \" \", item.unit_symbol || 'pcs', \" \\xD7 \", formatCurrency(item.unit_price)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 25\n              }, this)), items.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"more-items\",\n                children: [\"+\", items.length - 2, \" more items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 21\n            }, this);\n          }\n        }, {\n          key: 'total_amount',\n          header: t('table_headers.total_amount'),\n          render: (value, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-amount\",\n              children: formatCurrency(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 19\n          }, this)\n        }, {\n          key: 'created_at',\n          header: t('table_headers.date'),\n          render: value => formatDate(value)\n        }, {\n          key: 'sold_by_name',\n          header: t('table_headers.sold_by'),\n          render: value => value || 'N/A'\n        }, {\n          key: 'payment_method',\n          header: t('table_headers.payment_method'),\n          render: (value, row) => {\n            // For pending sales, make payment method editable\n            if (row.status === 'pending') {\n              return /*#__PURE__*/_jsxDEV(\"select\", {\n                value: value || 'cash',\n                onChange: e => handlePaymentMethodChange(row.id, e.target.value),\n                className: \"payment-method-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cash\",\n                  children: \"Cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"card\",\n                  children: \"Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"mobile_money\",\n                  children: \"Mobile Money\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bank_transfer\",\n                  children: \"Bank Transfer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 23\n              }, this);\n            }\n            // For other sales, just display the payment method\n            const methodLabels = {\n              'cash': t('payment_methods.cash'),\n              'card': t('payment_methods.card'),\n              'mobile_money': t('payment_methods.mobile_money'),\n              'bank_transfer': t('payment_methods.bank_transfer')\n            };\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"payment-method-display\",\n              children: methodLabels[value] || value || 'Cash'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 26\n            }, this);\n          }\n        }, {\n          key: 'paid_amount',\n          header: t('table_headers.paid_amount'),\n          render: (value, row) => {\n            const paidAmount = parseFloat(value) || 0;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-amount-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"paid-amount\",\n                children: formatCurrency(paidAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 21\n            }, this);\n          }\n        }, {\n          key: 'actions',\n          header: t('table_headers.actions'),\n          render: (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(PrintButton, {\n              data: {\n                ...row,\n                user_name: (user === null || user === void 0 ? void 0 : user.username) || t('app.unknown_user'),\n                user_id: (user === null || user === void 0 ? void 0 : user.id) || 'unknown',\n                print_timestamp: new Date().toISOString(),\n                print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n              },\n              title: t('titles.sale_receipt'),\n              type: \"sale\",\n              printText: t('buttons.print'),\n              className: \"print-sale-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 21\n            }, this), !(row.status === 'completed' && row.payment_status === 'paid') && row.status !== 'refunded' && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"small\",\n              onClick: () => openEditModal(row),\n              loading: loadingSale,\n              disabled: loadingSale,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 23\n            }, this), (row.status === 'pending' || row.status === 'completed') && row.status !== 'refunded' && row.sale_type !== 'return' && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              size: \"small\",\n              onClick: () => {\n                if (window.confirm(`Are you sure you want to cancel this ${row.status} sale?`)) {\n                  cancelSale(row.id);\n                }\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 19\n          }, this)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delete Sales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setShowDeleteModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select criteria to delete sales:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Customer Name (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"customer_name\",\n              value: deleteFilters.customer_name,\n              onChange: handleDeleteFilterChange,\n              placeholder: t('forms.leave_empty_to_delete_all')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"start_date\",\n              value: deleteFilters.start_date,\n              onChange: handleDeleteFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"end_date\",\n              value: deleteFilters.end_date,\n              onChange: handleDeleteFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              value: deleteFilters.status,\n              onChange: handleDeleteFilterChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cancelled\",\n                children: \"Cancelled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"returned\",\n                children: \"Returned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"refunded\",\n                children: \"Refunded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setShowDeleteModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: handleDeleteSales,\n              children: \"Delete Sales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content large-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [(selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid' ? t('modals.view_sale') : t('modals.edit_sale'), \": \", (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.sale_number) || t('app.loading'), (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"view-only-badge\",\n              children: t('modals.view_only')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setShowEditModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: loadingSale ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading sale details...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this) : selectedSale ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-sale-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Customer:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 24\n                }, this), \" \", selectedSale.customer_name || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 24\n                }, this), \" \", formatDate(selectedSale.created_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 24\n                }, this), \" \", getStatusBadge(selectedSale.status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Payment Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 24\n                }, this), \" \", getPaymentStatusBadge(selectedSale.payment_status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Total Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 24\n                }, this), \" $\", selectedSale.total_amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Paid Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 24\n                }, this), \" $\", selectedSale.paid_amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 21\n              }, this), selectedSale.payment_status === 'partial' && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Remaining Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 26\n                }, this), \" $\", selectedSale.remaining_amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 23\n              }, this), selectedSale.due_date && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Due Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 26\n                }, this), \" \", formatDate(selectedSale.due_date)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Sale Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-items\",\n              children: editFormData.items.map((item, index) => {\n                var _selectedSale$items2;\n                // Get the original item from the sale to display product and unit info\n                const originalItem = selectedSale === null || selectedSale === void 0 ? void 0 : (_selectedSale$items2 = selectedSale.items) === null || _selectedSale$items2 === void 0 ? void 0 : _selectedSale$items2.find(origItem => origItem.product === item.product && origItem.unit === item.unit && origItem.price_mode === item.price_mode);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Product\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 804,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: (originalItem === null || originalItem === void 0 ? void 0 : originalItem.product_name) || t('app.unknown_product'),\n                      readOnly: true,\n                      className: \"readonly-field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 805,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 814,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: originalItem !== null && originalItem !== void 0 && originalItem.unit_name ? `${originalItem.unit_name} (${originalItem.unit_symbol})` : 'N/A',\n                      readOnly: true,\n                      className: \"readonly-field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 813,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Price Mode\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 824,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: item.price_mode === 'wholesale' ? 'Wholesale (WS)' : 'Standard (STD)',\n                      readOnly: true,\n                      className: \"readonly-field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 825,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 823,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Unit Price\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 834,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: formatCurrency(item.unit_price),\n                      readOnly: true,\n                      className: \"readonly-field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Quantity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 844,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: \"0\",\n                      value: item.quantity,\n                      onChange: e => updateEditItem(index, 'quantity', parseFloat(e.target.value) || 0),\n                      readOnly: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid',\n                      className: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid' ? 'read-only-input' : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 845,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 843,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Total\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 856,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: formatCurrency(item.quantity * item.unit_price),\n                      readOnly: true,\n                      className: \"readonly-field\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 857,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 855,\n                    columnNumber: 23\n                  }, this), !((selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid') && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    size: \"small\",\n                    onClick: () => removeEditItem(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 15\n            }, this), !((selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid') && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Payment Options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"payment-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Payment Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 885,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"payment-types\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"payment-type\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        name: \"editPaymentType\",\n                        value: \"full\",\n                        checked: editFormData.payment_type === 'full',\n                        onChange: e => setEditFormData(prev => ({\n                          ...prev,\n                          payment_type: e.target.value,\n                          paid_amount: e.target.value === 'full' ? calculateEditTotal() : prev.paid_amount\n                        })),\n                        disabled: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 888,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Full Payment (100%)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 900,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 887,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"payment-type\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        name: \"editPaymentType\",\n                        value: \"partial\",\n                        checked: editFormData.payment_type === 'partial',\n                        onChange: e => setEditFormData(prev => ({\n                          ...prev,\n                          payment_type: e.target.value\n                        })),\n                        disabled: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 903,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Partial Payment (0-99.99%)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 914,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 902,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 886,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 17\n                }, this), editFormData.payment_type === 'partial' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Amount to Pay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    step: \"0.01\",\n                    min: \"0\",\n                    max: calculateEditTotal(),\n                    value: editFormData.paid_amount || 0,\n                    onChange: e => {\n                      const value = parseFloat(e.target.value) || 0;\n                      setEditFormData(prev => ({\n                        ...prev,\n                        paid_amount: value\n                      }));\n                    },\n                    placeholder: t('forms.enter_amount_to_pay'),\n                    readOnly: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid',\n                    className: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid' ? 'read-only-input' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Total: $\", calculateEditTotal().toFixed(2), \" | Remaining: $\", (calculateEditTotal() - (editFormData.paid_amount || 0)).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 19\n                }, this), editFormData.payment_type === 'full' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Amount to Pay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 948,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    step: \"0.01\",\n                    value: calculateEditTotal(),\n                    readOnly: true,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 949,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Full payment for the total amount.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 956,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 947,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowEditModal(false),\n                children: (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid' ? t('modals.close') : t('modals.cancel')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 21\n              }, this), !((selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.status) === 'completed' && (selectedSale === null || selectedSale === void 0 ? void 0 : selectedSale.payment_status) === 'paid') && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleEditSale,\n                disabled: !validateEditSale(),\n                children: \"Update Sale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: \"Failed to load sale details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 9\n    }, this), showPaymentModal && selectedSale && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Make Payment - \", selectedSale.sale_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setShowPaymentModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Customer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 20\n              }, this), \" \", selectedSale.customer_name || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 20\n              }, this), \" $\", selectedSale.total_amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Paid Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1000,\n                columnNumber: 20\n              }, this), \" $\", selectedSale.paid_amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Remaining Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 20\n              }, this), \" $\", selectedSale.remaining_amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Payment Amount (Full Payment Only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: selectedSale.remaining_amount,\n              readOnly: true,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"This will be a full payment for the remaining amount.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setShowPaymentModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => handleMakePayment(selectedSale.id, selectedSale.remaining_amount),\n              children: [\"Process Payment ($\", selectedSale.remaining_amount, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesManagement, \"kTF6K3Uo143oDK0SJVopx5x8DH0=\", false, function () {\n  return [useTranslation, useAuth];\n});\n_c = SalesManagement;\nexport default SalesManagement;\nvar _c;\n$RefreshReg$(_c, \"SalesManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useTranslation","api","useAuth","Table","Button","PrintButton","jsxDEV","_jsxDEV","Fragment","_Fragment","SalesManagement","_s","t","user","sales","setSales","loading","setLoading","error","setError","showDeleteModal","setShowDeleteModal","showEditModal","setShowEditModal","showPaymentModal","setShowPaymentModal","selectedSale","setSelectedSale","loadingSale","setLoadingSale","deleteFilters","setDeleteFilters","customer_name","start_date","end_date","status","editFormData","setEditFormData","items","payment_type","paid_amount","products","setProducts","filters","setFilters","fetchSales","params","URLSearchParams","append","response","get","toString","salesData","data","results","Array","isArray","console","err","_err$response","_err$response$data","message","fetchProducts","handleDeleteSales","delete","alert","deleted_count","_err$response2","_err$response2$data","handleEditSale","updateData","put","id","_err$response3","_err$response3$data","handleMakePayment","saleId","paymentAmount","post","payment_amount","is_full_payment","_err$response4","_err$response4$data","handleFilterChange","e","name","value","target","prev","handleDeleteFilterChange","clearFilters","openEditModal","sale","fullSale","map","item","_item$unit","product","quantity","unit","unit_price","price_mode","payment_status","cancelSale","refund_amount","original_sale_number","toFixed","_err$response5","_err$response5$data","handlePaymentMethodChange","newPaymentMethod","patch","payment_method","prevSales","_err$response6","_err$response6$data","addEditItem","removeEditItem","index","filter","_","i","updateEditItem","field","validateEditSale","length","_selectedSale$items","parseFloat","isNaN","originalItem","find","original","originalQuantity","quantityDiff","p","parseInt","stockNeeded","stock_quantity","total","calculateEditTotal","paidAmount","getProductPrice","productId","price","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleDateString","getStatusBadge","statusClasses","pending","completed","cancelled","returned","refunded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getPaymentStatusBadge","paymentStatus","paymentClasses","partial","paid","paymentLabels","reduce","canManageSales","role","user_name","username","user_id","print_timestamp","toISOString","print_id","now","Math","random","substr","title","type","printText","variant","onClick","onChange","placeholder","columns","key","header","render","row","slice","product_name","quantity_display","unit_symbol","methodLabels","size","disabled","sale_type","window","confirm","sale_number","created_at","total_amount","remaining_amount","due_date","_selectedSale$items2","origItem","readOnly","unit_name","min","checked","step","max","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/SalesManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport PrintButton from '../components/PrintButton';\nimport './SalesManagement.css';\n\nconst SalesManagement = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [sales, setSales] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [selectedSale, setSelectedSale] = useState(null);\n  const [loadingSale, setLoadingSale] = useState(false);\n  const [deleteFilters, setDeleteFilters] = useState({\n    customer_name: '',\n    start_date: '',\n    end_date: '',\n    status: 'completed'\n  });\n  const [editFormData, setEditFormData] = useState({\n    items: [],\n    payment_type: 'full',\n    paid_amount: 0\n  });\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({\n    status: '',\n    customer_name: '',\n    start_date: '',\n    end_date: ''\n  });\n\n  const fetchSales = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const params = new URLSearchParams();\n      \n      if (filters.status) params.append('status', filters.status);\n      if (filters.customer_name) params.append('search', filters.customer_name);\n      if (filters.start_date) params.append('created_at__date__gte', filters.start_date);\n      if (filters.end_date) params.append('created_at__date__lte', filters.end_date);\n      \n      const response = await api.get(`/sales/?${params.toString()}`);\n      const salesData = response.data.results || response.data;\n      \n      // Ensure salesData is always an array\n      if (!Array.isArray(salesData)) {\n        console.error('Sales data is not an array:', salesData);\n        setSales([]);\n        return;\n      }\n      \n      setSales(salesData);\n    } catch (err) {\n      setError('Failed to fetch sales: ' + (err.response?.data?.error || err.message));\n      console.error('Sales fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n\n  useEffect(() => {\n    fetchSales();\n    fetchProducts();\n  }, [fetchSales]);\n\n  const fetchProducts = async () => {\n    try {\n      const response = await api.get('/api/products/?is_active=true');\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      console.error('Products fetch error:', err);\n    }\n  };\n\n  const handleDeleteSales = async () => {\n    try {\n      setError('');\n      const response = await api.delete('/api/sales/delete/', {\n        data: deleteFilters\n      });\n      \n      alert(`Successfully deleted ${response.data.deleted_count} sales`);\n      setShowDeleteModal(false);\n      setDeleteFilters({\n        customer_name: '',\n        start_date: '',\n        end_date: '',\n        status: 'completed'\n      });\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to delete sales');\n      console.error('Delete sales error:', err);\n    }\n  };\n\n  const handleEditSale = async () => {\n    try {\n      setError('');\n      \n      // Prepare the data to send\n      const updateData = {\n        items: editFormData.items,\n        paid_amount: editFormData.paid_amount\n      };\n      \n      await api.put(`/sales/${selectedSale.id}/edit/`, updateData);\n      alert('Sale updated successfully');\n      setShowEditModal(false);\n      setSelectedSale(null);\n      setEditFormData({ items: [], payment_type: 'full', paid_amount: 0 });\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to update sale');\n      console.error('Edit sale error:', err);\n    }\n  };\n\n  const handleMakePayment = async (saleId, paymentAmount) => {\n    try {\n      setError('');\n      await api.post(`/sales/${saleId}/payment/`, {\n        payment_amount: paymentAmount,\n        is_full_payment: true\n      });\n      alert('Payment processed successfully');\n      setShowPaymentModal(false);\n      fetchSales();\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to process payment');\n      console.error('Payment error:', err);\n    }\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteFilterChange = (e) => {\n    const { name, value } = e.target;\n    setDeleteFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      status: '',\n      customer_name: '',\n      start_date: '',\n      end_date: ''\n    });\n  };\n\n  const openEditModal = async (sale) => {\n    try {\n      setLoadingSale(true);\n      setError('');\n      \n      // Fetch full sale data including items\n      const response = await api.get(`/sales/${sale.id}/`);\n      const fullSale = response.data;\n      \n      setSelectedSale(fullSale);\n      setEditFormData({\n        items: fullSale.items.map(item => ({\n          product: item.product,\n          quantity: item.quantity,\n          unit: item.unit?.id || item.unit || '',\n          unit_price: item.unit_price,\n          price_mode: item.price_mode || 'standard'\n        })),\n        payment_type: fullSale.payment_status === 'paid' ? 'full' : \n                     fullSale.payment_status === 'partial' ? 'partial' : 'full',\n        paid_amount: fullSale.paid_amount || 0\n      });\n      setShowEditModal(true);\n    } catch (err) {\n      setError('Failed to load sale details');\n      console.error('Sale fetch error:', err);\n    } finally {\n      setLoadingSale(false);\n    }\n  };\n\n  const cancelSale = async (saleId) => {\n    try {\n      setError('');\n      const response = await api.post(`/sales/${saleId}/cancel/`);\n      \n      if (response.data.message === 'Sale cancelled and stock restored') {\n        // Show refund information for completed sales\n        if (response.data.refund_amount && response.data.refund_amount > 0) {\n          alert(`Sale cancelled and stock restored successfully!\\n\\nRefund Information:\\nOriginal Sale: ${response.data.original_sale_number}\\nRefund Amount: $${response.data.refund_amount.toFixed(2)}\\n\\nPlease process the refund to the customer.`);\n        } else {\n          alert('Sale cancelled and stock restored successfully');\n        }\n      } else {\n        alert('Sale cancelled successfully');\n      }\n      \n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to cancel sale');\n      console.error('Cancel sale error:', err);\n    }\n  };\n\n  const handlePaymentMethodChange = async (saleId, newPaymentMethod) => {\n    try {\n      setError('');\n      await api.patch(`/sales/${saleId}/payment-method/`, {\n        payment_method: newPaymentMethod\n      });\n      \n      // Update the local state to reflect the change immediately\n      setSales(prevSales => \n        prevSales.map(sale => \n          sale.id === saleId \n            ? { ...sale, payment_method: newPaymentMethod }\n            : sale\n        )\n      );\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to update payment method');\n      console.error('Payment method update error:', err);\n    }\n  };\n\n  const addEditItem = () => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: [...prev.items, { product: '', quantity: 1, unit: '', unit_price: 0 }]\n    }));\n  };\n\n  const removeEditItem = (index) => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: prev.items.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateEditItem = (index, field, value) => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: prev.items.map((item, i) => \n        i === index ? { ...item, [field]: value } : item\n      )\n    }));\n  };\n\n  const validateEditSale = () => {\n    // Require at least 1 item for all sales (including returns)\n    if (!editFormData.items || editFormData.items.length === 0) {\n      return false;\n    }\n\n    // Check if any item has invalid quantity (allow quantity = 0)\n    for (const item of editFormData.items) {\n      const quantity = parseFloat(item.quantity);\n      if (isNaN(quantity) || quantity < 0) {\n        return false;\n      }\n\n      // Find the corresponding original item to check stock availability\n      const originalItem = selectedSale?.items?.find(original => \n        original.product === item.product && \n        original.unit === item.unit && \n        original.price_mode === item.price_mode\n      );\n\n      if (originalItem) {\n        // Calculate the quantity difference\n        const originalQuantity = parseFloat(originalItem.quantity);\n        const quantityDiff = quantity - originalQuantity;\n        \n        // If increasing quantity, check stock availability\n        if (quantityDiff > 0) {\n          // Find the product to get current stock\n          const product = products.find(p => p.id === parseInt(item.product));\n          if (product) {\n            // Convert quantity difference to base units for stock check\n            // This is a simplified check - in a real scenario, you'd need proper unit conversion\n            const stockNeeded = quantityDiff;\n            if (product.stock_quantity < stockNeeded) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    // Validate payment logic\n    if (editFormData.payment_type === 'partial') {\n      const total = calculateEditTotal();\n      const paidAmount = parseFloat(editFormData.paid_amount) || 0;\n      \n      // For partial payment, paid amount must be less than total and greater than 0\n      if (paidAmount >= total || paidAmount <= 0) {\n        return false;\n      }\n    } else if (editFormData.payment_type === 'full') {\n      const total = calculateEditTotal();\n      const paidAmount = parseFloat(editFormData.paid_amount) || 0;\n      \n      // For full payment, paid amount must equal total\n      if (paidAmount !== total) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const getProductPrice = (productId) => {\n    const product = products.find(p => p.id === parseInt(productId));\n    return product ? product.price : 0;\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const getStatusBadge = (status) => {\n    const statusClasses = {\n      pending: 'status-pending',\n      completed: 'status-completed',\n      cancelled: 'status-cancelled',\n      returned: 'status-returned',\n      refunded: 'status-refunded'\n    };\n    return <span className={`status-badge ${statusClasses[status] || ''}`}>{status}</span>;\n  };\n\n  const getPaymentStatusBadge = (paymentStatus) => {\n    const paymentClasses = {\n      pending: 'payment-pending',\n      partial: 'payment-partial',\n      paid: 'payment-paid'\n    };\n    const paymentLabels = {\n      pending: 'Unpaid',\n      partial: 'Partial',\n      paid: 'Paid'\n    };\n    return <span className={`payment-badge ${paymentClasses[paymentStatus] || ''}`}>{paymentLabels[paymentStatus] || paymentStatus}</span>;\n  };\n\n  const calculateEditTotal = () => {\n    return editFormData.items.reduce((total, item) => {\n      return total + (parseFloat(item.unit_price || 0) * parseFloat(item.quantity || 0));\n    }, 0);\n  };\n\n  // Update paid_amount when payment_type changes\n  useEffect(() => {\n    if (editFormData.payment_type === 'full') {\n      setEditFormData(prev => ({\n        ...prev,\n        paid_amount: calculateEditTotal()\n      }));\n    }\n  }, [editFormData.payment_type, editFormData.items]);\n\n  // Check if user has permission to manage sales\n  const canManageSales = user?.role === 'admin' || user?.role === 'manager';\n\n  if (!canManageSales) {\n    return (\n      <div className=\"sales-management\">\n        <div className=\"access-denied\">\n          <h2>Access Denied</h2>\n          <p>You don't have permission to manage sales.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"sales-management\">\n      <div className=\"page-header\">\n        <h1>{t('titles.sales_management')}</h1>\n        <div className=\"header-actions\">\n          <PrintButton\n            data={{\n              ...sales,\n              user_name: user?.username || t('app.unknown_user'),\n              user_id: user?.id || 'unknown',\n              print_timestamp: new Date().toISOString(),\n              print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n            }}\n            title={t('titles.sales_management_report')}\n            type=\"sales_history\"\n            printText={t('buttons.print_sales_report')}\n            className=\"print-sales-report-btn\"\n          />\n          <Button \n            variant=\"danger\" \n            onClick={() => setShowDeleteModal(true)}\n          >\n            Delete Sales\n          </Button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError('')}>&times;</button>\n        </div>\n      )}\n\n      {/* Filters */}\n      <div className=\"filters-section\">\n        <h3>Filters</h3>\n        <div className=\"filters-grid\">\n          <div className=\"form-group\">\n            <label>Status</label>\n            <select\n              name=\"status\"\n              value={filters.status}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Statuses</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"cancelled\">Cancelled</option>\n              <option value=\"returned\">Returned</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Customer Name</label>\n            <input\n              type=\"text\"\n              name=\"customer_name\"\n              value={filters.customer_name}\n              onChange={handleFilterChange}\n              placeholder={t('forms.search_by_customer_name')}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Start Date</label>\n            <input\n              type=\"date\"\n              name=\"start_date\"\n              value={filters.start_date}\n              onChange={handleFilterChange}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>End Date</label>\n            <input\n              type=\"date\"\n              name=\"end_date\"\n              value={filters.end_date}\n              onChange={handleFilterChange}\n            />\n          </div>\n        </div>\n        \n        <div className=\"filter-actions\">\n          <Button variant=\"secondary\" onClick={clearFilters}>\n            Clear Filters\n          </Button>\n        </div>\n      </div>\n\n      {/* Sales Table */}\n      <div className=\"table-section\">\n        {loading ? (\n          <div className=\"loading\">Loading sales...</div>\n        ) : (\n          <Table\n            data={sales}\n            columns={[\n              {\n                key: 'sale_number',\n                header: t('table_headers.sale_number'),\n                render: (value, row) => (\n                  <span className=\"sale-number\">{value}</span>\n                )\n              },\n              {\n                key: 'customer_name',\n                header: t('table_headers.customer'),\n                render: (value) => value || 'N/A'\n              },\n              {\n                key: 'status',\n                header: t('table_headers.status'),\n                render: (value, row) => (\n                  <div className=\"status-container\">\n                    <div className=\"sale-status\">\n                      {getStatusBadge(value)}\n                    </div>\n                  </div>\n                )\n              },\n              {\n                key: 'payment_status',\n                header: t('table_headers.payment'),\n                render: (value, row) => {\n                  const paymentClasses = {\n                    'pending': 'payment-pending',\n                    'partial': 'payment-partial',\n                    'paid': 'payment-paid'\n                  };\n                  const paymentLabels = {\n                    'pending': t('status_labels.pending'),\n                    'partial': t('status_labels.partial'),\n                    'paid': t('status_labels.paid')\n                  };\n                  return <span className={`payment-badge ${paymentClasses[value] || ''}`}>{paymentLabels[value] || value}</span>;\n                }\n              },\n              {\n                key: 'items',\n                header: t('table_headers.items'),\n                render: (items, row) => {\n                  if (!items || items.length === 0) {\n                    return <span className=\"no-items\">No items</span>;\n                  }\n                  return (\n                    <div className=\"sale-items\">\n                      {items.slice(0, 2).map((item, index) => (\n                        <div key={index} className=\"sale-item-row\">\n                          <span className=\"item-name\">\n                            {item.product_name}\n                            <span className={`price-mode-badge ${item.price_mode || 'standard'}`}>\n                              {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                            </span>\n                          </span>\n                          <span className=\"item-details\">\n                            {item.quantity_display || item.quantity} {item.unit_symbol || 'pcs'} × {formatCurrency(item.unit_price)}\n                          </span>\n                        </div>\n                      ))}\n            {items.length > 2 && (\n              <div className=\"more-items\">+{items.length - 2} more items</div>\n            )}\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'total_amount',\n                header: t('table_headers.total_amount'),\n                render: (value, row) => (\n                  <div className=\"amount-container\">\n                    <div className=\"total-amount\">\n                      {formatCurrency(value)}\n                    </div>\n                  </div>\n                )\n              },\n              {\n                key: 'created_at',\n                header: t('table_headers.date'),\n                render: (value) => formatDate(value)\n              },\n              {\n                key: 'sold_by_name',\n                header: t('table_headers.sold_by'),\n                render: (value) => value || 'N/A'\n              },\n              {\n                key: 'payment_method',\n                header: t('table_headers.payment_method'),\n                render: (value, row) => {\n                  // For pending sales, make payment method editable\n                  if (row.status === 'pending') {\n                    return (\n                      <select\n                        value={value || 'cash'}\n                        onChange={(e) => handlePaymentMethodChange(row.id, e.target.value)}\n                        className=\"payment-method-select\"\n                      >\n                        <option value=\"cash\">Cash</option>\n                        <option value=\"card\">Card</option>\n                        <option value=\"mobile_money\">Mobile Money</option>\n                        <option value=\"bank_transfer\">Bank Transfer</option>\n                      </select>\n                    );\n                  }\n                  // For other sales, just display the payment method\n                  const methodLabels = {\n                    'cash': t('payment_methods.cash'),\n                    'card': t('payment_methods.card'),\n                    'mobile_money': t('payment_methods.mobile_money'),\n                    'bank_transfer': t('payment_methods.bank_transfer')\n                  };\n                  return <span className=\"payment-method-display\">{methodLabels[value] || value || 'Cash'}</span>;\n                }\n              },\n              {\n                key: 'paid_amount',\n                header: t('table_headers.paid_amount'),\n                render: (value, row) => {\n                  const paidAmount = parseFloat(value) || 0;\n                  \n                  return (\n                    <div className=\"payment-amount-container\">\n                      <div className=\"paid-amount\">\n                        {formatCurrency(paidAmount)}\n                      </div>\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'actions',\n                header: t('table_headers.actions'),\n                render: (_, row) => (\n                  <div className=\"action-buttons\">\n                    <PrintButton\n                      data={{\n                        ...row,\n                        user_name: user?.username || t('app.unknown_user'),\n                        user_id: user?.id || 'unknown',\n                        print_timestamp: new Date().toISOString(),\n                        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n                      }}\n                      title={t('titles.sale_receipt')}\n                      type=\"sale\"\n                      printText={t('buttons.print')}\n                      className=\"print-sale-btn\"\n                    />\n                    {!(row.status === 'completed' && row.payment_status === 'paid') && \n                     row.status !== 'refunded' && (\n                      <Button \n                        variant=\"primary\" \n                        size=\"small\"\n                        onClick={() => openEditModal(row)}\n                        loading={loadingSale}\n                        disabled={loadingSale}\n                      >\n                        Edit\n                      </Button>\n                    )}\n                    {(row.status === 'pending' || row.status === 'completed') && \n                     row.status !== 'refunded' && \n                     row.sale_type !== 'return' && (\n                      <Button \n                        variant=\"danger\" \n                        size=\"small\"\n                        onClick={() => {\n                          if (window.confirm(`Are you sure you want to cancel this ${row.status} sale?`)) {\n                            cancelSale(row.id);\n                          }\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    )}\n                  </div>\n                )\n              }\n            ]}\n          />\n        )}\n      </div>\n\n      {/* Delete Sales Modal */}\n      {showDeleteModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Delete Sales</h2>\n              <button className=\"close-button\" onClick={() => setShowDeleteModal(false)}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Select criteria to delete sales:</p>\n              \n              <div className=\"form-group\">\n                <label>Customer Name (optional)</label>\n                <input\n                  type=\"text\"\n                  name=\"customer_name\"\n                  value={deleteFilters.customer_name}\n                  onChange={handleDeleteFilterChange}\n                  placeholder={t('forms.leave_empty_to_delete_all')}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Start Date (optional)</label>\n                <input\n                  type=\"date\"\n                  name=\"start_date\"\n                  value={deleteFilters.start_date}\n                  onChange={handleDeleteFilterChange}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>End Date (optional)</label>\n                <input\n                  type=\"date\"\n                  name=\"end_date\"\n                  value={deleteFilters.end_date}\n                  onChange={handleDeleteFilterChange}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Status</label>\n                <select\n                  name=\"status\"\n                  value={deleteFilters.status}\n                  onChange={handleDeleteFilterChange}\n                >\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                  <option value=\"returned\">Returned</option>\n                  <option value=\"refunded\">Refunded</option>\n                </select>\n              </div>\n              \n              <div className=\"modal-actions\">\n                <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\n                  Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDeleteSales}>\n                  Delete Sales\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Sale Modal */}\n      {showEditModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content large-modal\">\n            <div className=\"modal-header\">\n              <h2>\n                {selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? t('modals.view_sale') : t('modals.edit_sale')}: {selectedSale?.sale_number || t('app.loading')}\n                {selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' && (\n                  <span className=\"view-only-badge\">{t('modals.view_only')}</span>\n                )}\n              </h2>\n              <button className=\"close-button\" onClick={() => setShowEditModal(false)}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              {loadingSale ? (\n                <div className=\"loading\">Loading sale details...</div>\n              ) : selectedSale ? (\n                <>\n                  <div className=\"edit-sale-info\">\n                    <p><strong>Customer:</strong> {selectedSale.customer_name || 'N/A'}</p>\n                    <p><strong>Date:</strong> {formatDate(selectedSale.created_at)}</p>\n                    <p><strong>Status:</strong> {getStatusBadge(selectedSale.status)}</p>\n                    <p><strong>Payment Status:</strong> {getPaymentStatusBadge(selectedSale.payment_status)}</p>\n                    <p><strong>Total Amount:</strong> ${selectedSale.total_amount}</p>\n                    <p><strong>Paid Amount:</strong> ${selectedSale.paid_amount}</p>\n                    {selectedSale.payment_status === 'partial' && (\n                      <p><strong>Remaining Amount:</strong> ${selectedSale.remaining_amount}</p>\n                    )}\n                    {selectedSale.due_date && (\n                      <p><strong>Due Date:</strong> {formatDate(selectedSale.due_date)}</p>\n                    )}\n                  </div>\n                  \n                  <h3>Sale Items</h3>\n              <div className=\"edit-items\">\n                {editFormData.items.map((item, index) => {\n                  // Get the original item from the sale to display product and unit info\n                  const originalItem = selectedSale?.items?.find(origItem => \n                    origItem.product === item.product && \n                    origItem.unit === item.unit &&\n                    origItem.price_mode === item.price_mode\n                  );\n                  \n                  return (\n                    <div key={index} className=\"edit-item\">\n                      <div className=\"form-group\">\n                        <label>Product</label>\n                        <input\n                          type=\"text\"\n                          value={originalItem?.product_name || t('app.unknown_product')}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Unit</label>\n                        <input\n                          type=\"text\"\n                          value={originalItem?.unit_name ? `${originalItem.unit_name} (${originalItem.unit_symbol})` : 'N/A'}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Price Mode</label>\n                        <input\n                          type=\"text\"\n                          value={item.price_mode === 'wholesale' ? 'Wholesale (WS)' : 'Standard (STD)'}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Unit Price</label>\n                        <input\n                          type=\"text\"\n                          value={formatCurrency(item.unit_price)}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Quantity</label>\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          value={item.quantity}\n                          onChange={(e) => updateEditItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n                          readOnly={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                          className={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? 'read-only-input' : ''}\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Total</label>\n                        <input\n                          type=\"text\"\n                          value={formatCurrency(item.quantity * item.unit_price)}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                    \n                    {!(selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid') && (\n                      <Button \n                        variant=\"danger\" \n                        size=\"small\"\n                        onClick={() => removeEditItem(index)}\n                      >\n                        Remove\n                      </Button>\n                    )}\n                  </div>\n                  );\n                })}\n                \n              </div>\n              \n              {!(selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid') && (\n                <>\n                  <h3>Payment Options</h3>\n                  <div className=\"payment-section\">\n                <div className=\"form-group\">\n                  <label>Payment Type</label>\n                  <div className=\"payment-types\">\n                    <label className=\"payment-type\">\n                      <input\n                        type=\"radio\"\n                        name=\"editPaymentType\"\n                        value=\"full\"\n                        checked={editFormData.payment_type === 'full'}\n                        onChange={(e) => setEditFormData(prev => ({\n                          ...prev,\n                          payment_type: e.target.value,\n                          paid_amount: e.target.value === 'full' ? calculateEditTotal() : prev.paid_amount\n                        }))}\n                        disabled={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                      />\n                      <span>Full Payment (100%)</span>\n                    </label>\n                    <label className=\"payment-type\">\n                      <input\n                        type=\"radio\"\n                        name=\"editPaymentType\"\n                        value=\"partial\"\n                        checked={editFormData.payment_type === 'partial'}\n                        onChange={(e) => setEditFormData(prev => ({\n                          ...prev,\n                          payment_type: e.target.value\n                        }))}\n                        disabled={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                      />\n                      <span>Partial Payment (0-99.99%)</span>\n                    </label>\n                  </div>\n                </div>\n                \n                {editFormData.payment_type === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateEditTotal()}\n                      value={editFormData.paid_amount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setEditFormData(prev => ({\n                          ...prev,\n                          paid_amount: value\n                        }));\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                      readOnly={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                      className={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? 'read-only-input' : ''}\n                    />\n                    <small>\n                      Total: ${calculateEditTotal().toFixed(2)} | \n                      Remaining: ${(calculateEditTotal() - (editFormData.paid_amount || 0)).toFixed(2)}\n                    </small>\n                  </div>\n                )}\n                \n                {editFormData.payment_type === 'full' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={calculateEditTotal()}\n                      readOnly\n                      className=\"form-control\"\n                    />\n                    <small>Full payment for the total amount.</small>\n                  </div>\n                )}\n                  </div>\n                </>\n              )}\n              \n                  <div className=\"modal-actions\">\n                    <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>\n                      {selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? t('modals.close') : t('modals.cancel')}\n                    </Button>\n                    {!(selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid') && (\n                      <Button \n                        variant=\"primary\" \n                        onClick={handleEditSale}\n                        disabled={!validateEditSale()}\n                      >\n                        Update Sale\n                      </Button>\n                    )}\n                  </div>\n                </>\n              ) : (\n                <div className=\"error-message\">\n                  Failed to load sale details\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Payment Modal */}\n      {showPaymentModal && selectedSale && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Make Payment - {selectedSale.sale_number}</h2>\n              <button className=\"close-button\" onClick={() => setShowPaymentModal(false)}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"payment-info\">\n                <p><strong>Customer:</strong> {selectedSale.customer_name || 'N/A'}</p>\n                <p><strong>Total Amount:</strong> ${selectedSale.total_amount}</p>\n                <p><strong>Paid Amount:</strong> ${selectedSale.paid_amount}</p>\n                <p><strong>Remaining Amount:</strong> ${selectedSale.remaining_amount}</p>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Payment Amount (Full Payment Only)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={selectedSale.remaining_amount}\n                  readOnly\n                  className=\"form-control\"\n                />\n                <small>This will be a full payment for the remaining amount.</small>\n              </div>\n              \n              <div className=\"modal-actions\">\n                <Button variant=\"secondary\" onClick={() => setShowPaymentModal(false)}>\n                  Cancel\n                </Button>\n                <Button \n                  variant=\"success\" \n                  onClick={() => handleMakePayment(selectedSale.id, selectedSale.remaining_amount)}\n                >\n                  Process Payment (${selectedSale.remaining_amount})\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SalesManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}