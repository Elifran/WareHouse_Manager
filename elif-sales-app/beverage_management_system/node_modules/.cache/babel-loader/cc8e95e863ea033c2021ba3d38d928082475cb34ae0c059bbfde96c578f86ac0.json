{"ast":null,"code":"import React,{useState}from'react';import{useTranslation}from'react-i18next';import Button from'./Button';import{createThermalPrintDocument,detectPrinterType,mobilePrint,generateMobilePrintContent,generateXprinterPrintContent,downloadReceiptFile,generatePDFContent,generateESCPOSForReceiptApp,isMobileDevice,openPrintWindow,openPrintPreview,generatePrintContent}from'../utils/printUtils';import'./PrintButton.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PrintButton=_ref=>{let{data,title,type='default',onValidate=null,validateText='Validate & Print',printText='Print',className='',disabled=false,showValidateOption=false}=_ref;const{t}=useTranslation();const[isPrinting,setIsPrinting]=useState(false);const[showPrintOptions,setShowPrintOptions]=useState(false);const handlePrint=async function(){let validateFirst=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let useThermalPrinter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;let useReceiptApp=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let usePreview=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;// Validate data structure\nif(!data){console.error('No data provided to PrintButton');window.alert(t('print.no_data','No data available to print.'));return;}if(validateFirst&&onValidate){try{await onValidate();}catch(error){console.error('Validation failed:',error);return;}}setIsPrinting(true);try{let printContent;const isMobile=isMobileDevice();// Handle receipt app integration\nif(useReceiptApp){console.log('Attempting to download receipt file...',{data,title});const success=downloadReceiptFile(data,title);console.log('Download result:',success);if(success){window.alert(t('print.pdf_downloaded','Receipt PDF downloaded! You can now open it with any PDF viewer or receipt printer app to print directly to your Xprinter.'));return;}else{throw new Error('Failed to download receipt file.');}}// Generate appropriate content based on device and printer type\nif(useThermalPrinter||isMobile){// Use Xprinter-optimized content for better compatibility\n// printContent = generateXprinterPrintContent(data, title, type, t);\nprintContent=generatePrintContent(data,title,type,t);}else{printContent=generatePrintContent(data,title,type,t);}// Handle print preview\nif(usePreview){const previewSuccess=openPrintPreview(printContent,title);if(previewSuccess){return;}else{throw new Error('Failed to open print preview window.');}}// Use mobile-friendly printing for mobile devices\nif(isMobile){const success=await mobilePrint(printContent,title);if(!success){// If mobile printing fails, offer receipt app option\nconst useReceiptApp=window.confirm(t('print.mobile_failed_offer_app','Mobile printing failed. Would you like to download a file for receipt printer apps instead?'));if(useReceiptApp){const downloadSuccess=downloadReceiptFile(data,title);if(downloadSuccess){window.alert(t('print.pdf_downloaded','Receipt PDF downloaded! You can now open it with any PDF viewer or receipt printer app to print directly to your Xprinter.'));return;}}throw new Error('Mobile printing failed. Please try again or check your printer connection.');}}else{// Desktop printing with enhanced error handling\n// Try print preview first for better visibility\nconst previewSuccess=openPrintPreview(printContent,title);if(previewSuccess){// Preview opened successfully, user can print from there\nreturn;}else{// Fallback to direct print window\nconst success=await openPrintWindow(printContent,title);if(!success){throw new Error('Failed to open print window. Please check popup blockers and try again.');}}}}catch(error){console.error('Print error:',error);// Provide more specific error messages\nlet errorMessage=t('print.failed','Failed to print. Please try again.');if(error.message.includes('popup')){errorMessage=t('print.popup_blocked','Popup blocked. Please allow popups for this site and try again.');}else if(error.message.includes('Mobile printing failed')){errorMessage=t('print.mobile_failed','Mobile printing failed. Please check your printer connection and try again.');}else if(error.message.includes('window.open')){errorMessage=t('print.window_failed','Could not open print window. Please check your browser settings.');}else if(error.message.includes('Failed to download')){errorMessage=t('print.download_failed','Failed to download receipt file. Please try again.');}window.alert(errorMessage);}finally{setIsPrinting(false);setShowPrintOptions(false);}};if(showValidateOption&&onValidate){return/*#__PURE__*/_jsxs(\"div\",{className:\"print-button-container \".concat(className),children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowPrintOptions(!showPrintOptions),disabled:disabled,children:showPrintOptions?t('button.hide_options','Hide Options'):t('button.show_options','Show Options')}),showPrintOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"print-options\",children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>handlePrint(true),disabled:disabled||isPrinting,children:isPrinting?t('button.processing','Processing...'):validateText}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(false),disabled:disabled||isPrinting,children:isPrinting?t('button.preparing','Preparing...'):printText}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>handlePrint(false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.preparing','Preparing...'):t('button.print_thermal','Print (Thermal)')})]})]});}// Show different options for mobile vs desktop\nconst isMobile=isMobileDevice();if(isMobile){return/*#__PURE__*/_jsx(\"div\",{className:\"print-button-container \".concat(className),children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'8px'},children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>handlePrint(false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.printing','Printing...'):t('button.print_receipt','Print Receipt')}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>handlePrint(false,false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.downloading','Downloading...'):t('button.download_pdf','Download PDF')}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(false,false,false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.loading','Loading...'):t('button.preview','Print Preview')}),showValidateOption&&onValidate&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(true,true),disabled:disabled||isPrinting,children:isPrinting?t('button.processing','Processing...'):validateText})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"print-button-container \".concat(className),children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'8px',flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.printing','Printing...'):printText}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>handlePrint(false,false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.downloading','Downloading...'):t('button.download_pdf','Download PDF')}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(false,false,false,true),disabled:disabled||isPrinting,children:isPrinting?t('button.loading','Loading...'):t('button.preview','Print Preview')})]})});};export default PrintButton;","map":{"version":3,"names":["React","useState","useTranslation","Button","createThermalPrintDocument","detectPrinterType","mobilePrint","generateMobilePrintContent","generateXprinterPrintContent","downloadReceiptFile","generatePDFContent","generateESCPOSForReceiptApp","isMobileDevice","openPrintWindow","openPrintPreview","generatePrintContent","jsx","_jsx","jsxs","_jsxs","PrintButton","_ref","data","title","type","onValidate","validateText","printText","className","disabled","showValidateOption","t","isPrinting","setIsPrinting","showPrintOptions","setShowPrintOptions","handlePrint","validateFirst","arguments","length","undefined","useThermalPrinter","useReceiptApp","usePreview","console","error","window","alert","printContent","isMobile","log","success","Error","previewSuccess","confirm","downloadSuccess","errorMessage","message","includes","concat","children","variant","size","onClick","style","display","flexDirection","gap","flexWrap"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/components/PrintButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from './Button';\nimport { \n  createThermalPrintDocument, \n  detectPrinterType, \n  mobilePrint, \n  generateMobilePrintContent,\n  generateXprinterPrintContent,\n  downloadReceiptFile,\n  generatePDFContent,\n  generateESCPOSForReceiptApp,\n  isMobileDevice,\n  openPrintWindow,\n  openPrintPreview,\n  generatePrintContent,\n} from '../utils/printUtils';\nimport './PrintButton.css';\n\nconst PrintButton = ({ \n  data, \n  title, \n  type = 'default', \n  onValidate = null, \n  validateText = 'Validate & Print',\n  printText = 'Print',\n  className = '',\n  disabled = false,\n  showValidateOption = false\n}) => {\n  const { t } = useTranslation();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [showPrintOptions, setShowPrintOptions] = useState(false);\n\n  const handlePrint = async (validateFirst = false, useThermalPrinter = false, useReceiptApp = false, usePreview = false) => {\n    // Validate data structure\n    if (!data) {\n      console.error('No data provided to PrintButton');\n      window.alert(t('print.no_data', 'No data available to print.'));\n      return;\n    }\n\n    if (validateFirst && onValidate) {\n      try {\n        await onValidate();\n      } catch (error) {\n        console.error('Validation failed:', error);\n        return;\n      }\n    }\n\n    setIsPrinting(true);\n    \n    try {\n      let printContent;\n      const isMobile = isMobileDevice();\n      \n      // Handle receipt app integration\n      if (useReceiptApp) {\n        console.log('Attempting to download receipt file...', { data, title });\n        const success = downloadReceiptFile(data, title);\n        console.log('Download result:', success);\n        if (success) {\n          window.alert(t('print.pdf_downloaded', 'Receipt PDF downloaded! You can now open it with any PDF viewer or receipt printer app to print directly to your Xprinter.'));\n          return;\n        } else {\n          throw new Error('Failed to download receipt file.');\n        }\n      }\n      \n      // Generate appropriate content based on device and printer type\n      if (useThermalPrinter || isMobile) {\n        // Use Xprinter-optimized content for better compatibility\n        // printContent = generateXprinterPrintContent(data, title, type, t);\n        printContent = generatePrintContent(data, title, type, t);\n      } else {\n        printContent = generatePrintContent(data, title, type, t);\n      }\n      \n      // Handle print preview\n      if (usePreview) {\n        const previewSuccess = openPrintPreview(printContent, title);\n        if (previewSuccess) {\n          return;\n        } else {\n          throw new Error('Failed to open print preview window.');\n        }\n      }\n      \n      // Use mobile-friendly printing for mobile devices\n      if (isMobile) {\n        const success = await mobilePrint(printContent, title);\n        if (!success) {\n          // If mobile printing fails, offer receipt app option\n          const useReceiptApp = window.confirm(t('print.mobile_failed_offer_app', 'Mobile printing failed. Would you like to download a file for receipt printer apps instead?'));\n          if (useReceiptApp) {\n            const downloadSuccess = downloadReceiptFile(data, title);\n            if (downloadSuccess) {\n              window.alert(t('print.pdf_downloaded', 'Receipt PDF downloaded! You can now open it with any PDF viewer or receipt printer app to print directly to your Xprinter.'));\n              return;\n            }\n          }\n          throw new Error('Mobile printing failed. Please try again or check your printer connection.');\n        }\n      } else {\n        // Desktop printing with enhanced error handling\n        // Try print preview first for better visibility\n        const previewSuccess = openPrintPreview(printContent, title);\n        if (previewSuccess) {\n          // Preview opened successfully, user can print from there\n          return;\n        } else {\n          // Fallback to direct print window\n          const success = await openPrintWindow(printContent, title);\n          if (!success) {\n            throw new Error('Failed to open print window. Please check popup blockers and try again.');\n          }\n        }\n      }\n      \n    } catch (error) {\n      console.error('Print error:', error);\n      \n      // Provide more specific error messages\n      let errorMessage = t('print.failed', 'Failed to print. Please try again.');\n      \n      if (error.message.includes('popup')) {\n        errorMessage = t('print.popup_blocked', 'Popup blocked. Please allow popups for this site and try again.');\n      } else if (error.message.includes('Mobile printing failed')) {\n        errorMessage = t('print.mobile_failed', 'Mobile printing failed. Please check your printer connection and try again.');\n      } else if (error.message.includes('window.open')) {\n        errorMessage = t('print.window_failed', 'Could not open print window. Please check your browser settings.');\n      } else if (error.message.includes('Failed to download')) {\n        errorMessage = t('print.download_failed', 'Failed to download receipt file. Please try again.');\n      }\n      \n      window.alert(errorMessage);\n    } finally {\n      setIsPrinting(false);\n      setShowPrintOptions(false);\n    }\n  };\n\n  if (showValidateOption && onValidate) {\n    return (\n      <div className={`print-button-container ${className}`}>\n        <Button\n          variant=\"outline\"\n          size=\"small\"\n          onClick={() => setShowPrintOptions(!showPrintOptions)}\n          disabled={disabled}\n        >\n          {showPrintOptions ? t('button.hide_options', 'Hide Options') : t('button.show_options', 'Show Options')}\n        </Button>\n        {showPrintOptions && (\n          <div className=\"print-options\">\n            <Button\n              variant=\"primary\"\n              size=\"small\"\n              onClick={() => handlePrint(true)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? t('button.processing', 'Processing...') : validateText}\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"small\"\n              onClick={() => handlePrint(false)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? t('button.preparing', 'Preparing...') : printText}\n            </Button>\n            <Button\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => handlePrint(false, true)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? t('button.preparing', 'Preparing...') : t('button.print_thermal', 'Print (Thermal)')}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Show different options for mobile vs desktop\n  const isMobile = isMobileDevice();\n  \n  if (isMobile) {\n    return (\n      <div className={`print-button-container ${className}`}>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n          <Button\n            variant=\"primary\"\n            size=\"small\"\n            onClick={() => handlePrint(false, true)}\n            disabled={disabled || isPrinting}\n          >\n            {isPrinting ? t('button.printing', 'Printing...') : t('button.print_receipt', 'Print Receipt')}\n          </Button>\n          \n          <Button\n            variant=\"secondary\"\n            size=\"small\"\n            onClick={() => handlePrint(false, false, true)}\n            disabled={disabled || isPrinting}\n          >\n            {isPrinting ? t('button.downloading', 'Downloading...') : t('button.download_pdf', 'Download PDF')}\n          </Button>\n          \n          <Button\n            variant=\"outline\"\n            size=\"small\"\n            onClick={() => handlePrint(false, false, false, true)}\n            disabled={disabled || isPrinting}\n          >\n            {isPrinting ? t('button.loading', 'Loading...') : t('button.preview', 'Print Preview')}\n          </Button>\n          \n          {showValidateOption && onValidate && (\n            <Button\n              variant=\"outline\"\n              size=\"small\"\n              onClick={() => handlePrint(true, true)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? t('button.processing', 'Processing...') : validateText}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`print-button-container ${className}`}>\n      <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n        <Button\n          variant=\"outline\"\n          size=\"small\"\n          onClick={() => handlePrint(false, true)}\n          disabled={disabled || isPrinting}\n        >\n          {isPrinting ? t('button.printing', 'Printing...') : printText}\n        </Button>\n        \n        <Button\n          variant=\"secondary\"\n          size=\"small\"\n          onClick={() => handlePrint(false, false, true)}\n          disabled={disabled || isPrinting}\n        >\n          {isPrinting ? t('button.downloading', 'Downloading...') : t('button.download_pdf', 'Download PDF')}\n        </Button>\n        \n        <Button\n          variant=\"outline\"\n          size=\"small\"\n          onClick={() => handlePrint(false, false, false, true)}\n          disabled={disabled || isPrinting}\n        >\n          {isPrinting ? t('button.loading', 'Loading...') : t('button.preview', 'Print Preview')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default PrintButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}