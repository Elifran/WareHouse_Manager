{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import{generatePrintContent}from'../components/PrintButton';import PackagingManager from'../components/PackagingManager';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{t}=useTranslation();const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[paymentType,setPaymentType]=useState('full');// 'full' or 'partial'\nconst[paidAmount,setPaidAmount]=useState(0);const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[categoriesLoaded,setCategoriesLoaded]=useState(false);const[categoryUpdating,setCategoryUpdating]=useState(false);const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst filtersRef=useRef(filters);// Ref to store current filters\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst categoriesRef=useRef(categories);// Ref to store current categories\nconst categoriesLoadedRef=useRef(categoriesLoaded);// Ref to store categories loaded state\n// Update refs whenever state changes\nuseEffect(()=>{filtersRef.current=filters;},[filters]);useEffect(()=>{categoriesRef.current=categories;},[categories]);useEffect(()=>{categoriesLoadedRef.current=categoriesLoaded;},[categoriesLoaded]);// Function to sync session storage with categories state\nconst syncSessionStorage=useCallback(()=>{const sellableStatus={};categories.forEach(cat=>{sellableStatus[cat.id]=cat.is_sellable;});sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));},[categories]);// Sync session storage whenever categories change\nuseEffect(()=>{if(categories.length>0){syncSessionStorage();}},[categories,syncSessionStorage]);// Handle case where filters are cleared but categories aren't loaded yet\nuseEffect(()=>{if(categoriesLoadedRef.current&&categoriesRef.current.length>0&&filtersRef.current.category===''&&filtersRef.current.search===''){fetchProducts(filtersRef.current);}},[categoriesLoaded,categories.length,filters]);const[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\n// Packaging state\nconst[packagingCart,setPackagingCart]=useState([]);const[showPackagingManager,setShowPackagingManager]=useState(false);// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Calculate total amount (products only, excluding packaging)\nconst calculateTotal=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);return cartTotal;};// Calculate total amount including packaging (for display purposes)\nconst calculateTotalWithPackaging=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);const packagingTotal=calculatePackagingTotal();return cartTotal+packagingTotal;};// Update paid amount when payment type changes\nuseEffect(()=>{const total=calculateTotal();if(paymentType==='full'){setPaidAmount(total);}else if(paymentType==='partial'){// Only reset to 0 if it's currently set to the full amount\nif(paidAmount===total){setPaidAmount(0);}}},[paymentType,cart,packagingCart]);// Function to get the current price for a specific unit\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!(unitStockInfo!==null&&unitStockInfo!==void 0&&unitStockInfo.price))return 0;// If we're in standard mode, return the standard unit price\nif(priceMode==='standard'){return unitStockInfo.price;}// If we're in wholesale mode, we need to calculate the wholesale price for this unit\nif(priceMode==='wholesale'&&product.wholesale_price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);// Handle edge cases\nif(!standardBasePrice||standardBasePrice<=0){return unitStockInfo.price;}// Calculate the conversion factor from standard to wholesale\nconst wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;// For wholesale pricing, we need to apply the wholesale conversion factor\n// to the base unit price, then convert to the selected unit\nlet wholesaleUnitPrice;if(unitStockInfo.is_base_unit){// If this is the base unit, apply wholesale factor directly\nwholesaleUnitPrice=standardBasePrice*wholesaleConversionFactor;}else{// If this is not the base unit, we need to:\n// 1. Get the wholesale base price\n// 2. Convert it to the selected unit using the same conversion factor as the standard price\nconst standardUnitPrice=unitStockInfo.price;const unitConversionFactor=standardUnitPrice/standardBasePrice;wholesaleUnitPrice=wholesaleBasePrice*unitConversionFactor;}// Round to 2 decimal places to avoid floating point precision issues\nconst roundedPrice=Math.round(wholesaleUnitPrice*100)/100;// Ensure we return a valid number\nreturn isNaN(roundedPrice)||roundedPrice<0?unitStockInfo.price:roundedPrice;}// Fallback to standard price\nreturn unitStockInfo.price;};useEffect(()=>{const initializeData=async()=>{await fetchCategories();// Don't fetch products here - let the categories useEffect handle it\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categoriesLoaded&&categories.length>0){fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categoriesLoaded]);// Only depend on categoriesLoaded flag\n// Debounced search effect - optimized to prevent focus loss\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Only set timeout if searchInput is not empty or if it was cleared\nif(searchInput!==''){searchTimeoutRef.current=setTimeout(()=>{const newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);},500);}else if(filtersRef.current.search!==''){// If search input is cleared, immediately update filters\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:''});setFilters(newFilters);fetchProducts(newFilters);}// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput]);// Only depend on searchInput to prevent re-renders\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/api/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=useCallback(async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const url=\"/api/products/\".concat(params.toString()?'?'+params.toString():'');const response=await api.get(url);const allProducts=response.data.results||response.data;// If categories are not loaded yet, show all products but log a warning\nif(categoriesRef.current.length===0||!categoriesLoadedRef.current){setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category_name, find the category in our categories list\nif(product.category_name){const category=categoriesRef.current.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categoriesRef.current.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category object with ID, find the category in our categories list\nelse if(product.category&&product.category.id){const category=categoriesRef.current.find(cat=>cat.id===product.category.id);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categoriesRef.current.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);}catch(err){setError('Failed to load products');}finally{setLoading(false);}},[]);// No dependencies to avoid circular references\nconst fetchCategories=useCallback(async()=>{try{const response=await api.get('/api/products/categories/');let categoriesData=response.data.results||response.data;// Load session-based sellable status from sessionStorage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');// Apply session-based sellable status\ncategoriesData=categoriesData.map(cat=>{const isSellable=sellableStatus.hasOwnProperty(cat.id)?sellableStatus[cat.id]:cat.is_sellable;return _objectSpread(_objectSpread({},cat),{},{is_sellable:isSellable});});setCategories(categoriesData);setCategoriesLoaded(true);}catch(err){console.error('Error fetching categories:',err);}},[]);// No dependencies needed for fetchCategories\nconst toggleCategorySellable=useCallback(async(categoryId,currentStatus)=>{try{setCategoryUpdating(true);const newStatus=!currentStatus;// Update session storage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');sellableStatus[categoryId]=newStatus;sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));// Update categories state immediately for UI feedback\nsetCategories(prevCategories=>prevCategories.map(cat=>cat.id===categoryId?_objectSpread(_objectSpread({},cat),{},{is_sellable:newStatus}):cat));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\n// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to update category status');console.error('Category toggle error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst resetAllCategoriesToSellable=useCallback(async()=>{try{setCategoryUpdating(true);// Create a sellable status object with all categories set to true\nconst allSellableStatus={};categoriesRef.current.forEach(cat=>{allSellableStatus[cat.id]=true;});// Save to session storage\nsessionStorage.setItem('sellableCategories',JSON.stringify(allSellableStatus));// Update categories state immediately\nsetCategories(prevCategories=>prevCategories.map(cat=>_objectSpread(_objectSpread({},cat),{},{is_sellable:true})));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\nsetSuccess('All categories have been set to sellable');// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to reset categories');console.error('Category reset error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst fetchStockAvailability=async productId=>{try{const response=await api.get(\"/api/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nlet unit=selectedUnit;if(!unit&&product.compatible_units&&product.compatible_units[0]){var _compatibleUnit$unit,_compatibleUnit$unit2,_compatibleUnit$unit3;const compatibleUnit=product.compatible_units[0];unit={id:((_compatibleUnit$unit=compatibleUnit.unit)===null||_compatibleUnit$unit===void 0?void 0:_compatibleUnit$unit.id)||compatibleUnit.unit,name:compatibleUnit.unit_name||((_compatibleUnit$unit2=compatibleUnit.unit)===null||_compatibleUnit$unit2===void 0?void 0:_compatibleUnit$unit2.name)||'Piece',symbol:compatibleUnit.unit_symbol||((_compatibleUnit$unit3=compatibleUnit.unit)===null||_compatibleUnit$unit3===void 0?void 0:_compatibleUnit$unit3.symbol)||'piece'};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);// Update cart first\nif(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(prevCart=>prevCart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}// Get unit stock info for price calculation\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product),price_mode:priceMode});setCart(prevCart=>[...prevCart,newCartItem]);}// Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\nif(product.has_packaging&&product.packaging_price){setTimeout(()=>{addPackagingAutomatically(product,unit);},0);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));// Also remove packaging if sales item is removed\nsetPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));// Update packaging quantity automatically if product has packaging\nconst product=products.find(p=>p.id===productId);if(product&&product.has_packaging&&product.packaging_price){const unit={id:unitId};updatePackagingQuantityAutomatically(product,unit,quantity);}setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};// Packaging functions\nconst addPackagingAutomatically=(product,unit)=>{if(!product.has_packaging||!product.packaging_price){return;}// Use a callback to get the current cart state\nsetCart(currentCart=>{// Calculate packaging quantity based on sales quantity\nconst salesItem=currentCart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(!salesItem)return currentCart;// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// For packaging, we use the base unit (pieces) to calculate quantity\n// If the sales unit is not the base unit, we need to convert to pieces\nlet packagingQuantity=salesItem.quantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesItem.quantity*unitStockInfo.conversion_factor;}// Update packaging cart\nsetPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,// Track which sales unit this packaging is for\nsales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});return currentCart;});};const addToPackagingCart=product=>{if(!product.has_packaging||!product.packaging_price){setError('This product does not have packaging consignation');return;}const existingPackaging=packagingCart.find(item=>item.id===product.id);if(existingPackaging){setPackagingCart(packagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{const newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price),status:'consignation',customer_name:customerInfo.name,customer_phone:customerInfo.phone});setPackagingCart([...packagingCart,newPackagingItem]);}setError('');};const updatePackagingQuantityAutomatically=(product,unit,salesQuantity)=>{if(!product.has_packaging||!product.packaging_price){return;}// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// Calculate packaging quantity based on sales quantity\nlet packagingQuantity=salesQuantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesQuantity*unitStockInfo.conversion_factor;}setPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item if it doesn't exist\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,sales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});};const updatePackagingQuantity=(productId,quantity)=>{if(quantity<=0){setPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity,total_price:item.unit_price*quantity}):item));}};const updatePackagingStatus=(productId,status)=>{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{status}):item));};const removeFromPackagingCart=productId=>{setPackagingCart(packagingCart.filter(item=>item.id!==productId));};const calculatePackagingTotal=()=>{return packagingCart.reduce((total,item)=>{// Only \"consignation\" (paid) packaging should be included in the total\n// \"exchange\" and \"due\" packaging are not payable\nif(item.status==='consignation'){return total+(item.total_price||0);}return total;},0);};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};const autoPrintReceipt=async function(saleNumber,saleData){let saleStatus=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'completed';try{// Create print content for the sale\nconst total=calculateSubtotal();const remaining=total-paidAmount;const printData={sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:total,paid_amount:paidAmount,remaining_amount:remaining,payment_status:remaining>0?'partial':'paid',due_date:remaining>0?new Date(Date.now()+30*24*60*60*1000).toLocaleDateString():null,// 30 days from now\nitems:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};// Generate print content using the same logic as PrintButton\nconst printContent=generatePrintContent(printData,'Sale Receipt','sale',t);// Open print window\nconst printWindow=window.open('','_blank','width=800,height=600');printWindow.document.write(printContent);printWindow.document.close();// Wait for content to load then print\nconst printAfterLoad=()=>{printWindow.focus();printWindow.print();// Close the window after a short delay\nsetTimeout(()=>{printWindow.close();},1000);};// Check if window is already loaded\nif(printWindow.document.readyState==='complete'){printAfterLoad();}else{printWindow.onload=printAfterLoad;}}catch(error){// Don't show error to user as it's not critical\n}};const handleCheckout=async()=>{if(cart.length===0){setError(t('pos.cart_empty'));return;}setProcessing(true);setError('');// Validate customer name for partial payments\nif(paymentType==='partial'&&(!customerInfo.name||!customerInfo.name.trim())){setError('Customer name is required for partial payments');setProcessing(false);return;}// Validate paid amount\nconst total=calculateTotal();if(paidAmount>total){setError('Paid amount cannot exceed the total amount');setProcessing(false);return;}if(paidAmount<0){setError('Paid amount cannot be negative');setProcessing(false);return;}try{const saleData={sale_type:'sale',customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,paid_amount:paidAmount,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};}),packaging_items:packagingCart.map(item=>({product:item.id,quantity:parseFloat(item.quantity),unit:7,// Use the correct piece unit ID (7) for packaging\nunit_price:parseFloat(item.unit_price),status:item.status||'consignation',customer_name:item.customer_name||customerInfo.name,customer_phone:item.customer_phone||customerInfo.phone,notes:item.notes||''}))};// Create the sale\nconst response=await api.post('/api/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{const completionResponse=await api.post(\"/api/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'completed');}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();// Show success message with packaging transaction info if created\nlet successMessage=\"Sale completed successfully! Sale Number: \".concat(saleNumber);if(completionResponse.data.packaging_transaction){const pkgTransaction=completionResponse.data.packaging_transaction;successMessage+=\"\\n\\nPackaging transaction automatically created:\\nTransaction: \".concat(pkgTransaction.transaction_number,\"\\nAmount: \").concat(pkgTransaction.total_amount,\" MGA\");}alert(successMessage);}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nsetError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'pending');}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');alert(t('messages.pending_sale_created',{saleNumber}));}}catch(err){var _err$response,_err$response$data,_err$response2,_err$response2$data,_err$response3,_err$response3$data,_err$response4,_err$response4$data;// Handle different types of errors\nif((_err$response=err.response)!==null&&_err$response!==void 0&&(_err$response$data=_err$response.data)!==null&&_err$response$data!==void 0&&_err$response$data.error){setError(err.response.data.error);}else if((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.detail){setError(err.response.data.detail);}else if((_err$response3=err.response)!==null&&_err$response3!==void 0&&(_err$response3$data=_err$response3.data)!==null&&_err$response3$data!==void 0&&_err$response3$data.customer_name){setError(err.response.data.customer_name[0]);}else if((_err$response4=err.response)!==null&&_err$response4!==void 0&&(_err$response4$data=_err$response4.data)!==null&&_err$response4$data!==void 0&&_err$response4$data.paid_amount){setError(err.response.data.paid_amount[0]);}else{setError('Failed to create sale. Please check the console for details.');}}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setPackagingCart([]);setError('');};const handleFilterChange=useCallback((filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}},[]);// No dependencies needed since we use ref\nconst clearFilters=useCallback(()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\n// Only fetch products if categories are loaded\nif(categoriesLoadedRef.current&&categoriesRef.current.length>0){fetchProducts(clearedFilters);}},[categoriesLoaded,categories.length]);const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products (only for complete sales)\nif(saleMode==='complete'&&product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>{var _u$unit;return(((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.id)||u.unit)===selectedUnitId;});if(selectedCompatibleUnit){var _selectedCompatibleUn2;// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _selectedCompatibleUn;return u.id===(((_selectedCompatibleUn=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn===void 0?void 0:_selectedCompatibleUn.id)||selectedCompatibleUnit.unit);});const unitPrice=getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product);// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:((_selectedCompatibleUn2=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn2===void 0?void 0:_selectedCompatibleUn2.id)||selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.point_of_sale')}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:t('alerts.sale_will_be_completed'),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:t('alerts.sale_will_be_created_pending'),children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group print-receipt-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle print-receipt-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:t('alerts.print_receipt_after_sale'),children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:t('pos.dont_print_receipt'),children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:t('pos.search_products'),value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)},\"search-input\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{margin:'0',fontSize:'1rem',fontWeight:'600'},children:[\"Manage Sellable Categories\",categoryUpdating&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'0.5rem',color:'#3b82f6'},children:\"\\u27F3\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetAllCategoriesToSellable,disabled:categoryUpdating,style:{padding:'0.5rem 1rem',fontSize:'0.875rem',borderRadius:'0.375rem',border:'1px solid #3b82f6',cursor:categoryUpdating?'not-allowed':'pointer',backgroundColor:categoryUpdating?'#9ca3af':'#3b82f6',color:'white',fontWeight:'500',opacity:categoryUpdating?0.6:1},children:\"Reset All to Sellable\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.map(product=>{var _product$compatible_u2;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0&&saleMode==='complete'?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[(_product$compatible_u=>{// Find the actual base unit and get its price\nconst baseUnit=(_product$compatible_u=product.compatible_units)===null||_product$compatible_u===void 0?void 0:_product$compatible_u.find(u=>u.unit.is_base_unit);if(baseUnit&&stockAvailability[product.id]){const updatedStockInfo=getUpdatedStockAvailability(product.id);const baseUnitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _baseUnit$unit;return u.id===(((_baseUnit$unit=baseUnit.unit)===null||_baseUnit$unit===void 0?void 0:_baseUnit$unit.id)||baseUnit.unit);});if(baseUnitStockInfo){return getCurrentUnitPrice(product,baseUnitStockInfo).toFixed(2);}}// Fallback to the original price\nreturn getCurrentPrice(product).toFixed(2);})(),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u2=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u2===void 0?void 0:_product$compatible_u2.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{var _compatibleUnit$unit5,_compatibleUnit$unit6;const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit4;return u.id===(((_compatibleUnit$unit4=compatibleUnit.unit)===null||_compatibleUnit$unit4===void 0?void 0:_compatibleUnit$unit4.id)||compatibleUnit.unit);});if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit5=compatibleUnit.unit)===null||_compatibleUnit$unit5===void 0?void 0:_compatibleUnit$unit5.name)||compatibleUnit.unit_name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA (\",unitStockInfo.available_quantity,\" available)\"]},((_compatibleUnit$unit6=compatibleUnit.unit)===null||_compatibleUnit$unit6===void 0?void 0:_compatibleUnit$unit6.id)||compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _compatibleUnit$unit8,_compatibleUnit$unit9,_compatibleUnit$unit0,_compatibleUnit$unit1;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit7;return u.id===(((_compatibleUnit$unit7=compatibleUnit.unit)===null||_compatibleUnit$unit7===void 0?void 0:_compatibleUnit$unit7.id)||compatibleUnit.unit);});const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit8=compatibleUnit.unit)===null||_compatibleUnit$unit8===void 0?void 0:_compatibleUnit$unit8.name)||compatibleUnit.unit_name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||((_compatibleUnit$unit9=compatibleUnit.unit)===null||_compatibleUnit$unit9===void 0?void 0:_compatibleUnit$unit9.symbol)||compatibleUnit.unit_symbol;return/*#__PURE__*/_jsxs(\"option\",{value:((_compatibleUnit$unit1=compatibleUnit.unit)===null||_compatibleUnit$unit1===void 0?void 0:_compatibleUnit$unit1.id)||compatibleUnit.unit,disabled:saleMode==='complete'?!isAvailable:false,children:[unitName,\" (\",unitSymbol,\") - \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA\",!isAvailable&&saleMode==='complete'?' - OUT OF STOCK':'']},((_compatibleUnit$unit0=compatibleUnit.unit)===null||_compatibleUnit$unit0===void 0?void 0:_compatibleUnit$unit0.id)||compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.has_packaging&&product.packaging_price&&/*#__PURE__*/_jsx(\"div\",{className:\"packaging-info\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"packaging-price\",children:[\"Packaging: \",product.packaging_price,\" MGA (Auto-added)\"]})}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Cart is empty\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart-hint\",children:\"Add items from the product list to start a sale\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-status\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:t('alerts.click_to_edit_quantity'),children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sales-item-status\",children:\"-\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:t('alerts.remove_item'),children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode))),packagingCart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"packaging-section-header\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Packaging Items (Auto-calculated)\"})}),packagingCart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item packaging-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[item.name,\" (Packaging)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),item.sales_unit_name&&/*#__PURE__*/_jsxs(\"p\",{className:\"packaging-source\",children:[\"From: \",item.quantity,\" \",item.sales_unit_symbol||'piece']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:\"piece\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-quantity\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quantity auto-calculated\",children:item.quantity}),/*#__PURE__*/_jsx(\"small\",{className:\"auto-label\",children:\"Auto\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.status,onChange:e=>updatePackagingStatus(item.id,e.target.value),className:\"packaging-status-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"consignation\",children:\"Consigned (Paid)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"exchange\",children:\"Exchange\"}),/*#__PURE__*/_jsx(\"option\",{value:\"due\",children:\"Due (Return Required)\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromPackagingCart(item.id),title:\"Remove packaging item\",children:\"\\xD7\"})})]},\"packaging-\".concat(item.id)))]})]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Items Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row packaging-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Products Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total (Products Only):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:paymentType==='partial'?\"Customer Name (Required for Partial Payment)\":\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value})),className:paymentType==='partial'&&!customerInfo.name?'required-field':''})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"full\",checked:paymentType==='full',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"partial\",checked:paymentType==='partial',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]}),paymentType==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateTotal(),value:paidAmount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setPaidAmount(value);},placeholder:t('forms.enter_amount_to_pay')}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Products Total: $\",calculateTotal().toFixed(2),\" | Remaining: $\",(calculateTotal()-(paidAmount||0)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkout-actions\",children:/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?t('pos.complete_sale'):t('pos.create_pending_sale'),printReceipt&&t('pos.print_receipt')]})})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useTranslation","useAuth","api","Button","generatePrintContent","PackagingManager","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","t","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","paymentType","setPaymentType","paidAmount","setPaidAmount","loading","setLoading","processing","setProcessing","error","setError","success","setSuccess","stockAvailability","setStockAvailability","categoriesLoaded","setCategoriesLoaded","categoryUpdating","setCategoryUpdating","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","filtersRef","searchTimeoutRef","categoriesRef","categoriesLoadedRef","current","syncSessionStorage","sellableStatus","forEach","cat","id","is_sellable","sessionStorage","setItem","JSON","stringify","length","fetchProducts","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","packagingCart","setPackagingCart","showPackagingManager","setShowPackagingManager","getCurrentPrice","product","wholesale_price","parseFloat","price","calculateTotal","cartTotal","reduce","total","item","unitPrice","unit_price","quantity","calculateTotalWithPackaging","packagingTotal","calculatePackagingTotal","getCurrentUnitPrice","unitStockInfo","standardBasePrice","wholesaleBasePrice","wholesaleConversionFactor","wholesaleUnitPrice","is_base_unit","standardUnitPrice","unitConversionFactor","roundedPrice","Math","round","isNaN","initializeData","fetchCategories","clearTimeout","setTimeout","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","compatible_units","selectedUnit","find","u","is_default","unit","_selectedUnit$unit","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","unitInfo","unit_id","conversion_factor","baseUnit","totalBaseStock","available_quantity","remainingPieces","max","availableQuantity","isAvailable","floor","is_available","filterParams","arguments","undefined","params","URLSearchParams","append","url","concat","toString","get","allProducts","results","sellableProducts","isSellable","category_name","selectedCategory","parseInt","categoriesData","parse","getItem","hasOwnProperty","console","toggleCategorySellable","categoryId","currentStatus","newStatus","prevCategories","resetAllCategoriesToSellable","allSellableStatus","prev","addToCart","_compatibleUnit$unit","_compatibleUnit$unit2","_compatibleUnit$unit3","compatibleUnit","unit_name","symbol","unit_symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","prevCart","newCartItem","has_packaging","packaging_price","addPackagingAutomatically","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","p","updatePackagingQuantityAutomatically","removeFromCart","currentCart","salesItem","packagingQuantity","currentPackagingCart","existingPackaging","total_price","newPackagingItem","status","customer_name","customer_phone","sales_unit_id","sales_unit_name","sales_unit_symbol","addToPackagingCart","salesQuantity","updatePackagingQuantity","updatePackagingStatus","removeFromPackagingCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","saleStatus","remaining","printData","sale_number","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","total_amount","paid_amount","remaining_amount","payment_status","due_date","toLocaleDateString","items","_item$unit","product_name","product_sku","sku","printContent","printWindow","window","open","document","write","close","printAfterLoad","focus","print","readyState","onload","handleCheckout","trim","sale_type","payment_method","packaging_items","notes","saleId","completionResponse","Promise","resolve","successMessage","packaging_transaction","pkgTransaction","transaction_number","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","_u$unit","_selectedCompatibleUn2","_selectedCompatibleUn","className","children","onChange","variant","size","onClick","style","marginTop","type","title","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","display","justifyContent","alignItems","margin","fontSize","fontWeight","marginLeft","color","disabled","cursor","opacity","gridTemplateColumns","gap","borderColor","_product$compatible_u2","_product$compatible_u","baseUnitStockInfo","_baseUnit$unit","toFixed","_compatibleUnit$unit5","_compatibleUnit$unit6","_compatibleUnit$unit4","unitName","Boolean","stopPropagation","index","_compatibleUnit$unit8","_compatibleUnit$unit9","_compatibleUnit$unit0","_compatibleUnit$unit1","_compatibleUnit$unit7","availableQty","unitSymbol","onKeyPress","onBlur","min","autoFocus","method","checked","replace","toUpperCase","step"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport { generatePrintContent } from '../components/PrintButton';\nimport PackagingManager from '../components/PackagingManager';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [paymentType, setPaymentType] = useState('full'); // 'full' or 'partial'\n  const [paidAmount, setPaidAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [categoriesLoaded, setCategoriesLoaded] = useState(false);\n  const [categoryUpdating, setCategoryUpdating] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const filtersRef = useRef(filters); // Ref to store current filters\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const categoriesRef = useRef(categories); // Ref to store current categories\n  const categoriesLoadedRef = useRef(categoriesLoaded); // Ref to store categories loaded state\n\n  // Update refs whenever state changes\n  useEffect(() => {\n    filtersRef.current = filters;\n  }, [filters]);\n\n  useEffect(() => {\n    categoriesRef.current = categories;\n  }, [categories]);\n\n  useEffect(() => {\n    categoriesLoadedRef.current = categoriesLoaded;\n  }, [categoriesLoaded]);\n\n  // Function to sync session storage with categories state\n  const syncSessionStorage = useCallback(() => {\n    const sellableStatus = {};\n    categories.forEach(cat => {\n      sellableStatus[cat.id] = cat.is_sellable;\n    });\n    sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n  }, [categories]);\n\n  // Sync session storage whenever categories change\n  useEffect(() => {\n    if (categories.length > 0) {\n      syncSessionStorage();\n    }\n  }, [categories, syncSessionStorage]);\n\n  // Handle case where filters are cleared but categories aren't loaded yet\n  useEffect(() => {\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0 && filtersRef.current.category === '' && filtersRef.current.search === '') {\n      fetchProducts(filtersRef.current);\n    }\n  }, [categoriesLoaded, categories.length, filters]);\n\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n  \n  // Packaging state\n  const [packagingCart, setPackagingCart] = useState([]);\n  const [showPackagingManager, setShowPackagingManager] = useState(false);\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Calculate total amount (products only, excluding packaging)\n  const calculateTotal = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    return cartTotal;\n  };\n\n  // Calculate total amount including packaging (for display purposes)\n  const calculateTotalWithPackaging = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    const packagingTotal = calculatePackagingTotal();\n    return cartTotal + packagingTotal;\n  };\n\n  // Update paid amount when payment type changes\n  useEffect(() => {\n    const total = calculateTotal();\n    if (paymentType === 'full') {\n      setPaidAmount(total);\n    } else if (paymentType === 'partial') {\n      // Only reset to 0 if it's currently set to the full amount\n      if (paidAmount === total) {\n        setPaidAmount(0);\n      }\n    }\n  }, [paymentType, cart, packagingCart]);\n\n  // Function to get the current price for a specific unit\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo?.price) return 0;\n    \n    // If we're in standard mode, return the standard unit price\n    if (priceMode === 'standard') {\n      return unitStockInfo.price;\n    }\n    \n    // If we're in wholesale mode, we need to calculate the wholesale price for this unit\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      const standardBasePrice = parseFloat(product.price);\n      const wholesaleBasePrice = parseFloat(product.wholesale_price);\n      \n      // Handle edge cases\n      if (!standardBasePrice || standardBasePrice <= 0) {\n        return unitStockInfo.price;\n      }\n      \n      // Calculate the conversion factor from standard to wholesale\n      const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n      \n      // For wholesale pricing, we need to apply the wholesale conversion factor\n      // to the base unit price, then convert to the selected unit\n      let wholesaleUnitPrice;\n      \n      if (unitStockInfo.is_base_unit) {\n        // If this is the base unit, apply wholesale factor directly\n        wholesaleUnitPrice = standardBasePrice * wholesaleConversionFactor;\n      } else {\n        // If this is not the base unit, we need to:\n        // 1. Get the wholesale base price\n        // 2. Convert it to the selected unit using the same conversion factor as the standard price\n        const standardUnitPrice = unitStockInfo.price;\n        const unitConversionFactor = standardUnitPrice / standardBasePrice;\n        wholesaleUnitPrice = wholesaleBasePrice * unitConversionFactor;\n      }\n      \n      // Round to 2 decimal places to avoid floating point precision issues\n      const roundedPrice = Math.round(wholesaleUnitPrice * 100) / 100;\n      \n      // Ensure we return a valid number\n      return isNaN(roundedPrice) || roundedPrice < 0 ? unitStockInfo.price : roundedPrice;\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      // Don't fetch products here - let the categories useEffect handle it\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categoriesLoaded && categories.length > 0) {\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categoriesLoaded]); // Only depend on categoriesLoaded flag\n\n  // Debounced search effect - optimized to prevent focus loss\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Only set timeout if searchInput is not empty or if it was cleared\n    if (searchInput !== '') {\n      searchTimeoutRef.current = setTimeout(() => {\n        const newFilters = { ...filtersRef.current, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }, 500);\n    } else if (filtersRef.current.search !== '') {\n      // If search input is cleared, immediately update filters\n      const newFilters = { ...filtersRef.current, search: '' };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput]); // Only depend on searchInput to prevent re-renders\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/api/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      \n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = useCallback(async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categoriesRef.current.length === 0 || !categoriesLoadedRef.current) {\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category_name, find the category in our categories list\n        if (product.category_name) {\n          const category = categoriesRef.current.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categoriesRef.current.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category object with ID, find the category in our categories list\n        else if (product.category && product.category.id) {\n          const category = categoriesRef.current.find(cat => cat.id === product.category.id);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categoriesRef.current.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  }, []); // No dependencies to avoid circular references\n\n  const fetchCategories = useCallback(async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      let categoriesData = response.data.results || response.data;\n      \n      // Load session-based sellable status from sessionStorage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      \n      // Apply session-based sellable status\n      categoriesData = categoriesData.map(cat => {\n        const isSellable = sellableStatus.hasOwnProperty(cat.id) ? sellableStatus[cat.id] : cat.is_sellable;\n        return {\n          ...cat,\n          is_sellable: isSellable\n        };\n      });\n      \n      setCategories(categoriesData);\n      setCategoriesLoaded(true);\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n    }\n  }, []); // No dependencies needed for fetchCategories\n\n  const toggleCategorySellable = useCallback(async (categoryId, currentStatus) => {\n    try {\n      setCategoryUpdating(true);\n      const newStatus = !currentStatus;\n      \n      // Update session storage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      sellableStatus[categoryId] = newStatus;\n      sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n      \n      // Update categories state immediately for UI feedback\n      setCategories(prevCategories => \n        prevCategories.map(cat => \n          cat.id === categoryId ? { ...cat, is_sellable: newStatus } : cat\n        )\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to update category status');\n      console.error('Category toggle error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const resetAllCategoriesToSellable = useCallback(async () => {\n    try {\n      setCategoryUpdating(true);\n      \n      // Create a sellable status object with all categories set to true\n      const allSellableStatus = {};\n      categoriesRef.current.forEach(cat => {\n        allSellableStatus[cat.id] = true;\n      });\n      \n      // Save to session storage\n      sessionStorage.setItem('sellableCategories', JSON.stringify(allSellableStatus));\n      \n      // Update categories state immediately\n      setCategories(prevCategories => \n        prevCategories.map(cat => ({ ...cat, is_sellable: true }))\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      setSuccess('All categories have been set to sellable');\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to reset categories');\n      console.error('Category reset error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/api/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.compatible_units && product.compatible_units[0]) {\n      const compatibleUnit = product.compatible_units[0];\n      unit = {\n        id: compatibleUnit.unit?.id || compatibleUnit.unit,\n        name: compatibleUnit.unit_name || compatibleUnit.unit?.name || 'Piece',\n        symbol: compatibleUnit.unit_symbol || compatibleUnit.unit?.symbol || 'piece'\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    \n    // Update cart first\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(prevCart => prevCart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      // Get unit stock info for price calculation\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product),\n        price_mode: priceMode\n      };\n      setCart(prevCart => [...prevCart, newCartItem]);\n    }\n\n    // Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\n    if (product.has_packaging && product.packaging_price) {\n      setTimeout(() => {\n        addPackagingAutomatically(product, unit);\n      }, 0);\n    }\n    \n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n      // Also remove packaging if sales item is removed\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n\n      // Update packaging quantity automatically if product has packaging\n      const product = products.find(p => p.id === productId);\n      if (product && product.has_packaging && product.packaging_price) {\n        const unit = { id: unitId };\n        updatePackagingQuantityAutomatically(product, unit, quantity);\n      }\n      \n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  // Packaging functions\n  const addPackagingAutomatically = (product, unit) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Use a callback to get the current cart state\n    setCart(currentCart => {\n      // Calculate packaging quantity based on sales quantity\n      const salesItem = currentCart.find(item => \n        item.id === product.id && \n        item.unit_id === unit.id && \n        item.price_mode === priceMode\n      );\n      \n      if (!salesItem) return currentCart;\n\n      // Get unit information from stock availability\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      // For packaging, we use the base unit (pieces) to calculate quantity\n      // If the sales unit is not the base unit, we need to convert to pieces\n      let packagingQuantity = salesItem.quantity;\n      \n      // If the sales unit is not the base unit, convert to pieces\n      if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n        packagingQuantity = salesItem.quantity * unitStockInfo.conversion_factor;\n      }\n\n      // Update packaging cart\n      setPackagingCart(currentPackagingCart => {\n        const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n        if (existingPackaging) {\n          // Update existing packaging quantity to match sales quantity\n          return currentPackagingCart.map(item =>\n            item.id === product.id\n              ? { \n                  ...item, \n                  quantity: packagingQuantity,\n                  total_price: parseFloat(product.packaging_price) * packagingQuantity\n                }\n              : item\n          );\n        } else {\n          // Create new packaging item\n          const newPackagingItem = {\n            ...product,\n            quantity: packagingQuantity,\n            unit_price: parseFloat(product.packaging_price),\n            total_price: parseFloat(product.packaging_price) * packagingQuantity,\n            status: 'consignation', // Default status\n            customer_name: customerInfo.name,\n            customer_phone: customerInfo.phone,\n            sales_unit_id: unit.id, // Track which sales unit this packaging is for\n            sales_unit_name: unit.name,\n            sales_unit_symbol: unit.symbol\n          };\n          return [...currentPackagingCart, newPackagingItem];\n        }\n      });\n\n      return currentCart;\n    });\n  };\n\n  const addToPackagingCart = (product) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      setError('This product does not have packaging consignation');\n      return;\n    }\n\n    const existingPackaging = packagingCart.find(item => item.id === product.id);\n    if (existingPackaging) {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === product.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      const newPackagingItem = {\n        ...product,\n        quantity: 1,\n        unit_price: parseFloat(product.packaging_price),\n        total_price: parseFloat(product.packaging_price),\n        status: 'consignation',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone\n      };\n      setPackagingCart([...packagingCart, newPackagingItem]);\n    }\n    setError('');\n  };\n\n  const updatePackagingQuantityAutomatically = (product, unit, salesQuantity) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Get unit information from stock availability\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    // Calculate packaging quantity based on sales quantity\n    let packagingQuantity = salesQuantity;\n    \n    // If the sales unit is not the base unit, convert to pieces\n    if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n      packagingQuantity = salesQuantity * unitStockInfo.conversion_factor;\n    }\n\n    setPackagingCart(currentPackagingCart => {\n      const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n      if (existingPackaging) {\n        // Update existing packaging quantity to match sales quantity\n        return currentPackagingCart.map(item =>\n          item.id === product.id\n            ? { \n                ...item, \n                quantity: packagingQuantity,\n                total_price: parseFloat(product.packaging_price) * packagingQuantity\n              }\n            : item\n        );\n      } else {\n        // Create new packaging item if it doesn't exist\n        const newPackagingItem = {\n          ...product,\n          quantity: packagingQuantity,\n          unit_price: parseFloat(product.packaging_price),\n          total_price: parseFloat(product.packaging_price) * packagingQuantity,\n          status: 'consignation', // Default status\n          customer_name: customerInfo.name,\n          customer_phone: customerInfo.phone,\n          sales_unit_id: unit.id,\n          sales_unit_name: unit.name,\n          sales_unit_symbol: unit.symbol\n        };\n        return [...currentPackagingCart, newPackagingItem];\n      }\n    });\n  };\n\n  const updatePackagingQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === productId\n          ? { ...item, quantity, total_price: item.unit_price * quantity }\n          : item\n      ));\n    }\n  };\n\n  const updatePackagingStatus = (productId, status) => {\n    setPackagingCart(packagingCart.map(item =>\n      item.id === productId\n        ? { ...item, status }\n        : item\n    ));\n  };\n\n  const removeFromPackagingCart = (productId) => {\n    setPackagingCart(packagingCart.filter(item => item.id !== productId));\n  };\n\n  const calculatePackagingTotal = () => {\n    return packagingCart.reduce((total, item) => {\n      // Only \"consignation\" (paid) packaging should be included in the total\n      // \"exchange\" and \"due\" packaging are not payable\n      if (item.status === 'consignation') {\n        return total + (item.total_price || 0);\n      }\n      return total;\n    }, 0);\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData, saleStatus = 'completed') => {\n    try {\n      // Create print content for the sale\n      const total = calculateSubtotal();\n      const remaining = total - paidAmount;\n      \n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: saleStatus,\n        total_amount: total,\n        paid_amount: paidAmount,\n        remaining_amount: remaining,\n        payment_status: remaining > 0 ? 'partial' : 'paid',\n        due_date: remaining > 0 ? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString() : null, // 30 days from now\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit_name || item.unit?.name || 'piece',\n          unit_price: item.unit_price,\n          total_price: item.unit_price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale', t);\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      const printAfterLoad = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n      // Check if window is already loaded\n      if (printWindow.document.readyState === 'complete') {\n        printAfterLoad();\n      } else {\n        printWindow.onload = printAfterLoad;\n      }\n      \n    } catch (error) {\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError(t('pos.cart_empty'));\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    // Validate customer name for partial payments\n    if (paymentType === 'partial' && (!customerInfo.name || !customerInfo.name.trim())) {\n      setError('Customer name is required for partial payments');\n      setProcessing(false);\n      return;\n    }\n\n    // Validate paid amount\n    const total = calculateTotal();\n    if (paidAmount > total) {\n      setError('Paid amount cannot exceed the total amount');\n      setProcessing(false);\n      return;\n    }\n\n    if (paidAmount < 0) {\n      setError('Paid amount cannot be negative');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const saleData = {\n        sale_type: 'sale',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        paid_amount: paidAmount,\n        items: cart.map(item => {\n          // More robust unit ID extraction\n          let unitId = item.unit_id;\n          if (typeof unitId === 'object' && unitId !== null) {\n            unitId = unitId.id || unitId;\n          }\n          \n          return {\n            product: item.id,\n            quantity: parseFloat(item.quantity),\n            unit: parseInt(unitId),\n            unit_price: parseFloat(item.unit_price),\n            price_mode: item.price_mode || 'standard'\n          };\n        }),\n        packaging_items: packagingCart.map(item => ({\n          product: item.id,\n          quantity: parseFloat(item.quantity),\n          unit: 7, // Use the correct piece unit ID (7) for packaging\n          unit_price: parseFloat(item.unit_price),\n          status: item.status || 'consignation',\n          customer_name: item.customer_name || customerInfo.name,\n          customer_phone: item.customer_phone || customerInfo.phone,\n          notes: item.notes || ''\n        }))\n      };\n\n\n      // Create the sale\n      const response = await api.post('/api/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          const completionResponse = await api.post(`/api/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            await autoPrintReceipt(saleNumber, response.data, 'completed');\n          }\n      \n      // Clear cart and customer info\n      setCart([]);\n      setPackagingCart([]);\n      setCustomerInfo({ name: '', phone: '', email: '' });\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          // Show success message with packaging transaction info if created\n          let successMessage = `Sale completed successfully! Sale Number: ${saleNumber}`;\n          if (completionResponse.data.packaging_transaction) {\n            const pkgTransaction = completionResponse.data.packaging_transaction;\n            successMessage += `\\n\\nPackaging transaction automatically created:\\nTransaction: ${pkgTransaction.transaction_number}\\nAmount: ${pkgTransaction.total_amount} MGA`;\n          }\n          alert(successMessage);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          await autoPrintReceipt(saleNumber, response.data, 'pending');\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setPackagingCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(t('messages.pending_sale_created', { saleNumber }));\n      }\n    } catch (err) {\n      \n      // Handle different types of errors\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.data?.detail) {\n        setError(err.response.data.detail);\n      } else if (err.response?.data?.customer_name) {\n        setError(err.response.data.customer_name[0]);\n      } else if (err.response?.data?.paid_amount) {\n        setError(err.response.data.paid_amount[0]);\n      } else {\n        setError('Failed to create sale. Please check the console for details.');\n      }\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setPackagingCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = useCallback((filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = { ...filtersRef.current, [filterType]: value };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  }, []); // No dependencies needed since we use ref\n\n  const clearFilters = useCallback(() => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    \n    // Only fetch products if categories are loaded\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0) {\n      fetchProducts(clearedFilters);\n    }\n  }, [categoriesLoaded, categories.length]);\n\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products (only for complete sales)\n    if (saleMode === 'complete' && product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => (u.unit?.id || u.unit) === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === (selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit));\n          const unitPrice = getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product);\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>{t('titles.point_of_sale')}</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title={t('alerts.sale_will_be_completed')}\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title={t('alerts.sale_will_be_created_pending')}\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group print-receipt-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle print-receipt-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title={t('alerts.print_receipt_after_sale')}\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title={t('pos.dont_print_receipt')}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                key=\"search-input\"\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder={t('pos.search_products')}\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                alignItems: 'center',\n                marginBottom: '1rem'\n              }}>\n                <h3 style={{ margin: '0', fontSize: '1rem', fontWeight: '600' }}>\n                  Manage Sellable Categories\n                  {categoryUpdating && <span style={{ marginLeft: '0.5rem', color: '#3b82f6' }}>⟳</span>}\n                </h3>\n                <button\n                  onClick={resetAllCategoriesToSellable}\n                  disabled={categoryUpdating}\n                  style={{\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #3b82f6',\n                    cursor: categoryUpdating ? 'not-allowed' : 'pointer',\n                    backgroundColor: categoryUpdating ? '#9ca3af' : '#3b82f6',\n                    color: 'white',\n                    fontWeight: '500',\n                    opacity: categoryUpdating ? 0.6 : 1\n                  }}\n                >\n                  Reset All to Sellable\n                </button>\n              </div>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n          </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 && saleMode === 'complete' ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {(() => {\n                      // Find the actual base unit and get its price\n                      const baseUnit = product.compatible_units?.find(u => u.unit.is_base_unit);\n                      if (baseUnit && stockAvailability[product.id]) {\n                        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                        const baseUnitStockInfo = updatedStockInfo?.find(u => u.id === (baseUnit.unit?.id || baseUnit.unit));\n                        if (baseUnitStockInfo) {\n                          return getCurrentUnitPrice(product, baseUnitStockInfo).toFixed(2);\n                        }\n                      }\n                      // Fallback to the original price\n                      return getCurrentPrice(product).toFixed(2);\n                    })()} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit?.id || compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA ({unitStockInfo.available_quantity} available)\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit?.symbol || compatibleUnit.unit_symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit?.id || compatibleUnit.unit} \n                              value={compatibleUnit.unit?.id || compatibleUnit.unit}\n                              disabled={saleMode === 'complete' ? !isAvailable : false}\n                            >\n                              {unitName} ({unitSymbol}) - {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA\n                              {!isAvailable && saleMode === 'complete' ? ' - OUT OF STOCK' : ''}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* Packaging Info - Show for products with packaging */}\n                  {product.has_packaging && product.packaging_price && (\n                    <div className=\"packaging-info\">\n                      <small className=\"packaging-price\">\n                        Packaging: {product.packaging_price} MGA (Auto-added)\n                      </small>\n                    </div>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <div className=\"empty-cart\">\n                <p>Cart is empty</p>\n                <p className=\"empty-cart-hint\">Add items from the product list to start a sale</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-status\">Status</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title={t('alerts.click_to_edit_quantity')}\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-status\">\n                      <span className=\"sales-item-status\">-</span>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title={t('alerts.remove_item')}\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                \n                {/* Packaging Items */}\n                {packagingCart.length > 0 && (\n                  <>\n                    <div className=\"packaging-section-header\">\n                      <h4>Packaging Items (Auto-calculated)</h4>\n                    </div>\n                    {packagingCart.map(item => (\n                      <div key={`packaging-${item.id}`} className=\"cart-item packaging-item\">\n                        <div className=\"item-product\">\n                          <h4>{item.name} (Packaging)</h4>\n                          <p className=\"item-sku\">SKU: {item.sku}</p>\n                          {item.sales_unit_name && (\n                            <p className=\"packaging-source\">\n                              From: {item.quantity} {item.sales_unit_symbol || 'piece'}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"item-unit\">\n                          piece\n                        </div>\n                        <div className=\"item-price\">\n                          {parseFloat(item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-quantity\">\n                          <span className=\"quantity auto-calculated\">\n                            {item.quantity}\n                          </span>\n                          <small className=\"auto-label\">Auto</small>\n                        </div>\n                        <div className=\"item-status\">\n                          <select\n                            value={item.status}\n                            onChange={(e) => updatePackagingStatus(item.id, e.target.value)}\n                            className=\"packaging-status-select\"\n                          >\n                            <option value=\"consignation\">Consigned (Paid)</option>\n                            <option value=\"exchange\">Exchange</option>\n                            <option value=\"due\">Due (Return Required)</option>\n                          </select>\n                        </div>\n                        <div className=\"item-total\">\n                          {(item.quantity * item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-actions\">\n                          <Button\n                            size=\"small\"\n                            variant=\"danger\"\n                            onClick={() => removeFromPackagingCart(item.id)}\n                            title=\"Remove packaging item\"\n                          >\n                            ×\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Items Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row packaging-breakdown\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span>Products Total:</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row total\">\n                  <span>Total (Products Only):</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder={paymentType === 'partial' ? \"Customer Name (Required for Partial Payment)\" : \"Customer Name (Optional)\"}\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className={paymentType === 'partial' && !customerInfo.name ? 'required-field' : ''}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n                \n                <h3>Payment Type</h3>\n                <div className=\"payment-types\">\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"full\"\n                      checked={paymentType === 'full'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Full Payment (100%)</span>\n                  </label>\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"partial\"\n                      checked={paymentType === 'partial'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Partial Payment (0-99.99%)</span>\n                  </label>\n                </div>\n                \n                {paymentType === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateTotal()}\n                      value={paidAmount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setPaidAmount(value);\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                    />\n                    <small>Products Total: ${calculateTotal().toFixed(2)} | Remaining: ${(calculateTotal() - (paidAmount || 0)).toFixed(2)}</small>\n                  </div>\n                )}\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? t('pos.complete_sale') : t('pos.create_pending_sale')}\n                  {printReceipt && t('pos.print_receipt')}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CACvE,OAASC,cAAc,KAAQ,eAAe,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,OAASC,oBAAoB,KAAQ,2BAA2B,CAChE,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAC7D,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,CAAE,CAAC,CAAGb,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAEc,IAAK,CAAC,CAAGb,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACqB,UAAU,CAAEC,aAAa,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACuB,IAAI,CAAEC,OAAO,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACyB,YAAY,CAAEC,eAAe,CAAC,CAAG1B,QAAQ,CAAC,CAC/C2B,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CAAC,CACF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG/B,QAAQ,CAAC,MAAM,CAAC,CAC1D,KAAM,CAACgC,WAAW,CAAEC,cAAc,CAAC,CAAGjC,QAAQ,CAAC,MAAM,CAAC,CAAE;AACxD,KAAM,CAACkC,UAAU,CAAEC,aAAa,CAAC,CAAGnC,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACoC,OAAO,CAAEC,UAAU,CAAC,CAAGrC,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACsC,UAAU,CAAEC,aAAa,CAAC,CAAGvC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACwC,KAAK,CAAEC,QAAQ,CAAC,CAAGzC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC0C,OAAO,CAAEC,UAAU,CAAC,CAAG3C,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAC4C,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG7C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9D,KAAM,CAAC8C,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG/C,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACgD,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjD,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACkD,OAAO,CAAEC,UAAU,CAAC,CAAGnD,QAAQ,CAAC,CACrCoD,QAAQ,CAAE,EAAE,CACZC,MAAM,CAAE,EACV,CAAC,CAAC,CACF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGvD,QAAQ,CAAC,EAAE,CAAC,CAAE;AACpD,KAAM,CAACwD,eAAe,CAAEC,kBAAkB,CAAC,CAAGzD,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAAC0D,YAAY,CAAEC,eAAe,CAAC,CAAG3D,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAC4D,aAAa,CAAEC,gBAAgB,CAAC,CAAG7D,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AACxD,KAAM,CAAA8D,cAAc,CAAG5D,MAAM,CAAC,IAAI,CAAC,CAAE;AACrC,KAAM,CAAA6D,UAAU,CAAG7D,MAAM,CAACgD,OAAO,CAAC,CAAE;AACpC,KAAM,CAAAc,gBAAgB,CAAG9D,MAAM,CAAC,IAAI,CAAC,CAAE;AACvC,KAAM,CAAA+D,aAAa,CAAG/D,MAAM,CAACmB,UAAU,CAAC,CAAE;AAC1C,KAAM,CAAA6C,mBAAmB,CAAGhE,MAAM,CAAC4C,gBAAgB,CAAC,CAAE;AAEtD;AACA7C,SAAS,CAAC,IAAM,CACd8D,UAAU,CAACI,OAAO,CAAGjB,OAAO,CAC9B,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEbjD,SAAS,CAAC,IAAM,CACdgE,aAAa,CAACE,OAAO,CAAG9C,UAAU,CACpC,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhBpB,SAAS,CAAC,IAAM,CACdiE,mBAAmB,CAACC,OAAO,CAAGrB,gBAAgB,CAChD,CAAC,CAAE,CAACA,gBAAgB,CAAC,CAAC,CAEtB;AACA,KAAM,CAAAsB,kBAAkB,CAAGjE,WAAW,CAAC,IAAM,CAC3C,KAAM,CAAAkE,cAAc,CAAG,CAAC,CAAC,CACzBhD,UAAU,CAACiD,OAAO,CAACC,GAAG,EAAI,CACxBF,cAAc,CAACE,GAAG,CAACC,EAAE,CAAC,CAAGD,GAAG,CAACE,WAAW,CAC1C,CAAC,CAAC,CACFC,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAACR,cAAc,CAAC,CAAC,CAC9E,CAAC,CAAE,CAAChD,UAAU,CAAC,CAAC,CAEhB;AACApB,SAAS,CAAC,IAAM,CACd,GAAIoB,UAAU,CAACyD,MAAM,CAAG,CAAC,CAAE,CACzBV,kBAAkB,CAAC,CAAC,CACtB,CACF,CAAC,CAAE,CAAC/C,UAAU,CAAE+C,kBAAkB,CAAC,CAAC,CAEpC;AACAnE,SAAS,CAAC,IAAM,CACd,GAAIiE,mBAAmB,CAACC,OAAO,EAAIF,aAAa,CAACE,OAAO,CAACW,MAAM,CAAG,CAAC,EAAIf,UAAU,CAACI,OAAO,CAACf,QAAQ,GAAK,EAAE,EAAIW,UAAU,CAACI,OAAO,CAACd,MAAM,GAAK,EAAE,CAAE,CAC7I0B,aAAa,CAAChB,UAAU,CAACI,OAAO,CAAC,CACnC,CACF,CAAC,CAAE,CAACrB,gBAAgB,CAAEzB,UAAU,CAACyD,MAAM,CAAE5B,OAAO,CAAC,CAAC,CAElD,KAAM,CAAC8B,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGjF,QAAQ,CAAC,KAAK,CAAC,CAAE;AACrE,KAAM,CAACkF,SAAS,CAAEC,YAAY,CAAC,CAAGnF,QAAQ,CAAC,UAAU,CAAC,CAAE;AACxD,KAAM,CAACoF,QAAQ,CAAEC,WAAW,CAAC,CAAGrF,QAAQ,CAAC,UAAU,CAAC,CAAE;AACtD,KAAM,CAACsF,YAAY,CAAEC,eAAe,CAAC,CAAGvF,QAAQ,CAAC,IAAI,CAAC,CAAE;AAExD;AACA,KAAM,CAACwF,aAAa,CAAEC,gBAAgB,CAAC,CAAGzF,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC0F,oBAAoB,CAAEC,uBAAuB,CAAC,CAAG3F,QAAQ,CAAC,KAAK,CAAC,CAEvE;AACA,KAAM,CAAA4F,eAAe,CAAIC,OAAO,EAAK,CACnC,GAAIX,SAAS,GAAK,WAAW,EAAIW,OAAO,CAACC,eAAe,CAAE,CACxD,MAAO,CAAAC,UAAU,CAACF,OAAO,CAACC,eAAe,CAAC,CAC5C,CACA,MAAO,CAAAC,UAAU,CAACF,OAAO,CAACG,KAAK,CAAC,CAClC,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,SAAS,CAAG3E,IAAI,CAAC4E,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CAC7C,KAAM,CAAAC,SAAS,CAAGD,IAAI,CAACE,UAAU,EAAI,CAAC,CACtC,MAAO,CAAAH,KAAK,CAAIE,SAAS,CAAGD,IAAI,CAACG,QAAS,CAC5C,CAAC,CAAE,CAAC,CAAC,CACL,MAAO,CAAAN,SAAS,CAClB,CAAC,CAED;AACA,KAAM,CAAAO,2BAA2B,CAAGA,CAAA,GAAM,CACxC,KAAM,CAAAP,SAAS,CAAG3E,IAAI,CAAC4E,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CAC7C,KAAM,CAAAC,SAAS,CAAGD,IAAI,CAACE,UAAU,EAAI,CAAC,CACtC,MAAO,CAAAH,KAAK,CAAIE,SAAS,CAAGD,IAAI,CAACG,QAAS,CAC5C,CAAC,CAAE,CAAC,CAAC,CACL,KAAM,CAAAE,cAAc,CAAGC,uBAAuB,CAAC,CAAC,CAChD,MAAO,CAAAT,SAAS,CAAGQ,cAAc,CACnC,CAAC,CAED;AACAzG,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmG,KAAK,CAAGH,cAAc,CAAC,CAAC,CAC9B,GAAIjE,WAAW,GAAK,MAAM,CAAE,CAC1BG,aAAa,CAACiE,KAAK,CAAC,CACtB,CAAC,IAAM,IAAIpE,WAAW,GAAK,SAAS,CAAE,CACpC;AACA,GAAIE,UAAU,GAAKkE,KAAK,CAAE,CACxBjE,aAAa,CAAC,CAAC,CAAC,CAClB,CACF,CACF,CAAC,CAAE,CAACH,WAAW,CAAET,IAAI,CAAEiE,aAAa,CAAC,CAAC,CAEtC;AACA,KAAM,CAAAoB,mBAAmB,CAAGA,CAACf,OAAO,CAAEgB,aAAa,GAAK,CACtD,GAAI,EAACA,aAAa,SAAbA,aAAa,WAAbA,aAAa,CAAEb,KAAK,EAAE,MAAO,EAAC,CAEnC;AACA,GAAId,SAAS,GAAK,UAAU,CAAE,CAC5B,MAAO,CAAA2B,aAAa,CAACb,KAAK,CAC5B,CAEA;AACA,GAAId,SAAS,GAAK,WAAW,EAAIW,OAAO,CAACC,eAAe,CAAE,CACxD,KAAM,CAAAgB,iBAAiB,CAAGf,UAAU,CAACF,OAAO,CAACG,KAAK,CAAC,CACnD,KAAM,CAAAe,kBAAkB,CAAGhB,UAAU,CAACF,OAAO,CAACC,eAAe,CAAC,CAE9D;AACA,GAAI,CAACgB,iBAAiB,EAAIA,iBAAiB,EAAI,CAAC,CAAE,CAChD,MAAO,CAAAD,aAAa,CAACb,KAAK,CAC5B,CAEA;AACA,KAAM,CAAAgB,yBAAyB,CAAGD,kBAAkB,CAAGD,iBAAiB,CAExE;AACA;AACA,GAAI,CAAAG,kBAAkB,CAEtB,GAAIJ,aAAa,CAACK,YAAY,CAAE,CAC9B;AACAD,kBAAkB,CAAGH,iBAAiB,CAAGE,yBAAyB,CACpE,CAAC,IAAM,CACL;AACA;AACA;AACA,KAAM,CAAAG,iBAAiB,CAAGN,aAAa,CAACb,KAAK,CAC7C,KAAM,CAAAoB,oBAAoB,CAAGD,iBAAiB,CAAGL,iBAAiB,CAClEG,kBAAkB,CAAGF,kBAAkB,CAAGK,oBAAoB,CAChE,CAEA;AACA,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACN,kBAAkB,CAAG,GAAG,CAAC,CAAG,GAAG,CAE/D;AACA,MAAO,CAAAO,KAAK,CAACH,YAAY,CAAC,EAAIA,YAAY,CAAG,CAAC,CAAGR,aAAa,CAACb,KAAK,CAAGqB,YAAY,CACrF,CAEA;AACA,MAAO,CAAAR,aAAa,CAACb,KAAK,CAC5B,CAAC,CAED/F,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwH,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,eAAe,CAAC,CAAC,CACvB;AACF,CAAC,CACDD,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAxH,SAAS,CAAC,IAAM,CACd,GAAI6C,gBAAgB,EAAIzB,UAAU,CAACyD,MAAM,CAAG,CAAC,CAAE,CAC7CC,aAAa,CAAC7B,OAAO,CAAC,CAAE;AAC1B,CACF,CAAC,CAAE,CAACJ,gBAAgB,CAAC,CAAC,CAAE;AAExB;AACA7C,SAAS,CAAC,IAAM,CACd;AACA,GAAI+D,gBAAgB,CAACG,OAAO,CAAE,CAC5BwD,YAAY,CAAC3D,gBAAgB,CAACG,OAAO,CAAC,CACxC,CAEA;AACA,GAAIb,WAAW,GAAK,EAAE,CAAE,CACtBU,gBAAgB,CAACG,OAAO,CAAGyD,UAAU,CAAC,IAAM,CAC1C,KAAM,CAAAC,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQ/D,UAAU,CAACI,OAAO,MAAEd,MAAM,CAAEC,WAAW,EAAE,CACjEH,UAAU,CAAC0E,UAAU,CAAC,CACtB9C,aAAa,CAAC8C,UAAU,CAAC,CAC3B,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,IAAM,IAAI9D,UAAU,CAACI,OAAO,CAACd,MAAM,GAAK,EAAE,CAAE,CAC3C;AACA,KAAM,CAAAwE,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQ/D,UAAU,CAACI,OAAO,MAAEd,MAAM,CAAE,EAAE,EAAE,CACxDF,UAAU,CAAC0E,UAAU,CAAC,CACtB9C,aAAa,CAAC8C,UAAU,CAAC,CAC3B,CAEA;AACA,MAAO,IAAM,CACX,GAAI7D,gBAAgB,CAACG,OAAO,CAAE,CAC5BwD,YAAY,CAAC3D,gBAAgB,CAACG,OAAO,CAAC,CACxC,CACF,CAAC,CACH,CAAC,CAAE,CAACb,WAAW,CAAC,CAAC,CAAE;AAEnBrD,SAAS,CAAC,IAAM,CACd;AACA,GAAIkB,QAAQ,CAAC2D,MAAM,CAAG,CAAC,CAAE,CACvBiD,0BAA0B,CAAC,CAAC,CAC9B,CAEA;AACA,KAAM,CAAAC,YAAY,CAAG,CAAC,CAAC,CACvB7G,QAAQ,CAACmD,OAAO,CAACuB,OAAO,EAAI,CAC1B,GAAIA,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACnD,MAAM,CAAG,CAAC,CAAE,CAEnE;AACA,GAAI,CAAAoD,YAAY,CAAGrC,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,UAAU,CAAC,CAEnE;AACA,GAAI,CAACH,YAAY,CAAE,CACjBA,YAAY,CAAGrC,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAACpB,YAAY,CAAC,CACxE,CAEA;AACA,GAAI,CAACgB,YAAY,CAAE,CACjBA,YAAY,CAAGrC,OAAO,CAACoC,gBAAgB,CAAC,CAAC,CAAC,CAC5C,CAEA,GAAIC,YAAY,CAAE,KAAAK,kBAAA,CAChBP,YAAY,CAACnC,OAAO,CAACrB,EAAE,CAAC,CAAG,EAAA+D,kBAAA,CAAAL,YAAY,CAACI,IAAI,UAAAC,kBAAA,iBAAjBA,kBAAA,CAAmB/D,EAAE,GAAI0D,YAAY,CAACI,IAAI,CACvE,CACF,CACF,CAAC,CAAC,CACFzE,gBAAgB,CAACmE,YAAY,CAAC,CAChC,CAAC,CAAE,CAAC7G,QAAQ,CAAC,CAAC,CAAE;AAEhB,KAAM,CAAA4G,0BAA0B,CAAG,KAAAA,CAAA,GAAY,CAC7C,GAAI,CACF,KAAM,CAAAS,UAAU,CAAGrH,QAAQ,CAACsH,GAAG,CAAC5C,OAAO,EAAIA,OAAO,CAACrB,EAAE,CAAC,CACtD,KAAM,CAAAkE,QAAQ,CAAG,KAAM,CAAApI,GAAG,CAACqI,IAAI,CAAC,wCAAwC,CAAE,CACxEC,WAAW,CAAEJ,UACf,CAAC,CAAC,CAEF;AACA,KAAM,CAAAK,SAAS,CAAG,CAAC,CAAC,CACpBC,MAAM,CAACC,MAAM,CAACL,QAAQ,CAACM,IAAI,CAAC,CAAC1E,OAAO,CAAC2E,YAAY,EAAI,CACnDJ,SAAS,CAACI,YAAY,CAACC,UAAU,CAAC,CAAGD,YAAY,CAACE,eAAe,CACnE,CAAC,CAAC,CAIFtG,oBAAoB,CAACgG,SAAS,CAAC,CACjC,CAAE,MAAOO,GAAG,CAAE,CACZ;AACAjI,QAAQ,CAACmD,OAAO,CAACuB,OAAO,EAAI,CAC1BwD,sBAAsB,CAACxD,OAAO,CAACrB,EAAE,CAAC,CACpC,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAA8E,wBAAwB,CAAGA,CAAA,GAAM,CACrC;AACA,GAAInI,QAAQ,CAAC2D,MAAM,CAAG,CAAC,CAAE,CACvBiD,0BAA0B,CAAC,CAAC,CAC9B,CACF,CAAC,CAGD,KAAM,CAAAwB,2BAA2B,CAAIC,SAAS,EAAK,CACjD;AACA,KAAM,CAAAC,aAAa,CAAG7G,iBAAiB,CAAC4G,SAAS,CAAC,CAClD,GAAI,CAACC,aAAa,CAAE,CAClB,MAAO,KAAI,CACb,CAEA;AACA,KAAM,CAAAC,iBAAiB,CAAGnI,IAAI,CAC3BoI,MAAM,CAACtD,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,CAAC,CACrCrD,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CACvB;AACA,KAAM,CAAAuD,QAAQ,CAAGH,aAAa,CAACtB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK6B,IAAI,CAACwD,OAAO,CAAC,CAC/D,GAAID,QAAQ,EAAIA,QAAQ,CAACE,iBAAiB,CAAE,CAC1C;AACA,MAAO,CAAA1D,KAAK,CAAIC,IAAI,CAACG,QAAQ,CAAGoD,QAAQ,CAACE,iBAAkB,CAC7D,CAAC,IAAM,IAAIF,QAAQ,EAAIA,QAAQ,CAAC1C,YAAY,CAAE,CAC5C;AACA,MAAO,CAAAd,KAAK,CAAGC,IAAI,CAACG,QAAQ,CAC9B,CACA,MAAO,CAAAJ,KAAK,CACd,CAAC,CAAE,CAAC,CAAC,CAEP;AACA,KAAM,CAAA2D,QAAQ,CAAGN,aAAa,CAACtB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAClB,YAAY,CAAC,CACxD,KAAM,CAAA8C,cAAc,CAAGD,QAAQ,CAAGA,QAAQ,CAACE,kBAAkB,CAAG,CAAC,CACjE,KAAM,CAAAC,eAAe,CAAG5C,IAAI,CAAC6C,GAAG,CAAC,CAAC,CAAEH,cAAc,CAAGN,iBAAiB,CAAC,CAGvE;AACA,MAAO,CAAAD,aAAa,CAAChB,GAAG,CAACH,IAAI,EAAI,CAC/B,GAAI,CAAA8B,iBAAiB,CAAG,CAAC,CACzB,GAAI,CAAAC,WAAW,CAAG,KAAK,CAEvB,GAAI/B,IAAI,CAACpB,YAAY,CAAE,CACrB;AACAkD,iBAAiB,CAAGF,eAAe,CACnCG,WAAW,CAAGH,eAAe,CAAG,CAAC,CACnC,CAAC,IAAM,IAAI5B,IAAI,CAACwB,iBAAiB,CAAE,CACjC;AACA;AACAM,iBAAiB,CAAG9C,IAAI,CAACgD,KAAK,CAACJ,eAAe,CAAG5B,IAAI,CAACwB,iBAAiB,CAAC,CACxEO,WAAW,CAAGD,iBAAiB,CAAG,CAAC,CACrC,CAEA,OAAAtC,aAAA,CAAAA,aAAA,IACKQ,IAAI,MACP2B,kBAAkB,CAAEG,iBAAiB,CACrCG,YAAY,CAAEF,WAAW,GAE7B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAtF,aAAa,CAAG5E,WAAW,CAAC,gBAA6B,IAAtB,CAAAqK,YAAY,CAAAC,SAAA,CAAA3F,MAAA,IAAA2F,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CACxD,GAAI,CACFpI,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAsI,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CAEpC;AACAD,MAAM,CAACE,MAAM,CAAC,WAAW,CAAE,MAAM,CAAC,CAElC;AACA,GAAIL,YAAY,CAACpH,QAAQ,CAAEuH,MAAM,CAACE,MAAM,CAAC,UAAU,CAAEL,YAAY,CAACpH,QAAQ,CAAC,CAC3E,GAAIoH,YAAY,CAACnH,MAAM,CAAEsH,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAEL,YAAY,CAACnH,MAAM,CAAC,CAErE,KAAM,CAAAyH,GAAG,kBAAAC,MAAA,CAAoBJ,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAG,GAAG,CAAGL,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAG,EAAE,CAAE,CAC/E,KAAM,CAAAtC,QAAQ,CAAG,KAAM,CAAApI,GAAG,CAAC2K,GAAG,CAACH,GAAG,CAAC,CACnC,KAAM,CAAAI,WAAW,CAAGxC,QAAQ,CAACM,IAAI,CAACmC,OAAO,EAAIzC,QAAQ,CAACM,IAAI,CAE1D;AACA,GAAI/E,aAAa,CAACE,OAAO,CAACW,MAAM,GAAK,CAAC,EAAI,CAACZ,mBAAmB,CAACC,OAAO,CAAE,CACtE/C,WAAW,CAAC8J,WAAW,CAAC,CACxB,OACF,CAEA;AACA,KAAM,CAAAE,gBAAgB,CAAGF,WAAW,CAACvB,MAAM,CAAC9D,OAAO,EAAI,CACrD,GAAI,CAAAwF,UAAU,CAAG,KAAK,CAEtB;AACA,GAAIxF,OAAO,CAACyF,aAAa,CAAE,CACzB,KAAM,CAAAlI,QAAQ,CAAGa,aAAa,CAACE,OAAO,CAACgE,IAAI,CAAC5D,GAAG,EAAIA,GAAG,CAAC5C,IAAI,GAAKkE,OAAO,CAACyF,aAAa,CAAC,CACtFD,UAAU,CAAGjI,QAAQ,CAAGA,QAAQ,CAACqB,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,IAAIoB,OAAO,CAACzC,QAAQ,EAAI,MAAO,CAAAyC,OAAO,CAACzC,QAAQ,GAAK,QAAQ,CAAE,CACjE,KAAM,CAAAA,QAAQ,CAAGa,aAAa,CAACE,OAAO,CAACgE,IAAI,CAAC5D,GAAG,EAAIA,GAAG,CAACC,EAAE,GAAKqB,OAAO,CAACzC,QAAQ,CAAC,CAC/EiI,UAAU,CAAGjI,QAAQ,CAAGA,QAAQ,CAACqB,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,IAAIoB,OAAO,CAACzC,QAAQ,EAAIyC,OAAO,CAACzC,QAAQ,CAACoB,EAAE,CAAE,CAChD,KAAM,CAAApB,QAAQ,CAAGa,aAAa,CAACE,OAAO,CAACgE,IAAI,CAAC5D,GAAG,EAAIA,GAAG,CAACC,EAAE,GAAKqB,OAAO,CAACzC,QAAQ,CAACoB,EAAE,CAAC,CAClF6G,UAAU,CAAGjI,QAAQ,CAAGA,QAAQ,CAACqB,WAAW,CAAG,KAAK,CAAE;AACxD,CACA;AAAA,IACK,CACH4G,UAAU,CAAG,KAAK,CACpB,CAEA,MAAO,CAAAA,UAAU,CACnB,CAAC,CAAC,CAEF;AACA,GAAIb,YAAY,CAACpH,QAAQ,CAAE,CACzB,KAAM,CAAAmI,gBAAgB,CAAGtH,aAAa,CAACE,OAAO,CAACgE,IAAI,CAAC5D,GAAG,EAAIA,GAAG,CAACC,EAAE,GAAKgH,QAAQ,CAAChB,YAAY,CAACpH,QAAQ,CAAC,CAAC,CACtG,GAAImI,gBAAgB,EAAI,CAACA,gBAAgB,CAAC9G,WAAW,CAAE,CACrD;AACArD,WAAW,CAAC,EAAE,CAAC,CACf,OACF,CACF,CAEAA,WAAW,CAACgK,gBAAgB,CAAC,CAC/B,CAAE,MAAOhC,GAAG,CAAE,CACZ3G,QAAQ,CAAC,yBAAyB,CAAC,CACrC,CAAC,OAAS,CACRJ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAqF,eAAe,CAAGvH,WAAW,CAAC,SAAY,CAC9C,GAAI,CACF,KAAM,CAAAuI,QAAQ,CAAG,KAAM,CAAApI,GAAG,CAAC2K,GAAG,CAAC,2BAA2B,CAAC,CAC3D,GAAI,CAAAQ,cAAc,CAAG/C,QAAQ,CAACM,IAAI,CAACmC,OAAO,EAAIzC,QAAQ,CAACM,IAAI,CAE3D;AACA,KAAM,CAAA3E,cAAc,CAAGO,IAAI,CAAC8G,KAAK,CAAChH,cAAc,CAACiH,OAAO,CAAC,oBAAoB,CAAC,EAAI,IAAI,CAAC,CAEvF;AACAF,cAAc,CAAGA,cAAc,CAAChD,GAAG,CAAClE,GAAG,EAAI,CACzC,KAAM,CAAA8G,UAAU,CAAGhH,cAAc,CAACuH,cAAc,CAACrH,GAAG,CAACC,EAAE,CAAC,CAAGH,cAAc,CAACE,GAAG,CAACC,EAAE,CAAC,CAAGD,GAAG,CAACE,WAAW,CACnG,OAAAqD,aAAA,CAAAA,aAAA,IACKvD,GAAG,MACNE,WAAW,CAAE4G,UAAU,GAE3B,CAAC,CAAC,CAEF/J,aAAa,CAACmK,cAAc,CAAC,CAC7B1I,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAE,MAAOqG,GAAG,CAAE,CACZyC,OAAO,CAACrJ,KAAK,CAAC,4BAA4B,CAAE4G,GAAG,CAAC,CAClD,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAA0C,sBAAsB,CAAG3L,WAAW,CAAC,MAAO4L,UAAU,CAAEC,aAAa,GAAK,CAC9E,GAAI,CACF/I,mBAAmB,CAAC,IAAI,CAAC,CACzB,KAAM,CAAAgJ,SAAS,CAAG,CAACD,aAAa,CAEhC;AACA,KAAM,CAAA3H,cAAc,CAAGO,IAAI,CAAC8G,KAAK,CAAChH,cAAc,CAACiH,OAAO,CAAC,oBAAoB,CAAC,EAAI,IAAI,CAAC,CACvFtH,cAAc,CAAC0H,UAAU,CAAC,CAAGE,SAAS,CACtCvH,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAACR,cAAc,CAAC,CAAC,CAE5E;AACA/C,aAAa,CAAC4K,cAAc,EAC1BA,cAAc,CAACzD,GAAG,CAAClE,GAAG,EACpBA,GAAG,CAACC,EAAE,GAAKuH,UAAU,CAAAjE,aAAA,CAAAA,aAAA,IAAQvD,GAAG,MAAEE,WAAW,CAAEwH,SAAS,GAAK1H,GAC/D,CACF,CAAC,CAED;AACAQ,aAAa,CAAC7B,OAAO,CAAC,CAAE;AAExB;AACA0E,UAAU,CAAC,IAAM3E,mBAAmB,CAAC,KAAK,CAAC,CAAE,GAAG,CAAC,CACnD,CAAE,MAAOmG,GAAG,CAAE,CACZ3G,QAAQ,CAAC,kCAAkC,CAAC,CAC5CoJ,OAAO,CAACrJ,KAAK,CAAC,wBAAwB,CAAE4G,GAAG,CAAC,CAC5CnG,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAAE,CAAC5B,UAAU,CAAC,CAAC,CAAE;AAElB,KAAM,CAAA8K,4BAA4B,CAAGhM,WAAW,CAAC,SAAY,CAC3D,GAAI,CACF8C,mBAAmB,CAAC,IAAI,CAAC,CAEzB;AACA,KAAM,CAAAmJ,iBAAiB,CAAG,CAAC,CAAC,CAC5BnI,aAAa,CAACE,OAAO,CAACG,OAAO,CAACC,GAAG,EAAI,CACnC6H,iBAAiB,CAAC7H,GAAG,CAACC,EAAE,CAAC,CAAG,IAAI,CAClC,CAAC,CAAC,CAEF;AACAE,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAEC,IAAI,CAACC,SAAS,CAACuH,iBAAiB,CAAC,CAAC,CAE/E;AACA9K,aAAa,CAAC4K,cAAc,EAC1BA,cAAc,CAACzD,GAAG,CAAClE,GAAG,EAAAuD,aAAA,CAAAA,aAAA,IAAUvD,GAAG,MAAEE,WAAW,CAAE,IAAI,EAAG,CAC3D,CAAC,CAED;AACAM,aAAa,CAAC7B,OAAO,CAAC,CAAE;AAExBP,UAAU,CAAC,0CAA0C,CAAC,CAEtD;AACAiF,UAAU,CAAC,IAAM3E,mBAAmB,CAAC,KAAK,CAAC,CAAE,GAAG,CAAC,CACnD,CAAE,MAAOmG,GAAG,CAAE,CACZ3G,QAAQ,CAAC,4BAA4B,CAAC,CACtCoJ,OAAO,CAACrJ,KAAK,CAAC,uBAAuB,CAAE4G,GAAG,CAAC,CAC3CnG,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAAE,CAAC5B,UAAU,CAAC,CAAC,CAAE;AAElB,KAAM,CAAAgI,sBAAsB,CAAG,KAAO,CAAAG,SAAS,EAAK,CAClD,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAApI,GAAG,CAAC2K,GAAG,kBAAAF,MAAA,CAAkBvB,SAAS,wBAAsB,CAAC,CAChF3G,oBAAoB,CAACwJ,IAAI,EAAAvE,aAAA,CAAAA,aAAA,IACpBuE,IAAI,MACP,CAAC7C,SAAS,EAAGd,QAAQ,CAACM,IAAI,CAACG,eAAe,EAC1C,CAAC,CACL,CAAE,MAAOC,GAAG,CAAE,CACd,CACF,CAAC,CAED,KAAM,CAAAkD,SAAS,CAAG,QAAAA,CAACzG,OAAO,CAA0B,IAAxB,CAAAqC,YAAY,CAAAuC,SAAA,CAAA3F,MAAA,IAAA2F,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAE7C;AACA,GAAI,CAAAnC,IAAI,CAAGJ,YAAY,CACvB,GAAI,CAACI,IAAI,EAAIzC,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAAC,CAAC,CAAC,CAAE,KAAAsE,oBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACpE,KAAM,CAAAC,cAAc,CAAG7G,OAAO,CAACoC,gBAAgB,CAAC,CAAC,CAAC,CAClDK,IAAI,CAAG,CACL9D,EAAE,CAAE,EAAA+H,oBAAA,CAAAG,cAAc,CAACpE,IAAI,UAAAiE,oBAAA,iBAAnBA,oBAAA,CAAqB/H,EAAE,GAAIkI,cAAc,CAACpE,IAAI,CAClD3G,IAAI,CAAE+K,cAAc,CAACC,SAAS,IAAAH,qBAAA,CAAIE,cAAc,CAACpE,IAAI,UAAAkE,qBAAA,iBAAnBA,qBAAA,CAAqB7K,IAAI,GAAI,OAAO,CACtEiL,MAAM,CAAEF,cAAc,CAACG,WAAW,IAAAJ,qBAAA,CAAIC,cAAc,CAACpE,IAAI,UAAAmE,qBAAA,iBAAnBA,qBAAA,CAAqBG,MAAM,GAAI,OACvE,CAAC,CACH,CACA,GAAI,CAACtE,IAAI,CAAE,KAAAwE,kBAAA,CACTxE,IAAI,CAAG,CAAE9D,EAAE,CAAE,EAAAsI,kBAAA,CAAAjH,OAAO,CAACkH,SAAS,UAAAD,kBAAA,iBAAjBA,kBAAA,CAAmBtI,EAAE,GAAIqB,OAAO,CAACkH,SAAS,CAAEpL,IAAI,CAAE,OAAO,CAAEiL,MAAM,CAAE,OAAQ,CAAC,CAC3F,CAEA;AACA,GAAIxH,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,GAAI,CAACxC,iBAAiB,CAACiD,OAAO,CAACrB,EAAE,CAAC,CAAE,CAClC/B,QAAQ,CAAC,gDAAgD,CAAC,CAC1D,OACF,CAEA;AACA,KAAM,CAAAuK,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK8D,IAAI,CAAC9D,EAAE,CAAC,CAGnE,GAAI,CAACqC,aAAa,CAAE,CAClBpE,QAAQ,SAAAsI,MAAA,CAASzC,IAAI,CAAC3G,IAAI,mCAAiC,CAAC,CAC5D,OACF,CAEA,GAAI,CAACkF,aAAa,CAAC0D,YAAY,CAAE,CAC/B9H,QAAQ,IAAAsI,MAAA,CAAIzC,IAAI,CAAC3G,IAAI,oBAAkB,CAAC,CACxC,OACF,CAEA;AACA,GAAIkF,aAAa,CAACoD,kBAAkB,EAAI,CAAC,CAAE,CACzCxH,QAAQ,OAAAsI,MAAA,CAAOzC,IAAI,CAAC3G,IAAI,eAAa,CAAC,CACtC,OACF,CACF,CAEA,KAAM,CAAAsL,YAAY,CAAG1L,IAAI,CAAC4G,IAAI,CAAC9B,IAAI,EACjCA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,EACtB6B,IAAI,CAACwD,OAAO,GAAKvB,IAAI,CAAC9D,EAAE,EACxB6B,IAAI,CAAC6G,UAAU,GAAKhI,SACtB,CAAC,CAED;AACA,GAAI+H,YAAY,CAAE,CAChB;AACA,GAAI7H,QAAQ,GAAK,UAAU,CAAE,CAC3B,KAAM,CAAA4H,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK8D,IAAI,CAAC9D,EAAE,CAAC,CACnE,GAAIqC,aAAa,EAAIoG,YAAY,CAACzG,QAAQ,CAAG,CAAC,CAAGK,aAAa,CAACoD,kBAAkB,CAAE,CACjFxH,QAAQ,eAAAsI,MAAA,CAAezC,IAAI,CAAC3G,IAAI,sBAAAoJ,MAAA,CAAoBlE,aAAa,CAACoD,kBAAkB,UAAQ,CAAC,CAC7F,OACF,CACF,CACAzI,OAAO,CAAC2L,QAAQ,EAAIA,QAAQ,CAAC1E,GAAG,CAACpC,IAAI,EACnCA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,EAAI6B,IAAI,CAACwD,OAAO,GAAKvB,IAAI,CAAC9D,EAAE,EAAI6B,IAAI,CAAC6G,UAAU,GAAKhI,SAAS,CAAA4C,aAAA,CAAAA,aAAA,IAC1EzB,IAAI,MAAEG,QAAQ,CAAEH,IAAI,CAACG,QAAQ,CAAG,CAAC,GACtCH,IACN,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,GAAIjB,QAAQ,GAAK,UAAU,CAAE,CAC3B,KAAM,CAAA4H,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK8D,IAAI,CAAC9D,EAAE,CAAC,CACnE,GAAIqC,aAAa,EAAI,CAAC,CAAGA,aAAa,CAACoD,kBAAkB,CAAE,CACzDxH,QAAQ,eAAAsI,MAAA,CAAezC,IAAI,CAAC3G,IAAI,sBAAAoJ,MAAA,CAAoBlE,aAAa,CAACoD,kBAAkB,UAAQ,CAAC,CAC7F,OACF,CACF,CACA;AACA,KAAM,CAAA+C,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK8D,IAAI,CAAC9D,EAAE,CAAC,CAEnE,KAAM,CAAA4I,WAAW,CAAAtF,aAAA,CAAAA,aAAA,IACZjC,OAAO,MACVW,QAAQ,CAAE,CAAC,CACXqD,OAAO,CAAEvB,IAAI,CAAC9D,EAAE,CAChBmI,SAAS,CAAErE,IAAI,CAAC3G,IAAI,CACpBkL,WAAW,CAAEvE,IAAI,CAACsE,MAAM,CACxBrG,UAAU,CAAEK,mBAAmB,CAACf,OAAO,CAAEgB,aAAa,CAAC,EAAIjB,eAAe,CAACC,OAAO,CAAC,CACnFqH,UAAU,CAAEhI,SAAS,EACtB,CACD1D,OAAO,CAAC2L,QAAQ,EAAI,CAAC,GAAGA,QAAQ,CAAEC,WAAW,CAAC,CAAC,CACjD,CAEA;AACA,GAAIvH,OAAO,CAACwH,aAAa,EAAIxH,OAAO,CAACyH,eAAe,CAAE,CACpD1F,UAAU,CAAC,IAAM,CACf2F,yBAAyB,CAAC1H,OAAO,CAAEyC,IAAI,CAAC,CAC1C,CAAC,CAAE,CAAC,CAAC,CACP,CAEA7F,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAA+K,cAAc,CAAG,QAAAA,CAAChE,SAAS,CAAEiE,MAAM,CAAEjH,QAAQ,CAAuB,IAArB,CAAAtB,SAAS,CAAAuF,SAAA,CAAA3F,MAAA,IAAA2F,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACnE,GAAIjE,QAAQ,EAAI,CAAC,CAAE,CACjBhF,OAAO,CAACD,IAAI,CAACoI,MAAM,CAACtD,IAAI,EAAI,EAAEA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,EAAInD,IAAI,CAACwD,OAAO,GAAK4D,MAAM,EAAIpH,IAAI,CAAC6G,UAAU,GAAKhI,SAAS,CAAC,CAAC,CAAC,CAClH;AACAO,gBAAgB,CAACD,aAAa,CAACmE,MAAM,CAACtD,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,CAAC,CAAC,CACvE,CAAC,IAAM,CACL;AACA,GAAIpE,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,KAAM,CAAA4H,gBAAgB,CAAGzD,2BAA2B,CAACC,SAAS,CAAC,CAC/D,KAAM,CAAA3C,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAKiJ,MAAM,CAAC,CAElE,GAAI,CAAC5G,aAAa,EAAI,CAACA,aAAa,CAAC0D,YAAY,CAAE,CACjD9H,QAAQ,uBAAuB,CAAC,CAChC,OACF,CAEA;AACA,KAAM,CAAAiL,mBAAmB,CAAGnM,IAAI,CAC7BoI,MAAM,CAACtD,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,EAAInD,IAAI,CAACwD,OAAO,GAAK4D,MAAM,EAAIpH,IAAI,CAAC6G,UAAU,GAAKhI,SAAS,CAAC,CACjGiB,MAAM,CAAC,CAACwH,GAAG,CAAEtH,IAAI,GAAKsH,GAAG,CAAGtH,IAAI,CAACG,QAAQ,CAAE,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAoH,UAAU,CAAG/G,aAAa,CAACoD,kBAAkB,CAAGyD,mBAAmB,CAEzE,GAAIlH,QAAQ,CAAGoH,UAAU,CAAE,CACzBnL,QAAQ,qCAAAsI,MAAA,CAAqC6C,UAAU,CAAE,CAAC,CAC1D,OACF,CACF,CAEApM,OAAO,CAACD,IAAI,CAACkH,GAAG,CAACpC,IAAI,EACnBA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,EAAInD,IAAI,CAACwD,OAAO,GAAK4D,MAAM,EAAIpH,IAAI,CAAC6G,UAAU,GAAKhI,SAAS,CAAA4C,aAAA,CAAAA,aAAA,IACxEzB,IAAI,MAAEG,QAAQ,GACnBH,IACN,CAAC,CAAC,CAEF;AACA,KAAM,CAAAR,OAAO,CAAG1E,QAAQ,CAACgH,IAAI,CAAC0F,CAAC,EAAIA,CAAC,CAACrJ,EAAE,GAAKgF,SAAS,CAAC,CACtD,GAAI3D,OAAO,EAAIA,OAAO,CAACwH,aAAa,EAAIxH,OAAO,CAACyH,eAAe,CAAE,CAC/D,KAAM,CAAAhF,IAAI,CAAG,CAAE9D,EAAE,CAAEiJ,MAAO,CAAC,CAC3BK,oCAAoC,CAACjI,OAAO,CAAEyC,IAAI,CAAE9B,QAAQ,CAAC,CAC/D,CAEA/D,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAED,KAAM,CAAAsL,cAAc,CAAG,QAAAA,CAACvE,SAAS,CAAEiE,MAAM,CAAuB,IAArB,CAAAvI,SAAS,CAAAuF,SAAA,CAAA3F,MAAA,IAAA2F,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CACzDjJ,OAAO,CAACD,IAAI,CAACoI,MAAM,CAACtD,IAAI,EAAI,EAAEA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,EAAInD,IAAI,CAACwD,OAAO,GAAK4D,MAAM,EAAIpH,IAAI,CAAC6G,UAAU,GAAKhI,SAAS,CAAC,CAAC,CAAC,CACpH,CAAC,CAED;AACA,KAAM,CAAAqI,yBAAyB,CAAGA,CAAC1H,OAAO,CAAEyC,IAAI,GAAK,CACnD,GAAI,CAACzC,OAAO,CAACwH,aAAa,EAAI,CAACxH,OAAO,CAACyH,eAAe,CAAE,CACtD,OACF,CAEA;AACA9L,OAAO,CAACwM,WAAW,EAAI,CACrB;AACA,KAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC7F,IAAI,CAAC9B,IAAI,EACrCA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,EACtB6B,IAAI,CAACwD,OAAO,GAAKvB,IAAI,CAAC9D,EAAE,EACxB6B,IAAI,CAAC6G,UAAU,GAAKhI,SACtB,CAAC,CAED,GAAI,CAAC+I,SAAS,CAAE,MAAO,CAAAD,WAAW,CAElC;AACA,KAAM,CAAAhB,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK8D,IAAI,CAAC9D,EAAE,CAAC,CAEnE;AACA;AACA,GAAI,CAAA0J,iBAAiB,CAAGD,SAAS,CAACzH,QAAQ,CAE1C;AACA,GAAIK,aAAa,EAAI,CAACA,aAAa,CAACK,YAAY,EAAIL,aAAa,CAACiD,iBAAiB,CAAE,CACnFoE,iBAAiB,CAAGD,SAAS,CAACzH,QAAQ,CAAGK,aAAa,CAACiD,iBAAiB,CAC1E,CAEA;AACArE,gBAAgB,CAAC0I,oBAAoB,EAAI,CACvC,KAAM,CAAAC,iBAAiB,CAAGD,oBAAoB,CAAChG,IAAI,CAAC9B,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,CAAC,CACnF,GAAI4J,iBAAiB,CAAE,CACrB;AACA,MAAO,CAAAD,oBAAoB,CAAC1F,GAAG,CAACpC,IAAI,EAClCA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,CAAAsD,aAAA,CAAAA,aAAA,IAEbzB,IAAI,MACPG,QAAQ,CAAE0H,iBAAiB,CAC3BG,WAAW,CAAEtI,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAAGY,iBAAiB,GAEtE7H,IACN,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAiI,gBAAgB,CAAAxG,aAAA,CAAAA,aAAA,IACjBjC,OAAO,MACVW,QAAQ,CAAE0H,iBAAiB,CAC3B3H,UAAU,CAAER,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAC/Ce,WAAW,CAAEtI,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAAGY,iBAAiB,CACpEK,MAAM,CAAE,cAAc,CAAE;AACxBC,aAAa,CAAE/M,YAAY,CAACE,IAAI,CAChC8M,cAAc,CAAEhN,YAAY,CAACG,KAAK,CAClC8M,aAAa,CAAEpG,IAAI,CAAC9D,EAAE,CAAE;AACxBmK,eAAe,CAAErG,IAAI,CAAC3G,IAAI,CAC1BiN,iBAAiB,CAAEtG,IAAI,CAACsE,MAAM,EAC/B,CACD,MAAO,CAAC,GAAGuB,oBAAoB,CAAEG,gBAAgB,CAAC,CACpD,CACF,CAAC,CAAC,CAEF,MAAO,CAAAN,WAAW,CACpB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAa,kBAAkB,CAAIhJ,OAAO,EAAK,CACtC,GAAI,CAACA,OAAO,CAACwH,aAAa,EAAI,CAACxH,OAAO,CAACyH,eAAe,CAAE,CACtD7K,QAAQ,CAAC,mDAAmD,CAAC,CAC7D,OACF,CAEA,KAAM,CAAA2L,iBAAiB,CAAG5I,aAAa,CAAC2C,IAAI,CAAC9B,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,CAAC,CAC5E,GAAI4J,iBAAiB,CAAE,CACrB3I,gBAAgB,CAACD,aAAa,CAACiD,GAAG,CAACpC,IAAI,EACrCA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,CAAAsD,aAAA,CAAAA,aAAA,IACbzB,IAAI,MAAEG,QAAQ,CAAEH,IAAI,CAACG,QAAQ,CAAG,CAAC,GACtCH,IACN,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,KAAM,CAAAiI,gBAAgB,CAAAxG,aAAA,CAAAA,aAAA,IACjBjC,OAAO,MACVW,QAAQ,CAAE,CAAC,CACXD,UAAU,CAAER,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAC/Ce,WAAW,CAAEtI,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAChDiB,MAAM,CAAE,cAAc,CACtBC,aAAa,CAAE/M,YAAY,CAACE,IAAI,CAChC8M,cAAc,CAAEhN,YAAY,CAACG,KAAK,EACnC,CACD6D,gBAAgB,CAAC,CAAC,GAAGD,aAAa,CAAE8I,gBAAgB,CAAC,CAAC,CACxD,CACA7L,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAAqL,oCAAoC,CAAGA,CAACjI,OAAO,CAAEyC,IAAI,CAAEwG,aAAa,GAAK,CAC7E,GAAI,CAACjJ,OAAO,CAACwH,aAAa,EAAI,CAACxH,OAAO,CAACyH,eAAe,CAAE,CACtD,OACF,CAEA;AACA,KAAM,CAAAN,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK8D,IAAI,CAAC9D,EAAE,CAAC,CAEnE;AACA,GAAI,CAAA0J,iBAAiB,CAAGY,aAAa,CAErC;AACA,GAAIjI,aAAa,EAAI,CAACA,aAAa,CAACK,YAAY,EAAIL,aAAa,CAACiD,iBAAiB,CAAE,CACnFoE,iBAAiB,CAAGY,aAAa,CAAGjI,aAAa,CAACiD,iBAAiB,CACrE,CAEArE,gBAAgB,CAAC0I,oBAAoB,EAAI,CACvC,KAAM,CAAAC,iBAAiB,CAAGD,oBAAoB,CAAChG,IAAI,CAAC9B,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,CAAC,CACnF,GAAI4J,iBAAiB,CAAE,CACrB;AACA,MAAO,CAAAD,oBAAoB,CAAC1F,GAAG,CAACpC,IAAI,EAClCA,IAAI,CAAC7B,EAAE,GAAKqB,OAAO,CAACrB,EAAE,CAAAsD,aAAA,CAAAA,aAAA,IAEbzB,IAAI,MACPG,QAAQ,CAAE0H,iBAAiB,CAC3BG,WAAW,CAAEtI,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAAGY,iBAAiB,GAEtE7H,IACN,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAiI,gBAAgB,CAAAxG,aAAA,CAAAA,aAAA,IACjBjC,OAAO,MACVW,QAAQ,CAAE0H,iBAAiB,CAC3B3H,UAAU,CAAER,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAC/Ce,WAAW,CAAEtI,UAAU,CAACF,OAAO,CAACyH,eAAe,CAAC,CAAGY,iBAAiB,CACpEK,MAAM,CAAE,cAAc,CAAE;AACxBC,aAAa,CAAE/M,YAAY,CAACE,IAAI,CAChC8M,cAAc,CAAEhN,YAAY,CAACG,KAAK,CAClC8M,aAAa,CAAEpG,IAAI,CAAC9D,EAAE,CACtBmK,eAAe,CAAErG,IAAI,CAAC3G,IAAI,CAC1BiN,iBAAiB,CAAEtG,IAAI,CAACsE,MAAM,EAC/B,CACD,MAAO,CAAC,GAAGuB,oBAAoB,CAAEG,gBAAgB,CAAC,CACpD,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,uBAAuB,CAAGA,CAACvF,SAAS,CAAEhD,QAAQ,GAAK,CACvD,GAAIA,QAAQ,EAAI,CAAC,CAAE,CACjBf,gBAAgB,CAACD,aAAa,CAACmE,MAAM,CAACtD,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,CAAC,CAAC,CACvE,CAAC,IAAM,CACL/D,gBAAgB,CAACD,aAAa,CAACiD,GAAG,CAACpC,IAAI,EACrCA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,CAAA1B,aAAA,CAAAA,aAAA,IACZzB,IAAI,MAAEG,QAAQ,CAAE6H,WAAW,CAAEhI,IAAI,CAACE,UAAU,CAAGC,QAAQ,GAC5DH,IACN,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAA2I,qBAAqB,CAAGA,CAACxF,SAAS,CAAE+E,MAAM,GAAK,CACnD9I,gBAAgB,CAACD,aAAa,CAACiD,GAAG,CAACpC,IAAI,EACrCA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,CAAA1B,aAAA,CAAAA,aAAA,IACZzB,IAAI,MAAEkI,MAAM,GACjBlI,IACN,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAA4I,uBAAuB,CAAIzF,SAAS,EAAK,CAC7C/D,gBAAgB,CAACD,aAAa,CAACmE,MAAM,CAACtD,IAAI,EAAIA,IAAI,CAAC7B,EAAE,GAAKgF,SAAS,CAAC,CAAC,CACvE,CAAC,CAED,KAAM,CAAA7C,uBAAuB,CAAGA,CAAA,GAAM,CACpC,MAAO,CAAAnB,aAAa,CAACW,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAK,CAC3C;AACA;AACA,GAAIA,IAAI,CAACkI,MAAM,GAAK,cAAc,CAAE,CAClC,MAAO,CAAAnI,KAAK,EAAIC,IAAI,CAACgI,WAAW,EAAI,CAAC,CAAC,CACxC,CACA,MAAO,CAAAjI,KAAK,CACd,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CAED,KAAM,CAAA8I,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,MAAO,CAAA3N,IAAI,CAAC4E,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAKD,KAAK,CAAIC,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAW,CAAE,CAAC,CAAC,CACnF,CAAC,CAED,KAAM,CAAA4I,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAAC,QAAQ,CAAG,CAAC,CAChB7N,IAAI,CAAC+C,OAAO,CAAC+B,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACgJ,QAAQ,EAAIhJ,IAAI,CAACgJ,QAAQ,CAAG,CAAC,CAAE,CACtC;AACA,KAAM,CAAAC,OAAO,CAAIjJ,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,CAAGF,IAAI,CAACgJ,QAAQ,EAAK,GAAG,CAAGhJ,IAAI,CAACgJ,QAAQ,CAAC,CACzFD,QAAQ,EAAIE,OAAO,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAF,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAAAC,SAAS,CAAG,CAAC,CACjBjO,IAAI,CAAC+C,OAAO,CAAC+B,IAAI,EAAI,CACnB,GAAIA,IAAI,CAACgJ,QAAQ,EAAIhJ,IAAI,CAACgJ,QAAQ,CAAG,CAAC,CAAE,CACtC;AACA,KAAM,CAAAI,QAAQ,CAAIpJ,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,CAAG,GAAG,EAAK,GAAG,CAAGF,IAAI,CAACgJ,QAAQ,CAAC,CAChFG,SAAS,EAAIC,QAAQ,CACvB,CAAC,IAAM,CACL;AACAD,SAAS,EAAInJ,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,CAC9C,CACF,CAAC,CAAC,CACF,MAAO,CAAAiJ,SAAS,CAClB,CAAC,CAGD,KAAM,CAAAE,gBAAgB,CAAG,cAAAA,CAAOC,UAAU,CAAEC,QAAQ,CAA+B,IAA7B,CAAAC,UAAU,CAAApF,SAAA,CAAA3F,MAAA,IAAA2F,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,WAAW,CAC5E,GAAI,CACF;AACA,KAAM,CAAArE,KAAK,CAAG8I,iBAAiB,CAAC,CAAC,CACjC,KAAM,CAAAY,SAAS,CAAG1J,KAAK,CAAGlE,UAAU,CAEpC,KAAM,CAAA6N,SAAS,CAAG,CAChBC,WAAW,CAAEL,UAAU,CACvBnB,aAAa,CAAE/M,YAAY,CAACE,IAAI,EAAI,kBAAkB,CACtD8M,cAAc,CAAEhN,YAAY,CAACG,KAAK,EAAI,EAAE,CACxCqO,cAAc,CAAExO,YAAY,CAACI,KAAK,EAAI,EAAE,CACxCqO,SAAS,CAAE,CAAAhP,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEiP,QAAQ,GAAI,cAAc,CAC3CC,OAAO,CAAE,CAAAlP,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsD,EAAE,GAAI,SAAS,CAC9B6L,UAAU,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACpCC,eAAe,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACzCE,QAAQ,UAAA1F,MAAA,CAAWuF,IAAI,CAACI,GAAG,CAAC,CAAC,MAAA3F,MAAA,CAAIzD,IAAI,CAACqJ,MAAM,CAAC,CAAC,CAAC3F,QAAQ,CAAC,EAAE,CAAC,CAAC4F,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAC1ErC,MAAM,CAAEsB,UAAU,CAClBgB,YAAY,CAAEzK,KAAK,CACnB0K,WAAW,CAAE5O,UAAU,CACvB6O,gBAAgB,CAAEjB,SAAS,CAC3BkB,cAAc,CAAElB,SAAS,CAAG,CAAC,CAAG,SAAS,CAAG,MAAM,CAClDmB,QAAQ,CAAEnB,SAAS,CAAG,CAAC,CAAG,GAAI,CAAAQ,IAAI,CAACA,IAAI,CAACI,GAAG,CAAC,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAACQ,kBAAkB,CAAC,CAAC,CAAG,IAAI,CAAE;AACvGC,KAAK,CAAE5P,IAAI,CAACkH,GAAG,CAACpC,IAAI,OAAA+K,UAAA,OAAK,CACvBC,YAAY,CAAEhL,IAAI,CAAC1E,IAAI,CACvB2P,WAAW,CAAEjL,IAAI,CAACkL,GAAG,CACrB/K,QAAQ,CAAEH,IAAI,CAACG,QAAQ,CACvBmG,SAAS,CAAEtG,IAAI,CAACsG,SAAS,IAAAyE,UAAA,CAAI/K,IAAI,CAACiC,IAAI,UAAA8I,UAAA,iBAATA,UAAA,CAAWzP,IAAI,GAAI,OAAO,CACvD4E,UAAU,CAAEF,IAAI,CAACE,UAAU,CAC3B8H,WAAW,CAAEhI,IAAI,CAACE,UAAU,CAAGF,IAAI,CAACG,QACtC,CAAC,EAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAgL,YAAY,CAAGhR,oBAAoB,CAACuP,SAAS,CAAE,cAAc,CAAE,MAAM,CAAE9O,CAAC,CAAC,CAE/E;AACA,KAAM,CAAAwQ,WAAW,CAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAE,QAAQ,CAAE,sBAAsB,CAAC,CACrEF,WAAW,CAACG,QAAQ,CAACC,KAAK,CAACL,YAAY,CAAC,CACxCC,WAAW,CAACG,QAAQ,CAACE,KAAK,CAAC,CAAC,CAE5B;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BN,WAAW,CAACO,KAAK,CAAC,CAAC,CACnBP,WAAW,CAACQ,KAAK,CAAC,CAAC,CACnB;AACArK,UAAU,CAAC,IAAM,CACf6J,WAAW,CAACK,KAAK,CAAC,CAAC,CACrB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED;AACA,GAAIL,WAAW,CAACG,QAAQ,CAACM,UAAU,GAAK,UAAU,CAAE,CAClDH,cAAc,CAAC,CAAC,CAClB,CAAC,IAAM,CACLN,WAAW,CAACU,MAAM,CAAGJ,cAAc,CACrC,CAEF,CAAE,MAAOvP,KAAK,CAAE,CACd;AAAA,CAEJ,CAAC,CAED,KAAM,CAAA4P,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI7Q,IAAI,CAACuD,MAAM,GAAK,CAAC,CAAE,CACrBrC,QAAQ,CAACxB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAC7B,OACF,CAEAsB,aAAa,CAAC,IAAI,CAAC,CACnBE,QAAQ,CAAC,EAAE,CAAC,CAEZ;AACA,GAAIT,WAAW,GAAK,SAAS,GAAK,CAACP,YAAY,CAACE,IAAI,EAAI,CAACF,YAAY,CAACE,IAAI,CAAC0Q,IAAI,CAAC,CAAC,CAAC,CAAE,CAClF5P,QAAQ,CAAC,gDAAgD,CAAC,CAC1DF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA;AACA,KAAM,CAAA6D,KAAK,CAAGH,cAAc,CAAC,CAAC,CAC9B,GAAI/D,UAAU,CAAGkE,KAAK,CAAE,CACtB3D,QAAQ,CAAC,4CAA4C,CAAC,CACtDF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,GAAIL,UAAU,CAAG,CAAC,CAAE,CAClBO,QAAQ,CAAC,gCAAgC,CAAC,CAC1CF,aAAa,CAAC,KAAK,CAAC,CACpB,OACF,CAEA,GAAI,CACF,KAAM,CAAAqN,QAAQ,CAAG,CACf0C,SAAS,CAAE,MAAM,CACjB9D,aAAa,CAAE/M,YAAY,CAACE,IAAI,CAChC8M,cAAc,CAAEhN,YAAY,CAACG,KAAK,CAClCqO,cAAc,CAAExO,YAAY,CAACI,KAAK,CAClC0Q,cAAc,CAAEzQ,aAAa,CAC7BgP,WAAW,CAAE5O,UAAU,CACvBiP,KAAK,CAAE5P,IAAI,CAACkH,GAAG,CAACpC,IAAI,EAAI,CACtB;AACA,GAAI,CAAAoH,MAAM,CAAGpH,IAAI,CAACwD,OAAO,CACzB,GAAI,MAAO,CAAA4D,MAAM,GAAK,QAAQ,EAAIA,MAAM,GAAK,IAAI,CAAE,CACjDA,MAAM,CAAGA,MAAM,CAACjJ,EAAE,EAAIiJ,MAAM,CAC9B,CAEA,MAAO,CACL5H,OAAO,CAAEQ,IAAI,CAAC7B,EAAE,CAChBgC,QAAQ,CAAET,UAAU,CAACM,IAAI,CAACG,QAAQ,CAAC,CACnC8B,IAAI,CAAEkD,QAAQ,CAACiC,MAAM,CAAC,CACtBlH,UAAU,CAAER,UAAU,CAACM,IAAI,CAACE,UAAU,CAAC,CACvC2G,UAAU,CAAE7G,IAAI,CAAC6G,UAAU,EAAI,UACjC,CAAC,CACH,CAAC,CAAC,CACFsF,eAAe,CAAEhN,aAAa,CAACiD,GAAG,CAACpC,IAAI,GAAK,CAC1CR,OAAO,CAAEQ,IAAI,CAAC7B,EAAE,CAChBgC,QAAQ,CAAET,UAAU,CAACM,IAAI,CAACG,QAAQ,CAAC,CACnC8B,IAAI,CAAE,CAAC,CAAE;AACT/B,UAAU,CAAER,UAAU,CAACM,IAAI,CAACE,UAAU,CAAC,CACvCgI,MAAM,CAAElI,IAAI,CAACkI,MAAM,EAAI,cAAc,CACrCC,aAAa,CAAEnI,IAAI,CAACmI,aAAa,EAAI/M,YAAY,CAACE,IAAI,CACtD8M,cAAc,CAAEpI,IAAI,CAACoI,cAAc,EAAIhN,YAAY,CAACG,KAAK,CACzD6Q,KAAK,CAAEpM,IAAI,CAACoM,KAAK,EAAI,EACvB,CAAC,CAAC,CACJ,CAAC,CAGD;AACA,KAAM,CAAA/J,QAAQ,CAAG,KAAM,CAAApI,GAAG,CAACqI,IAAI,CAAC,aAAa,CAAEiH,QAAQ,CAAC,CACxD,KAAM,CAAA8C,MAAM,CAAGhK,QAAQ,CAACM,IAAI,CAACxE,EAAE,CAC/B,KAAM,CAAAmL,UAAU,CAAGjH,QAAQ,CAACM,IAAI,CAACgH,WAAW,CAE5C,GAAI5K,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,GAAI,CACF,KAAM,CAAAuN,kBAAkB,CAAG,KAAM,CAAArS,GAAG,CAACqI,IAAI,eAAAoC,MAAA,CAAe2H,MAAM,cAAY,CAAC,CAE3E;AACA,GAAIpN,YAAY,CAAE,CAChB,KAAM,CAAAoK,gBAAgB,CAACC,UAAU,CAAEjH,QAAQ,CAACM,IAAI,CAAE,WAAW,CAAC,CAChE,CAEJ;AACAxH,OAAO,CAAC,EAAE,CAAC,CACXiE,gBAAgB,CAAC,EAAE,CAAC,CACpB/D,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAE/C;AACAsD,YAAY,CAAC,UAAU,CAAC,CAExB;AACA,KAAM,IAAI,CAAAyN,OAAO,CAACC,OAAO,EAAIjL,UAAU,CAACiL,OAAO,CAAE,IAAI,CAAC,CAAC,CAAE;AAEzD;AACA,KAAM,CAAA9N,aAAa,CAAC,CAAC,CAErB;AACA,KAAM,IAAI,CAAA6N,OAAO,CAACC,OAAO,EAAIjL,UAAU,CAACiL,OAAO,CAAE,GAAG,CAAC,CAAC,CAAE;AAExD;AACAvJ,wBAAwB,CAAC,CAAC,CAE1B;AACA,GAAI,CAAAwJ,cAAc,8CAAA/H,MAAA,CAAgD4E,UAAU,CAAE,CAC9E,GAAIgD,kBAAkB,CAAC3J,IAAI,CAAC+J,qBAAqB,CAAE,CACjD,KAAM,CAAAC,cAAc,CAAGL,kBAAkB,CAAC3J,IAAI,CAAC+J,qBAAqB,CACpED,cAAc,oEAAA/H,MAAA,CAAsEiI,cAAc,CAACC,kBAAkB,eAAAlI,MAAA,CAAaiI,cAAc,CAACnC,YAAY,QAAM,CACrK,CACAqC,KAAK,CAACJ,cAAc,CAAC,CACvB,CAAE,MAAOK,aAAa,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CACtB;AACA5Q,QAAQ,kBAAAsI,MAAA,CAAkB4E,UAAU,8BAAA5E,MAAA,CAA4B,EAAAqI,qBAAA,CAAAD,aAAa,CAACzK,QAAQ,UAAA0K,qBAAA,kBAAAC,sBAAA,CAAtBD,qBAAA,CAAwBpK,IAAI,UAAAqK,sBAAA,iBAA5BA,sBAAA,CAA8B7Q,KAAK,GAAI2Q,aAAa,CAACG,OAAO,CAAE,CAAC,CAE/H;AACA9R,OAAO,CAAC,EAAE,CAAC,CACXiE,gBAAgB,CAAC,EAAE,CAAC,CACpB/D,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAEnD;AACA,KAAM,IAAI,CAAA+Q,OAAO,CAACC,OAAO,EAAIjL,UAAU,CAACiL,OAAO,CAAE,IAAI,CAAC,CAAC,CAEvD;AACA,KAAM,CAAA9N,aAAa,CAAC,CAAC,CACrB,KAAM,IAAI,CAAA6N,OAAO,CAACC,OAAO,EAAIjL,UAAU,CAACiL,OAAO,CAAE,GAAG,CAAC,CAAC,CACtDvJ,wBAAwB,CAAC,CAAC,CAC5B,CACF,CAAC,IAAM,CACL;AAEA;AACA,GAAIhE,YAAY,CAAE,CAChB,KAAM,CAAAoK,gBAAgB,CAACC,UAAU,CAAEjH,QAAQ,CAACM,IAAI,CAAE,SAAS,CAAC,CAC9D,CAEA;AACAxH,OAAO,CAAC,EAAE,CAAC,CACXiE,gBAAgB,CAAC,EAAE,CAAC,CACpB/D,eAAe,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CAEnD;AACAsD,YAAY,CAAC,UAAU,CAAC,CAExB+N,KAAK,CAACjS,CAAC,CAAC,+BAA+B,CAAE,CAAE0O,UAAW,CAAC,CAAC,CAAC,CAC3D,CACF,CAAE,MAAOvG,GAAG,CAAE,KAAAmK,aAAA,CAAAC,kBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,mBAAA,CAEZ;AACA,IAAAP,aAAA,CAAInK,GAAG,CAACV,QAAQ,UAAA6K,aAAA,YAAAC,kBAAA,CAAZD,aAAA,CAAcvK,IAAI,UAAAwK,kBAAA,WAAlBA,kBAAA,CAAoBhR,KAAK,CAAE,CAC7BC,QAAQ,CAAC2G,GAAG,CAACV,QAAQ,CAACM,IAAI,CAACxG,KAAK,CAAC,CACnC,CAAC,IAAM,KAAAiR,cAAA,CAAIrK,GAAG,CAACV,QAAQ,UAAA+K,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAczK,IAAI,UAAA0K,mBAAA,WAAlBA,mBAAA,CAAoBK,MAAM,CAAE,CACrCtR,QAAQ,CAAC2G,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC+K,MAAM,CAAC,CACpC,CAAC,IAAM,KAAAJ,cAAA,CAAIvK,GAAG,CAACV,QAAQ,UAAAiL,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAc3K,IAAI,UAAA4K,mBAAA,WAAlBA,mBAAA,CAAoBpF,aAAa,CAAE,CAC5C/L,QAAQ,CAAC2G,GAAG,CAACV,QAAQ,CAACM,IAAI,CAACwF,aAAa,CAAC,CAAC,CAAC,CAAC,CAC9C,CAAC,IAAM,KAAAqF,cAAA,CAAIzK,GAAG,CAACV,QAAQ,UAAAmL,cAAA,YAAAC,mBAAA,CAAZD,cAAA,CAAc7K,IAAI,UAAA8K,mBAAA,WAAlBA,mBAAA,CAAoBhD,WAAW,CAAE,CAC1CrO,QAAQ,CAAC2G,GAAG,CAACV,QAAQ,CAACM,IAAI,CAAC8H,WAAW,CAAC,CAAC,CAAC,CAAC,CAC5C,CAAC,IAAM,CACLrO,QAAQ,CAAC,8DAA8D,CAAC,CAC1E,CACF,CAAC,OAAS,CACRF,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAyR,SAAS,CAAGA,CAAA,GAAM,CACtBxS,OAAO,CAAC,EAAE,CAAC,CACXiE,gBAAgB,CAAC,EAAE,CAAC,CACpBhD,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAAwR,kBAAkB,CAAG9T,WAAW,CAAC,CAAC+T,UAAU,CAAEC,KAAK,GAAK,CAC5D,GAAID,UAAU,GAAK,QAAQ,CAAE,CAC3B;AACA3Q,cAAc,CAAC4Q,KAAK,CAAC,CACvB,CAAC,IAAM,CACL;AACA,KAAM,CAAAtM,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQ/D,UAAU,CAACI,OAAO,MAAE,CAAC+P,UAAU,EAAGC,KAAK,EAAE,CACjEhR,UAAU,CAAC0E,UAAU,CAAC,CACtB9C,aAAa,CAAC8C,UAAU,CAAC,CAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAuM,YAAY,CAAGjU,WAAW,CAAC,IAAM,CACrC,KAAM,CAAAkU,cAAc,CAAG,CAAEjR,QAAQ,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAC,CACnDF,UAAU,CAACkR,cAAc,CAAC,CAC1B9Q,cAAc,CAAC,EAAE,CAAC,CAAE;AAEpB;AACA,GAAIW,mBAAmB,CAACC,OAAO,EAAIF,aAAa,CAACE,OAAO,CAACW,MAAM,CAAG,CAAC,CAAE,CACnEC,aAAa,CAACsP,cAAc,CAAC,CAC/B,CACF,CAAC,CAAE,CAACvR,gBAAgB,CAAEzB,UAAU,CAACyD,MAAM,CAAC,CAAC,CAGzC,KAAM,CAAAwP,mBAAmB,CAAIjO,IAAI,EAAK,CACpC5C,kBAAkB,IAAAsH,MAAA,CAAI1E,IAAI,CAAC7B,EAAE,MAAAuG,MAAA,CAAI1E,IAAI,CAACwD,OAAO,CAAE,CAAC,CAChDlG,eAAe,CAAC0C,IAAI,CAACG,QAAQ,CAACwE,QAAQ,CAAC,CAAC,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAuJ,oBAAoB,CAAIC,CAAC,EAAK,CAClC,KAAM,CAAAL,KAAK,CAAGK,CAAC,CAACC,MAAM,CAACN,KAAK,CAC5B;AACA,GAAIA,KAAK,GAAK,EAAE,EAAI,OAAO,CAACO,IAAI,CAACP,KAAK,CAAC,CAAE,CACvCxQ,eAAe,CAACwQ,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAQ,oBAAoB,CAAItO,IAAI,EAAK,CACrC,KAAM,CAAAuO,WAAW,CAAG7O,UAAU,CAACrC,YAAY,CAAC,CAE5C,GAAIA,YAAY,GAAK,EAAE,EAAI8D,KAAK,CAACoN,WAAW,CAAC,EAAIA,WAAW,CAAG,CAAC,CAAE,CAChEnS,QAAQ,CAAC,+BAA+B,CAAC,CACzCgB,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CAEA;AACA,GAAI2B,QAAQ,GAAK,UAAU,CAAE,CAC3B;AACA,KAAM,CAAA4H,gBAAgB,CAAGzD,2BAA2B,CAAClD,IAAI,CAAC7B,EAAE,CAAC,CAC7D,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK6B,IAAI,CAACwD,OAAO,CAAC,CAExE,GAAI,CAAChD,aAAa,EAAI,CAACA,aAAa,CAAC0D,YAAY,CAAE,CACjD9H,QAAQ,uBAAuB,CAAC,CAChCgB,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CAEA;AACA,KAAM,CAAAiK,mBAAmB,CAAGnM,IAAI,CAC7BoI,MAAM,CAACkL,QAAQ,EAAIA,QAAQ,CAACrQ,EAAE,GAAK6B,IAAI,CAAC7B,EAAE,EAAIqQ,QAAQ,CAAChL,OAAO,GAAKxD,IAAI,CAACwD,OAAO,EAAIgL,QAAQ,CAAC3H,UAAU,GAAK7G,IAAI,CAAC6G,UAAU,CAAC,CAC3H/G,MAAM,CAAC,CAACwH,GAAG,CAAEkH,QAAQ,GAAKlH,GAAG,CAAGkH,QAAQ,CAACrO,QAAQ,CAAE,CAAC,CAAC,CAExD;AACA,KAAM,CAAAoH,UAAU,CAAG/G,aAAa,CAACoD,kBAAkB,CAAGyD,mBAAmB,CAEzE,GAAIkH,WAAW,CAAGhH,UAAU,CAAE,CAC5BnL,QAAQ,qCAAAsI,MAAA,CAAqC6C,UAAU,CAAE,CAAC,CAC1DnK,kBAAkB,CAAC,IAAI,CAAC,CACxB,OACF,CACF,CAEA,GAAImR,WAAW,GAAK,CAAC,CAAE,CACrB;AACA7G,cAAc,CAAC1H,IAAI,CAAC7B,EAAE,CAAE6B,IAAI,CAACwD,OAAO,CAAExD,IAAI,CAAC6G,UAAU,CAAC,CACxD,CAAC,IAAM,CACLM,cAAc,CAACnH,IAAI,CAAC7B,EAAE,CAAE6B,IAAI,CAACwD,OAAO,CAAE+K,WAAW,CAAEvO,IAAI,CAAC6G,UAAU,CAAC,CACrE,CAEAzJ,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,EAAE,CAAC,CACnBlB,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAAqS,oBAAoB,CAAGA,CAAA,GAAM,CACjCrR,kBAAkB,CAAC,IAAI,CAAC,CACxBE,eAAe,CAAC,EAAE,CAAC,CACrB,CAAC,CAED,KAAM,CAAAoR,sBAAsB,CAAGA,CAACP,CAAC,CAAEnO,IAAI,GAAK,CAC1C,GAAImO,CAAC,CAACQ,GAAG,GAAK,OAAO,CAAE,CACrBL,oBAAoB,CAACtO,IAAI,CAAC,CAC5B,CAAC,IAAM,IAAImO,CAAC,CAACQ,GAAG,GAAK,QAAQ,CAAE,CAC7BF,oBAAoB,CAAC,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAG,mBAAmB,CAAGA,CAACzL,SAAS,CAAEiE,MAAM,GAAK,CACjD5J,gBAAgB,CAACwI,IAAI,EAAAvE,aAAA,CAAAA,aAAA,IAChBuE,IAAI,MACP,CAAC7C,SAAS,EAAGiE,MAAM,EACnB,CAAC,CACL,CAAC,CAED,KAAM,CAAAyH,sBAAsB,CAAIrP,OAAO,EAAK,CAC1C;AACA,GAAIT,QAAQ,GAAK,UAAU,EAAIS,OAAO,CAACsP,cAAc,EAAI,CAAC,CAAE,CAC1D,OACF,CAEA,GAAItP,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACnD,MAAM,CAAG,CAAC,CAAE,CACnE;AACA,KAAM,CAAAsQ,cAAc,CAAGxR,aAAa,CAACiC,OAAO,CAACrB,EAAE,CAAC,CAEhD,GAAI4Q,cAAc,CAAE,CAClB,KAAM,CAAAC,sBAAsB,CAAGxP,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,OAAAkN,OAAA,OAAI,CAAC,EAAAA,OAAA,CAAAlN,CAAC,CAACE,IAAI,UAAAgN,OAAA,iBAANA,OAAA,CAAQ9Q,EAAE,GAAI4D,CAAC,CAACE,IAAI,IAAM8M,cAAc,GAAC,CAE5G,GAAIC,sBAAsB,CAAE,KAAAE,sBAAA,CAC1B;AACA,KAAM,CAAAvI,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,OAAAoN,qBAAA,OAAI,CAAApN,CAAC,CAAC5D,EAAE,IAAM,EAAAgR,qBAAA,CAAAH,sBAAsB,CAAC/M,IAAI,UAAAkN,qBAAA,iBAA3BA,qBAAA,CAA6BhR,EAAE,GAAI6Q,sBAAsB,CAAC/M,IAAI,CAAC,GAAC,CAC5H,KAAM,CAAAhC,SAAS,CAAGM,mBAAmB,CAACf,OAAO,CAAEgB,aAAa,CAAC,EAAIjB,eAAe,CAACC,OAAO,CAAC,CAEzF;AACA,KAAM,CAAAqC,YAAY,CAAG,CACnB1D,EAAE,CAAE,EAAA+Q,sBAAA,CAAAF,sBAAsB,CAAC/M,IAAI,UAAAiN,sBAAA,iBAA3BA,sBAAA,CAA6B/Q,EAAE,GAAI6Q,sBAAsB,CAAC/M,IAAI,CAClE3G,IAAI,CAAE0T,sBAAsB,CAAC1I,SAAS,CACtCC,MAAM,CAAEyI,sBAAsB,CAACxI,WAAW,CAC1C7G,KAAK,CAAEM,SACT,CAAC,CACDgG,SAAS,CAACzG,OAAO,CAAEqC,YAAY,CAAC,CAClC,CACF,CACF,CAAC,IAAM,CACL;AACAoE,SAAS,CAACzG,OAAO,CAAC,CACpB,CACF,CAAC,CAED,GAAIzD,OAAO,CAAE,CACX,mBACEzB,IAAA,QAAK8U,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClB7U,KAAA,QAAK4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B/U,IAAA,QAAK8U,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/B9U,IAAA,SAAA+U,QAAA,CAAM,qBAAmB,CAAM,CAAC,EAC7B,CAAC,CACH,CAAC,CAEV,CAEA,mBACE7U,KAAA,QAAK4U,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB7U,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB/U,IAAA,OAAA+U,QAAA,CAAKzU,CAAC,CAAC,sBAAsB,CAAC,CAAK,CAAC,cACpCN,IAAA,QAAK8U,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvB7U,KAAA,SAAA6U,QAAA,EAAM,WAAS,CAACxU,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEiP,QAAQ,EAAO,CAAC,CACnC,CAAC,EACH,CAAC,cAENtP,KAAA,QAAK4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1B7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,OAAA+U,QAAA,CAAI,UAAQ,CAAI,CAAC,cAGjB7U,KAAA,SAAM4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC3B7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,UAAA+U,QAAA,CAAO,WAAS,CAAO,CAAC,cACxB7U,KAAA,WACEsT,KAAK,CAAEjR,OAAO,CAACE,QAAS,CACxBuS,QAAQ,CAAGnB,CAAC,EAAKP,kBAAkB,CAAC,UAAU,CAAEO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CAAAuB,QAAA,eAEhE/U,IAAA,WAAQwT,KAAK,CAAC,EAAE,CAAAuB,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvCrU,UAAU,CAACsI,MAAM,CAACpF,GAAG,EAAIA,GAAG,CAACE,WAAW,CAAC,CAACgE,GAAG,CAACrF,QAAQ,eACrDzC,IAAA,WAA0BwT,KAAK,CAAE/Q,QAAQ,CAACoB,EAAG,CAAAkR,QAAA,CAC1CtS,QAAQ,CAACzB,IAAI,EADHyB,QAAQ,CAACoB,EAEd,CACT,CAAC,EACI,CAAC,cACT3D,KAAA,CAACN,MAAM,EACLqV,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAM7Q,qBAAqB,CAAC,CAACD,kBAAkB,CAAE,CAC1D+Q,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAN,QAAA,EAE9B1Q,kBAAkB,CAAG,MAAM,CAAG,QAAQ,CAAC,aAC1C,EAAQ,CAAC,EACN,CAAC,cAENnE,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,UAAA+U,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1B7U,KAAA,QAAK4U,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC/U,IAAA,WACEsV,IAAI,CAAC,QAAQ,CACbR,SAAS,mBAAA1K,MAAA,CAAoB7F,SAAS,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACxE4Q,OAAO,CAAEA,CAAA,GAAM3Q,YAAY,CAAC,UAAU,CAAE,CAAAuQ,QAAA,CACzC,UAED,CAAQ,CAAC,cACT/U,IAAA,WACEsV,IAAI,CAAC,QAAQ,CACbR,SAAS,mBAAA1K,MAAA,CAAoB7F,SAAS,GAAK,WAAW,CAAG,QAAQ,CAAG,EAAE,CAAG,CACzE4Q,OAAO,CAAEA,CAAA,GAAM3Q,YAAY,CAAC,WAAW,CAAE,CAAAuQ,QAAA,CAC1C,WAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAEN7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,UAAA+U,QAAA,CAAO,YAAU,CAAO,CAAC,cACzB7U,KAAA,QAAK4U,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/B/U,IAAA,WACEsV,IAAI,CAAC,QAAQ,CACbR,SAAS,kBAAA1K,MAAA,CAAmB3F,QAAQ,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,CAAG,CACtE0Q,OAAO,CAAEA,CAAA,GAAMzQ,WAAW,CAAC,UAAU,CAAE,CACvC6Q,KAAK,CAAEjV,CAAC,CAAC,+BAA+B,CAAE,CAAAyU,QAAA,CAC3C,UAED,CAAQ,CAAC,cACT/U,IAAA,WACEsV,IAAI,CAAC,QAAQ,CACbR,SAAS,kBAAA1K,MAAA,CAAmB3F,QAAQ,GAAK,SAAS,CAAG,QAAQ,CAAG,EAAE,CAAG,CACrE0Q,OAAO,CAAEA,CAAA,GAAMzQ,WAAW,CAAC,SAAS,CAAE,CACtC6Q,KAAK,CAAEjV,CAAC,CAAC,qCAAqC,CAAE,CAAAyU,QAAA,CACjD,SAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAEN7U,KAAA,QAAK4U,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/C/U,IAAA,UAAA+U,QAAA,CAAO,gBAAc,CAAO,CAAC,cAC7B7U,KAAA,QAAK4U,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpD/U,IAAA,WACEsV,IAAI,CAAC,QAAQ,CACbR,SAAS,oCAAA1K,MAAA,CAAqCzF,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC7EwQ,OAAO,CAAEA,CAAA,GAAMvQ,eAAe,CAAC,IAAI,CAAE,CACrC2Q,KAAK,CAAEjV,CAAC,CAAC,iCAAiC,CAAE,CAAAyU,QAAA,CAC7C,KAED,CAAQ,CAAC,cACT/U,IAAA,WACEsV,IAAI,CAAC,QAAQ,CACbR,SAAS,oCAAA1K,MAAA,CAAqC,CAACzF,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC9EwQ,OAAO,CAAEA,CAAA,GAAMvQ,eAAe,CAAC,KAAK,CAAE,CACtC2Q,KAAK,CAAEjV,CAAC,CAAC,wBAAwB,CAAE,CAAAyU,QAAA,CACpC,IAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,cAEN7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,UAAA+U,QAAA,CAAO,SAAO,CAAO,CAAC,cACtB/U,IAAA,UAEEwV,GAAG,CAAErS,cAAe,CACpBmS,IAAI,CAAC,MAAM,CACXG,WAAW,CAAEnV,CAAC,CAAC,qBAAqB,CAAE,CACtCkT,KAAK,CAAE7Q,WAAY,CACnBqS,QAAQ,CAAGnB,CAAC,EAAKP,kBAAkB,CAAC,QAAQ,CAAEO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,EAL1D,cAML,CAAC,EACC,CAAC,cACNxT,IAAA,QAAK8U,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3B/U,IAAA,CAACJ,MAAM,EAACqV,OAAO,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAE1B,YAAa,CAAAsB,QAAA,CAAC,OAE9D,CAAQ,CAAC,CACN,CAAC,EACF,CAAC,CAGN1Q,kBAAkB,eACjBnE,KAAA,QAAK4U,SAAS,CAAC,qBAAqB,CAACM,KAAK,CAAE,CAC1CM,YAAY,CAAE,MAAM,CACpBC,OAAO,CAAE,MAAM,CACfC,eAAe,CAAE,SAAS,CAC1BC,YAAY,CAAE,QAAQ,CACtBC,MAAM,CAAE,mBACV,CAAE,CAAAf,QAAA,eACA7U,KAAA,QAAKkV,KAAK,CAAE,CACVW,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QAAQ,CACpBP,YAAY,CAAE,MAChB,CAAE,CAAAX,QAAA,eACA7U,KAAA,OAAIkV,KAAK,CAAE,CAAEc,MAAM,CAAE,GAAG,CAAEC,QAAQ,CAAE,MAAM,CAAEC,UAAU,CAAE,KAAM,CAAE,CAAArB,QAAA,EAAC,4BAE/D,CAAC1S,gBAAgB,eAAIrC,IAAA,SAAMoV,KAAK,CAAE,CAAEiB,UAAU,CAAE,QAAQ,CAAEC,KAAK,CAAE,SAAU,CAAE,CAAAvB,QAAA,CAAC,QAAC,CAAM,CAAC,EACpF,CAAC,cACL/U,IAAA,WACEmV,OAAO,CAAE3J,4BAA6B,CACtC+K,QAAQ,CAAElU,gBAAiB,CAC3B+S,KAAK,CAAE,CACLO,OAAO,CAAE,aAAa,CACtBQ,QAAQ,CAAE,UAAU,CACpBN,YAAY,CAAE,UAAU,CACxBC,MAAM,CAAE,mBAAmB,CAC3BU,MAAM,CAAEnU,gBAAgB,CAAG,aAAa,CAAG,SAAS,CACpDuT,eAAe,CAAEvT,gBAAgB,CAAG,SAAS,CAAG,SAAS,CACzDiU,KAAK,CAAE,OAAO,CACdF,UAAU,CAAE,KAAK,CACjBK,OAAO,CAAEpU,gBAAgB,CAAG,GAAG,CAAG,CACpC,CAAE,CAAA0S,QAAA,CACH,uBAED,CAAQ,CAAC,EACN,CAAC,cACN/U,IAAA,QAAKoV,KAAK,CAAE,CACVW,OAAO,CAAE,MAAM,CACfW,mBAAmB,CAAE,uCAAuC,CAC5DC,GAAG,CAAE,QACP,CAAE,CAAA5B,QAAA,CACCrU,UAAU,CAACoH,GAAG,CAACrF,QAAQ,eACtBvC,KAAA,QAAuBkV,KAAK,CAAE,CAC5BW,OAAO,CAAE,MAAM,CACfE,UAAU,CAAE,QAAQ,CACpBD,cAAc,CAAE,eAAe,CAC/BL,OAAO,CAAE,QAAQ,CACjBC,eAAe,CAAE,OAAO,CACxBC,YAAY,CAAE,UAAU,CACxBC,MAAM,CAAE,mBACV,CAAE,CAAAf,QAAA,eACA/U,IAAA,SAAMoV,KAAK,CAAE,CAAEe,QAAQ,CAAE,UAAU,CAAEC,UAAU,CAAE,KAAM,CAAE,CAAArB,QAAA,CACtDtS,QAAQ,CAACzB,IAAI,CACV,CAAC,cACPhB,IAAA,WACEmV,OAAO,CAAEA,CAAA,GAAMhK,sBAAsB,CAAC1I,QAAQ,CAACoB,EAAE,CAAEpB,QAAQ,CAACqB,WAAW,CAAE,CACzEsR,KAAK,CAAE,CACLO,OAAO,CAAE,gBAAgB,CACzBQ,QAAQ,CAAE,SAAS,CACnBN,YAAY,CAAE,SAAS,CACvBC,MAAM,CAAE,WAAW,CACnBU,MAAM,CAAE,SAAS,CACjBZ,eAAe,CAAEnT,QAAQ,CAACqB,WAAW,CAAG,SAAS,CAAG,SAAS,CAC7D8S,WAAW,CAAEnU,QAAQ,CAACqB,WAAW,CAAG,SAAS,CAAG,SAAS,CACzDwS,KAAK,CAAE7T,QAAQ,CAACqB,WAAW,CAAG,SAAS,CAAG,SAC5C,CAAE,CAAAiR,QAAA,CAEDtS,QAAQ,CAACqB,WAAW,CAAG,UAAU,CAAG,cAAc,CAC7C,CAAC,GA1BDrB,QAAQ,CAACoB,EA2BtB,CACE,CAAC,CACC,CAAC,EACH,CACN,cAED7D,IAAA,QAAK8U,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B7U,KAAA,MAAG4U,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC1BvU,QAAQ,CAAC2D,MAAM,CAAC,UAAQ,CAAC3D,QAAQ,CAAC2D,MAAM,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,QAC7D,EAAG,CAAC,CACD,CAAC,cAENnE,IAAA,QAAK8U,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BvU,QAAQ,CAACsH,GAAG,CAAC5C,OAAO,OAAA2R,sBAAA,oBACnB7W,IAAA,QAEE8U,SAAS,iBAAA1K,MAAA,CAAkBlF,OAAO,CAACsP,cAAc,EAAI,CAAC,EAAI/P,QAAQ,GAAK,UAAU,CAAG,cAAc,CAAG,EAAE,cAAa,CACpH0Q,OAAO,CAAEA,CAAA,GAAMZ,sBAAsB,CAACrP,OAAO,CAAE,CAAA6P,QAAA,cAE/C7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,OAAA+U,QAAA,CAAK7P,OAAO,CAAClE,IAAI,CAAK,CAAC,cACvBhB,IAAA,MAAG8U,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE7P,OAAO,CAAC0L,GAAG,CAAI,CAAC,cAC5C1Q,KAAA,MAAG4U,SAAS,CAAC,eAAe,CAAAC,QAAA,EACzB,CAAC+B,qBAAA,EAAM,CACN;AACA,KAAM,CAAA1N,QAAQ,EAAA0N,qBAAA,CAAG5R,OAAO,CAACoC,gBAAgB,UAAAwP,qBAAA,iBAAxBA,qBAAA,CAA0BtP,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAACpB,YAAY,CAAC,CACzE,GAAI6C,QAAQ,EAAInH,iBAAiB,CAACiD,OAAO,CAACrB,EAAE,CAAC,CAAE,CAC7C,KAAM,CAAAwI,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAkT,iBAAiB,CAAG1K,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,OAAAuP,cAAA,OAAI,CAAAvP,CAAC,CAAC5D,EAAE,IAAM,EAAAmT,cAAA,CAAA5N,QAAQ,CAACzB,IAAI,UAAAqP,cAAA,iBAAbA,cAAA,CAAenT,EAAE,GAAIuF,QAAQ,CAACzB,IAAI,CAAC,GAAC,CACpG,GAAIoP,iBAAiB,CAAE,CACrB,MAAO,CAAA9Q,mBAAmB,CAACf,OAAO,CAAE6R,iBAAiB,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CACnE,CACF,CACA;AACA,MAAO,CAAAhS,eAAe,CAACC,OAAO,CAAC,CAAC+R,OAAO,CAAC,CAAC,CAAC,CAC5C,CAAC,EAAE,CAAC,CAAC,MACL,CAAC/R,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACnD,MAAM,CAAG,CAAC,kBAAAiG,MAAA,CAC9C,EAAAyM,sBAAA,CAAA3R,OAAO,CAACoC,gBAAgB,CAACE,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,IAAI,CAACpB,YAAY,CAAC,UAAAsQ,sBAAA,iBAAvDA,sBAAA,CAAyDlP,IAAI,CAACsE,MAAM,GAAI,OAAO,KAAG,EAEnG,CAAC,cACJ/L,KAAA,MAAG4U,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SACpB,CAAC7P,OAAO,CAACsP,cAAc,CAAC,GAAC,CAACtP,OAAO,CAACyC,IAAI,CAC5C1F,iBAAiB,CAACiD,OAAO,CAACrB,EAAE,CAAC,EAAIqB,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACnD,MAAM,CAAG,CAAC,eAC/FnE,IAAA,SAAM8U,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC5B,CAAC,IAAM,CACN,KAAM,CAAA1I,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,MAAO,CAAAqB,OAAO,CAACoC,gBAAgB,CAACQ,GAAG,CAACiE,cAAc,EAAI,KAAAmL,qBAAA,CAAAC,qBAAA,CACpD,KAAM,CAAAjR,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,OAAA2P,qBAAA,OAAI,CAAA3P,CAAC,CAAC5D,EAAE,IAAM,EAAAuT,qBAAA,CAAArL,cAAc,CAACpE,IAAI,UAAAyP,qBAAA,iBAAnBA,qBAAA,CAAqBvT,EAAE,GAAIkI,cAAc,CAACpE,IAAI,CAAC,GAAC,CAC5G,GAAI,CAACzB,aAAa,CAAE,MAAO,KAAI,CAE/B;AACA,KAAM,CAAAmR,QAAQ,CAAG,CAAAnR,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAElF,IAAI,KAAAkW,qBAAA,CAAInL,cAAc,CAACpE,IAAI,UAAAuP,qBAAA,iBAAnBA,qBAAA,CAAqBlW,IAAI,GAAI+K,cAAc,CAACC,SAAS,CAE7F,mBACE9L,KAAA,SAA2D4U,SAAS,eAAA1K,MAAA,CAAgBlE,aAAa,CAAC0D,YAAY,CAAG,WAAW,CAAG,aAAa,CAAG,CAAAmL,QAAA,EAC5IsC,QAAQ,CAAC,IAAE,CAACpR,mBAAmB,CAACf,OAAO,CAAEgB,aAAa,CAAC,CAAC+Q,OAAO,CAAC,CAAC,CAAC,CAAC,QAAM,CAAC/Q,aAAa,CAACoD,kBAAkB,CAAC,aAC9G,GAFW,EAAA6N,qBAAA,CAAApL,cAAc,CAACpE,IAAI,UAAAwP,qBAAA,iBAAnBA,qBAAA,CAAqBtT,EAAE,GAAIkI,cAAc,CAACpE,IAE/C,CAAC,CAEX,CAAC,CAAC,CAACqB,MAAM,CAACsO,OAAO,CAAC,CACpB,CAAC,EAAE,CAAC,CACA,CACP,EACA,CAAC,CAGHpS,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACnD,MAAM,CAAG,CAAC,eAC9DjE,KAAA,QAAK4U,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B/U,IAAA,UAAA+U,QAAA,CAAO,OAAK,CAAO,CAAC,cACpB7U,KAAA,WACE4U,SAAS,CAAC,aAAa,CACvBtB,KAAK,CAAEvQ,aAAa,CAACiC,OAAO,CAACrB,EAAE,CAAC,EAAI,EAAG,CACvCmR,QAAQ,CAAGnB,CAAC,EAAK,CACf,KAAM,CAAA/G,MAAM,CAAGjC,QAAQ,CAACgJ,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC,CACvCc,mBAAmB,CAACpP,OAAO,CAACrB,EAAE,CAAEiJ,MAAM,CAAC,CACzC,CAAE,CACFqI,OAAO,CAAGtB,CAAC,EAAKA,CAAC,CAAC0D,eAAe,CAAC,CAAE,CAAAxC,QAAA,eAEpC/U,IAAA,WAAQwT,KAAK,CAAC,EAAE,CAAAuB,QAAA,CAAC,aAAW,CAAQ,CAAC,CACpC7P,OAAO,CAACoC,gBAAgB,CAACQ,GAAG,CAAC,CAACiE,cAAc,CAAEyL,KAAK,GAAK,KAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,qBAAA,CACvD;AACA,KAAM,CAAAvL,gBAAgB,CAAGzD,2BAA2B,CAAC1D,OAAO,CAACrB,EAAE,CAAC,CAChE,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,OAAAoQ,qBAAA,OAAI,CAAApQ,CAAC,CAAC5D,EAAE,IAAM,EAAAgU,qBAAA,CAAA9L,cAAc,CAACpE,IAAI,UAAAkQ,qBAAA,iBAAnBA,qBAAA,CAAqBhU,EAAE,GAAIkI,cAAc,CAACpE,IAAI,CAAC,GAAC,CAC5G,KAAM,CAAA+B,WAAW,CAAGxD,aAAa,CAAGA,aAAa,CAAC0D,YAAY,CAAG,KAAK,CACtE,KAAM,CAAAkO,YAAY,CAAG5R,aAAa,CAAGA,aAAa,CAACoD,kBAAkB,CAAG,CAAC,CAEzE;AACA,KAAM,CAAA+N,QAAQ,CAAG,CAAAnR,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAElF,IAAI,KAAAyW,qBAAA,CAAI1L,cAAc,CAACpE,IAAI,UAAA8P,qBAAA,iBAAnBA,qBAAA,CAAqBzW,IAAI,GAAI+K,cAAc,CAACC,SAAS,CAC7F,KAAM,CAAA+L,UAAU,CAAG,CAAA7R,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE+F,MAAM,KAAAyL,qBAAA,CAAI3L,cAAc,CAACpE,IAAI,UAAA+P,qBAAA,iBAAnBA,qBAAA,CAAqBzL,MAAM,GAAIF,cAAc,CAACG,WAAW,CAGrG,mBACEhM,KAAA,WAEEsT,KAAK,CAAE,EAAAoE,qBAAA,CAAA7L,cAAc,CAACpE,IAAI,UAAAiQ,qBAAA,iBAAnBA,qBAAA,CAAqB/T,EAAE,GAAIkI,cAAc,CAACpE,IAAK,CACtD4O,QAAQ,CAAE9R,QAAQ,GAAK,UAAU,CAAG,CAACiF,WAAW,CAAG,KAAM,CAAAqL,QAAA,EAExDsC,QAAQ,CAAC,IAAE,CAACU,UAAU,CAAC,MAAI,CAAC9R,mBAAmB,CAACf,OAAO,CAAEgB,aAAa,CAAC,CAAC+Q,OAAO,CAAC,CAAC,CAAC,CAAC,MACpF,CAAC,CAACvN,WAAW,EAAIjF,QAAQ,GAAK,UAAU,CAAG,iBAAiB,CAAG,EAAE,GAL5D,EAAAkT,qBAAA,CAAA5L,cAAc,CAACpE,IAAI,UAAAgQ,qBAAA,iBAAnBA,qBAAA,CAAqB9T,EAAE,GAAIkI,cAAc,CAACpE,IAMzC,CAAC,CAEb,CAAC,CAAC,EACI,CAAC,EACN,CACN,CAGA,CAAC,CAACzC,OAAO,CAACoC,gBAAgB,EAAIpC,OAAO,CAACoC,gBAAgB,CAACnD,MAAM,EAAI,CAAC,gBACjEnE,IAAA,CAACJ,MAAM,EACLqV,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEA,CAAA,GAAMxJ,SAAS,CAACzG,OAAO,CAAE,CAClCqR,QAAQ,CAAE,CAAC,IAAM,CACf;AACA,GAAI9R,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,MAAK,CAAE;AAChB,CAEA;AACA,GAAI,CAACxC,iBAAiB,CAACiD,OAAO,CAACrB,EAAE,CAAC,CAAE,CAClC,MAAO,KAAI,CAAE;AACf,CAEA;AACA,MAAO,CAAAqB,OAAO,CAACsP,cAAc,EAAI,CAAC,CACpC,CAAC,EAAE,CAAE,CACLM,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAE1B,CAAC,IAAM,CACN,GAAI,CAAC9S,iBAAiB,CAACiD,OAAO,CAACrB,EAAE,CAAC,CAAE,CAClC,MAAO,YAAY,CACrB,CAEA;AACA,GAAIY,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,aAAa,CACtB,CAEA,MAAO,CAAAS,OAAO,CAACsP,cAAc,EAAI,CAAC,CAAG,cAAc,CAAG,aAAa,CACrE,CAAC,EAAE,CAAC,CACE,CACT,CAGAtP,OAAO,CAACwH,aAAa,EAAIxH,OAAO,CAACyH,eAAe,eAC/C3M,IAAA,QAAK8U,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B7U,KAAA,UAAO4U,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EAAC,aACtB,CAAC7P,OAAO,CAACyH,eAAe,CAAC,mBACtC,EAAO,CAAC,CACL,CACN,CAGAzH,OAAO,CAACsD,eAAe,EAAItD,OAAO,CAACsD,eAAe,CAACrE,MAAM,CAAG,CAAC,eAC5DnE,IAAA,QAAK8U,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/B/U,IAAA,MAAA+U,QAAA,CAAG,0CAAwC,CAAG,CAAC,CAC5C,CACN,EACE,CAAC,EA9ID7P,OAAO,CAACrB,EA+IV,CAAC,EACP,CAAC,CACC,CAAC,EACH,CAAC,cAIN3D,KAAA,QAAK4U,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvB7U,KAAA,QAAK4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B/U,IAAA,OAAA+U,QAAA,CAAI,eAAa,CAAI,CAAC,CACrBnU,IAAI,CAACuD,MAAM,CAAG,CAAC,eACdnE,IAAA,CAACJ,MAAM,EAACqV,OAAO,CAAC,SAAS,CAACC,IAAI,CAAC,OAAO,CAACC,OAAO,CAAE9B,SAAU,CAAA0B,QAAA,CAAC,YAE3D,CAAQ,CACT,EACE,CAAC,CAELlT,KAAK,eACJ7B,IAAA,QAAK8U,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BlT,KAAK,CACH,CACN,cAED7B,IAAA,QAAK8U,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBnU,IAAI,CAACuD,MAAM,GAAK,CAAC,cAChBjE,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB/U,IAAA,MAAA+U,QAAA,CAAG,eAAa,CAAG,CAAC,cACpB/U,IAAA,MAAG8U,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,iDAA+C,CAAG,CAAC,EAC/E,CAAC,cAEN7U,KAAA,CAAAE,SAAA,EAAA2U,QAAA,eACE7U,KAAA,QAAK4U,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC/U,IAAA,QAAK8U,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,cAC7C/U,IAAA,QAAK8U,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,MAAI,CAAK,CAAC,cACvC/U,IAAA,QAAK8U,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAK,CAAC,cACzC/U,IAAA,QAAK8U,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,KAAG,CAAK,CAAC,cAC1C/U,IAAA,QAAK8U,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAM,CAAK,CAAC,cAC3C/U,IAAA,QAAK8U,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAK,CAAC,cACzC/U,IAAA,QAAK8U,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,EAC1C,CAAC,CACLnU,IAAI,CAACkH,GAAG,CAACpC,IAAI,eACZxF,KAAA,QAA2D4U,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC9E7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B/U,IAAA,OAAA+U,QAAA,CAAKrP,IAAI,CAAC1E,IAAI,CAAK,CAAC,cACpBd,KAAA,MAAG4U,SAAS,CAAC,UAAU,CAAAC,QAAA,EAAC,OAAK,CAACrP,IAAI,CAACkL,GAAG,EAAI,CAAC,cAC3C5Q,IAAA,SAAM8U,SAAS,qBAAA1K,MAAA,CAAsB1E,IAAI,CAAC6G,UAAU,CAAG,CAAAwI,QAAA,CACpDrP,IAAI,CAAC6G,UAAU,GAAK,WAAW,CAAG,IAAI,CAAG,KAAK,CAC3C,CAAC,EACJ,CAAC,cACNvM,IAAA,QAAK8U,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBrP,IAAI,CAACwG,WAAW,EAAI,OAAO,CACzB,CAAC,cACNhM,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB3P,UAAU,CAACM,IAAI,CAACE,UAAU,CAAC,CAACqR,OAAO,CAAC,CAAC,CAAC,CAAC,MAC1C,EAAK,CAAC,cACNjX,IAAA,QAAK8U,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B7U,KAAA,QAAK4U,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC/U,IAAA,CAACJ,MAAM,EACLsV,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBE,OAAO,CAAEA,CAAA,GAAMtI,cAAc,CAACnH,IAAI,CAAC7B,EAAE,CAAE6B,IAAI,CAACwD,OAAO,CAAExD,IAAI,CAACG,QAAQ,CAAG,CAAC,CAAEH,IAAI,CAAC6G,UAAU,CAAE,CAAAwI,QAAA,CAC1F,GAED,CAAQ,CAAC,CACRlS,eAAe,MAAAuH,MAAA,CAAQ1E,IAAI,CAAC7B,EAAE,MAAAuG,MAAA,CAAI1E,IAAI,CAACwD,OAAO,CAAE,cAC/ClJ,IAAA,QAAK8U,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B/U,IAAA,UACEsV,IAAI,CAAC,QAAQ,CACb9B,KAAK,CAAEzQ,YAAa,CACpBiS,QAAQ,CAAEpB,oBAAqB,CAC/BoE,UAAU,CAAGnE,CAAC,EAAKO,sBAAsB,CAACP,CAAC,CAAEnO,IAAI,CAAE,CACnDuS,MAAM,CAAEA,CAAA,GAAMjE,oBAAoB,CAACtO,IAAI,CAAE,CACzCoP,SAAS,CAAC,gBAAgB,CAC1BoD,GAAG,CAAC,GAAG,CACP1O,GAAG,CAAE9D,IAAI,CAAC8O,cAAe,CACzB2D,SAAS,MACV,CAAC,CACC,CAAC,cAENnY,IAAA,SACE8U,SAAS,CAAC,oBAAoB,CAC9BK,OAAO,CAAEA,CAAA,GAAMxB,mBAAmB,CAACjO,IAAI,CAAE,CACzC6P,KAAK,CAAEjV,CAAC,CAAC,+BAA+B,CAAE,CAAAyU,QAAA,CAEzCrP,IAAI,CAACG,QAAQ,CACV,CACP,cACD7F,IAAA,CAACJ,MAAM,EACLsV,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBE,OAAO,CAAEA,CAAA,GAAMtI,cAAc,CAACnH,IAAI,CAAC7B,EAAE,CAAE6B,IAAI,CAACwD,OAAO,CAAExD,IAAI,CAACG,QAAQ,CAAG,CAAC,CAAEH,IAAI,CAAC6G,UAAU,CAAE,CACzFgK,QAAQ,CAAE,CAAC,IAAM,CACf;AACA,GAAI9R,QAAQ,GAAK,SAAS,CAAE,CAC1B,MAAO,MAAK,CAAE;AAChB,CAEA,KAAM,CAAA4H,gBAAgB,CAAGzD,2BAA2B,CAAClD,IAAI,CAAC7B,EAAE,CAAC,CAC7D,KAAM,CAAAqC,aAAa,CAAGmG,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAE7E,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC5D,EAAE,GAAK6B,IAAI,CAACwD,OAAO,CAAC,CACxE,KAAM,CAAA6D,mBAAmB,CAAGnM,IAAI,CAC7BoI,MAAM,CAACkL,QAAQ,EAAIA,QAAQ,CAACrQ,EAAE,GAAK6B,IAAI,CAAC7B,EAAE,EAAIqQ,QAAQ,CAAChL,OAAO,GAAKxD,IAAI,CAACwD,OAAO,EAAIgL,QAAQ,CAAC3H,UAAU,GAAK7G,IAAI,CAAC6G,UAAU,CAAC,CAC3H/G,MAAM,CAAC,CAACwH,GAAG,CAAEkH,QAAQ,GAAKlH,GAAG,CAAGkH,QAAQ,CAACrO,QAAQ,CAAE,CAAC,CAAC,CACxD,KAAM,CAAAoH,UAAU,CAAG,CAAC,CAAA/G,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEoD,kBAAkB,GAAI,CAAC,EAAIyD,mBAAmB,CACjF,MAAO,CAAArH,IAAI,CAACG,QAAQ,EAAIoH,UAAU,CACpC,CAAC,EAAE,CAAE,CAAA8H,QAAA,CACN,GAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,cACN/U,IAAA,QAAK8U,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1B/U,IAAA,SAAM8U,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,CACzC,CAAC,cACN7U,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB,CAACrP,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,EAAEqR,OAAO,CAAC,CAAC,CAAC,CAAC,MAChD,EAAK,CAAC,cACNjX,IAAA,QAAK8U,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3B/U,IAAA,CAACJ,MAAM,EACLsV,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,QAAQ,CAChBE,OAAO,CAAEA,CAAA,GAAM/H,cAAc,CAAC1H,IAAI,CAAC7B,EAAE,CAAE6B,IAAI,CAACwD,OAAO,CAAExD,IAAI,CAAC6G,UAAU,CAAE,CACtEgJ,KAAK,CAAEjV,CAAC,CAAC,oBAAoB,CAAE,CAAAyU,QAAA,CAChC,MAED,CAAQ,CAAC,CACN,CAAC,MAAA3K,MAAA,CApFK1E,IAAI,CAAC7B,EAAE,MAAAuG,MAAA,CAAI1E,IAAI,CAACwD,OAAO,MAAAkB,MAAA,CAAI1E,IAAI,CAAC6G,UAAU,CAqFlD,CACN,CAAC,CAGD1H,aAAa,CAACV,MAAM,CAAG,CAAC,eACvBjE,KAAA,CAAAE,SAAA,EAAA2U,QAAA,eACE/U,IAAA,QAAK8U,SAAS,CAAC,0BAA0B,CAAAC,QAAA,cACvC/U,IAAA,OAAA+U,QAAA,CAAI,mCAAiC,CAAI,CAAC,CACvC,CAAC,CACLlQ,aAAa,CAACiD,GAAG,CAACpC,IAAI,eACrBxF,KAAA,QAAkC4U,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACpE7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B7U,KAAA,OAAA6U,QAAA,EAAKrP,IAAI,CAAC1E,IAAI,CAAC,cAAY,EAAI,CAAC,cAChCd,KAAA,MAAG4U,SAAS,CAAC,UAAU,CAAAC,QAAA,EAAC,OAAK,CAACrP,IAAI,CAACkL,GAAG,EAAI,CAAC,CAC1ClL,IAAI,CAACsI,eAAe,eACnB9N,KAAA,MAAG4U,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,QACxB,CAACrP,IAAI,CAACG,QAAQ,CAAC,GAAC,CAACH,IAAI,CAACuI,iBAAiB,EAAI,OAAO,EACvD,CACJ,EACE,CAAC,cACNjO,IAAA,QAAK8U,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,OAE3B,CAAK,CAAC,cACN7U,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB3P,UAAU,CAACM,IAAI,CAACE,UAAU,CAAC,CAACqR,OAAO,CAAC,CAAC,CAAC,CAAC,MAC1C,EAAK,CAAC,cACN/W,KAAA,QAAK4U,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B/U,IAAA,SAAM8U,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACvCrP,IAAI,CAACG,QAAQ,CACV,CAAC,cACP7F,IAAA,UAAO8U,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,MAAI,CAAO,CAAC,EACvC,CAAC,cACN/U,IAAA,QAAK8U,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1B7U,KAAA,WACEsT,KAAK,CAAE9N,IAAI,CAACkI,MAAO,CACnBoH,QAAQ,CAAGnB,CAAC,EAAKxF,qBAAqB,CAAC3I,IAAI,CAAC7B,EAAE,CAAEgQ,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CAChEsB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eAEnC/U,IAAA,WAAQwT,KAAK,CAAC,cAAc,CAAAuB,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACtD/U,IAAA,WAAQwT,KAAK,CAAC,UAAU,CAAAuB,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C/U,IAAA,WAAQwT,KAAK,CAAC,KAAK,CAAAuB,QAAA,CAAC,uBAAqB,CAAQ,CAAC,EAC5C,CAAC,CACN,CAAC,cACN7U,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,EACxB,CAACrP,IAAI,CAACG,QAAQ,CAAGH,IAAI,CAACE,UAAU,EAAEqR,OAAO,CAAC,CAAC,CAAC,CAAC,MAChD,EAAK,CAAC,cACNjX,IAAA,QAAK8U,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3B/U,IAAA,CAACJ,MAAM,EACLsV,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,QAAQ,CAChBE,OAAO,CAAEA,CAAA,GAAM7G,uBAAuB,CAAC5I,IAAI,CAAC7B,EAAE,CAAE,CAChD0R,KAAK,CAAC,uBAAuB,CAAAR,QAAA,CAC9B,MAED,CAAQ,CAAC,CACN,CAAC,gBAAA3K,MAAA,CA7Ce1E,IAAI,CAAC7B,EAAE,CA8CzB,CACN,CAAC,EACF,CACH,EACD,CACH,CACE,CAAC,CAELjD,IAAI,CAACuD,MAAM,CAAG,CAAC,eACdjE,KAAA,CAAAE,SAAA,EAAA2U,QAAA,eACE7U,KAAA,QAAK4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B7U,KAAA,QAAK4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B/U,IAAA,SAAA+U,QAAA,CAAM,cAAY,CAAM,CAAC,cACzB7U,KAAA,SAAA6U,QAAA,EAAOxG,iBAAiB,CAAC,CAAC,CAAC0I,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC9C,CAAC,CACLpS,aAAa,CAACV,MAAM,CAAG,CAAC,eACvBjE,KAAA,QAAK4U,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9C/U,IAAA,SAAA+U,QAAA,CAAM,kBAAgB,CAAM,CAAC,cAC7B7U,KAAA,SAAA6U,QAAA,EAAO/O,uBAAuB,CAAC,CAAC,CAACiR,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACpD,CACN,cACD/W,KAAA,QAAK4U,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzC/U,IAAA,SAAA+U,QAAA,CAAM,mBAAiB,CAAM,CAAC,cAC9B7U,KAAA,SAAA6U,QAAA,EAAOnG,aAAa,CAAC,CAAC,CAACqI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC1C,CAAC,cACN/W,KAAA,QAAK4U,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxC/U,IAAA,SAAA+U,QAAA,CAAM,eAAa,CAAM,CAAC,cAC1B7U,KAAA,SAAA6U,QAAA,EAAOvG,YAAY,CAAC,CAAC,CAACyI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACzC,CAAC,cACN/W,KAAA,QAAK4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B/U,IAAA,SAAA+U,QAAA,CAAM,iBAAe,CAAM,CAAC,cAC5B7U,KAAA,SAAA6U,QAAA,EAAOzP,cAAc,CAAC,CAAC,CAAC2R,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC3C,CAAC,CACLpS,aAAa,CAACV,MAAM,CAAG,CAAC,eACvBjE,KAAA,QAAK4U,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B/U,IAAA,SAAA+U,QAAA,CAAM,kBAAgB,CAAM,CAAC,cAC7B7U,KAAA,SAAA6U,QAAA,EAAO/O,uBAAuB,CAAC,CAAC,CAACiR,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EACpD,CACN,cACD/W,KAAA,QAAK4U,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC/U,IAAA,SAAA+U,QAAA,CAAM,wBAAsB,CAAM,CAAC,cACnC7U,KAAA,SAAA6U,QAAA,EAAOzP,cAAc,CAAC,CAAC,CAAC2R,OAAO,CAAC,CAAC,CAAC,CAAC,MAAI,EAAM,CAAC,EAC3C,CAAC,EACH,CAAC,cAEN/W,KAAA,SAAM4U,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC/B7U,KAAA,QAAK4U,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B/U,IAAA,OAAA+U,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7B/U,IAAA,QAAK8U,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB/U,IAAA,UACEsV,IAAI,CAAC,MAAM,CACXG,WAAW,CAAEpU,WAAW,GAAK,SAAS,CAAG,8CAA8C,CAAG,0BAA2B,CACrHmS,KAAK,CAAE1S,YAAY,CAACE,IAAK,CACzBgU,QAAQ,CAAGnB,CAAC,EAAK9S,eAAe,CAAAoG,aAAA,CAAAA,aAAA,IAAKrG,YAAY,MAAEE,IAAI,CAAE6S,CAAC,CAACC,MAAM,CAACN,KAAK,EAAC,CAAE,CAC1EsB,SAAS,CAAEzT,WAAW,GAAK,SAAS,EAAI,CAACP,YAAY,CAACE,IAAI,CAAG,gBAAgB,CAAG,EAAG,CACpF,CAAC,CACC,CAAC,cACNhB,IAAA,QAAK8U,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB/U,IAAA,UACEsV,IAAI,CAAC,KAAK,CACVG,WAAW,CAAC,yBAAyB,CACrCjC,KAAK,CAAE1S,YAAY,CAACG,KAAM,CAC1B+T,QAAQ,CAAGnB,CAAC,EAAK9S,eAAe,CAAAoG,aAAA,CAAAA,aAAA,IAAKrG,YAAY,MAAEG,KAAK,CAAE4S,CAAC,CAACC,MAAM,CAACN,KAAK,EAAC,CAAE,CAC5E,CAAC,CACC,CAAC,cACNxT,IAAA,QAAK8U,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzB/U,IAAA,UACEsV,IAAI,CAAC,OAAO,CACZG,WAAW,CAAC,kBAAkB,CAC9BjC,KAAK,CAAE1S,YAAY,CAACI,KAAM,CAC1B8T,QAAQ,CAAGnB,CAAC,EAAK9S,eAAe,CAAAoG,aAAA,CAAAA,aAAA,IAAKrG,YAAY,MAAEI,KAAK,CAAE2S,CAAC,CAACC,MAAM,CAACN,KAAK,EAAC,CAAE,CAC5E,CAAC,CACC,CAAC,EACH,CAAC,cAENtT,KAAA,QAAK4U,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B/U,IAAA,OAAA+U,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB/U,IAAA,QAAK8U,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7B,CAAC,MAAM,CAAE,MAAM,CAAE,cAAc,CAAE,eAAe,CAAC,CAACjN,GAAG,CAACsQ,MAAM,eAC3DlY,KAAA,UAAoB4U,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC5C/U,IAAA,UACEsV,IAAI,CAAC,OAAO,CACZtU,IAAI,CAAC,SAAS,CACdwS,KAAK,CAAE4E,MAAO,CACdC,OAAO,CAAElX,aAAa,GAAKiX,MAAO,CAClCpD,QAAQ,CAAGnB,CAAC,EAAKzS,gBAAgB,CAACyS,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CACnD,CAAC,cACFxT,IAAA,SAAA+U,QAAA,CAAOqD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,CAAO,CAAC,GAR3CH,MASL,CACR,CAAC,CACC,CAAC,cAENpY,IAAA,OAAA+U,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB7U,KAAA,QAAK4U,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B7U,KAAA,UAAO4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC7B/U,IAAA,UACEsV,IAAI,CAAC,OAAO,CACZtU,IAAI,CAAC,aAAa,CAClBwS,KAAK,CAAC,MAAM,CACZ6E,OAAO,CAAEhX,WAAW,GAAK,MAAO,CAChC2T,QAAQ,CAAGnB,CAAC,EAAKvS,cAAc,CAACuS,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CACjD,CAAC,cACFxT,IAAA,SAAA+U,QAAA,CAAM,qBAAmB,CAAM,CAAC,EAC3B,CAAC,cACR7U,KAAA,UAAO4U,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC7B/U,IAAA,UACEsV,IAAI,CAAC,OAAO,CACZtU,IAAI,CAAC,aAAa,CAClBwS,KAAK,CAAC,SAAS,CACf6E,OAAO,CAAEhX,WAAW,GAAK,SAAU,CACnC2T,QAAQ,CAAGnB,CAAC,EAAKvS,cAAc,CAACuS,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE,CACjD,CAAC,cACFxT,IAAA,SAAA+U,QAAA,CAAM,4BAA0B,CAAM,CAAC,EAClC,CAAC,EACL,CAAC,CAEL1T,WAAW,GAAK,SAAS,eACxBnB,KAAA,QAAK4U,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB/U,IAAA,UAAA+U,QAAA,CAAO,eAAa,CAAO,CAAC,cAC5B/U,IAAA,UACEsV,IAAI,CAAC,QAAQ,CACbkD,IAAI,CAAC,MAAM,CACXN,GAAG,CAAC,GAAG,CACP1O,GAAG,CAAElE,cAAc,CAAC,CAAE,CACtBkO,KAAK,CAAEjS,UAAU,EAAI,CAAE,CACvByT,QAAQ,CAAGnB,CAAC,EAAK,CACf,KAAM,CAAAL,KAAK,CAAGpO,UAAU,CAACyO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC,EAAI,CAAC,CAC7ChS,aAAa,CAACgS,KAAK,CAAC,CACtB,CAAE,CACFiC,WAAW,CAAEnV,CAAC,CAAC,2BAA2B,CAAE,CAC7C,CAAC,cACFJ,KAAA,UAAA6U,QAAA,EAAO,mBAAiB,CAACzP,cAAc,CAAC,CAAC,CAAC2R,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAe,CAAC,CAAC3R,cAAc,CAAC,CAAC,EAAI/D,UAAU,EAAI,CAAC,CAAC,EAAE0V,OAAO,CAAC,CAAC,CAAC,EAAQ,CAAC,EAC5H,CACN,EACE,CAAC,EACA,CAAC,cAEPjX,IAAA,QAAK8U,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/B7U,KAAA,CAACN,MAAM,EACLuV,OAAO,CAAE1D,cAAe,CACxBhQ,OAAO,CAAEE,UAAW,CACpBmT,SAAS,CAAC,iBAAiB,CAC3BI,IAAI,CAAC,OAAO,CACZD,OAAO,CAAC,SAAS,CACjBsB,QAAQ,CAAE3V,IAAI,CAACuD,MAAM,GAAK,CAAE,CAAA4Q,QAAA,EAE3BtQ,QAAQ,GAAK,UAAU,CAAGnE,CAAC,CAAC,mBAAmB,CAAC,CAAGA,CAAC,CAAC,yBAAyB,CAAC,CAC/EqE,YAAY,EAAIrE,CAAC,CAAC,mBAAmB,CAAC,EACjC,CAAC,CACN,CAAC,EACN,CACH,EACE,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}