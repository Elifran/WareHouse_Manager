{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import PackagingManager from'../components/PackagingManager';import{isMobileDevice,openPrintWindow,openPrintPreview,downloadReceiptFile,generateXprinterPrintContent,generateMobilePrintContent,generatePrintContent}from'../utils/printUtils';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{t}=useTranslation();const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[paymentType,setPaymentType]=useState('full');// 'full' or 'partial'\nconst[paidAmount,setPaidAmount]=useState(0);const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[categoriesLoaded,setCategoriesLoaded]=useState(false);const[categoryUpdating,setCategoryUpdating]=useState(false);const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst filtersRef=useRef(filters);// Ref to store current filters\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst categoriesRef=useRef(categories);// Ref to store current categories\nconst categoriesLoadedRef=useRef(categoriesLoaded);// Ref to store categories loaded state\n// Update refs whenever state changes\nuseEffect(()=>{filtersRef.current=filters;},[filters]);useEffect(()=>{categoriesRef.current=categories;},[categories]);useEffect(()=>{categoriesLoadedRef.current=categoriesLoaded;},[categoriesLoaded]);// Function to sync session storage with categories state\nconst syncSessionStorage=useCallback(()=>{const sellableStatus={};categories.forEach(cat=>{sellableStatus[cat.id]=cat.is_sellable;});sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));},[categories]);// Sync session storage whenever categories change\nuseEffect(()=>{if(categories.length>0){syncSessionStorage();}},[categories,syncSessionStorage]);// Handle case where filters are cleared but categories aren't loaded yet\nuseEffect(()=>{if(categoriesLoadedRef.current&&categoriesRef.current.length>0&&filtersRef.current.category===''&&filtersRef.current.search===''){fetchProducts(filtersRef.current);}},[categoriesLoaded,categories.length,filters]);const[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\nconst[currentPage,setCurrentPage]=useState(1);const PAGE_SIZE=24;// Packaging state\nconst[packagingCart,setPackagingCart]=useState([]);const[showPackagingManager,setShowPackagingManager]=useState(false);const handlePrintReceipt=async function(printData){let title=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Sale Receipt';let usePreview=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;try{// Validate data structure\nif(!printData){console.error('No data provided for printing');window.alert('No data available to print.');return false;}const isMobile=isMobileDevice();// Generate optimized content for thermal printers\n// const printContent = generateThermalOptimizedContent(printData, title, 'sale');\nconst printContent=generatePrintContent(printData,title,'sale');// Handle print preview\nif(usePreview){const previewSuccess=openPrintPreview(printContent,title);if(previewSuccess){return true;}else{throw new Error('Failed to open print preview window.');}}// Use mobile-friendly printing for mobile devices\nif(isMobile){// Try direct print window for mobile\nconst success=await openPrintWindow(printContent,title);if(!success){// If mobile printing fails, offer receipt app option\nconst useReceiptApp=window.confirm('Mobile printing failed. Would you like to download a file for receipt printer apps instead?');if(useReceiptApp){const downloadSuccess=downloadReceiptFile(printData,title);if(downloadSuccess){window.alert('Receipt file downloaded! You can now open it with any receipt printer app to print directly to your Xprinter.');return true;}}throw new Error('Mobile printing failed. Please try again or check your printer connection.');}return true;}else{// Desktop printing - use direct thermal printing method\nconst success=await printThermalReceipt(printContent,title);if(!success){// Fallback to preview\nconst previewSuccess=openPrintPreview(printContent,title);if(!previewSuccess){throw new Error('Failed to print receipt. Please try print preview instead.');}}return true;}}catch(error){console.error('Print error:',error);window.alert('Failed to print receipt. Please try print preview or check your printer settings.');return false;}};const printThermalReceipt=(printContent,title)=>{return new Promise(resolve=>{try{// Create a hidden iframe for printing\nconst printFrame=document.createElement('iframe');printFrame.style.position='fixed';printFrame.style.right='0';printFrame.style.bottom='0';printFrame.style.width='0';printFrame.style.height='0';printFrame.style.border='none';printFrame.style.visibility='hidden';document.body.appendChild(printFrame);let printDocument=printFrame.contentWindow||printFrame.contentDocument;if(printDocument.document){printDocument=printDocument.document;}// Write the content to the iframe\nprintDocument.open();printDocument.write(printContent);printDocument.close();// Wait for content to load then trigger print\nconst printTimeout=setTimeout(()=>{try{printFrame.contentWindow.focus();// Use a longer timeout to ensure CSS is applied\nsetTimeout(()=>{printFrame.contentWindow.print();// Clean up\nsetTimeout(()=>{if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(true);},1000);},500);}catch(printError){console.error('Print error:',printError);if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(false);}},1000);// Fallback if onload doesn't fire\nprintFrame.onload=function(){clearTimeout(printTimeout);try{printFrame.contentWindow.focus();setTimeout(()=>{printFrame.contentWindow.print();setTimeout(()=>{if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(true);},1000);},500);}catch(error){console.error('Print error:',error);if(document.body.contains(printFrame)){document.body.removeChild(printFrame);}resolve(false);}};}catch(error){console.error('Print setup error:',error);resolve(false);}});};// Update the print preview button in the checkout actions\nconst handlePrintPreview=async()=>{const printData=preparePrintData(\"PREVIEW-\".concat(Date.now()),saleMode==='pending'?'pending':'completed');await handlePrintReceipt(printData,t('titles.sale_receipt'),true);};// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Calculate total amount (products only, excluding packaging)\nconst calculateTotal=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);return cartTotal;};// Calculate total amount including packaging (for display purposes)\nconst calculateTotalWithPackaging=()=>{const cartTotal=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);const packagingTotal=calculatePackagingTotal();return cartTotal+packagingTotal;};// Update paid amount when payment type changes\nuseEffect(()=>{const total=calculateTotal();if(paymentType==='full'){setPaidAmount(total);}else if(paymentType==='partial'){// Only reset to 0 if it's currently set to the full amount\nif(paidAmount===total){setPaidAmount(0);}}},[paymentType,cart,packagingCart]);// Function to get the current price for a specific unit using new pricing structure\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!unitStockInfo)return 0;// If we're in standard mode, use standard prices\nif(priceMode==='standard'){// Check if this unit has unit-specific standard price\nif(unitStockInfo.unit_specific_standard_price){return unitStockInfo.unit_specific_standard_price;}// Use the first available standard price from the product's standard prices list\nif(product.standard_prices_list&&product.standard_prices_list.length>0){return product.standard_prices_list[0];}// Fallback to legacy price\nreturn unitStockInfo.price||0;}// If we're in wholesale mode, use wholesale prices\nif(priceMode==='wholesale'){// Check if this unit has unit-specific wholesale price\nif(unitStockInfo.unit_specific_wholesale_price){return unitStockInfo.unit_specific_wholesale_price;}// Use the main wholesale price\nif(product.wholesale_price){return parseFloat(product.wholesale_price);}// Fallback to legacy wholesale calculation\nif(product.wholesale_price&&product.price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);if(standardBasePrice>0){const wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;return standardBasePrice*wholesaleConversionFactor;}}}// Fallback to standard price\nreturn unitStockInfo.price||0;};useEffect(()=>{const initializeData=async()=>{await fetchCategories();// Don't fetch products here - let the categories useEffect handle it\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categoriesLoaded&&categories.length>0){fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categoriesLoaded]);// Only depend on categoriesLoaded flag\n// Debounced search effect - optimized to prevent focus loss\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Only set timeout if searchInput is not empty or if it was cleared\nif(searchInput!==''){searchTimeoutRef.current=setTimeout(()=>{const newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);},500);}else if(filtersRef.current.search!==''){// If search input is cleared, immediately update filters\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{search:''});setFilters(newFilters);fetchProducts(newFilters);}// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput]);// Only depend on searchInput to prevent re-renders\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/api/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};// const fetchProducts = useCallback(async (filterParams = {}) => {\n//   try {\n//     setLoading(true);\n//     const params = new URLSearchParams();\n//     // Add filters to params\n//     if (filterParams.category) params.append('category', filterParams.category);\n//     if (filterParams.search) params.append('search', filterParams.search);\n//     // Use the regular products API\n//     const baseUrl = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n//     const response = await api.get(baseUrl);\n//     // Handle both paginated and non-paginated responses\n//     let allProducts = [];\n//     const data = response.data;\n//     if (data.results) {\n//       // Paginated response - fetch all pages\n//       allProducts = data.results;\n//       let nextUrl = data.next;\n//       while (nextUrl) {\n//         // Extract the path from the full URL for the API call\n//         const url = new URL(nextUrl);\n//         const path = url.pathname + url.search;\n//         const nextResponse = await api.get(path);\n//         const nextData = nextResponse.data;\n//         allProducts = [...allProducts, ...nextData.results];\n//         nextUrl = nextData.next;\n//       }\n//     } else if (Array.isArray(data)) {\n//       // Direct array response\n//       allProducts = data;\n//     }\n//     // Filter for sellable products (is_active = true and stock > 0 for complete sales)\n//     const sellableProducts = allProducts.filter(product => {\n//       if (!product.is_active) return false;\n//       // if (saleMode === 'complete' && product.stock_quantity <= 0) return false;\n//       return true;\n//     });\n//     setProducts(sellableProducts);\n//     setCurrentPage(1);\n//   } catch (err) {\n//     setError('Failed to load products');\n//   } finally {\n//     setLoading(false);\n//   }\n// }, [saleMode]); // Only depend on saleMode\nconst fetchProducts=useCallback(async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const baseUrl=\"/api/products/\".concat(params.toString()?'?'+params.toString():'');let response=await api.get(baseUrl);let aggregatedProducts=Array.isArray(response.data.results)?response.data.results:Array.isArray(response.data)?response.data:[];// Follow pagination to get all products (DRF-style \"next\" links)\nlet nextUrl=response.data.next;while(nextUrl){// Support absolute or relative next URLs\nresponse=await api.get(nextUrl);const pageItems=Array.isArray(response.data.results)?response.data.results:Array.isArray(response.data)?response.data:[];aggregatedProducts=aggregatedProducts.concat(pageItems);nextUrl=response.data.next;}const allProducts=aggregatedProducts;// If categories are not loaded yet, show all products but log a warning\nif(categoriesRef.current.length===0||!categoriesLoadedRef.current){setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category_name, find the category in our categories list\nif(product.category_name){const category=categoriesRef.current.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categoriesRef.current.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category object with ID, find the category in our categories list\nelse if(product.category&&product.category.id){const category=categoriesRef.current.find(cat=>cat.id===product.category.id);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categoriesRef.current.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);setCurrentPage(1);}catch(err){setError('Failed to load products');}finally{setLoading(false);}},[]);// No dependencies to avoid circular references\nconst fetchCategories=useCallback(async()=>{try{const response=await api.get('/api/products/categories/');let categoriesData=response.data.results||response.data;// Load session-based sellable status from sessionStorage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');// Apply session-based sellable status\ncategoriesData=categoriesData.map(cat=>{const isSellable=sellableStatus.hasOwnProperty(cat.id)?sellableStatus[cat.id]:cat.is_sellable;return _objectSpread(_objectSpread({},cat),{},{is_sellable:isSellable});});setCategories(categoriesData);setCategoriesLoaded(true);}catch(err){console.error('Error fetching categories:',err);}},[]);// No dependencies needed for fetchCategories\nconst toggleCategorySellable=useCallback(async(categoryId,currentStatus)=>{try{setCategoryUpdating(true);const newStatus=!currentStatus;// Update session storage\nconst sellableStatus=JSON.parse(sessionStorage.getItem('sellableCategories')||'{}');sellableStatus[categoryId]=newStatus;sessionStorage.setItem('sellableCategories',JSON.stringify(sellableStatus));// Update categories state immediately for UI feedback\nsetCategories(prevCategories=>prevCategories.map(cat=>cat.id===categoryId?_objectSpread(_objectSpread({},cat),{},{is_sellable:newStatus}):cat));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\n// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to update category status');console.error('Category toggle error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst resetAllCategoriesToSellable=useCallback(async()=>{try{setCategoryUpdating(true);// Create a sellable status object with all categories set to true\nconst allSellableStatus={};categoriesRef.current.forEach(cat=>{allSellableStatus[cat.id]=true;});// Save to session storage\nsessionStorage.setItem('sellableCategories',JSON.stringify(allSellableStatus));// Update categories state immediately\nsetCategories(prevCategories=>prevCategories.map(cat=>_objectSpread(_objectSpread({},cat),{},{is_sellable:true})));// Immediately refetch products to apply the new filter\nfetchProducts(filters);// Don't await - let it run in background for immediate UI response\nsetSuccess('All categories have been set to sellable');// Reset updating state after a short delay\nsetTimeout(()=>setCategoryUpdating(false),500);}catch(err){setError('Failed to reset categories');console.error('Category reset error:',err);setCategoryUpdating(false);}},[categories]);// Only depend on categories\nconst fetchStockAvailability=async productId=>{try{const response=await api.get(\"/api/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let customPrice=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;// Use the first available unit if none selected\nlet unit=selectedUnit;if(!unit&&product.available_units&&product.available_units[0]){const availableUnit=product.available_units[0];unit={id:availableUnit.id,name:availableUnit.name,symbol:availableUnit.symbol};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);// Update cart first\nif(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(prevCart=>prevCart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{var _product$available_un;// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}// Get unit info for price calculation from available_units\nconst availableUnit=(_product$available_un=product.available_units)===null||_product$available_un===void 0?void 0:_product$available_un.find(u=>u.id===unit.id);let unitPrice=0;if(customPrice){// Use custom price if provided (for standard price selection)\nunitPrice=parseFloat(customPrice);}else if(availableUnit){if(priceMode==='standard'){// For standard mode, only use base unit price (no compatible units in standard mode)\nunitPrice=parseFloat(product.price||0);}else{// For wholesale mode, use unit-specific wholesale price or calculated price from base unit\nif(availableUnit.unit_specific_wholesale_price){unitPrice=availableUnit.unit_specific_wholesale_price;}else{// Calculate wholesale price based on conversion factor\nconst baseWholesalePrice=parseFloat(product.wholesale_price||0);if(availableUnit.conversion_factor&&availableUnit.conversion_factor>0){unitPrice=baseWholesalePrice*availableUnit.conversion_factor;}else{unitPrice=baseWholesalePrice;}}}}const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:unitPrice,price_mode:priceMode});setCart(prevCart=>[...prevCart,newCartItem]);}// Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\nif(product.has_packaging&&product.packaging_price){setTimeout(()=>{addPackagingAutomatically(product,unit);},0);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));// Also remove packaging if sales item is removed\nsetPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));// Update packaging quantity automatically if product has packaging\nconst product=products.find(p=>p.id===productId);if(product&&product.has_packaging&&product.packaging_price){const unit={id:unitId};updatePackagingQuantityAutomatically(product,unit,quantity);}setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};// Packaging functions\nconst addPackagingAutomatically=(product,unit)=>{if(!product.has_packaging||!product.packaging_price){return;}// Use a callback to get the current cart state\nsetCart(currentCart=>{// Calculate packaging quantity based on sales quantity\nconst salesItem=currentCart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(!salesItem)return currentCart;// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// For packaging, we use the base unit (pieces) to calculate quantity\n// If the sales unit is not the base unit, we need to convert to pieces\nlet packagingQuantity=salesItem.quantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesItem.quantity*unitStockInfo.conversion_factor;}// Update packaging cart\nsetPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,// Track which sales unit this packaging is for\nsales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});return currentCart;});};const addToPackagingCart=product=>{if(!product.has_packaging||!product.packaging_price){setError('This product does not have packaging consignation');return;}const existingPackaging=packagingCart.find(item=>item.id===product.id);if(existingPackaging){setPackagingCart(packagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{const newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price),status:'consignation',customer_name:customerInfo.name,customer_phone:customerInfo.phone});setPackagingCart([...packagingCart,newPackagingItem]);}setError('');};const updatePackagingQuantityAutomatically=(product,unit,salesQuantity)=>{if(!product.has_packaging||!product.packaging_price){return;}// Get unit information from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);// Calculate packaging quantity based on sales quantity\nlet packagingQuantity=salesQuantity;// If the sales unit is not the base unit, convert to pieces\nif(unitStockInfo&&!unitStockInfo.is_base_unit&&unitStockInfo.conversion_factor){packagingQuantity=salesQuantity*unitStockInfo.conversion_factor;}setPackagingCart(currentPackagingCart=>{const existingPackaging=currentPackagingCart.find(item=>item.id===product.id);if(existingPackaging){// Update existing packaging quantity to match sales quantity\nreturn currentPackagingCart.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:packagingQuantity,total_price:parseFloat(product.packaging_price)*packagingQuantity}):item);}else{// Create new packaging item if it doesn't exist\nconst newPackagingItem=_objectSpread(_objectSpread({},product),{},{quantity:packagingQuantity,unit_price:parseFloat(product.packaging_price),total_price:parseFloat(product.packaging_price)*packagingQuantity,status:'consignation',// Default status\ncustomer_name:customerInfo.name,customer_phone:customerInfo.phone,sales_unit_id:unit.id,sales_unit_name:unit.name,sales_unit_symbol:unit.symbol});return[...currentPackagingCart,newPackagingItem];}});};const updatePackagingQuantity=(productId,quantity)=>{if(quantity<=0){setPackagingCart(packagingCart.filter(item=>item.id!==productId));}else{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{quantity,total_price:item.unit_price*quantity}):item));}};const updatePackagingStatus=(productId,status)=>{setPackagingCart(packagingCart.map(item=>item.id===productId?_objectSpread(_objectSpread({},item),{},{status}):item));};const removeFromPackagingCart=productId=>{setPackagingCart(packagingCart.filter(item=>item.id!==productId));};const calculatePackagingTotal=()=>{return packagingCart.reduce((total,item)=>{// Only \"consignation\" (paid) packaging should be included in the total\n// \"exchange\" and \"due\" packaging are not payable\nif(item.status==='consignation'){return total+(item.total_price||0);}return total;},0);};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};// Prepare print data for printing\nconst preparePrintData=function(saleNumber){let saleStatus=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'completed';const total=calculateSubtotal();const remaining=total-paidAmount;return{sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:total,paid_amount:paidAmount,remaining_amount:remaining,payment_status:remaining>0?'partial':'paid',due_date:remaining>0?new Date(Date.now()+30*24*60*60*1000).toLocaleDateString():null,// 30 days from now\nitems:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};};const handleCheckout=async()=>{if(cart.length===0){setError(t('pos.cart_empty'));return;}setProcessing(true);setError('');// Validate customer name for partial payments\nif((saleMode!=='complete'||paymentType==='partial')&&(!customerInfo.name||!customerInfo.name.trim())){setError('Customer name is required for partial/uncompleted payments');setProcessing(false);return;}// Validate paid amount\nconst total=calculateTotal();if(paidAmount>total){setError('Paid amount cannot exceed the total amount');setProcessing(false);return;}if(paidAmount<0){setError('Paid amount cannot be negative');setProcessing(false);return;}try{const saleData={sale_type:'sale',customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,paid_amount:paidAmount,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};}),packaging_items:packagingCart.map(item=>({product:item.id,quantity:parseFloat(item.quantity),unit:7,// Use the correct piece unit ID (7) for packaging\nunit_price:parseFloat(item.unit_price),status:item.status||'consignation',customer_name:item.customer_name||customerInfo.name,customer_phone:item.customer_phone||customerInfo.phone,notes:item.notes||''}))};// Create the sale\nconst response=await api.post('/api/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{const completionResponse=await api.post(\"/api/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){// Use the improved printing logic for completed sale\nconst printData=preparePrintData(saleNumber,'completed');await handlePrintReceipt(printData,t('titles.sale_receipt'));}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();// Show success message with packaging transaction info if created\nlet successMessage=\"Sale completed successfully! Sale Number: \".concat(saleNumber);if(completionResponse.data.packaging_transaction){const pkgTransaction=completionResponse.data.packaging_transaction;successMessage+=\"\\n\\nPackaging transaction automatically created:\\nTransaction: \".concat(pkgTransaction.transaction_number,\"\\nAmount: \").concat(pkgTransaction.total_amount,\" MGA\");}alert(successMessage);}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nsetError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){// Use the improved printing logic for pending sale\nconst printData=preparePrintData(saleNumber,'pending');await handlePrintReceipt(printData,t('titles.sale_receipt'));}// Clear cart and customer info\nsetCart([]);setPackagingCart([]);setCustomerInfo({name:'',phone:'',email:''});setPaidAmount(0);// Reset price mode to standard after sale\nsetPriceMode('standard');alert(\"Pending sale created successfully! Sale Number: \".concat(saleNumber));}}catch(err){var _err$response,_err$response$data,_err$response2,_err$response2$data,_err$response3,_err$response3$data,_err$response4,_err$response4$data;// Handle different types of errors\nif((_err$response=err.response)!==null&&_err$response!==void 0&&(_err$response$data=_err$response.data)!==null&&_err$response$data!==void 0&&_err$response$data.error){setError(err.response.data.error);}else if((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.detail){setError(err.response.data.detail);}else if((_err$response3=err.response)!==null&&_err$response3!==void 0&&(_err$response3$data=_err$response3.data)!==null&&_err$response3$data!==void 0&&_err$response3$data.customer_name){setError(err.response.data.customer_name[0]);}else if((_err$response4=err.response)!==null&&_err$response4!==void 0&&(_err$response4$data=_err$response4.data)!==null&&_err$response4$data!==void 0&&_err$response4$data.paid_amount){setError(err.response.data.paid_amount[0]);}else{setError('Failed to create sale. Please check the console for details.');}}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setPackagingCart([]);setError('');};const handleFilterChange=useCallback((filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filtersRef.current),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}},[]);// No dependencies needed since we use ref\nconst clearFilters=useCallback(()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\n// Only fetch products if categories are loaded\nif(categoriesLoadedRef.current&&categoriesRef.current.length>0){fetchProducts(clearedFilters);}},[categoriesLoaded,categories.length]);const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products (only for complete sales)\nif(saleMode==='complete'&&product.available_units&&product.available_units.every(u=>{let availableQuantity=product.stock_quantity;if(u.conversion_factor&&u.conversion_factor>0){availableQuantity=product.stock_quantity/u.conversion_factor;}return availableQuantity<=0;})){return;}if(product.available_units&&product.available_units.length>1&&priceMode==='wholesale'||priceMode==='standard'&&product.standard_prices_list&&product.standard_prices_list.length>1){// For multi-unit products or multiple standard prices, add with the currently selected option\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){if(priceMode==='standard'&&selectedUnitId.startsWith('price-')){var _product$base_unit2,_product$base_unit3,_product$base_unit4;// Handle standard price selection\nconst priceIndex=parseInt(selectedUnitId.split('-')[1]);const selectedPrice=product.standard_prices_list[priceIndex];// Add to cart with base unit but specific price\nconst baseUnit={id:((_product$base_unit2=product.base_unit)===null||_product$base_unit2===void 0?void 0:_product$base_unit2.id)||product.base_unit,name:((_product$base_unit3=product.base_unit)===null||_product$base_unit3===void 0?void 0:_product$base_unit3.name)||'Piece',symbol:((_product$base_unit4=product.base_unit)===null||_product$base_unit4===void 0?void 0:_product$base_unit4.symbol)||'piece'};addToCart(product,baseUnit,selectedPrice);}else{// Handle wholesale unit selection\nconst selectedAvailableUnit=product.available_units.find(u=>u.id===selectedUnitId);if(selectedAvailableUnit){// Convert available unit to the format expected by addToCart\nconst selectedUnit={id:selectedAvailableUnit.id,name:selectedAvailableUnit.name,symbol:selectedAvailableUnit.symbol};addToCart(product,selectedUnit);}}}}else{// For single-unit products or single price, add directly with base unit\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.point_of_sale')}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:t('alerts.sale_will_be_completed'),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:t('alerts.sale_will_be_created_pending'),children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group print-receipt-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle print-receipt-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:t('alerts.print_receipt_after_sale'),children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:t('pos.dont_print_receipt'),children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:t('pos.search_products'),value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)},\"search-input\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{margin:'0',fontSize:'1rem',fontWeight:'600'},children:[\"Manage Sellable Categories\",categoryUpdating&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'0.5rem',color:'#3b82f6'},children:\"\\u27F3\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetAllCategoriesToSellable,disabled:categoryUpdating,style:{padding:'0.5rem 1rem',fontSize:'0.875rem',borderRadius:'0.375rem',border:'1px solid #3b82f6',cursor:categoryUpdating?'not-allowed':'pointer',backgroundColor:categoryUpdating?'#9ca3af':'#3b82f6',color:'white',fontWeight:'500',opacity:categoryUpdating?0.6:1},children:\"Reset All to Sellable\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.slice((currentPage-1)*PAGE_SIZE,currentPage*PAGE_SIZE).map(product=>{var _product$base_unit5;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0&&saleMode==='complete'?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[(()=>{if(priceMode==='standard'){// For standard mode, show the legacy price (which is the actual standard price)\nreturn parseFloat(product.price||0).toFixed(2);}else{// For wholesale mode, show the wholesale price\nreturn parseFloat(product.wholesale_price||0).toFixed(2);}})(),\" MGA\",product.available_units&&product.available_units.length>1&&\" (base unit: \".concat(((_product$base_unit5=product.base_unit)===null||_product$base_unit5===void 0?void 0:_product$base_unit5.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,product.available_units&&product.available_units.length>1&&priceMode==='wholesale'&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:product.available_units.map(unit=>{let price=0;let isAvailable=true;// For wholesale mode, use unit-specific wholesale price or calculated price from base unit\nif(unit.unit_specific_wholesale_price){price=unit.unit_specific_wholesale_price;}else{// Calculate wholesale price based on conversion factor\nconst baseWholesalePrice=parseFloat(product.wholesale_price||0);if(unit.conversion_factor&&unit.conversion_factor>0){price=baseWholesalePrice*unit.conversion_factor;}else{price=baseWholesalePrice;}}// Calculate available quantity for this unit\nlet availableQuantity=product.stock_quantity;if(unit.conversion_factor&&unit.conversion_factor>0){availableQuantity=product.stock_quantity/unit.conversion_factor;}isAvailable=availableQuantity>0;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(isAvailable?'available':'unavailable'),children:[unit.name,\": \",price.toFixed(2),\" MGA (\",availableQuantity.toFixed(1),\" available)\"]},unit.id);})})]}),(product.available_units&&product.available_units.length>1&&priceMode==='wholesale'||priceMode==='standard'&&product.standard_prices_list&&product.standard_prices_list.length>1)&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=e.target.value;handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),priceMode==='standard'&&product.standard_prices_list&&product.standard_prices_list.length>1?// For standard mode with multiple prices, show price options\nproduct.standard_prices_list.map((price,index)=>/*#__PURE__*/_jsxs(\"option\",{value:\"price-\".concat(index),children:[\"Standard Price \",index+1,\" - \",parseFloat(price).toFixed(2),\" MGA\"]},\"price-\".concat(index))):// For wholesale mode, show unit options\nproduct.available_units.map(unit=>{let price=0;let isAvailable=true;// For wholesale mode, use unit-specific wholesale price or calculated price from base unit\nif(unit.unit_specific_wholesale_price){price=unit.unit_specific_wholesale_price;}else{// Calculate wholesale price based on conversion factor\nconst baseWholesalePrice=parseFloat(product.wholesale_price||0);if(unit.conversion_factor&&unit.conversion_factor>0){price=baseWholesalePrice*unit.conversion_factor;}else{price=baseWholesalePrice;}}// Calculate available quantity for this unit\nlet availableQuantity=product.stock_quantity;if(unit.conversion_factor&&unit.conversion_factor>0){availableQuantity=product.stock_quantity/unit.conversion_factor;}isAvailable=availableQuantity>0;return/*#__PURE__*/_jsxs(\"option\",{value:unit.id,disabled:saleMode==='complete'?!isAvailable:false,children:[unit.name,\" (\",unit.symbol,\") - \",price.toFixed(2),\" MGA\",!isAvailable&&saleMode==='complete'?' - OUT OF STOCK':'']},unit.id);})]})]}),!(product.available_units&&product.available_units.length>1&&priceMode==='wholesale'||priceMode==='standard'&&product.standard_prices_list&&product.standard_prices_list.length>1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.has_packaging&&product.packaging_price&&/*#__PURE__*/_jsx(\"div\",{className:\"packaging-info\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"packaging-price\",children:[\"Packaging: \",product.packaging_price,\" MGA (Auto-added)\"]})}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})}),products.length>PAGE_SIZE&&/*#__PURE__*/_jsxs(\"div\",{className:\"products-pagination\",style:{display:'flex',justifyContent:'center',gap:'12px',marginTop:'12px'},children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>setCurrentPage(p=>Math.max(1,p-1)),disabled:currentPage===1,children:\"Prev\"}),/*#__PURE__*/_jsxs(\"span\",{style:{alignSelf:'center'},children:[\"Page \",currentPage,\" of \",Math.ceil(products.length/PAGE_SIZE)]}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>setCurrentPage(p=>Math.min(Math.ceil(products.length/PAGE_SIZE),p+1)),disabled:currentPage>=Math.ceil(products.length/PAGE_SIZE),children:\"Next\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Cart is empty\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart-hint\",children:\"Add items from the product list to start a sale\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-status\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:t('alerts.click_to_edit_quantity'),children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sales-item-status\",children:\"-\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:t('alerts.remove_item'),children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode))),packagingCart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"packaging-section-header\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Packaging Items (Auto-calculated)\"})}),packagingCart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item packaging-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[item.name,\" (Packaging)\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),item.sales_unit_name&&/*#__PURE__*/_jsxs(\"p\",{className:\"packaging-source\",children:[\"From: \",item.quantity,\" \",item.sales_unit_symbol||'piece']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:\"piece\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-quantity\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quantity auto-calculated\",children:item.quantity}),/*#__PURE__*/_jsx(\"small\",{className:\"auto-label\",children:\"Auto\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-status\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.status,onChange:e=>updatePackagingStatus(item.id,e.target.value),className:\"packaging-status-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"consignation\",children:\"Consigned (Paid)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"exchange\",children:\"Exchange\"}),/*#__PURE__*/_jsx(\"option\",{value:\"due\",children:\"Due (Return Required)\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromPackagingCart(item.id),title:\"Remove packaging item\",children:\"\\xD7\"})})]},\"packaging-\".concat(item.id)))]})]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Items Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row packaging-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Products Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]}),packagingCart.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Packaging Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculatePackagingTotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total (Products Only):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:saleMode!=='complete'||paymentType==='partial'?\"Customer Name (Required for Partial Payment)\":\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value})),className:(saleMode!=='complete'||paymentType==='partial')&&!customerInfo.name?'required-field':''})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"full\",checked:paymentType==='full',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"partial\",checked:paymentType==='partial',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]}),paymentType==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateTotal(),value:paidAmount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setPaidAmount(value);},placeholder:t('forms.enter_amount_to_pay')}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Products Total: $\",calculateTotal().toFixed(2),\" | Remaining: $\",(calculateTotal()-(paidAmount||0)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkout-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"large\",onClick:handlePrintPreview,className:\"print-preview-btn\",children:\"\\uD83D\\uDDA8\\uFE0F Print Preview\"}),/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?t('pos.complete_sale'):t('pos.create_pending_sale'),printReceipt&&t('pos.print_receipt')]})]})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useTranslation","useAuth","api","Button","PackagingManager","isMobileDevice","openPrintWindow","openPrintPreview","downloadReceiptFile","generateXprinterPrintContent","generateMobilePrintContent","generatePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","t","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","paymentType","setPaymentType","paidAmount","setPaidAmount","loading","setLoading","processing","setProcessing","error","setError","success","setSuccess","stockAvailability","setStockAvailability","categoriesLoaded","setCategoriesLoaded","categoryUpdating","setCategoryUpdating","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","filtersRef","searchTimeoutRef","categoriesRef","categoriesLoadedRef","current","syncSessionStorage","sellableStatus","forEach","cat","id","is_sellable","sessionStorage","setItem","JSON","stringify","length","fetchProducts","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","currentPage","setCurrentPage","PAGE_SIZE","packagingCart","setPackagingCart","showPackagingManager","setShowPackagingManager","handlePrintReceipt","printData","title","arguments","undefined","usePreview","console","window","alert","isMobile","printContent","previewSuccess","Error","useReceiptApp","confirm","downloadSuccess","printThermalReceipt","Promise","resolve","printFrame","document","createElement","style","position","right","bottom","width","height","border","visibility","body","appendChild","printDocument","contentWindow","contentDocument","open","write","close","printTimeout","setTimeout","focus","print","contains","removeChild","printError","onload","clearTimeout","handlePrintPreview","preparePrintData","concat","Date","now","getCurrentPrice","product","wholesale_price","parseFloat","price","calculateTotal","cartTotal","reduce","total","item","unitPrice","unit_price","quantity","calculateTotalWithPackaging","packagingTotal","calculatePackagingTotal","getCurrentUnitPrice","unitStockInfo","unit_specific_standard_price","standard_prices_list","unit_specific_wholesale_price","standardBasePrice","wholesaleBasePrice","wholesaleConversionFactor","initializeData","fetchCategories","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","compatible_units","selectedUnit","find","u","is_default","unit","is_base_unit","_selectedUnit$unit","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","unitInfo","unit_id","conversion_factor","baseUnit","totalBaseStock","available_quantity","remainingPieces","Math","max","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","baseUrl","toString","get","aggregatedProducts","Array","isArray","results","nextUrl","next","pageItems","allProducts","sellableProducts","isSellable","category_name","selectedCategory","parseInt","categoriesData","parse","getItem","hasOwnProperty","toggleCategorySellable","categoryId","currentStatus","newStatus","prevCategories","resetAllCategoriesToSellable","allSellableStatus","prev","addToCart","customPrice","availableUnit","symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","prevCart","_product$available_un","baseWholesalePrice","newCartItem","unit_name","unit_symbol","has_packaging","packaging_price","addPackagingAutomatically","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","p","updatePackagingQuantityAutomatically","removeFromCart","currentCart","salesItem","packagingQuantity","currentPackagingCart","existingPackaging","total_price","newPackagingItem","status","customer_name","customer_phone","sales_unit_id","sales_unit_name","sales_unit_symbol","addToPackagingCart","salesQuantity","updatePackagingQuantity","updatePackagingStatus","removeFromPackagingCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","saleNumber","saleStatus","remaining","sale_number","customer_email","user_name","username","user_id","created_at","toISOString","print_timestamp","print_id","random","substr","total_amount","paid_amount","remaining_amount","payment_status","due_date","toLocaleDateString","items","_item$unit","product_name","product_sku","sku","handleCheckout","trim","saleData","sale_type","payment_method","packaging_items","notes","saleId","completionResponse","successMessage","packaging_transaction","pkgTransaction","transaction_number","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","isNaN","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","every","stock_quantity","selectedUnitId","startsWith","_product$base_unit2","_product$base_unit3","_product$base_unit4","priceIndex","split","selectedPrice","selectedAvailableUnit","className","children","onChange","variant","size","onClick","marginTop","type","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","display","justifyContent","alignItems","margin","fontSize","fontWeight","marginLeft","color","disabled","cursor","opacity","gridTemplateColumns","gap","borderColor","slice","_product$base_unit5","toFixed","stopPropagation","index","alignSelf","ceil","min","onKeyPress","onBlur","autoFocus","method","checked","replace","toUpperCase","step"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PackagingManager from '../components/PackagingManager';\nimport { \n  isMobileDevice,\n  openPrintWindow,\n  openPrintPreview,\n  downloadReceiptFile,\n  generateXprinterPrintContent,\n  generateMobilePrintContent,\n  generatePrintContent\n} from '../utils/printUtils';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [paymentType, setPaymentType] = useState('full'); // 'full' or 'partial'\n  const [paidAmount, setPaidAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [categoriesLoaded, setCategoriesLoaded] = useState(false);\n  const [categoryUpdating, setCategoryUpdating] = useState(false);\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const filtersRef = useRef(filters); // Ref to store current filters\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const categoriesRef = useRef(categories); // Ref to store current categories\n  const categoriesLoadedRef = useRef(categoriesLoaded); // Ref to store categories loaded state\n\n  // Update refs whenever state changes\n  useEffect(() => {\n    filtersRef.current = filters;\n  }, [filters]);\n\n  useEffect(() => {\n    categoriesRef.current = categories;\n  }, [categories]);\n\n  useEffect(() => {\n    categoriesLoadedRef.current = categoriesLoaded;\n  }, [categoriesLoaded]);\n\n  // Function to sync session storage with categories state\n  const syncSessionStorage = useCallback(() => {\n    const sellableStatus = {};\n    categories.forEach(cat => {\n      sellableStatus[cat.id] = cat.is_sellable;\n    });\n    sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n  }, [categories]);\n\n  // Sync session storage whenever categories change\n  useEffect(() => {\n    if (categories.length > 0) {\n      syncSessionStorage();\n    }\n  }, [categories, syncSessionStorage]);\n\n  // Handle case where filters are cleared but categories aren't loaded yet\n  useEffect(() => {\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0 && filtersRef.current.category === '' && filtersRef.current.search === '') {\n      fetchProducts(filtersRef.current);\n    }\n  }, [categoriesLoaded, categories.length, filters]);\n\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n  const [currentPage, setCurrentPage] = useState(1);\n  const PAGE_SIZE = 24;\n  \n  // Packaging state\n  const [packagingCart, setPackagingCart] = useState([]);\n  const [showPackagingManager, setShowPackagingManager] = useState(false);\n\n  const handlePrintReceipt = async (printData, title = 'Sale Receipt', usePreview = false) => {\n    try {\n      // Validate data structure\n      if (!printData) {\n        console.error('No data provided for printing');\n        window.alert('No data available to print.');\n        return false;\n      }\n\n      const isMobile = isMobileDevice();\n      \n      // Generate optimized content for thermal printers\n      // const printContent = generateThermalOptimizedContent(printData, title, 'sale');\n      const printContent = generatePrintContent(printData, title, 'sale');\n\n      // Handle print preview\n      if (usePreview) {\n        const previewSuccess = openPrintPreview(printContent, title);\n        if (previewSuccess) {\n          return true;\n        } else {\n          throw new Error('Failed to open print preview window.');\n        }\n      }\n\n      // Use mobile-friendly printing for mobile devices\n      if (isMobile) {\n        // Try direct print window for mobile\n        const success = await openPrintWindow(printContent, title);\n        if (!success) {\n          // If mobile printing fails, offer receipt app option\n          const useReceiptApp = window.confirm('Mobile printing failed. Would you like to download a file for receipt printer apps instead?');\n          if (useReceiptApp) {\n            const downloadSuccess = downloadReceiptFile(printData, title);\n            if (downloadSuccess) {\n              window.alert('Receipt file downloaded! You can now open it with any receipt printer app to print directly to your Xprinter.');\n              return true;\n            }\n          }\n          throw new Error('Mobile printing failed. Please try again or check your printer connection.');\n        }\n        return true;\n      } else {\n        // Desktop printing - use direct thermal printing method\n        const success = await printThermalReceipt(printContent, title);\n        if (!success) {\n          // Fallback to preview\n          const previewSuccess = openPrintPreview(printContent, title);\n          if (!previewSuccess) {\n            throw new Error('Failed to print receipt. Please try print preview instead.');\n          }\n        }\n        return true;\n      }\n      \n    } catch (error) {\n      console.error('Print error:', error);\n      window.alert('Failed to print receipt. Please try print preview or check your printer settings.');\n      return false;\n    }\n  };\n\n  const printThermalReceipt = (printContent, title) => {\n    return new Promise((resolve) => {\n      try {\n        // Create a hidden iframe for printing\n        const printFrame = document.createElement('iframe');\n        printFrame.style.position = 'fixed';\n        printFrame.style.right = '0';\n        printFrame.style.bottom = '0';\n        printFrame.style.width = '0';\n        printFrame.style.height = '0';\n        printFrame.style.border = 'none';\n        printFrame.style.visibility = 'hidden';\n        \n        document.body.appendChild(printFrame);\n        \n        let printDocument = printFrame.contentWindow || printFrame.contentDocument;\n        if (printDocument.document) {\n          printDocument = printDocument.document;\n        }\n        \n        // Write the content to the iframe\n        printDocument.open();\n        printDocument.write(printContent);\n        printDocument.close();\n        \n        // Wait for content to load then trigger print\n        const printTimeout = setTimeout(() => {\n          try {\n            printFrame.contentWindow.focus();\n            \n            // Use a longer timeout to ensure CSS is applied\n            setTimeout(() => {\n              printFrame.contentWindow.print();\n              \n              // Clean up\n              setTimeout(() => {\n                if (document.body.contains(printFrame)) {\n                  document.body.removeChild(printFrame);\n                }\n                resolve(true);\n              }, 1000);\n            }, 500);\n          } catch (printError) {\n            console.error('Print error:', printError);\n            if (document.body.contains(printFrame)) {\n              document.body.removeChild(printFrame);\n            }\n            resolve(false);\n          }\n        }, 1000);\n        \n        // Fallback if onload doesn't fire\n        printFrame.onload = function() {\n          clearTimeout(printTimeout);\n          try {\n            printFrame.contentWindow.focus();\n            setTimeout(() => {\n              printFrame.contentWindow.print();\n              setTimeout(() => {\n                if (document.body.contains(printFrame)) {\n                  document.body.removeChild(printFrame);\n                }\n                resolve(true);\n              }, 1000);\n            }, 500);\n          } catch (error) {\n            console.error('Print error:', error);\n            if (document.body.contains(printFrame)) {\n              document.body.removeChild(printFrame);\n            }\n            resolve(false);\n          }\n        };\n        \n      } catch (error) {\n        console.error('Print setup error:', error);\n        resolve(false);\n      }\n    });\n  };\n\n  // Update the print preview button in the checkout actions\n  const handlePrintPreview = async () => {\n    const printData = preparePrintData(`PREVIEW-${Date.now()}`, saleMode === 'pending' ? 'pending' : 'completed');\n    await handlePrintReceipt(printData, t('titles.sale_receipt'), true);\n  };\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Calculate total amount (products only, excluding packaging)\n  const calculateTotal = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    return cartTotal;\n  };\n\n  // Calculate total amount including packaging (for display purposes)\n  const calculateTotalWithPackaging = () => {\n    const cartTotal = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    const packagingTotal = calculatePackagingTotal();\n    return cartTotal + packagingTotal;\n  };\n\n  // Update paid amount when payment type changes\n  useEffect(() => {\n    const total = calculateTotal();\n    if (paymentType === 'full') {\n      setPaidAmount(total);\n    } else if (paymentType === 'partial') {\n      // Only reset to 0 if it's currently set to the full amount\n      if (paidAmount === total) {\n        setPaidAmount(0);\n      }\n    }\n  }, [paymentType, cart, packagingCart]);\n\n  // Function to get the current price for a specific unit using new pricing structure\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo) return 0;\n    \n    // If we're in standard mode, use standard prices\n    if (priceMode === 'standard') {\n      // Check if this unit has unit-specific standard price\n      if (unitStockInfo.unit_specific_standard_price) {\n        return unitStockInfo.unit_specific_standard_price;\n      }\n      \n      // Use the first available standard price from the product's standard prices list\n      if (product.standard_prices_list && product.standard_prices_list.length > 0) {\n        return product.standard_prices_list[0];\n      }\n      \n      // Fallback to legacy price\n      return unitStockInfo.price || 0;\n    }\n    \n    // If we're in wholesale mode, use wholesale prices\n    if (priceMode === 'wholesale') {\n      // Check if this unit has unit-specific wholesale price\n      if (unitStockInfo.unit_specific_wholesale_price) {\n        return unitStockInfo.unit_specific_wholesale_price;\n      }\n      \n      // Use the main wholesale price\n      if (product.wholesale_price) {\n        return parseFloat(product.wholesale_price);\n      }\n      \n      // Fallback to legacy wholesale calculation\n      if (product.wholesale_price && product.price) {\n        const standardBasePrice = parseFloat(product.price);\n        const wholesaleBasePrice = parseFloat(product.wholesale_price);\n        \n        if (standardBasePrice > 0) {\n          const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n          return standardBasePrice * wholesaleConversionFactor;\n        }\n      }\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price || 0;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      // Don't fetch products here - let the categories useEffect handle it\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categoriesLoaded && categories.length > 0) {\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categoriesLoaded]); // Only depend on categoriesLoaded flag\n\n  // Debounced search effect - optimized to prevent focus loss\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Only set timeout if searchInput is not empty or if it was cleared\n    if (searchInput !== '') {\n      searchTimeoutRef.current = setTimeout(() => {\n        const newFilters = { ...filtersRef.current, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }, 500);\n    } else if (filtersRef.current.search !== '') {\n      // If search input is cleared, immediately update filters\n      const newFilters = { ...filtersRef.current, search: '' };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput]); // Only depend on searchInput to prevent re-renders\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/api/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  // const fetchProducts = useCallback(async (filterParams = {}) => {\n  //   try {\n  //     setLoading(true);\n  //     const params = new URLSearchParams();\n      \n  //     // Add filters to params\n  //     if (filterParams.category) params.append('category', filterParams.category);\n  //     if (filterParams.search) params.append('search', filterParams.search);\n      \n  //     // Use the regular products API\n  //     const baseUrl = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n  //     const response = await api.get(baseUrl);\n      \n  //     // Handle both paginated and non-paginated responses\n  //     let allProducts = [];\n  //     const data = response.data;\n  //     if (data.results) {\n  //       // Paginated response - fetch all pages\n  //       allProducts = data.results;\n  //       let nextUrl = data.next;\n  //       while (nextUrl) {\n  //         // Extract the path from the full URL for the API call\n  //         const url = new URL(nextUrl);\n  //         const path = url.pathname + url.search;\n  //         const nextResponse = await api.get(path);\n  //         const nextData = nextResponse.data;\n  //         allProducts = [...allProducts, ...nextData.results];\n  //         nextUrl = nextData.next;\n  //       }\n  //     } else if (Array.isArray(data)) {\n  //       // Direct array response\n  //       allProducts = data;\n  //     }\n      \n  //     // Filter for sellable products (is_active = true and stock > 0 for complete sales)\n  //     const sellableProducts = allProducts.filter(product => {\n  //       if (!product.is_active) return false;\n  //       // if (saleMode === 'complete' && product.stock_quantity <= 0) return false;\n  //       return true;\n  //     });\n      \n  //     setProducts(sellableProducts);\n  //     setCurrentPage(1);\n  //   } catch (err) {\n  //     setError('Failed to load products');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // }, [saleMode]); // Only depend on saleMode\n\n  const fetchProducts = useCallback(async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const baseUrl = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n      let response = await api.get(baseUrl);\n      let aggregatedProducts = Array.isArray(response.data.results) ? response.data.results : (Array.isArray(response.data) ? response.data : []);\n      \n      // Follow pagination to get all products (DRF-style \"next\" links)\n      let nextUrl = response.data.next;\n      while (nextUrl) {\n        // Support absolute or relative next URLs\n        response = await api.get(nextUrl);\n        const pageItems = Array.isArray(response.data.results) ? response.data.results : (Array.isArray(response.data) ? response.data : []);\n        aggregatedProducts = aggregatedProducts.concat(pageItems);\n        nextUrl = response.data.next;\n      }\n      \n      const allProducts = aggregatedProducts;\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categoriesRef.current.length === 0 || !categoriesLoadedRef.current) {\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category_name, find the category in our categories list\n        if (product.category_name) {\n          const category = categoriesRef.current.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categoriesRef.current.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category object with ID, find the category in our categories list\n        else if (product.category && product.category.id) {\n          const category = categoriesRef.current.find(cat => cat.id === product.category.id);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categoriesRef.current.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n      setCurrentPage(1);\n    } catch (err) {\n      setError('Failed to load products');\n    } finally {\n      setLoading(false);\n    }\n  }, []); // No dependencies to avoid circular references\n\n  const fetchCategories = useCallback(async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      let categoriesData = response.data.results || response.data;\n      \n      // Load session-based sellable status from sessionStorage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      \n      // Apply session-based sellable status\n      categoriesData = categoriesData.map(cat => {\n        const isSellable = sellableStatus.hasOwnProperty(cat.id) ? sellableStatus[cat.id] : cat.is_sellable;\n        return {\n          ...cat,\n          is_sellable: isSellable\n        };\n      });\n      \n      setCategories(categoriesData);\n      setCategoriesLoaded(true);\n    } catch (err) {\n      console.error('Error fetching categories:', err);\n    }\n  }, []); // No dependencies needed for fetchCategories\n\n  const toggleCategorySellable = useCallback(async (categoryId, currentStatus) => {\n    try {\n      setCategoryUpdating(true);\n      const newStatus = !currentStatus;\n      \n      // Update session storage\n      const sellableStatus = JSON.parse(sessionStorage.getItem('sellableCategories') || '{}');\n      sellableStatus[categoryId] = newStatus;\n      sessionStorage.setItem('sellableCategories', JSON.stringify(sellableStatus));\n      \n      // Update categories state immediately for UI feedback\n      setCategories(prevCategories => \n        prevCategories.map(cat => \n          cat.id === categoryId ? { ...cat, is_sellable: newStatus } : cat\n        )\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to update category status');\n      console.error('Category toggle error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const resetAllCategoriesToSellable = useCallback(async () => {\n    try {\n      setCategoryUpdating(true);\n      \n      // Create a sellable status object with all categories set to true\n      const allSellableStatus = {};\n      categoriesRef.current.forEach(cat => {\n        allSellableStatus[cat.id] = true;\n      });\n      \n      // Save to session storage\n      sessionStorage.setItem('sellableCategories', JSON.stringify(allSellableStatus));\n      \n      // Update categories state immediately\n      setCategories(prevCategories => \n        prevCategories.map(cat => ({ ...cat, is_sellable: true }))\n      );\n      \n      // Immediately refetch products to apply the new filter\n      fetchProducts(filters); // Don't await - let it run in background for immediate UI response\n      \n      setSuccess('All categories have been set to sellable');\n      \n      // Reset updating state after a short delay\n      setTimeout(() => setCategoryUpdating(false), 500);\n    } catch (err) {\n      setError('Failed to reset categories');\n      console.error('Category reset error:', err);\n      setCategoryUpdating(false);\n    }\n  }, [categories]); // Only depend on categories\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/api/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null, customPrice = null) => {\n    \n    // Use the first available unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.available_units && product.available_units[0]) {\n      const availableUnit = product.available_units[0];\n      unit = {\n        id: availableUnit.id,\n        name: availableUnit.name,\n        symbol: availableUnit.symbol\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    \n    // Update cart first\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(prevCart => prevCart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      // Get unit info for price calculation from available_units\n      const availableUnit = product.available_units?.find(u => u.id === unit.id);\n      let unitPrice = 0;\n      \n      if (customPrice) {\n        // Use custom price if provided (for standard price selection)\n        unitPrice = parseFloat(customPrice);\n      } else if (availableUnit) {\n        if (priceMode === 'standard') {\n          // For standard mode, only use base unit price (no compatible units in standard mode)\n          unitPrice = parseFloat(product.price || 0);\n        } else {\n          // For wholesale mode, use unit-specific wholesale price or calculated price from base unit\n          if (availableUnit.unit_specific_wholesale_price) {\n            unitPrice = availableUnit.unit_specific_wholesale_price;\n          } else {\n            // Calculate wholesale price based on conversion factor\n            const baseWholesalePrice = parseFloat(product.wholesale_price || 0);\n            if (availableUnit.conversion_factor && availableUnit.conversion_factor > 0) {\n              unitPrice = baseWholesalePrice * availableUnit.conversion_factor;\n            } else {\n              unitPrice = baseWholesalePrice;\n            }\n          }\n        }\n      }\n      \n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unitPrice,\n        price_mode: priceMode\n      };\n      setCart(prevCart => [...prevCart, newCartItem]);\n    }\n\n    // Automatically add packaging if product has packaging - use setTimeout to ensure cart is updated first\n    if (product.has_packaging && product.packaging_price) {\n      setTimeout(() => {\n        addPackagingAutomatically(product, unit);\n      }, 0);\n    }\n    \n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n      // Also remove packaging if sales item is removed\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n\n      // Update packaging quantity automatically if product has packaging\n      const product = products.find(p => p.id === productId);\n      if (product && product.has_packaging && product.packaging_price) {\n        const unit = { id: unitId };\n        updatePackagingQuantityAutomatically(product, unit, quantity);\n      }\n      \n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  // Packaging functions\n  const addPackagingAutomatically = (product, unit) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Use a callback to get the current cart state\n    setCart(currentCart => {\n      // Calculate packaging quantity based on sales quantity\n      const salesItem = currentCart.find(item => \n        item.id === product.id && \n        item.unit_id === unit.id && \n        item.price_mode === priceMode\n      );\n      \n      if (!salesItem) return currentCart;\n\n      // Get unit information from stock availability\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      // For packaging, we use the base unit (pieces) to calculate quantity\n      // If the sales unit is not the base unit, we need to convert to pieces\n      let packagingQuantity = salesItem.quantity;\n      \n      // If the sales unit is not the base unit, convert to pieces\n      if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n        packagingQuantity = salesItem.quantity * unitStockInfo.conversion_factor;\n      }\n\n      // Update packaging cart\n      setPackagingCart(currentPackagingCart => {\n        const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n        if (existingPackaging) {\n          // Update existing packaging quantity to match sales quantity\n          return currentPackagingCart.map(item =>\n            item.id === product.id\n              ? { \n                  ...item, \n                  quantity: packagingQuantity,\n                  total_price: parseFloat(product.packaging_price) * packagingQuantity\n                }\n              : item\n          );\n        } else {\n          // Create new packaging item\n          const newPackagingItem = {\n            ...product,\n            quantity: packagingQuantity,\n            unit_price: parseFloat(product.packaging_price),\n            total_price: parseFloat(product.packaging_price) * packagingQuantity,\n            status: 'consignation', // Default status\n            customer_name: customerInfo.name,\n            customer_phone: customerInfo.phone,\n            sales_unit_id: unit.id, // Track which sales unit this packaging is for\n            sales_unit_name: unit.name,\n            sales_unit_symbol: unit.symbol\n          };\n          return [...currentPackagingCart, newPackagingItem];\n        }\n      });\n\n      return currentCart;\n    });\n  };\n\n  const addToPackagingCart = (product) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      setError('This product does not have packaging consignation');\n      return;\n    }\n\n    const existingPackaging = packagingCart.find(item => item.id === product.id);\n    if (existingPackaging) {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === product.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      const newPackagingItem = {\n        ...product,\n        quantity: 1,\n        unit_price: parseFloat(product.packaging_price),\n        total_price: parseFloat(product.packaging_price),\n        status: 'consignation',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone\n      };\n      setPackagingCart([...packagingCart, newPackagingItem]);\n    }\n    setError('');\n  };\n\n  const updatePackagingQuantityAutomatically = (product, unit, salesQuantity) => {\n    if (!product.has_packaging || !product.packaging_price) {\n      return;\n    }\n\n    // Get unit information from stock availability\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    // Calculate packaging quantity based on sales quantity\n    let packagingQuantity = salesQuantity;\n    \n    // If the sales unit is not the base unit, convert to pieces\n    if (unitStockInfo && !unitStockInfo.is_base_unit && unitStockInfo.conversion_factor) {\n      packagingQuantity = salesQuantity * unitStockInfo.conversion_factor;\n    }\n\n    setPackagingCart(currentPackagingCart => {\n      const existingPackaging = currentPackagingCart.find(item => item.id === product.id);\n      if (existingPackaging) {\n        // Update existing packaging quantity to match sales quantity\n        return currentPackagingCart.map(item =>\n          item.id === product.id\n            ? { \n                ...item, \n                quantity: packagingQuantity,\n                total_price: parseFloat(product.packaging_price) * packagingQuantity\n              }\n            : item\n        );\n      } else {\n        // Create new packaging item if it doesn't exist\n        const newPackagingItem = {\n          ...product,\n          quantity: packagingQuantity,\n          unit_price: parseFloat(product.packaging_price),\n          total_price: parseFloat(product.packaging_price) * packagingQuantity,\n          status: 'consignation', // Default status\n          customer_name: customerInfo.name,\n          customer_phone: customerInfo.phone,\n          sales_unit_id: unit.id,\n          sales_unit_name: unit.name,\n          sales_unit_symbol: unit.symbol\n        };\n        return [...currentPackagingCart, newPackagingItem];\n      }\n    });\n  };\n\n  const updatePackagingQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      setPackagingCart(packagingCart.filter(item => item.id !== productId));\n    } else {\n      setPackagingCart(packagingCart.map(item =>\n        item.id === productId\n          ? { ...item, quantity, total_price: item.unit_price * quantity }\n          : item\n      ));\n    }\n  };\n\n  const updatePackagingStatus = (productId, status) => {\n    setPackagingCart(packagingCart.map(item =>\n      item.id === productId\n        ? { ...item, status }\n        : item\n    ));\n  };\n\n  const removeFromPackagingCart = (productId) => {\n    setPackagingCart(packagingCart.filter(item => item.id !== productId));\n  };\n\n  const calculatePackagingTotal = () => {\n    return packagingCart.reduce((total, item) => {\n      // Only \"consignation\" (paid) packaging should be included in the total\n      // \"exchange\" and \"due\" packaging are not payable\n      if (item.status === 'consignation') {\n        return total + (item.total_price || 0);\n      }\n      return total;\n    }, 0);\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n  // Prepare print data for printing\n  const preparePrintData = (saleNumber, saleStatus = 'completed') => {\n    const total = calculateSubtotal();\n    const remaining = total - paidAmount;\n    \n    return {\n      sale_number: saleNumber,\n      customer_name: customerInfo.name || 'Walk-in Customer',\n      customer_phone: customerInfo.phone || '',\n      customer_email: customerInfo.email || '',\n      user_name: user?.username || 'Unknown User',\n      user_id: user?.id || 'unknown',\n      created_at: new Date().toISOString(),\n      print_timestamp: new Date().toISOString(),\n      print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      status: saleStatus,\n      total_amount: total,\n      paid_amount: paidAmount,\n      remaining_amount: remaining,\n      payment_status: remaining > 0 ? 'partial' : 'paid',\n      due_date: remaining > 0 ? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString() : null, // 30 days from now\n      items: cart.map(item => ({\n        product_name: item.name,\n        product_sku: item.sku,\n        quantity: item.quantity,\n        unit_name: item.unit_name || item.unit?.name || 'piece',\n        unit_price: item.unit_price,\n        total_price: item.unit_price * item.quantity\n      }))\n    };\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError(t('pos.cart_empty'));\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    // Validate customer name for partial payments\n    if ((saleMode !== 'complete' || paymentType === 'partial') && (!customerInfo.name || !customerInfo.name.trim())) {\n      setError('Customer name is required for partial/uncompleted payments');\n      setProcessing(false);\n      return;\n    }\n\n    // Validate paid amount\n    const total = calculateTotal();\n    if (paidAmount > total) {\n      setError('Paid amount cannot exceed the total amount');\n      setProcessing(false);\n      return;\n    }\n\n    if (paidAmount < 0) {\n      setError('Paid amount cannot be negative');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const saleData = {\n        sale_type: 'sale',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        paid_amount: paidAmount,\n        items: cart.map(item => {\n          // More robust unit ID extraction\n          let unitId = item.unit_id;\n          if (typeof unitId === 'object' && unitId !== null) {\n            unitId = unitId.id || unitId;\n          }\n          \n          return {\n            product: item.id,\n            quantity: parseFloat(item.quantity),\n            unit: parseInt(unitId),\n            unit_price: parseFloat(item.unit_price),\n            price_mode: item.price_mode || 'standard'\n          };\n        }),\n        packaging_items: packagingCart.map(item => ({\n          product: item.id,\n          quantity: parseFloat(item.quantity),\n          unit: 7, // Use the correct piece unit ID (7) for packaging\n          unit_price: parseFloat(item.unit_price),\n          status: item.status || 'consignation',\n          customer_name: item.customer_name || customerInfo.name,\n          customer_phone: item.customer_phone || customerInfo.phone,\n          notes: item.notes || ''\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/api/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          const completionResponse = await api.post(`/api/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            // Use the improved printing logic for completed sale\n            const printData = preparePrintData(saleNumber, 'completed');\n            await handlePrintReceipt(printData, t('titles.sale_receipt'));\n          }\n      \n          // Clear cart and customer info\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          setPaidAmount(0);\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          // Show success message with packaging transaction info if created\n          let successMessage = `Sale completed successfully! Sale Number: ${saleNumber}`;\n          if (completionResponse.data.packaging_transaction) {\n            const pkgTransaction = completionResponse.data.packaging_transaction;\n            successMessage += `\\n\\nPackaging transaction automatically created:\\nTransaction: ${pkgTransaction.transaction_number}\\nAmount: ${pkgTransaction.total_amount} MGA`;\n          }\n          alert(successMessage);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setPackagingCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          setPaidAmount(0);\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          // Use the improved printing logic for pending sale\n          const printData = preparePrintData(saleNumber, 'pending');\n          await handlePrintReceipt(printData, t('titles.sale_receipt'));\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setPackagingCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        setPaidAmount(0);\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(`Pending sale created successfully! Sale Number: ${saleNumber}`);\n      }\n    } catch (err) {\n      // Handle different types of errors\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.data?.detail) {\n        setError(err.response.data.detail);\n      } else if (err.response?.data?.customer_name) {\n        setError(err.response.data.customer_name[0]);\n      } else if (err.response?.data?.paid_amount) {\n        setError(err.response.data.paid_amount[0]);\n      } else {\n        setError('Failed to create sale. Please check the console for details.');\n      }\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setPackagingCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = useCallback((filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = { ...filtersRef.current, [filterType]: value };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  }, []); // No dependencies needed since we use ref\n\n  const clearFilters = useCallback(() => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    \n    // Only fetch products if categories are loaded\n    if (categoriesLoadedRef.current && categoriesRef.current.length > 0) {\n      fetchProducts(clearedFilters);\n    }\n  }, [categoriesLoaded, categories.length]);\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products (only for complete sales)\n    if (saleMode === 'complete' && product.available_units && product.available_units.every(u => {\n      let availableQuantity = product.stock_quantity;\n      if (u.conversion_factor && u.conversion_factor > 0) {\n        availableQuantity = product.stock_quantity / u.conversion_factor;\n      }\n      return availableQuantity <= 0;\n    })) {\n      return;\n    }\n    \n    if ((product.available_units && product.available_units.length > 1 && priceMode === 'wholesale') ||\n        (priceMode === 'standard' && product.standard_prices_list && product.standard_prices_list.length > 1)) {\n      // For multi-unit products or multiple standard prices, add with the currently selected option\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        if (priceMode === 'standard' && selectedUnitId.startsWith('price-')) {\n          // Handle standard price selection\n          const priceIndex = parseInt(selectedUnitId.split('-')[1]);\n          const selectedPrice = product.standard_prices_list[priceIndex];\n          \n          // Add to cart with base unit but specific price\n          const baseUnit = {\n            id: product.base_unit?.id || product.base_unit,\n            name: product.base_unit?.name || 'Piece',\n            symbol: product.base_unit?.symbol || 'piece'\n          };\n          addToCart(product, baseUnit, selectedPrice);\n        } else {\n          // Handle wholesale unit selection\n          const selectedAvailableUnit = product.available_units.find(u => u.id === selectedUnitId);\n          \n          if (selectedAvailableUnit) {\n            // Convert available unit to the format expected by addToCart\n            const selectedUnit = {\n              id: selectedAvailableUnit.id,\n              name: selectedAvailableUnit.name,\n              symbol: selectedAvailableUnit.symbol\n            };\n            addToCart(product, selectedUnit);\n          }\n        }\n      }\n    } else {\n      // For single-unit products or single price, add directly with base unit\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>{t('titles.point_of_sale')}</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title={t('alerts.sale_will_be_completed')}\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title={t('alerts.sale_will_be_created_pending')}\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group print-receipt-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle print-receipt-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title={t('alerts.print_receipt_after_sale')}\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title={t('pos.dont_print_receipt')}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                key=\"search-input\"\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder={t('pos.search_products')}\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <div style={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                alignItems: 'center',\n                marginBottom: '1rem'\n              }}>\n                <h3 style={{ margin: '0', fontSize: '1rem', fontWeight: '600' }}>\n                  Manage Sellable Categories\n                  {categoryUpdating && <span style={{ marginLeft: '0.5rem', color: '#3b82f6' }}>⟳</span>}\n                </h3>\n                <button\n                  onClick={resetAllCategoriesToSellable}\n                  disabled={categoryUpdating}\n                  style={{\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #3b82f6',\n                    cursor: categoryUpdating ? 'not-allowed' : 'pointer',\n                    backgroundColor: categoryUpdating ? '#9ca3af' : '#3b82f6',\n                    color: 'white',\n                    fontWeight: '500',\n                    opacity: categoryUpdating ? 0.6 : 1\n                  }}\n                >\n                  Reset All to Sellable\n                </button>\n              </div>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products\n              .slice((currentPage - 1) * PAGE_SIZE, currentPage * PAGE_SIZE)\n              .map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 && saleMode === 'complete' ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {(() => {\n                      if (priceMode === 'standard') {\n                        // For standard mode, show the legacy price (which is the actual standard price)\n                        return parseFloat(product.price || 0).toFixed(2);\n                      } else {\n                        // For wholesale mode, show the wholesale price\n                        return parseFloat(product.wholesale_price || 0).toFixed(2);\n                      }\n                    })()} MGA\n                    {product.available_units && product.available_units.length > 1 && \n                      ` (base unit: ${product.base_unit?.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {product.available_units && product.available_units.length > 1 && priceMode === 'wholesale' && (\n                      <span className=\"stock-details\">\n                        {product.available_units.map(unit => {\n                          let price = 0;\n                          let isAvailable = true;\n                          \n                          // For wholesale mode, use unit-specific wholesale price or calculated price from base unit\n                          if (unit.unit_specific_wholesale_price) {\n                            price = unit.unit_specific_wholesale_price;\n                          } else {\n                            // Calculate wholesale price based on conversion factor\n                            const baseWholesalePrice = parseFloat(product.wholesale_price || 0);\n                            if (unit.conversion_factor && unit.conversion_factor > 0) {\n                              price = baseWholesalePrice * unit.conversion_factor;\n                            } else {\n                              price = baseWholesalePrice;\n                            }\n                          }\n                          \n                          // Calculate available quantity for this unit\n                          let availableQuantity = product.stock_quantity;\n                          if (unit.conversion_factor && unit.conversion_factor > 0) {\n                            availableQuantity = product.stock_quantity / unit.conversion_factor;\n                          }\n                          isAvailable = availableQuantity > 0;\n                            \n                            return (\n                            <span key={unit.id} className={`unit-stock ${isAvailable ? 'available' : 'unavailable'}`}>\n                              {unit.name}: {price.toFixed(2)} MGA ({availableQuantity.toFixed(1)} available)\n                              </span>\n                            );\n                        })}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Show for products with multiple available units or multiple standard prices */}\n                  {((product.available_units && product.available_units.length > 1 && priceMode === 'wholesale') || \n                    (priceMode === 'standard' && product.standard_prices_list && product.standard_prices_list.length > 1)) && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = e.target.value;\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {priceMode === 'standard' && product.standard_prices_list && product.standard_prices_list.length > 1 ? (\n                          // For standard mode with multiple prices, show price options\n                          product.standard_prices_list.map((price, index) => (\n                            <option key={`price-${index}`} value={`price-${index}`}>\n                              Standard Price {index + 1} - {parseFloat(price).toFixed(2)} MGA\n                            </option>\n                          ))\n                        ) : (\n                          // For wholesale mode, show unit options\n                          product.available_units.map((unit) => {\n                            let price = 0;\n                            let isAvailable = true;\n                            \n                            // For wholesale mode, use unit-specific wholesale price or calculated price from base unit\n                            if (unit.unit_specific_wholesale_price) {\n                              price = unit.unit_specific_wholesale_price;\n                            } else {\n                              // Calculate wholesale price based on conversion factor\n                              const baseWholesalePrice = parseFloat(product.wholesale_price || 0);\n                              if (unit.conversion_factor && unit.conversion_factor > 0) {\n                                price = baseWholesalePrice * unit.conversion_factor;\n                              } else {\n                                price = baseWholesalePrice;\n                              }\n                            }\n                            \n                            // Calculate available quantity for this unit\n                            let availableQuantity = product.stock_quantity;\n                            if (unit.conversion_factor && unit.conversion_factor > 0) {\n                              availableQuantity = product.stock_quantity / unit.conversion_factor;\n                            }\n                            isAvailable = availableQuantity > 0;\n                            \n                            return (\n                              <option \n                                key={unit.id} \n                                value={unit.id}\n                                disabled={saleMode === 'complete' ? !isAvailable : false}\n                              >\n                                {unit.name} ({unit.symbol}) - {price.toFixed(2)} MGA\n                                {!isAvailable && saleMode === 'complete' ? ' - OUT OF STOCK' : ''}\n                              </option>\n                            );\n                          })\n                        )}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Show when no unit selection is needed */}\n                  {!((product.available_units && product.available_units.length > 1 && priceMode === 'wholesale') || \n                     (priceMode === 'standard' && product.standard_prices_list && product.standard_prices_list.length > 1)) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* Packaging Info - Show for products with packaging */}\n                  {product.has_packaging && product.packaging_price && (\n                    <div className=\"packaging-info\">\n                      <small className=\"packaging-price\">\n                        Packaging: {product.packaging_price} MGA (Auto-added)\n                      </small>\n                    </div>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Pagination Controls */}\n          {products.length > PAGE_SIZE && (\n            <div className=\"products-pagination\" style={{ display: 'flex', justifyContent: 'center', gap: '12px', marginTop: '12px' }}>\n              <Button\n                variant=\"outline\"\n                size=\"small\"\n                onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                disabled={currentPage === 1}\n              >\n                Prev\n              </Button>\n              <span style={{ alignSelf: 'center' }}>\n                Page {currentPage} of {Math.ceil(products.length / PAGE_SIZE)}\n              </span>\n              <Button\n                variant=\"outline\"\n                size=\"small\"\n                onClick={() => setCurrentPage(p => Math.min(Math.ceil(products.length / PAGE_SIZE), p + 1))}\n                disabled={currentPage >= Math.ceil(products.length / PAGE_SIZE)}\n              >\n                Next\n              </Button>\n            </div>\n          )}\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <div className=\"empty-cart\">\n                <p>Cart is empty</p>\n                <p className=\"empty-cart-hint\">Add items from the product list to start a sale</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-status\">Status</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title={t('alerts.click_to_edit_quantity')}\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-status\">\n                      <span className=\"sales-item-status\">-</span>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title={t('alerts.remove_item')}\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                \n                {/* Packaging Items */}\n                {packagingCart.length > 0 && (\n                  <>\n                    <div className=\"packaging-section-header\">\n                      <h4>Packaging Items (Auto-calculated)</h4>\n                    </div>\n                    {packagingCart.map(item => (\n                      <div key={`packaging-${item.id}`} className=\"cart-item packaging-item\">\n                        <div className=\"item-product\">\n                          <h4>{item.name} (Packaging)</h4>\n                          <p className=\"item-sku\">SKU: {item.sku}</p>\n                          {item.sales_unit_name && (\n                            <p className=\"packaging-source\">\n                              From: {item.quantity} {item.sales_unit_symbol || 'piece'}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"item-unit\">\n                          piece\n                        </div>\n                        <div className=\"item-price\">\n                          {parseFloat(item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-quantity\">\n                          <span className=\"quantity auto-calculated\">\n                            {item.quantity}\n                          </span>\n                          <small className=\"auto-label\">Auto</small>\n                        </div>\n                        <div className=\"item-status\">\n                          <select\n                            value={item.status}\n                            onChange={(e) => updatePackagingStatus(item.id, e.target.value)}\n                            className=\"packaging-status-select\"\n                          >\n                            <option value=\"consignation\">Consigned (Paid)</option>\n                            <option value=\"exchange\">Exchange</option>\n                            <option value=\"due\">Due (Return Required)</option>\n                          </select>\n                        </div>\n                        <div className=\"item-total\">\n                          {(item.quantity * item.unit_price).toFixed(2)} MGA\n                        </div>\n                        <div className=\"item-actions\">\n                          <Button\n                            size=\"small\"\n                            variant=\"danger\"\n                            onClick={() => removeFromPackagingCart(item.id)}\n                            title=\"Remove packaging item\"\n                          >\n                            ×\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Items Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row packaging-breakdown\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span>Products Total:</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n                {packagingCart.length > 0 && (\n                  <div className=\"summary-row\">\n                    <span>Packaging Total:</span>\n                    <span>{calculatePackagingTotal().toFixed(2)} MGA</span>\n                  </div>\n                )}\n                <div className=\"summary-row total\">\n                  <span>Total (Products Only):</span>\n                  <span>{calculateTotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder={(saleMode !== 'complete' || paymentType === 'partial' )? \"Customer Name (Required for Partial Payment)\" : \"Customer Name (Optional)\"}\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className={(saleMode !== 'complete' || paymentType === 'partial') && !customerInfo.name ? 'required-field' : ''}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n                \n                <h3>Payment Type</h3>\n                <div className=\"payment-types\">\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"full\"\n                      checked={paymentType === 'full'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Full Payment (100%)</span>\n                  </label>\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"partial\"\n                      checked={paymentType === 'partial'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Partial Payment (0-99.99%)</span>\n                  </label>\n                </div>\n                \n                {paymentType === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateTotal()}\n                      value={paidAmount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setPaidAmount(value);\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                    />\n                    <small>Products Total: ${calculateTotal().toFixed(2)} | Remaining: ${(calculateTotal() - (paidAmount || 0)).toFixed(2)}</small>\n                  </div>\n                )}\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                {/* Print Preview Button - Using the improved printing logic */}\n                <Button\n                  variant=\"outline\"\n                  size=\"large\"\n                  onClick={handlePrintPreview}\n                  className=\"print-preview-btn\"\n                >\n                  🖨️ Print Preview\n                </Button>\n                \n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? t('pos.complete_sale') : t('pos.create_pending_sale')}\n                  {printReceipt && t('pos.print_receipt')}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}