{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{useApi}from'../hooks/useApi';import Button from'./Button';import PrintButton from'./PrintButton';import'./PurchaseOrderModal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PurchaseOrderModal=_ref=>{let{suppliers,onClose,onSubmit}=_ref;const{t}=useTranslation();const[formData,setFormData]=useState({supplier_id:'',expected_delivery_date:'',notes:'',items:[]});const[products,setProducts]=useState([]);const[taxClasses,setTaxClasses]=useState([]);const[loading,setLoading]=useState(false);const api=useApi();useEffect(()=>{fetchProductsAndTaxes();},[]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchProductsAndTaxes=async()=>{try{const[productsResponse,taxResponse]=await Promise.all([api.get('/api/products/'),api.get('/api/products/tax-classes/')]);const products=productsResponse.data.results||productsResponse.data;// Fetch unit costs for each product\nconst productsWithUnitCosts=await Promise.all(products.map(async product=>{try{const unitCostsResponse=await api.get(\"/api/products/\".concat(product.id,\"/unit-costs/\"));return _objectSpread(_objectSpread({},product),{},{unit_costs:unitCostsResponse.data.unit_costs||[]});}catch(error){console.error(\"Error fetching unit costs for product \".concat(product.id,\":\"),error);return _objectSpread(_objectSpread({},product),{},{unit_costs:[]});}}));setProducts(productsWithUnitCosts);setTaxClasses(taxResponse.data.results||taxResponse.data);}catch(error){console.error('Error fetching products and tax classes:',error);}};const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const addItem=()=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:[...prev.items,{product_id:'',quantity_ordered:1,unit_id:'',unit_cost:0,tax_class_id:'',notes:''}]}));};const removeItem=index=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:prev.items.filter((_,i)=>i!==index)}));};const handleItemChange=(index,field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:prev.items.map((item,i)=>{if(i===index){const updatedItem=_objectSpread(_objectSpread({},item),{},{[field]:value});// When product is selected, set default unit and unit cost\nif(field==='product_id'&&value){var _selectedProduct$comp;const selectedProduct=products.find(p=>p.id===parseInt(value));if((selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$comp=selectedProduct.compatible_units)===null||_selectedProduct$comp===void 0?void 0:_selectedProduct$comp.length)>0){// Find the default unit (is_default: true) or fallback to base unit\nlet defaultUnit=selectedProduct.compatible_units.find(u=>u.is_default);if(!defaultUnit){defaultUnit=selectedProduct.compatible_units.find(u=>{var _u$unit;return((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.is_base_unit)||u.unit_is_base;});}if(!defaultUnit){defaultUnit=selectedProduct.compatible_units[0];}if(defaultUnit){// Handle both ProductUnit structure (with nested unit) and direct unit structure\nconst unit=defaultUnit.unit||defaultUnit;const unitId=(unit===null||unit===void 0?void 0:unit.id)||unit;// unit might be just an ID\n// For compatible_units structure, unit is just the ID number\nconst actualUnitId=typeof unitId==='number'?unitId:(unit===null||unit===void 0?void 0:unit.id)||unitId;if(actualUnitId){var _selectedProduct$unit;updatedItem.unit_id=actualUnitId;// Use the unit costs from the API response\n// The unit_costs array contains the correct cost for each unit\nconst unitCostData=selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$unit=selectedProduct.unit_costs)===null||_selectedProduct$unit===void 0?void 0:_selectedProduct$unit.find(uc=>uc.id===actualUnitId);if(unitCostData){updatedItem.unit_cost=parseFloat(unitCostData.cost_price).toFixed(2);}else{// Fallback to the stored cost_price if unit_costs not available\nupdatedItem.unit_cost=parseFloat((selectedProduct===null||selectedProduct===void 0?void 0:selectedProduct.cost_price)||0).toFixed(2);}}}}}return updatedItem;}return item;})}));};const handleSubmit=async e=>{e.preventDefault();if(!formData.supplier_id||formData.items.length===0){alert(t('modals.please_select_supplier_add_item'));return;}// Validate that all items have required fields\nconst invalidItems=formData.items.filter(item=>!item.product_id||!item.quantity_ordered||!item.unit_cost);if(invalidItems.length>0){alert('Please fill in all required fields for all items (product, quantity, unit cost)');return;}// Convert data types to ensure proper API format\nconst processedData=_objectSpread(_objectSpread({},formData),{},{supplier_id:parseInt(formData.supplier_id),items:formData.items.map(item=>_objectSpread(_objectSpread({},item),{},{product_id:parseInt(item.product_id),quantity_ordered:parseFloat(item.quantity_ordered),unit_id:item.unit_id?parseInt(item.unit_id):((_selectedProduct$base,_selectedProduct$comp2)=>{// If no unit is selected, use the product's base unit\nconst selectedProduct=products.find(p=>p.id===parseInt(item.product_id));if(selectedProduct!==null&&selectedProduct!==void 0&&(_selectedProduct$base=selectedProduct.base_unit)!==null&&_selectedProduct$base!==void 0&&_selectedProduct$base.id){return selectedProduct.base_unit.id;}// If no base unit, try to find the first compatible unit\nif((selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$comp2=selectedProduct.compatible_units)===null||_selectedProduct$comp2===void 0?void 0:_selectedProduct$comp2.length)>0){var _selectedProduct$comp3;return((_selectedProduct$comp3=selectedProduct.compatible_units[0].unit)===null||_selectedProduct$comp3===void 0?void 0:_selectedProduct$comp3.id)||null;}return null;})(),unit_cost:parseFloat(item.unit_cost),tax_class_id:item.tax_class_id?parseInt(item.tax_class_id):null}))});setLoading(true);try{await onSubmit(processedData);}catch(error){console.error('Error submitting purchase order:',error);}finally{setLoading(false);}};const calculateItemTotal=item=>{const quantity=parseFloat(item.quantity_ordered)||0;const unitCost=parseFloat(item.unit_cost)||0;// Since unit cost is now the cost for the selected unit, just multiply by quantity\nreturn quantity*unitCost;};const calculateTaxAmount=item=>{const lineTotal=calculateItemTotal(item);const taxClass=taxClasses.find(tc=>tc.id===parseInt(item.tax_class_id));if(taxClass){return lineTotal*(taxClass.tax_rate/100);}return 0;};const calculateTotals=()=>{const subtotal=formData.items.reduce((sum,item)=>sum+calculateItemTotal(item),0);const taxAmount=formData.items.reduce((sum,item)=>sum+calculateTaxAmount(item),0);const total=subtotal+taxAmount;return{subtotal,taxAmount,total};};const totals=calculateTotals();return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content purchase-order-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('modals.create_purchase_order')}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:onClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('modals.order_details')}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"supplier_id\",children:[t('modals.supplier'),\" *\"]}),/*#__PURE__*/_jsxs(\"select\",{id:\"supplier_id\",name:\"supplier_id\",value:formData.supplier_id,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_supplier')}),suppliers.map(supplier=>/*#__PURE__*/_jsx(\"option\",{value:supplier.id,children:supplier.name},supplier.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expected_delivery_date\",children:t('modals.expected_delivery_date')}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"expected_delivery_date\",name:\"expected_delivery_date\",value:formData.expected_delivery_date,onChange:handleInputChange})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notes\",children:t('common.notes')}),/*#__PURE__*/_jsx(\"textarea\",{id:\"notes\",name:\"notes\",value:formData.notes,onChange:handleInputChange,rows:\"3\",placeholder:\"Additional notes for this purchase order...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('modals.order_items')}),/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:addItem,children:t('modals.add_item')})]}),formData.items.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-items\",children:/*#__PURE__*/_jsx(\"p\",{children:t('modals.no_items_added_yet')})}):/*#__PURE__*/_jsx(\"div\",{className:\"items-list\",children:formData.items.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"item-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[t('common.name'),\" *\"]}),/*#__PURE__*/_jsxs(\"select\",{value:item.product_id,onChange:e=>handleItemChange(index,'product_id',e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_product')}),products.map(product=>/*#__PURE__*/_jsxs(\"option\",{value:product.id,children:[product.name,\" (\",product.sku,\")\"]},product.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-quantity\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[t('common.quantity'),\" *\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:item.quantity_ordered,onChange:e=>handleItemChange(index,'quantity_ordered',e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-unit\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('common.unit')}),/*#__PURE__*/_jsxs(\"select\",{value:item.unit_id,onChange:e=>{const unitId=e.target.value;handleItemChange(index,'unit_id',unitId);// Auto-set unit cost based on selected unit's cost from API\nif(unitId){const selectedProduct=products.find(p=>p.id===parseInt(item.product_id));if(selectedProduct!==null&&selectedProduct!==void 0&&selectedProduct.unit_costs){const unitCostData=selectedProduct.unit_costs.find(uc=>uc.id===parseInt(unitId));if(unitCostData){handleItemChange(index,'unit_cost',parseFloat(unitCostData.cost_price).toFixed(2));}}}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_unit')}),(()=>{const selectedProduct=products.find(p=>p.id===parseInt(item.product_id));if(!(selectedProduct!==null&&selectedProduct!==void 0&&selectedProduct.compatible_units)||selectedProduct.compatible_units.length===0){return/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.no_compatible_units')});}return selectedProduct.compatible_units.map(compatibleUnit=>{var _selectedProduct$unit2;// Handle both ProductUnit structure (with nested unit) and direct unit structure\nconst unit=compatibleUnit.unit||compatibleUnit;const unitId=(unit===null||unit===void 0?void 0:unit.id)||unit;// unit might be just an ID\nconst unitName=(unit===null||unit===void 0?void 0:unit.name)||compatibleUnit.unit_name;const unitSymbol=(unit===null||unit===void 0?void 0:unit.symbol)||compatibleUnit.unit_symbol;// For compatible_units structure, unit is just the ID number\nconst actualUnitId=typeof unitId==='number'?unitId:(unit===null||unit===void 0?void 0:unit.id)||unitId;// If unit is just an ID, use the direct fields from compatibleUnit\nif(!unitName||!unitSymbol){console.warn('Invalid unit data:',compatibleUnit);return null;}// Get unit cost from the API data\nconst unitCostData=selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$unit2=selectedProduct.unit_costs)===null||_selectedProduct$unit2===void 0?void 0:_selectedProduct$unit2.find(uc=>uc.id===actualUnitId);const unitCost=unitCostData?unitCostData.cost_price:0;return/*#__PURE__*/_jsxs(\"option\",{value:actualUnitId,children:[unitName,\" (\",unitSymbol,\") - \",parseFloat(unitCost).toFixed(2),\" MGA\"]},actualUnitId);}).filter(Boolean);})()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-cost\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[t('modals.unit_cost'),\" *\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"0.01\",value:item.unit_cost,onChange:e=>handleItemChange(index,'unit_cost',e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-tax\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('modals.tax_class')}),/*#__PURE__*/_jsxs(\"select\",{value:item.tax_class_id,onChange:e=>handleItemChange(index,'tax_class_id',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.no_tax')}),taxClasses.map(taxClass=>/*#__PURE__*/_jsxs(\"option\",{value:taxClass.id,children:[taxClass.name,\" (\",taxClass.tax_rate,\"%)\"]},taxClass.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('modals.line_total')}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-display\",children:[calculateItemTotal(item).toFixed(2),\" MGA\",item.tax_class_id&&/*#__PURE__*/_jsxs(\"span\",{className:\"tax-amount\",children:[\"+ \",calculateTaxAmount(item).toFixed(2),\" MGA \",t('modals.tax')]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-button\",onClick:()=>removeItem(index),children:t('modals.remove')})})]},index))})]}),formData.items.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"totals-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"totals-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.subtotal'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[totals.subtotal.toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"totals-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.tax_amount'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[totals.taxAmount.toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"totals-row total-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.total_amount'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[totals.total.toFixed(2),\" MGA\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-left\",children:/*#__PURE__*/_jsx(PrintButton,{data:formData,title:t('titles.purchase_order'),type:\"purchase_order\",printText:t('buttons.print_order'),validateText:t('modals.validate_print'),showValidateOption:true,onValidate:handleSubmit,disabled:!formData.supplier_id||formData.items.length===0})}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-right\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:onClose,children:t('modals.cancel')}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",onClick:handleSubmit,disabled:loading||!formData.supplier_id||formData.items.length===0,children:loading?t('modals.creating'):t('modals.create_purchase_order')})]})]})]})});};export default PurchaseOrderModal;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useApi","Button","PrintButton","jsx","_jsx","jsxs","_jsxs","PurchaseOrderModal","_ref","suppliers","onClose","onSubmit","t","formData","setFormData","supplier_id","expected_delivery_date","notes","items","products","setProducts","taxClasses","setTaxClasses","loading","setLoading","api","fetchProductsAndTaxes","productsResponse","taxResponse","Promise","all","get","data","results","productsWithUnitCosts","map","product","unitCostsResponse","concat","id","_objectSpread","unit_costs","error","console","handleInputChange","e","name","value","target","prev","addItem","product_id","quantity_ordered","unit_id","unit_cost","tax_class_id","removeItem","index","filter","_","i","handleItemChange","field","item","updatedItem","_selectedProduct$comp","selectedProduct","find","p","parseInt","compatible_units","length","defaultUnit","u","is_default","_u$unit","unit","is_base_unit","unit_is_base","unitId","actualUnitId","_selectedProduct$unit","unitCostData","uc","parseFloat","cost_price","toFixed","handleSubmit","preventDefault","alert","invalidItems","processedData","_selectedProduct$base","_selectedProduct$comp2","base_unit","_selectedProduct$comp3","calculateItemTotal","quantity","unitCost","calculateTaxAmount","lineTotal","taxClass","tc","tax_rate","calculateTotals","subtotal","reduce","sum","taxAmount","total","totals","className","children","onClick","htmlFor","onChange","required","supplier","type","rows","placeholder","variant","sku","min","compatibleUnit","_selectedProduct$unit2","unitName","unit_name","unitSymbol","symbol","unit_symbol","warn","Boolean","step","title","printText","validateText","showValidateOption","onValidate","disabled"],"sources":["/home/el-ifran/WareHouse_Manager/elif-sales-app/beverage_management_system/src/components/PurchaseOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useApi } from '../hooks/useApi';\nimport Button from './Button';\nimport PrintButton from './PrintButton';\nimport './PurchaseOrderModal.css';\n\nconst PurchaseOrderModal = ({ suppliers, onClose, onSubmit }) => {\n  const { t } = useTranslation();\n  const [formData, setFormData] = useState({\n    supplier_id: '',\n    expected_delivery_date: '',\n    notes: '',\n    items: []\n  });\n  const [products, setProducts] = useState([]);\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const api = useApi();\n\n  useEffect(() => {\n    fetchProductsAndTaxes();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchProductsAndTaxes = async () => {\n    try {\n      const [productsResponse, taxResponse] = await Promise.all([\n        api.get('/api/products/'),\n        api.get('/api/products/tax-classes/')\n      ]);\n      \n      const products = productsResponse.data.results || productsResponse.data;\n      \n      // Fetch unit costs for each product\n      const productsWithUnitCosts = await Promise.all(\n        products.map(async (product) => {\n          try {\n            const unitCostsResponse = await api.get(`/api/products/${product.id}/unit-costs/`);\n            return {\n              ...product,\n              unit_costs: unitCostsResponse.data.unit_costs || []\n            };\n          } catch (error) {\n            console.error(`Error fetching unit costs for product ${product.id}:`, error);\n            return {\n              ...product,\n              unit_costs: []\n            };\n          }\n        })\n      );\n      \n      setProducts(productsWithUnitCosts);\n      setTaxClasses(taxResponse.data.results || taxResponse.data);\n    } catch (error) {\n      console.error('Error fetching products and tax classes:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const addItem = () => {\n    setFormData(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        product_id: '',\n        quantity_ordered: 1,\n        unit_id: '',\n        unit_cost: 0,\n        tax_class_id: '',\n        notes: ''\n      }]\n    }));\n  };\n\n  const removeItem = (index) => {\n    setFormData(prev => ({\n      ...prev,\n      items: prev.items.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleItemChange = (index, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      items: prev.items.map((item, i) => {\n        if (i === index) {\n          const updatedItem = { ...item, [field]: value };\n          \n          // When product is selected, set default unit and unit cost\n          if (field === 'product_id' && value) {\n            const selectedProduct = products.find(p => p.id === parseInt(value));\n            if (selectedProduct?.compatible_units?.length > 0) {\n              // Find the default unit (is_default: true) or fallback to base unit\n              let defaultUnit = selectedProduct.compatible_units.find(u => u.is_default);\n              if (!defaultUnit) {\n                defaultUnit = selectedProduct.compatible_units.find(u => u.unit?.is_base_unit || u.unit_is_base);\n              }\n              if (!defaultUnit) {\n                defaultUnit = selectedProduct.compatible_units[0];\n              }\n              \n              if (defaultUnit) {\n                // Handle both ProductUnit structure (with nested unit) and direct unit structure\n                const unit = defaultUnit.unit || defaultUnit;\n                const unitId = unit?.id || unit; // unit might be just an ID\n                \n                // For compatible_units structure, unit is just the ID number\n                const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                \n                if (actualUnitId) {\n                  updatedItem.unit_id = actualUnitId;\n                  \n                  // Use the unit costs from the API response\n                  // The unit_costs array contains the correct cost for each unit\n                  const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n                  if (unitCostData) {\n                    updatedItem.unit_cost = parseFloat(unitCostData.cost_price).toFixed(2);\n                  } else {\n                    // Fallback to the stored cost_price if unit_costs not available\n                    updatedItem.unit_cost = parseFloat(selectedProduct?.cost_price || 0).toFixed(2);\n                  }\n                }\n              }\n            }\n          }\n          \n          return updatedItem;\n        }\n        return item;\n      })\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.supplier_id || formData.items.length === 0) {\n      alert(t('modals.please_select_supplier_add_item'));\n      return;\n    }\n\n    // Validate that all items have required fields\n    const invalidItems = formData.items.filter(item => \n      !item.product_id || !item.quantity_ordered || !item.unit_cost\n    );\n    \n    if (invalidItems.length > 0) {\n      alert('Please fill in all required fields for all items (product, quantity, unit cost)');\n      return;\n    }\n\n    // Convert data types to ensure proper API format\n    const processedData = {\n      ...formData,\n      supplier_id: parseInt(formData.supplier_id),\n      items: formData.items.map(item => ({\n        ...item,\n        product_id: parseInt(item.product_id),\n        quantity_ordered: parseFloat(item.quantity_ordered),\n        unit_id: item.unit_id ? parseInt(item.unit_id) : (() => {\n          // If no unit is selected, use the product's base unit\n          const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n          if (selectedProduct?.base_unit?.id) {\n            return selectedProduct.base_unit.id;\n          }\n          // If no base unit, try to find the first compatible unit\n          if (selectedProduct?.compatible_units?.length > 0) {\n            return selectedProduct.compatible_units[0].unit?.id || null;\n          }\n          return null;\n        })(),\n        unit_cost: parseFloat(item.unit_cost),\n        tax_class_id: item.tax_class_id ? parseInt(item.tax_class_id) : null\n      }))\n    };\n\n    setLoading(true);\n    try {\n      await onSubmit(processedData);\n    } catch (error) {\n      console.error('Error submitting purchase order:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateItemTotal = (item) => {\n    const quantity = parseFloat(item.quantity_ordered) || 0;\n    const unitCost = parseFloat(item.unit_cost) || 0;\n    \n    // Since unit cost is now the cost for the selected unit, just multiply by quantity\n    return quantity * unitCost;\n  };\n\n  const calculateTaxAmount = (item) => {\n    const lineTotal = calculateItemTotal(item);\n    const taxClass = taxClasses.find(tc => tc.id === parseInt(item.tax_class_id));\n    if (taxClass) {\n      return lineTotal * (taxClass.tax_rate / 100);\n    }\n    return 0;\n  };\n\n  const calculateTotals = () => {\n    const subtotal = formData.items.reduce((sum, item) => sum + calculateItemTotal(item), 0);\n    const taxAmount = formData.items.reduce((sum, item) => sum + calculateTaxAmount(item), 0);\n    const total = subtotal + taxAmount;\n    \n    return { subtotal, taxAmount, total };\n  };\n\n  const totals = calculateTotals();\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content purchase-order-modal\">\n        <div className=\"modal-header\">\n          <h2>{t('modals.create_purchase_order')}</h2>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"modal-body\">\n          <div className=\"form-section\">\n            <h3>{t('modals.order_details')}</h3>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"supplier_id\">{t('modals.supplier')} *</label>\n                <select\n                  id=\"supplier_id\"\n                  name=\"supplier_id\"\n                  value={formData.supplier_id}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">{t('modals.select_supplier')}</option>\n                  {suppliers.map(supplier => (\n                    <option key={supplier.id} value={supplier.id}>\n                      {supplier.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"expected_delivery_date\">{t('modals.expected_delivery_date')}</label>\n                <input\n                  type=\"date\"\n                  id=\"expected_delivery_date\"\n                  name=\"expected_delivery_date\"\n                  value={formData.expected_delivery_date}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"notes\">{t('common.notes')}</label>\n              <textarea\n                id=\"notes\"\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows=\"3\"\n                placeholder=\"Additional notes for this purchase order...\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <div className=\"section-header\">\n              <h3>{t('modals.order_items')}</h3>\n              <Button type=\"button\" variant=\"secondary\" onClick={addItem}>\n                {t('modals.add_item')}\n              </Button>\n            </div>\n\n            {formData.items.length === 0 ? (\n              <div className=\"empty-items\">\n                <p>{t('modals.no_items_added_yet')}</p>\n              </div>\n            ) : (\n              <div className=\"items-list\">\n                {formData.items.map((item, index) => (\n                  <div key={index} className=\"item-row\">\n                    <div className=\"item-product\">\n                      <label>{t('common.name')} *</label>\n                      <select\n                        value={item.product_id}\n                        onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n                        required\n                      >\n                        <option value=\"\">{t('modals.select_product')}</option>\n                        {products.map(product => (\n                          <option key={product.id} value={product.id}>\n                            {product.name} ({product.sku})\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"item-quantity\">\n                      <label>{t('common.quantity')} *</label>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={item.quantity_ordered}\n                        onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n                        required\n                      />\n                    </div>\n                    <div className=\"item-unit\">\n                      <label>{t('common.unit')}</label>\n                      <select\n                        value={item.unit_id}\n                        onChange={(e) => {\n                          const unitId = e.target.value;\n                          handleItemChange(index, 'unit_id', unitId);\n                          \n                          // Auto-set unit cost based on selected unit's cost from API\n                          if (unitId) {\n                            const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n                            if (selectedProduct?.unit_costs) {\n                              const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n                              if (unitCostData) {\n                                handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n                              }\n                            }\n                          }\n                        }}\n                      >\n                        <option value=\"\">{t('modals.select_unit')}</option>\n                        {(() => {\n                          const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n                          if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n                            return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n                          }\n                          \n                          return selectedProduct.compatible_units.map(compatibleUnit => {\n                            // Handle both ProductUnit structure (with nested unit) and direct unit structure\n                            const unit = compatibleUnit.unit || compatibleUnit;\n                            const unitId = unit?.id || unit; // unit might be just an ID\n                            const unitName = unit?.name || compatibleUnit.unit_name;\n                            const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n                            \n                            // For compatible_units structure, unit is just the ID number\n                            const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                            \n                            // If unit is just an ID, use the direct fields from compatibleUnit\n                            if (!unitName || !unitSymbol) {\n                              console.warn('Invalid unit data:', compatibleUnit);\n                              return null;\n                            }\n                            \n                            // Get unit cost from the API data\n                            const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n                            const unitCost = unitCostData ? unitCostData.cost_price : 0;\n                            \n                            return (\n                              <option key={actualUnitId} value={actualUnitId}>\n                                {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n                              </option>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </select>\n                    </div>\n                    <div className=\"item-cost\">\n                      <label>{t('modals.unit_cost')} *</label>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.01\"\n                        value={item.unit_cost}\n                        onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n                        required\n                      />\n                    </div>\n                    <div className=\"item-tax\">\n                      <label>{t('modals.tax_class')}</label>\n                      <select\n                        value={item.tax_class_id}\n                        onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n                      >\n                        <option value=\"\">{t('modals.no_tax')}</option>\n                        {taxClasses.map(taxClass => (\n                          <option key={taxClass.id} value={taxClass.id}>\n                            {taxClass.name} ({taxClass.tax_rate}%)\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"item-total\">\n                      <label>{t('modals.line_total')}</label>\n                      <div className=\"total-display\">\n                        {calculateItemTotal(item).toFixed(2)} MGA\n                        {item.tax_class_id && (\n                          <span className=\"tax-amount\">\n                            + {calculateTaxAmount(item).toFixed(2)} MGA {t('modals.tax')}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"item-actions\">\n                      <button\n                        type=\"button\"\n                        className=\"remove-button\"\n                        onClick={() => removeItem(index)}\n                      >\n                        {t('modals.remove')}\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {formData.items.length > 0 && (\n            <div className=\"totals-section\">\n              <div className=\"totals-row\">\n                <span>{t('modals.subtotal')}:</span>\n                <span>{totals.subtotal.toFixed(2)} MGA</span>\n              </div>\n              <div className=\"totals-row\">\n                <span>{t('modals.tax_amount')}:</span>\n                <span>{totals.taxAmount.toFixed(2)} MGA</span>\n              </div>\n              <div className=\"totals-row total-row\">\n                <span>{t('modals.total_amount')}:</span>\n                <span>{totals.total.toFixed(2)} MGA</span>\n              </div>\n            </div>\n          )}\n        </form>\n\n        <div className=\"modal-footer\">\n          <div className=\"footer-left\">\n            <PrintButton\n              data={formData}\n              title={t('titles.purchase_order')}\n              type=\"purchase_order\"\n              printText={t('buttons.print_order')}\n              validateText={t('modals.validate_print')}\n              showValidateOption={true}\n              onValidate={handleSubmit}\n              disabled={!formData.supplier_id || formData.items.length === 0}\n            />\n          </div>\n          <div className=\"footer-right\">\n            <Button type=\"button\" variant=\"secondary\" onClick={onClose}>\n              {t('modals.cancel')}\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              onClick={handleSubmit}\n              disabled={loading || !formData.supplier_id || formData.items.length === 0}\n            >\n              {loading ? t('modals.creating') : t('modals.create_purchase_order')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PurchaseOrderModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}