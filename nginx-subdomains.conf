# ELIF Applications - Subdomain Configuration
# Place this file in /etc/nginx/sites-available/elif-apps

# Orders App - orders.yourdomain.com
server {
    listen 80;
    server_name orders.yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name orders.yourdomain.com;
    
    # SSL Configuration (replace with your SSL certificates)
    ssl_certificate /path/to/your/ssl/orders.yourdomain.com.crt;
    ssl_certificate_key /path/to/your/ssl/orders.yourdomain.com.key;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Frontend (React App)
    location / {
        root /var/www/elif-orders-app/build;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API calls are handled by api.yourdomain.com subdomain
    # No backend proxy needed in frontend subdomains
}

# Sales App - sales.yourdomain.com
server {
    listen 80;
    server_name sales.yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name sales.yourdomain.com;
    
    # SSL Configuration
    ssl_certificate /path/to/your/ssl/sales.yourdomain.com.crt;
    ssl_certificate_key /path/to/your/ssl/sales.yourdomain.com.key;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Frontend (React App)
    location / {
        root /var/www/elif-sales-app/build;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API calls are handled by api.yourdomain.com subdomain
    # No backend proxy needed in frontend subdomains
}

# Admin App - admin.yourdomain.com
server {
    listen 80;
    server_name admin.yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name admin.yourdomain.com;
    
    # SSL Configuration
    ssl_certificate /path/to/your/ssl/admin.yourdomain.com.crt;
    ssl_certificate_key /path/to/your/ssl/admin.yourdomain.com.key;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Frontend (React App)
    location / {
        root /var/www/elif-admin-app/build;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API calls are handled by api.yourdomain.com subdomain
    # No backend proxy needed in frontend subdomains
}

# API Backend - api.yourdomain.com
server {
    listen 80;
    server_name api.yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.yourdomain.com;
    
    # SSL Configuration
    ssl_certificate /path/to/your/ssl/api.yourdomain.com.crt;
    ssl_certificate_key /path/to/your/ssl/api.yourdomain.com.key;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Backend API
    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "https://orders.yourdomain.com, https://sales.yourdomain.com, https://admin.yourdomain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://orders.yourdomain.com, https://sales.yourdomain.com, https://admin.yourdomain.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
}

# Main domain redirect (optional)
server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;
    
    # Redirect to orders app or create a landing page
    return 301 https://orders.yourdomain.com$request_uri;
}
