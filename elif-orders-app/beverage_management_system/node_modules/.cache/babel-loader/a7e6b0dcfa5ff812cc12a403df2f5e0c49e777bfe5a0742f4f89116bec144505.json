{"ast":null,"code":"import axios from'axios';// Support both static and dynamic IP addresses\nconst getApiBaseUrl=()=>{const envUrl=process.env.REACT_APP_API_URL;if(envUrl){return envUrl;}// Try to detect the current host and use appropriate backend URL\nconst currentHost=window.location.hostname;if(currentHost==='10.10.1.1'){return'http://10.10.1.1:8000';}else if(currentHost==='192.168.13.215'){return'http://192.168.13.215:8000';}else if(currentHost.includes('elif')){return'http://api.elif';}// Default fallback\nreturn'http://localhost:8000';};const API_BASE_URL=getApiBaseUrl();const api=axios.create({baseURL:API_BASE_URL});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('accessToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle token refresh\napi.interceptors.response.use(response=>response,async error=>{const originalRequest=error.config;if(error.response.status===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refreshToken');const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/token/refresh/\"),{refresh:refreshToken});const{access}=response.data;localStorage.setItem('accessToken',access);originalRequest.headers.Authorization=\"Bearer \".concat(access);return api(originalRequest);}catch(refreshError){// Refresh token failed, redirect to login\nlocalStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');window.location.href='/login';return Promise.reject(refreshError);}}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","getApiBaseUrl","envUrl","process","env","REACT_APP_API_URL","currentHost","window","location","hostname","includes","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","concat","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","href"],"sources":["/home/el-ifran/WareHouse_Manager/elif-orders-app/beverage_management_system/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Support both static and dynamic IP addresses\nconst getApiBaseUrl = () => {\n  const envUrl = process.env.REACT_APP_API_URL;\n  if (envUrl) {\n    return envUrl;\n  }\n  \n  // Try to detect the current host and use appropriate backend URL\n  const currentHost = window.location.hostname;\n  if (currentHost === '10.10.1.1') {\n    return 'http://10.10.1.1:8000';\n  } else if (currentHost === '192.168.13.215') {\n    return 'http://192.168.13.215:8000';\n  } else if (currentHost.includes('elif')) {\n    return 'http://api.elif';\n  }\n  \n  // Default fallback\n  return 'http://localhost:8000';\n};\n\nconst API_BASE_URL = getApiBaseUrl();\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        const response = await axios.post(`${API_BASE_URL}/api/token/refresh/`, {\n          refresh: refreshToken\n        });\n        \n        const { access } = response.data;\n        localStorage.setItem('accessToken', access);\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        \n        return api(originalRequest);\n      } catch (refreshError) {\n        // Refresh token failed, redirect to login\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC5C,GAAIH,MAAM,CAAE,CACV,MAAO,CAAAA,MAAM,CACf,CAEA;AACA,KAAM,CAAAI,WAAW,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAC5C,GAAIH,WAAW,GAAK,WAAW,CAAE,CAC/B,MAAO,uBAAuB,CAChC,CAAC,IAAM,IAAIA,WAAW,GAAK,gBAAgB,CAAE,CAC3C,MAAO,4BAA4B,CACrC,CAAC,IAAM,IAAIA,WAAW,CAACI,QAAQ,CAAC,MAAM,CAAC,CAAE,CACvC,MAAO,iBAAiB,CAC1B,CAEA;AACA,MAAO,uBAAuB,CAChC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGV,aAAa,CAAC,CAAC,CAEpC,KAAM,CAAAW,GAAG,CAAGZ,KAAK,CAACa,MAAM,CAAC,CACvBC,OAAO,CAAEH,YACX,CAAC,CAAC,CAEF;AACAC,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACjD,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACI,OAAO,CAACC,aAAa,WAAAC,MAAA,CAAaL,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAO,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAb,GAAG,CAACG,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,EAAKA,QAAQ,CACtB,KAAO,CAAAH,KAAK,EAAK,CACf,KAAM,CAAAI,eAAe,CAAGJ,KAAK,CAACP,MAAM,CAEpC,GAAIO,KAAK,CAACG,QAAQ,CAACE,MAAM,GAAK,GAAG,EAAI,CAACD,eAAe,CAACE,MAAM,CAAE,CAC5DF,eAAe,CAACE,MAAM,CAAG,IAAI,CAE7B,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGZ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACzD,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAA5B,KAAK,CAACiC,IAAI,IAAAT,MAAA,CAAIb,YAAY,wBAAuB,CACtEuB,OAAO,CAAEF,YACX,CAAC,CAAC,CAEF,KAAM,CAAEG,MAAO,CAAC,CAAGP,QAAQ,CAACQ,IAAI,CAChChB,YAAY,CAACiB,OAAO,CAAC,aAAa,CAAEF,MAAM,CAAC,CAC3CN,eAAe,CAACP,OAAO,CAACC,aAAa,WAAAC,MAAA,CAAaW,MAAM,CAAE,CAE1D,MAAO,CAAAvB,GAAG,CAACiB,eAAe,CAAC,CAC7B,CAAE,MAAOS,YAAY,CAAE,CACrB;AACAlB,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC,CACtCnB,YAAY,CAACmB,UAAU,CAAC,cAAc,CAAC,CACvChC,MAAM,CAACC,QAAQ,CAACgC,IAAI,CAAG,QAAQ,CAC/B,MAAO,CAAAd,OAAO,CAACC,MAAM,CAACW,YAAY,CAAC,CACrC,CACF,CAEA,MAAO,CAAAZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}