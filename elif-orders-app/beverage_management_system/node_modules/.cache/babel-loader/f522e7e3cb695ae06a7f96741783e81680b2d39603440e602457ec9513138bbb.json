{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-orders-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{useTranslation}from'react-i18next';import{useSearchParams}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import{generatePrintContent}from'../components/PrintButton';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{t}=useTranslation();const{user}=useAuth();const[searchParams,setSearchParams]=useSearchParams();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[userSellableCategories,setUserSellableCategories]=useState(new Set());// Per-user session sellable categories\nconst[cart,setCart]=useState([]);// Initialize user sellable categories from localStorage\nconst initializeUserSellableCategories=()=>{if(user!==null&&user!==void 0&&user.id){const savedCategories=localStorage.getItem(\"user-\".concat(user.id,\"-sellable-categories\"));if(savedCategories){try{const categoryIds=JSON.parse(savedCategories);setUserSellableCategories(new Set(categoryIds));}catch(e){console.warn('Failed to parse saved sellable categories:',e);setUserSellableCategories(new Set());}}else{// If no saved categories, start with empty set (user will need to select categories)\nsetUserSellableCategories(new Set());}}};// Initialize all categories as sellable when categories are first loaded (only if no saved preferences)\nconst initializeAllCategoriesAsSellable=()=>{if(user!==null&&user!==void 0&&user.id&&categories.length>0&&userSellableCategories.size===0){// Check if user has any saved preferences first\nconst savedCategories=localStorage.getItem(\"user-\".concat(user.id,\"-sellable-categories\"));if(!savedCategories){// Only initialize all categories as sellable if user has no saved preferences\nconst allCategoryIds=new Set(categories.map(cat=>cat.id));setUserSellableCategories(allCategoryIds);localStorage.setItem(\"user-\".concat(user.id,\"-sellable-categories\"),JSON.stringify([...allCategoryIds]));}else{}}};const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[paymentType,setPaymentType]=useState('full');// 'full' or 'partial'\nconst[paidAmount,setPaidAmount]=useState(0);const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[stockAvailability,setStockAvailability]=useState({});// Initialize filters from URL parameters or localStorage\nconst getInitialFilters=()=>{const urlCategory=searchParams.get('category');const urlSearch=searchParams.get('search');// Try URL parameters first, then localStorage, then defaults\nconst savedFilters=localStorage.getItem('pos-filters');let savedCategory='';let savedSearch='';if(savedFilters){try{const parsed=JSON.parse(savedFilters);savedCategory=parsed.category||'';savedSearch=parsed.search||'';}catch(e){console.warn('Failed to parse saved filters:',e);}}return{category:urlCategory||savedCategory||'',search:urlSearch||savedSearch||''};};const[filters,setFilters]=useState(getInitialFilters);const[searchInput,setSearchInput]=useState(getInitialFilters().search);// Initialize from saved filters\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\n// Function to update filters and persist them\nconst updateFilters=newFilters=>{setFilters(newFilters);// Update URL parameters\nconst newSearchParams=new URLSearchParams();if(newFilters.category)newSearchParams.set('category',newFilters.category);if(newFilters.search)newSearchParams.set('search',newFilters.search);setSearchParams(newSearchParams);// Save to localStorage\nlocalStorage.setItem('pos-filters',JSON.stringify(newFilters));};const[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\n// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Calculate total amount\nconst calculateTotal=()=>{const total=cart.reduce((total,item)=>{const unitPrice=item.unit_price||0;return total+unitPrice*item.quantity;},0);return total;};// Update paid amount when payment type changes\nuseEffect(()=>{const total=calculateTotal();if(paymentType==='full'){setPaidAmount(total);}else if(paymentType==='partial'){// Only reset to 0 if it's currently set to the full amount\nif(paidAmount===total){setPaidAmount(0);}}},[paymentType,cart]);// Function to get the current price for a specific unit\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!(unitStockInfo!==null&&unitStockInfo!==void 0&&unitStockInfo.price))return 0;// If we're in standard mode, return the standard unit price\nif(priceMode==='standard'){return unitStockInfo.price;}// If we're in wholesale mode, we need to calculate the wholesale price for this unit\nif(priceMode==='wholesale'&&product.wholesale_price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);// Handle edge cases\nif(!standardBasePrice||standardBasePrice<=0){console.warn('Invalid standard base price:',standardBasePrice);return unitStockInfo.price;}// Calculate the conversion factor from standard to wholesale\nconst wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;// Apply the conversion factor to the unit price\nconst wholesaleUnitPrice=unitStockInfo.price*wholesaleConversionFactor;// Round to 2 decimal places to avoid floating point precision issues\nconst roundedPrice=Math.round(wholesaleUnitPrice*100)/100;// Ensure we return a valid number\nreturn isNaN(roundedPrice)||roundedPrice<0?unitStockInfo.price:roundedPrice;}// Fallback to standard price\nreturn unitStockInfo.price;};useEffect(()=>{const initializeData=async()=>{// First load categories\nawait fetchCategories();// Then initialize user sellable categories (after categories are loaded)\ninitializeUserSellableCategories();// Then load products (this will now properly filter by sellable categories)\nawait fetchProducts();};initializeData();},[user===null||user===void 0?void 0:user.id]);// Re-initialize when user changes\n// Note: Removed redundant useEffect that was causing double filtering\n// Now categories are loaded first, then products are filtered properly\n// Debounced search effect - completely rewritten for stability\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Set new timeout\nsearchTimeoutRef.current=setTimeout(()=>{if(searchInput!==filters.search){const newFilters=_objectSpread(_objectSpread({},filters),{},{search:searchInput});updateFilters(newFilters);fetchProducts(newFilters);}},500);// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput,filters]);// Depend on searchInput and filters\n// Effect to handle URL parameter changes\nuseEffect(()=>{const urlCategory=searchParams.get('category');const urlSearch=searchParams.get('search');// Only update if URL parameters are different from current filters\nif(urlCategory!==filters.category||urlSearch!==filters.search){const newFilters={category:urlCategory||'',search:urlSearch||''};setFilters(newFilters);setSearchInput(urlSearch||'');fetchProducts(newFilters);}},[searchParams]);// Only depend on searchParams\n// Effect to initialize all categories as sellable when categories are first loaded\nuseEffect(()=>{initializeAllCategoriesAsSellable();},[categories.length,user===null||user===void 0?void 0:user.id]);// Run when categories are loaded or user changes\n// Effect to re-fetch products when user sellable categories change\nuseEffect(()=>{if(categories.length>0&&userSellableCategories.size>=0){fetchProducts(filters);}},[userSellableCategories]);// Re-fetch when sellable categories change\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/api/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){console.error('Bulk stock availability error:',err);// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const url=\"/api/products/\".concat(params.toString()?'?'+params.toString():'');const response=await api.get(url);const allProducts=response.data.results||response.data;// Debug: Log the first product to see its structure\nif(allProducts.length>0){}// If categories are not loaded yet, show all products but log a warning\nif(categories.length===0){console.warn('Categories not loaded yet, showing all products (filtering will be applied once categories load)');setProducts(allProducts);return;}// If user has no sellable categories selected, show no products\nif(userSellableCategories.size===0){setProducts([]);return;}// Filter products based on user-specific sellable categories\nconst sellableProducts=allProducts.filter(product=>{let categoryId=null;// Get category ID from product\nif(product.category&&typeof product.category==='number'){categoryId=product.category;}else if(product.category&&product.category.id){categoryId=product.category.id;}else if(product.category_name){const category=categories.find(cat=>cat.name===product.category_name);categoryId=category?category.id:null;}// If no category ID found, exclude the product\nif(!categoryId){return false;}// Check if this category is in user's sellable categories\nconst isSellable=userSellableCategories.has(categoryId);// Debug: Log filtering decision\nreturn isSellable;});// Additional check: if a specific category is selected, ensure it's in user's sellable categories\nif(filterParams.category){const categoryId=parseInt(filterParams.category);if(!userSellableCategories.has(categoryId)){// If selected category is not in user's sellable categories, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);}catch(err){setError('Failed to load products');console.error('Products error:',err);}finally{setLoading(false);}};const fetchCategories=async()=>{try{const response=await api.get('/api/products/categories/');setCategories(response.data.results||response.data);}catch(err){console.error('Categories error:',err);}};const fetchStockAvailability=async productId=>{try{const response=await api.get(\"/api/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){console.error('Stock availability error:',err);}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nlet unit=selectedUnit;if(!unit&&product.compatible_units&&product.compatible_units[0]){var _compatibleUnit$unit,_compatibleUnit$unit2,_compatibleUnit$unit3;const compatibleUnit=product.compatible_units[0];unit={id:((_compatibleUnit$unit=compatibleUnit.unit)===null||_compatibleUnit$unit===void 0?void 0:_compatibleUnit$unit.id)||compatibleUnit.unit,name:compatibleUnit.unit_name||((_compatibleUnit$unit2=compatibleUnit.unit)===null||_compatibleUnit$unit2===void 0?void 0:_compatibleUnit$unit2.name)||'Piece',symbol:compatibleUnit.unit_symbol||((_compatibleUnit$unit3=compatibleUnit.unit)===null||_compatibleUnit$unit3===void 0?void 0:_compatibleUnit$unit3.symbol)||'piece'};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(cart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}// Get unit stock info for price calculation\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product),price_mode:priceMode});setCart([...cart,newCartItem]);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};const autoPrintReceipt=async function(saleNumber,saleData){let saleStatus=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'completed';try{// Create print content for the sale\nconst total=calculateSubtotal();const remaining=total-paidAmount;const printData={sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:total,paid_amount:paidAmount,remaining_amount:remaining,payment_status:remaining>0?'partial':'paid',due_date:remaining>0?new Date(Date.now()+30*24*60*60*1000).toLocaleDateString():null,// 30 days from now\nitems:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};// Generate print content using the same logic as PrintButton\nconst printContent=generatePrintContent(printData,'Sale Receipt','sale',t);// Open print window\nconst printWindow=window.open('','_blank','width=800,height=600');printWindow.document.write(printContent);printWindow.document.close();// Wait for content to load then print\nconst printAfterLoad=()=>{printWindow.focus();printWindow.print();// Close the window after a short delay\nsetTimeout(()=>{printWindow.close();},1000);};// Check if window is already loaded\nif(printWindow.document.readyState==='complete'){printAfterLoad();}else{printWindow.onload=printAfterLoad;}}catch(error){console.error('Auto-print error:',error);// Don't show error to user as it's not critical\n}};const handleCheckout=async()=>{if(cart.length===0){setError('Cart is empty. Please add items to the cart before completing the sale.');return;}setProcessing(true);setError('');// Validate customer name for partial payments\nif(paymentType==='partial'&&(!customerInfo.name||!customerInfo.name.trim())){setError('Customer name is required for partial payments');setProcessing(false);return;}// Validate paid amount\nconst total=calculateTotal();if(paidAmount>total){setError('Paid amount cannot exceed the total amount');setProcessing(false);return;}if(paidAmount<0){setError('Paid amount cannot be negative');setProcessing(false);return;}try{const saleData={sale_type:'sale',customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,paid_amount:paidAmount,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};})};// Create the sale\nconst response=await api.post('/api/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{await api.post(\"/api/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'completed');}// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();alert(\"Sale completed successfully! Sale Number: \".concat(saleNumber));}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nconsole.error('Sale completion error:',completeError);setError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'pending');}// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');alert(t('messages.pending_sale_created',{saleNumber}));}}catch(err){var _err$response,_err$response2,_err$response2$data,_err$response3,_err$response3$data,_err$response4,_err$response4$data,_err$response5,_err$response5$data;console.error('Sale creation error:',err);console.error('Error response:',(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data);// Handle different types of errors\nif((_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&_err$response2$data.error){setError(err.response.data.error);}else if((_err$response3=err.response)!==null&&_err$response3!==void 0&&(_err$response3$data=_err$response3.data)!==null&&_err$response3$data!==void 0&&_err$response3$data.detail){setError(err.response.data.detail);}else if((_err$response4=err.response)!==null&&_err$response4!==void 0&&(_err$response4$data=_err$response4.data)!==null&&_err$response4$data!==void 0&&_err$response4$data.customer_name){setError(err.response.data.customer_name[0]);}else if((_err$response5=err.response)!==null&&_err$response5!==void 0&&(_err$response5$data=_err$response5.data)!==null&&_err$response5$data!==void 0&&_err$response5$data.paid_amount){setError(err.response.data.paid_amount[0]);}else{setError('Failed to create sale. Please check the console for details.');}}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setError('');};const handleFilterChange=(filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately and persist\nconst newFilters=_objectSpread(_objectSpread({},filters),{},{[filterType]:value});updateFilters(newFilters);fetchProducts(newFilters);}};const clearFilters=()=>{const clearedFilters={category:'',search:''};updateFilters(clearedFilters);setSearchInput('');// Clear the search input state\nfetchProducts(clearedFilters);};const toggleCategorySellable=(categoryId,isCurrentlySellable)=>{try{setError('');// Clear any previous errors\nconst newSellableCategories=new Set(userSellableCategories);if(isCurrentlySellable){// Remove from sellable categories\nnewSellableCategories.delete(categoryId);}else{// Add to sellable categories\nnewSellableCategories.add(categoryId);}setUserSellableCategories(newSellableCategories);// Save to localStorage for this user\nif(user!==null&&user!==void 0&&user.id){localStorage.setItem(\"user-\".concat(user.id,\"-sellable-categories\"),JSON.stringify([...newSellableCategories]));}// Refresh products to apply new sellable filter\nfetchProducts(filters);}catch(err){console.error('Error updating category sellable status:',err);setError(\"Failed to update category status: \".concat(err.message||'Unknown error'));}};const resetUserCategories=()=>{if(user!==null&&user!==void 0&&user.id&&categories.length>0){// Set all categories as sellable\nconst allCategoryIds=new Set(categories.map(cat=>cat.id));setUserSellableCategories(allCategoryIds);// Save to localStorage\nlocalStorage.setItem(\"user-\".concat(user.id,\"-sellable-categories\"),JSON.stringify([...allCategoryIds]));// Refresh products (will show all products from all categories)\nfetchProducts(filters);}};const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products (only for complete sales)\nif(saleMode==='complete'&&product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>{var _u$unit;return(((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.id)||u.unit)===selectedUnitId;});if(selectedCompatibleUnit){var _selectedCompatibleUn2;// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _selectedCompatibleUn;return u.id===(((_selectedCompatibleUn=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn===void 0?void 0:_selectedCompatibleUn.id)||selectedCompatibleUnit.unit);});const unitPrice=getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product);// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:((_selectedCompatibleUn2=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn2===void 0?void 0:_selectedCompatibleUn2.id)||selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.point_of_sale')}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>userSellableCategories.has(cat.id)).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:t('alerts.sale_will_be_completed'),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:t('alerts.sale_will_be_created_pending'),children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group print-receipt-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle print-receipt-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:t('alerts.print_receipt_after_sale'),children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn print-receipt-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:\"Don't print receipt\",children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:\"Search products...\",value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 1rem 0',fontSize:'1rem',fontWeight:'600'},children:\"Manage Sellable Categories\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,userSellableCategories.has(category.id)),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:userSellableCategories.has(category.id)?'#dcfce7':'#fee2e2',borderColor:userSellableCategories.has(category.id)?'#16a34a':'#dc2626',color:userSellableCategories.has(category.id)?'#15803d':'#dc2626'},children:userSellableCategories.has(category.id)?'Sellable':'Not Sellable'})]},category.id))}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'1rem',textAlign:'center'},children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:resetUserCategories,style:{backgroundColor:'#dcfce7',borderColor:'#16a34a',color:'#15803d',fontWeight:'500'},children:\"Reset to All Categories Sellable\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.map(product=>{var _product$compatible_u;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0&&saleMode==='complete'?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[getCurrentPrice(product).toFixed(2),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u===void 0?void 0:_product$compatible_u.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{var _compatibleUnit$unit5,_compatibleUnit$unit6;const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit4;return u.id===(((_compatibleUnit$unit4=compatibleUnit.unit)===null||_compatibleUnit$unit4===void 0?void 0:_compatibleUnit$unit4.id)||compatibleUnit.unit);});if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit5=compatibleUnit.unit)===null||_compatibleUnit$unit5===void 0?void 0:_compatibleUnit$unit5.name)||compatibleUnit.unit_name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",unitStockInfo.available_quantity]},((_compatibleUnit$unit6=compatibleUnit.unit)===null||_compatibleUnit$unit6===void 0?void 0:_compatibleUnit$unit6.id)||compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _compatibleUnit$unit8,_compatibleUnit$unit9,_compatibleUnit$unit0,_compatibleUnit$unit1;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit7;return u.id===(((_compatibleUnit$unit7=compatibleUnit.unit)===null||_compatibleUnit$unit7===void 0?void 0:_compatibleUnit$unit7.id)||compatibleUnit.unit);});const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit8=compatibleUnit.unit)===null||_compatibleUnit$unit8===void 0?void 0:_compatibleUnit$unit8.name)||compatibleUnit.unit_name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||((_compatibleUnit$unit9=compatibleUnit.unit)===null||_compatibleUnit$unit9===void 0?void 0:_compatibleUnit$unit9.symbol)||compatibleUnit.unit_symbol;return/*#__PURE__*/_jsxs(\"option\",{value:((_compatibleUnit$unit1=compatibleUnit.unit)===null||_compatibleUnit$unit1===void 0?void 0:_compatibleUnit$unit1.id)||compatibleUnit.unit,disabled:saleMode==='complete'?!isAvailable:false,children:[unitName,\" (\",unitSymbol,\") - \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA\",!isAvailable&&saleMode==='complete'?' - OUT OF STOCK':\" - \".concat(availableQty,\" available\")]},((_compatibleUnit$unit0=compatibleUnit.unit)===null||_compatibleUnit$unit0===void 0?void 0:_compatibleUnit$unit0.id)||compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-cart\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Cart is empty\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart-hint\",children:\"Add items from the product list to start a sale\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:t('alerts.click_to_edit_quantity'),children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:t('alerts.remove_item'),children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode)))]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:paymentType==='partial'?\"Customer Name (Required for Partial Payment)\":\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value})),className:paymentType==='partial'&&!customerInfo.name?'required-field':''})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))}),/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"full\",checked:paymentType==='full',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"paymentType\",value:\"partial\",checked:paymentType==='partial',onChange:e=>setPaymentType(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]}),paymentType==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateTotal(),value:paidAmount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setPaidAmount(value);},placeholder:t('forms.enter_amount_to_pay')}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Total: $\",calculateTotal().toFixed(2),\" | Remaining: $\",(calculateTotal()-(paidAmount||0)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkout-actions\",children:/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?'Complete Sale':'Create Pending Sale',printReceipt&&' & Print Receipt']})})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useTranslation","useSearchParams","useAuth","api","Button","generatePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","t","user","searchParams","setSearchParams","products","setProducts","categories","setCategories","userSellableCategories","setUserSellableCategories","Set","cart","setCart","initializeUserSellableCategories","id","savedCategories","localStorage","getItem","concat","categoryIds","JSON","parse","e","console","warn","initializeAllCategoriesAsSellable","length","size","allCategoryIds","map","cat","setItem","stringify","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","paymentType","setPaymentType","paidAmount","setPaidAmount","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","getInitialFilters","urlCategory","get","urlSearch","savedFilters","savedCategory","savedSearch","parsed","category","search","filters","setFilters","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","searchTimeoutRef","updateFilters","newFilters","newSearchParams","URLSearchParams","set","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","getCurrentPrice","product","wholesale_price","parseFloat","price","calculateTotal","total","reduce","item","unitPrice","unit_price","quantity","getCurrentUnitPrice","unitStockInfo","standardBasePrice","wholesaleBasePrice","wholesaleConversionFactor","wholesaleUnitPrice","roundedPrice","Math","round","isNaN","initializeData","fetchCategories","fetchProducts","current","clearTimeout","setTimeout","_objectSpread","fetchBulkStockAvailability","defaultUnits","forEach","compatible_units","selectedUnit","find","u","is_default","unit","is_base_unit","_selectedUnit$unit","productIds","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","unitInfo","unit_id","conversion_factor","baseUnit","totalBaseStock","available_quantity","remainingPieces","max","availableQuantity","isAvailable","floor","is_available","filterParams","arguments","undefined","params","append","url","toString","allProducts","results","sellableProducts","categoryId","category_name","isSellable","has","parseInt","prev","addToCart","_compatibleUnit$unit","_compatibleUnit$unit2","_compatibleUnit$unit3","compatibleUnit","unit_name","symbol","unit_symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","newCartItem","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","saleStatus","remaining","printData","sale_number","customer_name","customer_phone","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","status","total_amount","paid_amount","remaining_amount","payment_status","due_date","toLocaleDateString","items","_item$unit","product_name","product_sku","sku","total_price","printContent","printWindow","window","open","document","write","close","printAfterLoad","focus","print","readyState","onload","handleCheckout","trim","sale_type","payment_method","saleId","Promise","resolve","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response2","_err$response2$data","_err$response3","_err$response3$data","_err$response4","_err$response4$data","_err$response5","_err$response5$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","toggleCategorySellable","isCurrentlySellable","newSellableCategories","delete","add","resetUserCategories","handleQuantityClick","handleQuantityChange","target","test","handleQuantitySubmit","newQuantity","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","_u$unit","_selectedCompatibleUn2","_selectedCompatibleUn","className","children","onChange","variant","onClick","style","marginTop","type","title","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","margin","fontSize","fontWeight","display","gridTemplateColumns","gap","alignItems","justifyContent","cursor","borderColor","color","textAlign","_product$compatible_u","toFixed","_compatibleUnit$unit5","_compatibleUnit$unit6","_compatibleUnit$unit4","unitName","Boolean","stopPropagation","index","_compatibleUnit$unit8","_compatibleUnit$unit9","_compatibleUnit$unit0","_compatibleUnit$unit1","_compatibleUnit$unit7","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","method","checked","replace","toUpperCase","step"],"sources":["/home/el-ifran/WareHouse_Manager/elif-orders-app/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSearchParams } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [userSellableCategories, setUserSellableCategories] = useState(new Set()); // Per-user session sellable categories\n  const [cart, setCart] = useState([]);\n\n  // Initialize user sellable categories from localStorage\n  const initializeUserSellableCategories = () => {\n    if (user?.id) {\n      const savedCategories = localStorage.getItem(`user-${user.id}-sellable-categories`);\n      \n      if (savedCategories) {\n        try {\n          const categoryIds = JSON.parse(savedCategories);\n          setUserSellableCategories(new Set(categoryIds));\n        } catch (e) {\n          console.warn('Failed to parse saved sellable categories:', e);\n          setUserSellableCategories(new Set());\n        }\n      } else {\n        // If no saved categories, start with empty set (user will need to select categories)\n        setUserSellableCategories(new Set());\n      }\n    }\n  };\n\n  // Initialize all categories as sellable when categories are first loaded (only if no saved preferences)\n  const initializeAllCategoriesAsSellable = () => {\n    if (user?.id && categories.length > 0 && userSellableCategories.size === 0) {\n      // Check if user has any saved preferences first\n      const savedCategories = localStorage.getItem(`user-${user.id}-sellable-categories`);\n      if (!savedCategories) {\n        // Only initialize all categories as sellable if user has no saved preferences\n        const allCategoryIds = new Set(categories.map(cat => cat.id));\n        setUserSellableCategories(allCategoryIds);\n        localStorage.setItem(`user-${user.id}-sellable-categories`, JSON.stringify([...allCategoryIds]));\n      } else {\n      }\n    }\n  };\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [paymentType, setPaymentType] = useState('full'); // 'full' or 'partial'\n  const [paidAmount, setPaidAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  // Initialize filters from URL parameters or localStorage\n  const getInitialFilters = () => {\n    const urlCategory = searchParams.get('category');\n    const urlSearch = searchParams.get('search');\n    \n    // Try URL parameters first, then localStorage, then defaults\n    const savedFilters = localStorage.getItem('pos-filters');\n    let savedCategory = '';\n    let savedSearch = '';\n    \n    if (savedFilters) {\n      try {\n        const parsed = JSON.parse(savedFilters);\n        savedCategory = parsed.category || '';\n        savedSearch = parsed.search || '';\n      } catch (e) {\n        console.warn('Failed to parse saved filters:', e);\n      }\n    }\n    \n    return {\n      category: urlCategory || savedCategory || '',\n      search: urlSearch || savedSearch || ''\n    };\n  };\n\n  const [filters, setFilters] = useState(getInitialFilters);\n  const [searchInput, setSearchInput] = useState(getInitialFilters().search); // Initialize from saved filters\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n\n  // Function to update filters and persist them\n  const updateFilters = (newFilters) => {\n    setFilters(newFilters);\n    \n    // Update URL parameters\n    const newSearchParams = new URLSearchParams();\n    if (newFilters.category) newSearchParams.set('category', newFilters.category);\n    if (newFilters.search) newSearchParams.set('search', newFilters.search);\n    setSearchParams(newSearchParams);\n    \n    // Save to localStorage\n    localStorage.setItem('pos-filters', JSON.stringify(newFilters));\n  };\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Calculate total amount\n  const calculateTotal = () => {\n    const total = cart.reduce((total, item) => {\n      const unitPrice = item.unit_price || 0;\n      return total + (unitPrice * item.quantity);\n    }, 0);\n    return total;\n  };\n\n  // Update paid amount when payment type changes\n  useEffect(() => {\n    const total = calculateTotal();\n    if (paymentType === 'full') {\n      setPaidAmount(total);\n    } else if (paymentType === 'partial') {\n      // Only reset to 0 if it's currently set to the full amount\n      if (paidAmount === total) {\n        setPaidAmount(0);\n      }\n    }\n  }, [paymentType, cart]);\n\n  // Function to get the current price for a specific unit\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo?.price) return 0;\n    \n    // If we're in standard mode, return the standard unit price\n    if (priceMode === 'standard') {\n      return unitStockInfo.price;\n    }\n    \n    // If we're in wholesale mode, we need to calculate the wholesale price for this unit\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      const standardBasePrice = parseFloat(product.price);\n      const wholesaleBasePrice = parseFloat(product.wholesale_price);\n      \n      // Handle edge cases\n      if (!standardBasePrice || standardBasePrice <= 0) {\n        console.warn('Invalid standard base price:', standardBasePrice);\n        return unitStockInfo.price;\n      }\n      \n      // Calculate the conversion factor from standard to wholesale\n      const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n      \n      // Apply the conversion factor to the unit price\n      const wholesaleUnitPrice = unitStockInfo.price * wholesaleConversionFactor;\n      \n      // Round to 2 decimal places to avoid floating point precision issues\n      const roundedPrice = Math.round(wholesaleUnitPrice * 100) / 100;\n      \n      // Ensure we return a valid number\n      return isNaN(roundedPrice) || roundedPrice < 0 ? unitStockInfo.price : roundedPrice;\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      // First load categories\n      await fetchCategories();\n      // Then initialize user sellable categories (after categories are loaded)\n      initializeUserSellableCategories();\n      // Then load products (this will now properly filter by sellable categories)\n      await fetchProducts();\n    };\n    initializeData();\n  }, [user?.id]); // Re-initialize when user changes\n\n  // Note: Removed redundant useEffect that was causing double filtering\n  // Now categories are loaded first, then products are filtered properly\n\n  // Debounced search effect - completely rewritten for stability\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout\n    searchTimeoutRef.current = setTimeout(() => {\n      if (searchInput !== filters.search) {\n        const newFilters = { ...filters, search: searchInput };\n        updateFilters(newFilters);\n        fetchProducts(newFilters);\n      }\n    }, 500);\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput, filters]); // Depend on searchInput and filters\n\n  // Effect to handle URL parameter changes\n  useEffect(() => {\n    const urlCategory = searchParams.get('category');\n    const urlSearch = searchParams.get('search');\n    \n    // Only update if URL parameters are different from current filters\n    if (urlCategory !== filters.category || urlSearch !== filters.search) {\n      const newFilters = {\n        category: urlCategory || '',\n        search: urlSearch || ''\n      };\n      setFilters(newFilters);\n      setSearchInput(urlSearch || '');\n      fetchProducts(newFilters);\n    }\n  }, [searchParams]); // Only depend on searchParams\n\n  // Effect to initialize all categories as sellable when categories are first loaded\n  useEffect(() => {\n    initializeAllCategoriesAsSellable();\n  }, [categories.length, user?.id]); // Run when categories are loaded or user changes\n\n  // Effect to re-fetch products when user sellable categories change\n  useEffect(() => {\n    if (categories.length > 0 && userSellableCategories.size >= 0) {\n      fetchProducts(filters);\n    }\n  }, [userSellableCategories]); // Re-fetch when sellable categories change\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/api/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      \n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/api/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // Debug: Log the first product to see its structure\n      if (allProducts.length > 0) {\n      }\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categories.length === 0) {\n        console.warn('Categories not loaded yet, showing all products (filtering will be applied once categories load)');\n        setProducts(allProducts);\n        return;\n      }\n      \n      // If user has no sellable categories selected, show no products\n      if (userSellableCategories.size === 0) {\n        setProducts([]);\n        return;\n      }\n      \n      // Filter products based on user-specific sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let categoryId = null;\n        \n        // Get category ID from product\n        if (product.category && typeof product.category === 'number') {\n          categoryId = product.category;\n        } else if (product.category && product.category.id) {\n          categoryId = product.category.id;\n        } else if (product.category_name) {\n          const category = categories.find(cat => cat.name === product.category_name);\n          categoryId = category ? category.id : null;\n        }\n        \n        // If no category ID found, exclude the product\n        if (!categoryId) {\n          return false;\n        }\n        \n        // Check if this category is in user's sellable categories\n        const isSellable = userSellableCategories.has(categoryId);\n        \n        // Debug: Log filtering decision\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's in user's sellable categories\n      if (filterParams.category) {\n        const categoryId = parseInt(filterParams.category);\n        if (!userSellableCategories.has(categoryId)) {\n          // If selected category is not in user's sellable categories, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/api/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.compatible_units && product.compatible_units[0]) {\n      const compatibleUnit = product.compatible_units[0];\n      unit = {\n        id: compatibleUnit.unit?.id || compatibleUnit.unit,\n        name: compatibleUnit.unit_name || compatibleUnit.unit?.name || 'Piece',\n        symbol: compatibleUnit.unit_symbol || compatibleUnit.unit?.symbol || 'piece'\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      // Get unit stock info for price calculation\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product),\n        price_mode: priceMode\n      };\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData, saleStatus = 'completed') => {\n    try {\n      // Create print content for the sale\n      const total = calculateSubtotal();\n      const remaining = total - paidAmount;\n      \n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: saleStatus,\n        total_amount: total,\n        paid_amount: paidAmount,\n        remaining_amount: remaining,\n        payment_status: remaining > 0 ? 'partial' : 'paid',\n        due_date: remaining > 0 ? new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString() : null, // 30 days from now\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit_name || item.unit?.name || 'piece',\n          unit_price: item.unit_price,\n          total_price: item.unit_price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale', t);\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      const printAfterLoad = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n      // Check if window is already loaded\n      if (printWindow.document.readyState === 'complete') {\n        printAfterLoad();\n      } else {\n        printWindow.onload = printAfterLoad;\n      }\n      \n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty. Please add items to the cart before completing the sale.');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    // Validate customer name for partial payments\n    if (paymentType === 'partial' && (!customerInfo.name || !customerInfo.name.trim())) {\n      setError('Customer name is required for partial payments');\n      setProcessing(false);\n      return;\n    }\n\n    // Validate paid amount\n    const total = calculateTotal();\n    if (paidAmount > total) {\n      setError('Paid amount cannot exceed the total amount');\n      setProcessing(false);\n      return;\n    }\n\n    if (paidAmount < 0) {\n      setError('Paid amount cannot be negative');\n      setProcessing(false);\n      return;\n    }\n\n    try {\n      const saleData = {\n        sale_type: 'sale',\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        paid_amount: paidAmount,\n          items: cart.map(item => {\n            // More robust unit ID extraction\n            let unitId = item.unit_id;\n            if (typeof unitId === 'object' && unitId !== null) {\n              unitId = unitId.id || unitId;\n            }\n            \n            return {\n          product: item.id,\n              quantity: parseFloat(item.quantity),\n              unit: parseInt(unitId),\n              unit_price: parseFloat(item.unit_price),\n              price_mode: item.price_mode || 'standard'\n            };\n          })\n        };\n\n\n      // Create the sale\n      const response = await api.post('/api/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          await api.post(`/api/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            await autoPrintReceipt(saleNumber, response.data, 'completed');\n          }\n      \n      // Clear cart and customer info\n      setCart([]);\n      setCustomerInfo({ name: '', phone: '', email: '' });\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          console.error('Sale completion error:', completeError);\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          await autoPrintReceipt(saleNumber, response.data, 'pending');\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(t('messages.pending_sale_created', { saleNumber }));\n      }\n    } catch (err) {\n      console.error('Sale creation error:', err);\n      console.error('Error response:', err.response?.data);\n      \n      // Handle different types of errors\n      if (err.response?.data?.error) {\n        setError(err.response.data.error);\n      } else if (err.response?.data?.detail) {\n        setError(err.response.data.detail);\n      } else if (err.response?.data?.customer_name) {\n        setError(err.response.data.customer_name[0]);\n      } else if (err.response?.data?.paid_amount) {\n        setError(err.response.data.paid_amount[0]);\n      } else {\n        setError('Failed to create sale. Please check the console for details.');\n      }\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately and persist\n      const newFilters = { ...filters, [filterType]: value };\n      updateFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    updateFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    fetchProducts(clearedFilters);\n  };\n\n  const toggleCategorySellable = (categoryId, isCurrentlySellable) => {\n    try {\n      setError(''); // Clear any previous errors\n      \n      const newSellableCategories = new Set(userSellableCategories);\n      \n      if (isCurrentlySellable) {\n        // Remove from sellable categories\n        newSellableCategories.delete(categoryId);\n      } else {\n        // Add to sellable categories\n        newSellableCategories.add(categoryId);\n      }\n      \n      setUserSellableCategories(newSellableCategories);\n      \n      // Save to localStorage for this user\n      if (user?.id) {\n        localStorage.setItem(`user-${user.id}-sellable-categories`, JSON.stringify([...newSellableCategories]));\n      }\n      \n      \n      // Refresh products to apply new sellable filter\n      fetchProducts(filters);\n    } catch (err) {\n      console.error('Error updating category sellable status:', err);\n      setError(`Failed to update category status: ${err.message || 'Unknown error'}`);\n    }\n  };\n\n  const resetUserCategories = () => {\n    if (user?.id && categories.length > 0) {\n      // Set all categories as sellable\n      const allCategoryIds = new Set(categories.map(cat => cat.id));\n      setUserSellableCategories(allCategoryIds);\n      // Save to localStorage\n      localStorage.setItem(`user-${user.id}-sellable-categories`, JSON.stringify([...allCategoryIds]));\n      // Refresh products (will show all products from all categories)\n      fetchProducts(filters);\n    }\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products (only for complete sales)\n    if (saleMode === 'complete' && product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => (u.unit?.id || u.unit) === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === (selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit));\n          const unitPrice = getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product);\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>{t('titles.point_of_sale')}</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => userSellableCategories.has(cat.id)).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title={t('alerts.sale_will_be_completed')}\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title={t('alerts.sale_will_be_created_pending')}\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group print-receipt-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle print-receipt-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title={t('alerts.print_receipt_after_sale')}\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn print-receipt-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title=\"Don't print receipt\"\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <h3 style={{ margin: '0 0 1rem 0', fontSize: '1rem', fontWeight: '600' }}>\n                Manage Sellable Categories\n              </h3>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, userSellableCategories.has(category.id))}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: userSellableCategories.has(category.id) ? '#dcfce7' : '#fee2e2',\n                        borderColor: userSellableCategories.has(category.id) ? '#16a34a' : '#dc2626',\n                        color: userSellableCategories.has(category.id) ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {userSellableCategories.has(category.id) ? 'Sellable' : 'Not Sellable'}\n                    </button>\n          </div>\n                ))}\n              </div>\n              \n              {/* Reset Button */}\n              <div style={{ marginTop: '1rem', textAlign: 'center' }}>\n                <Button \n                  variant=\"outline\" \n                  size=\"small\" \n                  onClick={resetUserCategories}\n                  style={{ \n                    backgroundColor: '#dcfce7', \n                    borderColor: '#16a34a', \n                    color: '#15803d',\n                    fontWeight: '500'\n                  }}\n                >\n                  Reset to All Categories Sellable\n                </Button>\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 && saleMode === 'complete' ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {getCurrentPrice(product).toFixed(2)} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit?.id || compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {unitStockInfo.available_quantity}\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit?.symbol || compatibleUnit.unit_symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit?.id || compatibleUnit.unit} \n                              value={compatibleUnit.unit?.id || compatibleUnit.unit}\n                              disabled={saleMode === 'complete' ? !isAvailable : false}\n                            >\n                              {unitName} ({unitSymbol}) - {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA\n                              {!isAvailable && saleMode === 'complete' ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <div className=\"empty-cart\">\n                <p>Cart is empty</p>\n                <p className=\"empty-cart-hint\">Add items from the product list to start a sale</p>\n              </div>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title={t('alerts.click_to_edit_quantity')}\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title={t('alerts.remove_item')}\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder={paymentType === 'partial' ? \"Customer Name (Required for Partial Payment)\" : \"Customer Name (Optional)\"}\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                    className={paymentType === 'partial' && !customerInfo.name ? 'required-field' : ''}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n                \n                <h3>Payment Type</h3>\n                <div className=\"payment-types\">\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"full\"\n                      checked={paymentType === 'full'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Full Payment (100%)</span>\n                  </label>\n                  <label className=\"payment-type\">\n                    <input\n                      type=\"radio\"\n                      name=\"paymentType\"\n                      value=\"partial\"\n                      checked={paymentType === 'partial'}\n                      onChange={(e) => setPaymentType(e.target.value)}\n                    />\n                    <span>Partial Payment (0-99.99%)</span>\n                  </label>\n                </div>\n                \n                {paymentType === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateTotal()}\n                      value={paidAmount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setPaidAmount(value);\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                    />\n                    <small>Total: ${calculateTotal().toFixed(2)} | Remaining: ${(calculateTotal() - (paidAmount || 0)).toFixed(2)}</small>\n                  </div>\n                )}\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? 'Complete Sale' : 'Create Pending Sale'}\n                  {printReceipt && ' & Print Receipt'}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}