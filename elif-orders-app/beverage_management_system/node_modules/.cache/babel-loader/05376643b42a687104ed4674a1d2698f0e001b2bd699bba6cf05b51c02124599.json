{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton, { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PointOfSale = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      fetchProducts();\n    };\n    initializeData();\n  }, []);\n\n  // Debounced search effect - completely rewritten for stability\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout\n    searchTimeoutRef.current = setTimeout(() => {\n      if (searchInput !== filters.search) {\n        const newFilters = {\n          ...filters,\n          search: searchInput\n        };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }\n    }, 500);\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput, filters]); // Added filters to dependencies // Added filters to dependencies\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n\n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n\n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n\n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n\n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n  const getUpdatedStockAvailability = productId => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart.filter(item => item.id === productId).reduce((total, item) => {\n      // Find the unit info to get conversion factor\n      const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n      if (unitInfo && unitInfo.conversion_factor) {\n        // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n        return total + item.quantity * unitInfo.conversion_factor;\n      } else if (unitInfo && unitInfo.is_base_unit) {\n        // If it's the base unit (pieces), no conversion needed\n        return total + item.quantity;\n      }\n      return total;\n    }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n\n      // Always filter for active products\n      params.append('is_active', 'true');\n\n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n\n      // Debug: Log the first product to see its structure\n      if (allProducts.length > 0) {\n        console.log('First product structure:', allProducts[0]);\n        console.log('Categories loaded:', categories.length);\n      }\n\n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n\n        // If product has category information, check if category is sellable\n        if (product.category && product.category.is_sellable !== undefined) {\n          isSellable = product.category.is_sellable;\n        }\n        // If product has category_name, find the category in our categories list\n        else if (product.category_name) {\n          const category = categories.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categories.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n\n        // Debug: Log filtering decision\n        if (!isSellable) {\n          console.log(`Filtering out product: ${product.name} (category: ${product.category_name || product.category})`);\n        }\n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categories.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n  const fetchStockAvailability = async productId => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n  const addToCart = (product, selectedUnit = null) => {\n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || product.compatible_units && product.compatible_units[0] || {\n      id: product.base_unit,\n      name: 'Piece',\n      symbol: 'piece'\n    };\n\n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n\n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unit.id);\n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n\n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item => item.id === product.id && item.unit_id === unit.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      };\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unitId);\n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n\n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart.filter(item => item.id === productId && item.unit_id === unitId).reduce((sum, item) => sum + item.quantity, 0);\n\n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      setCart(cart.map(item => item.id === productId && item.unit_id === unitId ? {\n        ...item,\n        quantity\n      } : item));\n      setError('');\n    }\n  };\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + item.quantity * item.unit_price, 0);\n  };\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = item.quantity * item.unit_price * item.tax_rate / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = item.quantity * item.unit_price * 100 / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n  const autoPrintReceipt = async (saleNumber, saleData) => {\n    try {\n      // Create print content for the completed sale\n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: (user === null || user === void 0 ? void 0 : user.username) || 'Unknown User',\n        user_id: (user === null || user === void 0 ? void 0 : user.id) || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: 'completed',\n        total_amount: calculateSubtotal(),\n        items: cart.map(item => {\n          var _item$unit;\n          return {\n            product_name: item.name,\n            product_sku: item.sku,\n            quantity: item.quantity,\n            unit_name: ((_item$unit = item.unit) === null || _item$unit === void 0 ? void 0 : _item$unit.name) || 'piece',\n            unit_price: item.price,\n            total_price: item.price * item.quantity\n          };\n        })\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale');\n\n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n\n      // Wait for content to load then print\n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n    setProcessing(true);\n    setError('');\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n\n        // Auto-print the receipt after successful sale completion\n        await autoPrintReceipt(saleNumber, response.data);\n\n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({\n          name: '',\n          phone: '',\n          email: ''\n        });\n\n        // Wait a moment for the backend to process stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n\n        // Refresh product data to update stock quantities\n        await fetchProducts();\n\n        // Wait another moment for stock availability to be updated\n        await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n\n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        var _completeError$respon, _completeError$respon2;\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${((_completeError$respon = completeError.response) === null || _completeError$respon === void 0 ? void 0 : (_completeError$respon2 = _completeError$respon.data) === null || _completeError$respon2 === void 0 ? void 0 : _completeError$respon2.error) || completeError.message}`);\n\n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({\n          name: '',\n          phone: '',\n          email: ''\n        });\n\n        // Wait for backend to process any completed stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Refresh data\n        await fetchProducts();\n        await new Promise(resolve => setTimeout(resolve, 500));\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = {\n        ...filters,\n        [filterType]: value\n      };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  };\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      search: ''\n    };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    fetchProducts(clearedFilters);\n  };\n  const toggleCategorySellable = async (categoryId, isSellable) => {\n    try {\n      await api.patch(`/products/categories/${categoryId}/`, {\n        is_sellable: !isSellable\n      });\n      // Refresh categories to show updated status\n      await fetchCategories();\n      // Refresh products to apply new sellable filter\n      fetchProducts(filters);\n    } catch (err) {\n      console.error('Error updating category sellable status:', err);\n      setError('Failed to update category status');\n    }\n  };\n  const handleQuantityClick = item => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n  const handleQuantityChange = e => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n  const handleQuantitySubmit = item => {\n    const newQuantity = parseInt(tempQuantity);\n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n\n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === item.unit_id);\n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n\n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n\n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n  const handleProductCardClick = product => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === selectedCompatibleUnit.unit);\n          const unitPrice = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.price) || product.price;\n\n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading products...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pos\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Point of Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-user\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Cashier: \", user === null || user === void 0 ? void 0 : user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-products\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pos-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: filters.category,\n              onChange: e => handleFilterChange('category', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 17\n              }, this), categories.filter(cat => cat.is_sellable).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.id,\n                children: category.name\n              }, category.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"small\",\n              onClick: () => setShowSellableToggle(!showSellableToggle),\n              style: {\n                marginTop: '0.5rem'\n              },\n              children: [showSellableToggle ? 'Hide' : 'Manage', \" Categories\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Search:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: searchInputRef,\n              type: \"text\",\n              placeholder: \"Search products...\",\n              value: searchInput,\n              onChange: e => handleFilterChange('search', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"small\",\n              onClick: clearFilters,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), showSellableToggle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-management\",\n          style: {\n            marginBottom: '1rem',\n            padding: '1rem',\n            backgroundColor: '#f9fafb',\n            borderRadius: '0.5rem',\n            border: '1px solid #e5e7eb'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 1rem 0',\n              fontSize: '1rem',\n              fontWeight: '600'\n            },\n            children: \"Manage Sellable Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n              gap: '0.5rem'\n            },\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                padding: '0.5rem',\n                backgroundColor: 'white',\n                borderRadius: '0.375rem',\n                border: '1px solid #e5e7eb'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.875rem',\n                  fontWeight: '500'\n                },\n                children: category.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleCategorySellable(category.id, category.is_sellable),\n                style: {\n                  padding: '0.25rem 0.5rem',\n                  fontSize: '0.75rem',\n                  borderRadius: '0.25rem',\n                  border: '1px solid',\n                  cursor: 'pointer',\n                  backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                  borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                  color: category.is_sellable ? '#15803d' : '#dc2626'\n                },\n                children: category.is_sellable ? 'Sellable' : 'Not Sellable'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this)]\n            }, category.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"products-count\",\n            children: [products.length, \" product\", products.length !== 1 ? 's' : '', \" found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-grid\",\n          children: products.map(product => {\n            var _product$compatible_u;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`,\n              onClick: () => handleProductCardClick(product),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-sku\",\n                  children: product.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-price\",\n                  children: [parseFloat(product.price).toFixed(2), \" MGA\", product.compatible_units && product.compatible_units.length > 1 && ` (base unit: ${((_product$compatible_u = product.compatible_units.find(u => u.unit.is_base_unit)) === null || _product$compatible_u === void 0 ? void 0 : _product$compatible_u.unit.symbol) || 'piece'})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-stock\",\n                  children: [\"Stock: \", product.stock_quantity, \" \", product.unit, stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stock-details\",\n                    children: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      return product.compatible_units.map(compatibleUnit => {\n                        const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === compatibleUnit.unit);\n                        if (!unitStockInfo) return null;\n\n                        // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                        const unitName = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.name) || compatibleUnit.unit.name;\n                        return /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`,\n                          children: [unitName, \": \", unitStockInfo.available_quantity]\n                        }, compatibleUnit.unit, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 843,\n                          columnNumber: 31\n                        }, this);\n                      }).filter(Boolean);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 19\n                }, this), product.compatible_units && product.compatible_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-selection\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Unit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 856,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"unit-select\",\n                    value: selectedUnits[product.id] || '',\n                    onChange: e => {\n                      const unitId = parseInt(e.target.value);\n                      handleUnitSelection(product.id, unitId);\n                    },\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 866,\n                      columnNumber: 25\n                    }, this), product.compatible_units.map((compatibleUnit, index) => {\n                      var _unitStockInfo$price;\n                      // Use updated stock availability that considers cart contents\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === compatibleUnit.unit);\n                      const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                      const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n\n                      // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                      const unitName = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.name) || compatibleUnit.unit.name;\n                      const unitSymbol = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.symbol) || compatibleUnit.unit.symbol;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: compatibleUnit.unit,\n                        disabled: !isAvailable,\n                        children: [unitName, \" (\", unitSymbol, \") - \", (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : (_unitStockInfo$price = unitStockInfo.price) === null || _unitStockInfo$price === void 0 ? void 0 : _unitStockInfo$price.toFixed(2)) || 'N/A', \" MGA\", !isAvailable ? ' - OUT OF STOCK' : ` - ${availableQty} available`]\n                      }, compatibleUnit.unit, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 880,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 857,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 21\n                }, this), (!product.compatible_units || product.compatible_units.length <= 1) && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"small\",\n                  onClick: () => addToCart(product),\n                  disabled: (() => {\n                    // Check if any unit has available stock\n                    if (!stockAvailability[product.id]) {\n                      return true; // Disable if stock data not loaded\n                    }\n\n                    // For single unit products, check base stock\n                    return product.stock_quantity <= 0;\n                  })(),\n                  className: \"add-to-cart-btn\",\n                  children: (() => {\n                    if (!stockAvailability[product.id]) {\n                      return 'Loading...';\n                    }\n                    return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 21\n                }, this), product.available_units && product.available_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-instruction\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Click card or select unit to add to cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 17\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Shopping Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 13\n          }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"small\",\n            onClick: clearCart,\n            children: \"Clear Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-items\",\n          children: cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-cart\",\n            children: \"Cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-unit\",\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-price\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-quantity\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-total\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-actions\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 17\n            }, this), cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-product\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"item-sku\",\n                  children: [\"SKU: \", item.sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-unit\",\n                children: item.unit_symbol || 'piece'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-price\",\n                children: [parseFloat(item.unit_price).toFixed(2), \" MGA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-quantity\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quantity-controls\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity - 1),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 25\n                  }, this), editingQuantity === `${item.id}-${item.unit_id}` ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"quantity-edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: tempQuantity,\n                      onChange: handleQuantityChange,\n                      onKeyPress: e => handleQuantityKeyPress(e, item),\n                      onBlur: () => handleQuantitySubmit(item),\n                      className: \"quantity-input\",\n                      min: \"0\",\n                      max: item.stock_quantity,\n                      autoFocus: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 987,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 986,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"quantity clickable\",\n                    onClick: () => handleQuantityClick(item),\n                    title: \"Click to edit quantity\",\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1000,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity + 1),\n                    disabled: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === item.unit_id);\n                      const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                      const maxAllowed = ((unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.available_quantity) || 0) + currentCartQuantity;\n                      return item.quantity >= maxAllowed;\n                    })(),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1008,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-total\",\n                children: [(item.quantity * item.unit_price).toFixed(2), \" MGA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-actions\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"danger\",\n                  onClick: () => removeFromCart(item.id, item.unit_id),\n                  title: \"Remove item\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1030,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 21\n              }, this)]\n            }, `${item.id}-${item.unit_id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [calculateSubtotal().toFixed(2), \" MGA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row cost-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cost (excl. tax):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [calculateCost().toFixed(2), \" MGA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row tax-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tax included:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [calculateTax().toFixed(2), \" MGA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row total\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [calculateSubtotal().toFixed(2), \" MGA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customer-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Customer Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Customer Name (Optional)\",\n                value: customerInfo.name,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                placeholder: \"Phone Number (Optional)\",\n                value: customerInfo.phone,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  phone: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email (Optional)\",\n                value: customerInfo.email,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-methods\",\n              children: ['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payment-method\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"payment\",\n                  value: method,\n                  checked: paymentMethod === method,\n                  onChange: e => setPaymentMethod(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1099,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: method.replace('_', ' ').toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 23\n                }, this)]\n              }, method, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkout-actions\",\n            children: [/*#__PURE__*/_jsxDEV(PrintButton, {\n              data: {\n                sale_number: `TEMP-${Date.now()}`,\n                customer_name: customerInfo.name || 'Walk-in Customer',\n                customer_phone: customerInfo.phone || '',\n                customer_email: customerInfo.email || '',\n                user_name: (user === null || user === void 0 ? void 0 : user.username) || 'Unknown User',\n                user_id: (user === null || user === void 0 ? void 0 : user.id) || 'unknown',\n                created_at: new Date().toISOString(),\n                print_timestamp: new Date().toISOString(),\n                print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                status: 'pending',\n                total_amount: calculateSubtotal(),\n                items: cart.map(item => {\n                  var _item$unit2;\n                  return {\n                    product_name: item.name,\n                    product_sku: item.sku,\n                    quantity: item.quantity,\n                    unit_name: ((_item$unit2 = item.unit) === null || _item$unit2 === void 0 ? void 0 : _item$unit2.name) || 'piece',\n                    unit_price: item.price,\n                    total_price: item.price * item.quantity\n                  };\n                })\n              },\n              title: \"Sale Receipt\",\n              type: \"sale\",\n              printText: \"Print Receipt\",\n              validateText: \"Validate Sale\",\n              showValidateOption: true,\n              onValidate: handleCheckout,\n              disabled: cart.length === 0,\n              className: \"print-receipt-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCheckout,\n              loading: processing,\n              className: \"validate-button\",\n              size: \"large\",\n              variant: \"primary\",\n              children: \"Validate Sale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 702,\n    columnNumber: 5\n  }, this);\n};\n_s(PointOfSale, \"0bPoEisom8tmrBB/UZaeUQI0Pc8=\", false, function () {\n  return [useAuth];\n});\n_c = PointOfSale;\nexport default PointOfSale;\nvar _c;\n$RefreshReg$(_c, \"PointOfSale\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","api","Button","PrintButton","generatePrintContent","jsxDEV","_jsxDEV","Fragment","_Fragment","PointOfSale","_s","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","searchTimeoutRef","showSellableToggle","setShowSellableToggle","initializeData","fetchCategories","fetchProducts","current","clearTimeout","setTimeout","newFilters","length","fetchBulkStockAvailability","defaultUnits","forEach","product","compatible_units","selectedUnit","find","u","is_default","unit","is_base_unit","id","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","console","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","item","reduce","total","unitInfo","unit_id","conversion_factor","quantity","baseUnit","totalBaseStock","available_quantity","remainingPieces","Math","max","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","url","toString","get","allProducts","results","log","sellableProducts","isSellable","is_sellable","undefined","category_name","cat","selectedCategory","parseInt","prev","addToCart","base_unit","symbol","updatedStockInfo","unitStockInfo","existingItem","newCartItem","unit_name","unit_symbol","unit_price","price","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","printData","sale_number","customer_name","customer_phone","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","status","total_amount","items","_item$unit","product_name","product_sku","sku","total_price","printContent","printWindow","window","open","document","write","close","onload","focus","print","handleCheckout","payment_method","saleId","Promise","resolve","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","toggleCategorySellable","categoryId","patch","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","isNaN","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","unitPrice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","variant","size","onClick","style","marginTop","ref","type","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","margin","fontSize","fontWeight","display","gridTemplateColumns","gap","alignItems","justifyContent","cursor","borderColor","color","_product$compatible_u","parseFloat","toFixed","compatibleUnit","unitName","Boolean","stopPropagation","index","_unitStockInfo$price","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","title","method","checked","replace","toUpperCase","_item$unit2","printText","validateText","showValidateOption","onValidate","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton, { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      fetchProducts();\n    };\n    initializeData();\n  }, []);\n\n  // Debounced search effect - completely rewritten for stability\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout\n    searchTimeoutRef.current = setTimeout(() => {\n      if (searchInput !== filters.search) {\n        const newFilters = { ...filters, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }\n    }, 500);\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput, filters]); // Added filters to dependencies // Added filters to dependencies\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      \n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // Debug: Log the first product to see its structure\n      if (allProducts.length > 0) {\n        console.log('First product structure:', allProducts[0]);\n        console.log('Categories loaded:', categories.length);\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category information, check if category is sellable\n        if (product.category && product.category.is_sellable !== undefined) {\n          isSellable = product.category.is_sellable;\n        }\n        // If product has category_name, find the category in our categories list\n        else if (product.category_name) {\n          const category = categories.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categories.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        // Debug: Log filtering decision\n        if (!isSellable) {\n          console.log(`Filtering out product: ${product.name} (category: ${product.category_name || product.category})`);\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categories.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || (product.compatible_units && product.compatible_units[0]) || { id: product.base_unit, name: 'Piece', symbol: 'piece' };\n    \n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    \n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    \n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n    \n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    \n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      };\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n      \n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(item => item.id === productId && item.unit_id === unitId)\n        .reduce((sum, item) => sum + item.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData) => {\n    try {\n      // Create print content for the completed sale\n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: 'completed',\n        total_amount: calculateSubtotal(),\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit?.name || 'piece',\n          unit_price: item.price,\n          total_price: item.price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale');\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n        \n        // Auto-print the receipt after successful sale completion\n        await autoPrintReceipt(saleNumber, response.data);\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Wait a moment for the backend to process stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n        \n        // Refresh product data to update stock quantities\n        await fetchProducts();\n        \n        // Wait another moment for stock availability to be updated\n        await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n        \n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        \n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n        \n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Wait for backend to process any completed stock movements\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        // Refresh data\n        await fetchProducts();\n        await new Promise(resolve => setTimeout(resolve, 500));\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n      const newFilters = { ...filters, [filterType]: value };\n      setFilters(newFilters);\n      fetchProducts(newFilters);\n    }\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    fetchProducts(clearedFilters);\n  };\n\n  const toggleCategorySellable = async (categoryId, isSellable) => {\n    try {\n      await api.patch(`/products/categories/${categoryId}/`, {\n        is_sellable: !isSellable\n      });\n      // Refresh categories to show updated status\n      await fetchCategories();\n      // Refresh products to apply new sellable filter\n      fetchProducts(filters);\n    } catch (err) {\n      console.error('Error updating category sellable status:', err);\n      setError('Failed to update category status');\n    }\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseInt(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n    \n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart\n      .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n      .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n    \n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    \n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === selectedCompatibleUnit.unit);\n          const unitPrice = unitStockInfo?.price || product.price;\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>Point of Sale</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <div className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </div>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <h3 style={{ margin: '0 0 1rem 0', fontSize: '1rem', fontWeight: '600' }}>\n                Manage Sellable Categories\n              </h3>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {parseFloat(product.price).toFixed(2)} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {unitStockInfo.available_quantity}\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit.symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit} \n                              value={compatibleUnit.unit}\n                              disabled={!isAvailable}\n                            >\n                              {unitName} ({unitSymbol}) - {unitStockInfo?.price?.toFixed(2) || 'N/A'} MGA\n                              {!isAvailable ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <p className=\"empty-cart\">Cart is empty</p>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title=\"Click to edit quantity\"\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1)}\n                          disabled={(() => {\n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id)}\n                        title=\"Remove item\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customer Name (Optional)\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"checkout-actions\">\n                <PrintButton\n                  data={{\n                    sale_number: `TEMP-${Date.now()}`,\n                    customer_name: customerInfo.name || 'Walk-in Customer',\n                    customer_phone: customerInfo.phone || '',\n                    customer_email: customerInfo.email || '',\n                    user_name: user?.username || 'Unknown User',\n                    user_id: user?.id || 'unknown',\n                    created_at: new Date().toISOString(),\n                    print_timestamp: new Date().toISOString(),\n                    print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                    status: 'pending',\n                    total_amount: calculateSubtotal(),\n                    items: cart.map(item => ({\n                      product_name: item.name,\n                      product_sku: item.sku,\n                      quantity: item.quantity,\n                      unit_name: item.unit?.name || 'piece',\n                      unit_price: item.price,\n                      total_price: item.price * item.quantity\n                    }))\n                  }}\n                  title=\"Sale Receipt\"\n                  type=\"sale\"\n                  printText=\"Print Receipt\"\n                  validateText=\"Validate Sale\"\n                  showValidateOption={true}\n                  onValidate={handleCheckout}\n                  disabled={cart.length === 0}\n                  className=\"print-receipt-btn\"\n                />\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                >\n                  Validate Sale\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}