{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-orders-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{useApi}from'../hooks/useApi';import Button from'./Button';import PrintButton from'./PrintButton';import'./PurchaseOrderModal.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const PurchaseOrderModal=_ref=>{let{suppliers,onClose,onSubmit}=_ref;const{t}=useTranslation();const[isMobile,setIsMobile]=useState(false);// Helper function to get today's date in YYYY-MM-DD format\nconst getTodayDate=()=>{const today=new Date();return today.toISOString().split('T')[0];};const[formData,setFormData]=useState({supplier_id:'',expected_delivery_date:getTodayDate(),notes:'',items:[]});const[products,setProducts]=useState([]);const[filteredProducts,setFilteredProducts]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[taxClasses,setTaxClasses]=useState([]);const[loading,setLoading]=useState(false);const api=useApi();useEffect(()=>{const checkScreenSize=()=>{setIsMobile(window.innerWidth<768);};checkScreenSize();window.addEventListener('resize',checkScreenSize);fetchProductsAndTaxes();return()=>window.removeEventListener('resize',checkScreenSize);},[]);// eslint-disable-line react-hooks/exhaustive-deps\n// Filter products based on search term\nuseEffect(()=>{if(searchTerm.trim()===''){setFilteredProducts(products);}else{const filtered=products.filter(product=>product.name.toLowerCase().includes(searchTerm.toLowerCase())||product.sku.toLowerCase().includes(searchTerm.toLowerCase()));setFilteredProducts(filtered);}},[searchTerm,products]);const fetchProductsAndTaxes=async()=>{try{let allProducts=[];let nextUrl='/api/products/';// Fetch all products by paginating through all pages\nwhile(nextUrl){const productsResponse=await api.get(nextUrl);const data=productsResponse.data;const pageProducts=data.results||data;// If it's the first page and there's no pagination (no results property), break\nif(!data.results&&allProducts.length>0){break;}allProducts=[...allProducts,...pageProducts];// Check if there's a next page\nnextUrl=data.next;// If the API doesn't use standard pagination, break\nif(!data.next&&!data.results){break;}}// Fetch tax classes\nconst taxResponse=await api.get('/api/products/tax-classes/');// Fetch unit costs for each product\nconst productsWithUnitCosts=await Promise.all(allProducts.map(async product=>{try{const unitCostsResponse=await api.get(\"/api/products/\".concat(product.id,\"/unit-costs/\"));return _objectSpread(_objectSpread({},product),{},{unit_costs:unitCostsResponse.data.unit_costs||[]});}catch(error){console.error(\"Error fetching unit costs for product \".concat(product.id,\":\"),error);return _objectSpread(_objectSpread({},product),{},{unit_costs:[]});}}));setProducts(productsWithUnitCosts);setFilteredProducts(productsWithUnitCosts);const taxData=taxResponse.data;setTaxClasses(taxData.results||taxData);}catch(error){console.error('Error fetching products and tax classes:',error);}};const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const addItem=()=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:[...prev.items,{product_id:'',quantity_ordered:1,unit_id:'',unit_cost:0,tax_class_id:'',notes:''}]}));};const removeItem=index=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:prev.items.filter((_,i)=>i!==index)}));};const handleItemChange=(index,field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:prev.items.map((item,i)=>{if(i===index){const updatedItem=_objectSpread(_objectSpread({},item),{},{[field]:value});// When product is selected, set default unit and unit cost\nif(field==='product_id'&&value){var _selectedProduct$comp;const selectedProduct=products.find(p=>p.id===parseInt(value));if((selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$comp=selectedProduct.compatible_units)===null||_selectedProduct$comp===void 0?void 0:_selectedProduct$comp.length)>0){// Find the default unit (is_default: true) or fallback to base unit\nlet defaultUnit=selectedProduct.compatible_units.find(u=>u.is_default);if(!defaultUnit){defaultUnit=selectedProduct.compatible_units.find(u=>{var _u$unit;return((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.is_base_unit)||u.unit_is_base;});}if(!defaultUnit){defaultUnit=selectedProduct.compatible_units[0];}if(defaultUnit){// Handle both ProductUnit structure (with nested unit) and direct unit structure\nconst unit=defaultUnit.unit||defaultUnit;const unitId=(unit===null||unit===void 0?void 0:unit.id)||unit;// unit might be just an ID\n// For compatible_units structure, unit is just the ID number\nconst actualUnitId=typeof unitId==='number'?unitId:(unit===null||unit===void 0?void 0:unit.id)||unitId;if(actualUnitId){var _selectedProduct$unit;updatedItem.unit_id=actualUnitId;// Use the unit costs from the API response\n// The unit_costs array contains the correct cost for each unit\nconst unitCostData=selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$unit=selectedProduct.unit_costs)===null||_selectedProduct$unit===void 0?void 0:_selectedProduct$unit.find(uc=>uc.id===actualUnitId);if(unitCostData){updatedItem.unit_cost=parseFloat(unitCostData.cost_price).toFixed(2);}else{// Fallback to the stored cost_price if unit_costs not available\nupdatedItem.unit_cost=parseFloat((selectedProduct===null||selectedProduct===void 0?void 0:selectedProduct.cost_price)||0).toFixed(2);}}}}}return updatedItem;}return item;})}));};const handleSubmit=async e=>{if(e&&e.preventDefault){e.preventDefault();}if(!formData.supplier_id||formData.items.length===0){alert(t('modals.please_select_supplier_add_item'));return;}// Validate that all items have required fields\nconst invalidItems=formData.items.filter(item=>!item.product_id||!item.quantity_ordered||!item.unit_cost);if(invalidItems.length>0){alert('Please fill in all required fields for all items (product, quantity, unit cost)');return;}// Convert data types to ensure proper API format\nconst processedData=_objectSpread(_objectSpread({},formData),{},{supplier_id:parseInt(formData.supplier_id),items:formData.items.map(item=>_objectSpread(_objectSpread({},item),{},{product_id:parseInt(item.product_id),quantity_ordered:parseFloat(item.quantity_ordered),unit_id:item.unit_id?parseInt(item.unit_id):null,unit_cost:parseFloat(item.unit_cost),tax_class_id:item.tax_class_id?parseInt(item.tax_class_id):null}))});setLoading(true);try{await onSubmit(processedData);}catch(error){console.error('Error submitting purchase order:',error);}finally{setLoading(false);}};const calculateItemTotal=item=>{const quantity=parseFloat(item.quantity_ordered)||0;const unitCost=parseFloat(item.unit_cost)||0;// Since unit cost is now the cost for the selected unit, just multiply by quantity\nreturn quantity*unitCost;};const calculateTaxAmount=item=>{const lineTotal=calculateItemTotal(item);const taxClass=taxClasses.find(tc=>tc.id===parseInt(item.tax_class_id));if(taxClass){return lineTotal*(taxClass.tax_rate/100);}return 0;};const calculateTotals=()=>{const subtotal=formData.items.reduce((sum,item)=>sum+calculateItemTotal(item),0);const taxAmount=formData.items.reduce((sum,item)=>sum+calculateTaxAmount(item),0);const total=subtotal+taxAmount;return{subtotal,taxAmount,total};};const totals=calculateTotals();// Mobile Item Card Component\nconst MobileItemCard=_ref2=>{let{item,index}=_ref2;const selectedProduct=products.find(p=>p.id===parseInt(item.product_id));return/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-item-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-item-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[t('common.name'),\" *\"]}),/*#__PURE__*/_jsxs(\"select\",{value:item.product_id,onChange:e=>handleItemChange(index,'product_id',e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_product')}),filteredProducts.map(product=>/*#__PURE__*/_jsxs(\"option\",{value:product.id,children:[product.name,\" (\",product.sku,\")\"]},product.id))]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-button\",onClick:()=>removeItem(index),children:t('modals.remove')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-item-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[t('common.quantity'),\" *\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:item.quantity_ordered,onChange:e=>handleItemChange(index,'quantity_ordered',e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[t('modals.unit_cost'),\" *\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"0.01\",value:item.unit_cost,onChange:e=>handleItemChange(index,'unit_cost',e.target.value),required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group full-width\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('common.unit')}),/*#__PURE__*/_jsxs(\"select\",{value:item.unit_id,onChange:e=>{const unitId=e.target.value;handleItemChange(index,'unit_id',unitId);// Auto-set unit cost based on selected unit's cost from API\nif(unitId){const selectedProduct=products.find(p=>p.id===parseInt(item.product_id));if(selectedProduct!==null&&selectedProduct!==void 0&&selectedProduct.unit_costs){const unitCostData=selectedProduct.unit_costs.find(uc=>uc.id===parseInt(unitId));if(unitCostData){handleItemChange(index,'unit_cost',parseFloat(unitCostData.cost_price).toFixed(2));}}}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_unit')}),(()=>{if(!(selectedProduct!==null&&selectedProduct!==void 0&&selectedProduct.compatible_units)||selectedProduct.compatible_units.length===0){return/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.no_compatible_units')});}return selectedProduct.compatible_units.map(compatibleUnit=>{var _selectedProduct$unit2;const unit=compatibleUnit.unit||compatibleUnit;const unitId=(unit===null||unit===void 0?void 0:unit.id)||unit;const unitName=(unit===null||unit===void 0?void 0:unit.name)||compatibleUnit.unit_name;const unitSymbol=(unit===null||unit===void 0?void 0:unit.symbol)||compatibleUnit.unit_symbol;const actualUnitId=typeof unitId==='number'?unitId:(unit===null||unit===void 0?void 0:unit.id)||unitId;if(!unitName||!unitSymbol){console.warn('Invalid unit data:',compatibleUnit);return null;}const unitCostData=selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$unit2=selectedProduct.unit_costs)===null||_selectedProduct$unit2===void 0?void 0:_selectedProduct$unit2.find(uc=>uc.id===actualUnitId);const unitCost=unitCostData?unitCostData.cost_price:0;return/*#__PURE__*/_jsxs(\"option\",{value:actualUnitId,children:[unitName,\" (\",unitSymbol,\") - \",parseFloat(unitCost).toFixed(2),\" MGA\"]},actualUnitId);}).filter(Boolean);})()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"field-group full-width\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('modals.tax_class')}),/*#__PURE__*/_jsxs(\"select\",{value:item.tax_class_id,onChange:e=>handleItemChange(index,'tax_class_id',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.no_tax')}),taxClasses.map(taxClass=>/*#__PURE__*/_jsxs(\"option\",{value:taxClass.id,children:[taxClass.name,\" (\",taxClass.tax_rate,\"%)\"]},taxClass.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-item-totals\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-line\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.line_total'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateItemTotal(item).toFixed(2),\" MGA\"]})]}),item.tax_class_id&&/*#__PURE__*/_jsxs(\"div\",{className:\"total-line tax-line\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.tax_amount'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"+ \",calculateTaxAmount(item).toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-line grand-total\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.total'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[(calculateItemTotal(item)+calculateTaxAmount(item)).toFixed(2),\" MGA\"]})]})]})]})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content purchase-order-modal \".concat(isMobile?'mobile-modal':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('modals.create_purchase_order')}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:onClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('modals.order_details')}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-layout \".concat(isMobile?'mobile-layout':'desktop-layout'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"supplier_id\",children:[t('modals.supplier'),\" *\"]}),/*#__PURE__*/_jsxs(\"select\",{id:\"supplier_id\",name:\"supplier_id\",value:formData.supplier_id,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_supplier')}),suppliers.map(supplier=>/*#__PURE__*/_jsx(\"option\",{value:supplier.id,children:supplier.name},supplier.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expected_delivery_date\",children:t('modals.expected_delivery_date')}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"expected_delivery_date\",name:\"expected_delivery_date\",value:formData.expected_delivery_date,onChange:handleInputChange})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group full-width\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notes\",children:t('common.notes')}),/*#__PURE__*/_jsx(\"textarea\",{id:\"notes\",name:\"notes\",value:formData.notes,onChange:handleInputChange,rows:isMobile?2:3,placeholder:\"Additional notes for this purchase order...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[formData.items.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"empty-items\",children:/*#__PURE__*/_jsx(\"p\",{children:t('modals.no_items_added_yet')})}):isMobile?/*#__PURE__*/// Mobile Items List\n_jsx(\"div\",{className:\"mobile-items-list\",children:formData.items.map((item,index)=>/*#__PURE__*/_jsx(MobileItemCard,{item:item,index:index},index))}):/*#__PURE__*/// Desktop Items Table\n_jsxs(\"div\",{className:\"desktop-items-table\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"items-header\",children:[/*#__PURE__*/_jsx(\"span\",{children:t('common.name')}),/*#__PURE__*/_jsx(\"span\",{children:t('common.quantity')}),/*#__PURE__*/_jsx(\"span\",{children:t('common.unit')}),/*#__PURE__*/_jsx(\"span\",{children:t('modals.unit_cost')}),/*#__PURE__*/_jsx(\"span\",{children:t('modals.tax_class')}),/*#__PURE__*/_jsx(\"span\",{children:t('modals.line_total')}),/*#__PURE__*/_jsx(\"span\",{children:t('actions.actions')})]}),formData.items.map((item,index)=>{const selectedProduct=products.find(p=>p.id===parseInt(item.product_id));return/*#__PURE__*/_jsxs(\"div\",{className:\"item-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"item-product\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.product_id,onChange:e=>handleItemChange(index,'product_id',e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_product')}),filteredProducts.map(product=>/*#__PURE__*/_jsxs(\"option\",{value:product.id,children:[product.name,\" (\",product.sku,\")\"]},product.id))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:item.quantity_ordered,onChange:e=>handleItemChange(index,'quantity_ordered',e.target.value),required:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.unit_id,onChange:e=>{const unitId=e.target.value;handleItemChange(index,'unit_id',unitId);if(unitId){const selectedProduct=products.find(p=>p.id===parseInt(item.product_id));if(selectedProduct!==null&&selectedProduct!==void 0&&selectedProduct.unit_costs){const unitCostData=selectedProduct.unit_costs.find(uc=>uc.id===parseInt(unitId));if(unitCostData){handleItemChange(index,'unit_cost',parseFloat(unitCostData.cost_price).toFixed(2));}}}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.select_unit')}),(()=>{if(!(selectedProduct!==null&&selectedProduct!==void 0&&selectedProduct.compatible_units)||selectedProduct.compatible_units.length===0){return/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.no_compatible_units')});}return selectedProduct.compatible_units.map(compatibleUnit=>{var _selectedProduct$unit3;const unit=compatibleUnit.unit||compatibleUnit;const unitId=(unit===null||unit===void 0?void 0:unit.id)||unit;const unitName=(unit===null||unit===void 0?void 0:unit.name)||compatibleUnit.unit_name;const unitSymbol=(unit===null||unit===void 0?void 0:unit.symbol)||compatibleUnit.unit_symbol;const actualUnitId=typeof unitId==='number'?unitId:(unit===null||unit===void 0?void 0:unit.id)||unitId;if(!unitName||!unitSymbol){return null;}const unitCostData=selectedProduct===null||selectedProduct===void 0?void 0:(_selectedProduct$unit3=selectedProduct.unit_costs)===null||_selectedProduct$unit3===void 0?void 0:_selectedProduct$unit3.find(uc=>uc.id===actualUnitId);const unitCost=unitCostData?unitCostData.cost_price:0;return/*#__PURE__*/_jsxs(\"option\",{value:actualUnitId,children:[unitName,\" (\",unitSymbol,\") - \",parseFloat(unitCost).toFixed(2),\" MGA\"]},actualUnitId);}).filter(Boolean);})()]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-cost\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"0.01\",value:item.unit_cost,onChange:e=>handleItemChange(index,'unit_cost',e.target.value),required:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-tax\",children:/*#__PURE__*/_jsxs(\"select\",{value:item.tax_class_id,onChange:e=>handleItemChange(index,'tax_class_id',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:t('modals.no_tax')}),taxClasses.map(taxClass=>/*#__PURE__*/_jsxs(\"option\",{value:taxClass.id,children:[taxClass.name,\" (\",taxClass.tax_rate,\"%)\"]},taxClass.id))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-total\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"total-display\",children:[calculateItemTotal(item).toFixed(2),\" MGA\",item.tax_class_id&&/*#__PURE__*/_jsxs(\"span\",{className:\"tax-amount\",children:[\"+ \",calculateTaxAmount(item).toFixed(2),\" MGA \",t('modals.tax')]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-button\",onClick:()=>removeItem(index),children:t('modals.remove')})})]},index);})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('modals.order_items')}),/*#__PURE__*/_jsxs(\"div\",{className:\"items-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:t('modals.search_products'),value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"product-search-input\"})}),/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:addItem,size:isMobile?\"small\":\"medium\",children:isMobile?'+':t('modals.add_item')})]})]})]}),formData.items.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"totals-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"totals-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"totals-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.subtotal'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[totals.subtotal.toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"totals-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.tax_amount'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[totals.taxAmount.toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"totals-row total-row\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[t('modals.total_amount'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[totals.total.toFixed(2),\" MGA\"]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-left\",children:/*#__PURE__*/_jsx(PrintButton,{data:formData,title:t('titles.purchase_order'),type:\"purchase_order\",printText:isMobile?\"📄\":t('buttons.print_order'),validateText:t('modals.validate_print'),showValidateOption:true,onValidate:handleSubmit,disabled:!formData.supplier_id||formData.items.length===0,size:isMobile?\"small\":\"medium\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-right\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"secondary\",onClick:onClose,size:isMobile?\"small\":\"medium\",fullWidth:isMobile,children:t('modals.cancel')}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",onClick:handleSubmit,disabled:loading||!formData.supplier_id||formData.items.length===0,size:isMobile?\"small\":\"medium\",fullWidth:isMobile,children:loading?t('modals.creating'):t('modals.create_purchase_order')})]})]})]})});};export default PurchaseOrderModal;// import React, { useState, useEffect } from 'react';\n// import { useTranslation } from 'react-i18next';\n// import { useApi } from '../hooks/useApi';\n// import Button from './Button';\n// import PrintButton from './PrintButton';\n// import './PurchaseOrderModal.css';\n// const PurchaseOrderModal = ({ suppliers, onClose, onSubmit }) => {\n//   const { t } = useTranslation();\n//   const [isMobile, setIsMobile] = useState(false);\n//   // Helper function to get today's date in YYYY-MM-DD format\n//   const getTodayDate = () => {\n//     const today = new Date();\n//     return today.toISOString().split('T')[0];\n//   };\n//   const [formData, setFormData] = useState({\n//     supplier_id: '',\n//     expected_delivery_date: getTodayDate(),\n//     notes: '',\n//     items: []\n//   });\n//   const [products, setProducts] = useState([]);\n//   const [taxClasses, setTaxClasses] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const api = useApi();\n//   useEffect(() => {\n//     const checkScreenSize = () => {\n//       setIsMobile(window.innerWidth < 768);\n//     };\n//     checkScreenSize();\n//     window.addEventListener('resize', checkScreenSize);\n//     fetchProductsAndTaxes();\n//     return () => window.removeEventListener('resize', checkScreenSize);\n//   }, []); // eslint-disable-line react-hooks/exhaustive-deps\n//   const fetchProductsAndTaxes = async () => {\n//     try {\n//       const [productsResponse, taxResponse] = await Promise.all([\n//         api.get('/api/products/'),\n//         api.get('/api/products/tax-classes/')\n//       ]);\n//       const data = productsResponse.data;\n//       const products = data.results || data;\n//       // Fetch unit costs for each product\n//       const productsWithUnitCosts = await Promise.all(\n//         products.map(async (product) => {\n//           try {\n//             const unitCostsResponse = await api.get(`/api/products/${product.id}/unit-costs/`);\n//             return {\n//               ...product,\n//               unit_costs: unitCostsResponse.data.unit_costs || []\n//             };\n//           } catch (error) {\n//             console.error(`Error fetching unit costs for product ${product.id}:`, error);\n//             return {\n//               ...product,\n//               unit_costs: []\n//             };\n//           }\n//         })\n//       );\n//       setProducts(productsWithUnitCosts);\n//       const taxData = taxResponse.data;\n//       setTaxClasses(taxData.results || taxData);\n//     } catch (error) {\n//       console.error('Error fetching products and tax classes:', error);\n//     }\n//   };\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n//   const addItem = () => {\n//     setFormData(prev => ({\n//       ...prev,\n//       items: [...prev.items, {\n//         product_id: '',\n//         quantity_ordered: 1,\n//         unit_id: '',\n//         unit_cost: 0,\n//         tax_class_id: '',\n//         notes: ''\n//       }]\n//     }));\n//   };\n//   const removeItem = (index) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       items: prev.items.filter((_, i) => i !== index)\n//     }));\n//   };\n//   const handleItemChange = (index, field, value) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       items: prev.items.map((item, i) => {\n//         if (i === index) {\n//           const updatedItem = { ...item, [field]: value };\n//           // When product is selected, set default unit and unit cost\n//           if (field === 'product_id' && value) {\n//             const selectedProduct = products.find(p => p.id === parseInt(value));\n//             if (selectedProduct?.compatible_units?.length > 0) {\n//               // Find the default unit (is_default: true) or fallback to base unit\n//               let defaultUnit = selectedProduct.compatible_units.find(u => u.is_default);\n//               if (!defaultUnit) {\n//                 defaultUnit = selectedProduct.compatible_units.find(u => u.unit?.is_base_unit || u.unit_is_base);\n//               }\n//               if (!defaultUnit) {\n//                 defaultUnit = selectedProduct.compatible_units[0];\n//               }\n//               if (defaultUnit) {\n//                 // Handle both ProductUnit structure (with nested unit) and direct unit structure\n//                 const unit = defaultUnit.unit || defaultUnit;\n//                 const unitId = unit?.id || unit; // unit might be just an ID\n//                 // For compatible_units structure, unit is just the ID number\n//                 const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n//                 if (actualUnitId) {\n//                   updatedItem.unit_id = actualUnitId;\n//                   // Use the unit costs from the API response\n//                   // The unit_costs array contains the correct cost for each unit\n//                   const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n//                   if (unitCostData) {\n//                     updatedItem.unit_cost = parseFloat(unitCostData.cost_price).toFixed(2);\n//                   } else {\n//                     // Fallback to the stored cost_price if unit_costs not available\n//                     updatedItem.unit_cost = parseFloat(selectedProduct?.cost_price || 0).toFixed(2);\n//                   }\n//                 }\n//               }\n//             }\n//           }\n//           return updatedItem;\n//         }\n//         return item;\n//       })\n//     }));\n//   };\n//   const handleSubmit = async (e) => {\n//     if (e && e.preventDefault) {\n//       e.preventDefault();\n//     }\n//     if (!formData.supplier_id || formData.items.length === 0) {\n//       alert(t('modals.please_select_supplier_add_item'));\n//       return;\n//     }\n//     // Validate that all items have required fields\n//     const invalidItems = formData.items.filter(item => \n//       !item.product_id || !item.quantity_ordered || !item.unit_cost\n//     );\n//     if (invalidItems.length > 0) {\n//       alert('Please fill in all required fields for all items (product, quantity, unit cost)');\n//       return;\n//     }\n//     // Convert data types to ensure proper API format\n//     const processedData = {\n//       ...formData,\n//       supplier_id: parseInt(formData.supplier_id),\n//       items: formData.items.map(item => ({\n//         ...item,\n//         product_id: parseInt(item.product_id),\n//         quantity_ordered: parseFloat(item.quantity_ordered),\n//         unit_id: item.unit_id ? parseInt(item.unit_id) : null,\n//         unit_cost: parseFloat(item.unit_cost),\n//         tax_class_id: item.tax_class_id ? parseInt(item.tax_class_id) : null\n//       }))\n//     };\n//     setLoading(true);\n//     try {\n//       await onSubmit(processedData);\n//     } catch (error) {\n//       console.error('Error submitting purchase order:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   const calculateItemTotal = (item) => {\n//     const quantity = parseFloat(item.quantity_ordered) || 0;\n//     const unitCost = parseFloat(item.unit_cost) || 0;\n//     // Since unit cost is now the cost for the selected unit, just multiply by quantity\n//     return quantity * unitCost;\n//   };\n//   const calculateTaxAmount = (item) => {\n//     const lineTotal = calculateItemTotal(item);\n//     const taxClass = taxClasses.find(tc => tc.id === parseInt(item.tax_class_id));\n//     if (taxClass) {\n//       return lineTotal * (taxClass.tax_rate / 100);\n//     }\n//     return 0;\n//   };\n//   const calculateTotals = () => {\n//     const subtotal = formData.items.reduce((sum, item) => sum + calculateItemTotal(item), 0);\n//     const taxAmount = formData.items.reduce((sum, item) => sum + calculateTaxAmount(item), 0);\n//     const total = subtotal + taxAmount;\n//     return { subtotal, taxAmount, total };\n//   };\n//   const totals = calculateTotals();\n//   // Mobile Item Card Component\n//   const MobileItemCard = ({ item, index }) => {\n//     const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n//     return (\n//       <div className=\"mobile-item-card\">\n//         <div className=\"mobile-item-header\">\n//           <div className=\"item-product\">\n//             <label>{t('common.name')} *</label>\n//             <select\n//               value={item.product_id}\n//               onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n//               required\n//             >\n//               <option value=\"\">{t('modals.select_product')}</option>\n//               {products.map(product => (\n//                 <option key={product.id} value={product.id}>\n//                   {product.name} ({product.sku})\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <button\n//             type=\"button\"\n//             className=\"remove-button\"\n//             onClick={() => removeItem(index)}\n//           >\n//             {t('modals.remove')}\n//           </button>\n//         </div>\n//         <div className=\"mobile-item-details\">\n//           <div className=\"detail-row\">\n//             <div className=\"field-group\">\n//               <label>{t('common.quantity')} *</label>\n//               <input\n//                 type=\"number\"\n//                 min=\"1\"\n//                 value={item.quantity_ordered}\n//                 onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"field-group\">\n//               <label>{t('modals.unit_cost')} *</label>\n//               <input\n//                 type=\"number\"\n//                 min=\"0\"\n//                 step=\"0.01\"\n//                 value={item.unit_cost}\n//                 onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n//                 required\n//               />\n//             </div>\n//           </div>\n//           <div className=\"field-group full-width\">\n//             <label>{t('common.unit')}</label>\n//             <select\n//               value={item.unit_id}\n//               onChange={(e) => {\n//                 const unitId = e.target.value;\n//                 handleItemChange(index, 'unit_id', unitId);\n//                 // Auto-set unit cost based on selected unit's cost from API\n//                 if (unitId) {\n//                   const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n//                   if (selectedProduct?.unit_costs) {\n//                     const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n//                     if (unitCostData) {\n//                       handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n//                     }\n//                   }\n//                 }\n//               }}\n//             >\n//               <option value=\"\">{t('modals.select_unit')}</option>\n//               {(() => {\n//                 if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n//                   return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n//                 }\n//                 return selectedProduct.compatible_units.map(compatibleUnit => {\n//                   const unit = compatibleUnit.unit || compatibleUnit;\n//                   const unitId = unit?.id || unit;\n//                   const unitName = unit?.name || compatibleUnit.unit_name;\n//                   const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n//                   const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n//                   if (!unitName || !unitSymbol) {\n//                     console.warn('Invalid unit data:', compatibleUnit);\n//                     return null;\n//                   }\n//                   const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n//                   const unitCost = unitCostData ? unitCostData.cost_price : 0;\n//                   return (\n//                     <option key={actualUnitId} value={actualUnitId}>\n//                       {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n//                     </option>\n//                   );\n//                 }).filter(Boolean);\n//               })()}\n//             </select>\n//           </div>\n//           <div className=\"field-group full-width\">\n//             <label>{t('modals.tax_class')}</label>\n//             <select\n//               value={item.tax_class_id}\n//               onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n//             >\n//               <option value=\"\">{t('modals.no_tax')}</option>\n//               {taxClasses.map(taxClass => (\n//                 <option key={taxClass.id} value={taxClass.id}>\n//                   {taxClass.name} ({taxClass.tax_rate}%)\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <div className=\"mobile-item-totals\">\n//             <div className=\"total-line\">\n//               <span>{t('modals.line_total')}:</span>\n//               <span>{calculateItemTotal(item).toFixed(2)} MGA</span>\n//             </div>\n//             {item.tax_class_id && (\n//               <div className=\"total-line tax-line\">\n//                 <span>{t('modals.tax_amount')}:</span>\n//                 <span>+ {calculateTaxAmount(item).toFixed(2)} MGA</span>\n//               </div>\n//             )}\n//             <div className=\"total-line grand-total\">\n//               <span>{t('modals.total')}:</span>\n//               <span>{(calculateItemTotal(item) + calculateTaxAmount(item)).toFixed(2)} MGA</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   };\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className={`modal-content purchase-order-modal ${isMobile ? 'mobile-modal' : ''}`}>\n//         <div className=\"modal-header\">\n//           <h2>{t('modals.create_purchase_order')}</h2>\n//           <button className=\"close-button\" onClick={onClose}>×</button>\n//         </div>\n//         <form onSubmit={handleSubmit} className=\"modal-body\">\n//           <div className=\"form-section\">\n//             <h3>{t('modals.order_details')}</h3>\n//             <div className={`form-layout ${isMobile ? 'mobile-layout' : 'desktop-layout'}`}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"supplier_id\">{t('modals.supplier')} *</label>\n//                 <select\n//                   id=\"supplier_id\"\n//                   name=\"supplier_id\"\n//                   value={formData.supplier_id}\n//                   onChange={handleInputChange}\n//                   required\n//                 >\n//                   <option value=\"\">{t('modals.select_supplier')}</option>\n//                   {suppliers.map(supplier => (\n//                     <option key={supplier.id} value={supplier.id}>\n//                       {supplier.name}\n//                     </option>\n//                   ))}\n//                 </select>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"expected_delivery_date\">{t('modals.expected_delivery_date')}</label>\n//                 <input\n//                   type=\"date\"\n//                   id=\"expected_delivery_date\"\n//                   name=\"expected_delivery_date\"\n//                   value={formData.expected_delivery_date}\n//                   onChange={handleInputChange}\n//                 />\n//               </div>\n//             </div>\n//             <div className=\"form-group full-width\">\n//               <label htmlFor=\"notes\">{t('common.notes')}</label>\n//               <textarea\n//                 id=\"notes\"\n//                 name=\"notes\"\n//                 value={formData.notes}\n//                 onChange={handleInputChange}\n//                 rows={isMobile ? 2 : 3}\n//                 placeholder=\"Additional notes for this purchase order...\"\n//               />\n//             </div>\n//           </div>\n//           <div className=\"form-section\">\n//             {formData.items.length === 0 ? (\n//               <div className=\"empty-items\">\n//                 <p>{t('modals.no_items_added_yet')}</p>\n//               </div>\n//             ) : isMobile ? (\n//               // Mobile Items List\n//               <div className=\"mobile-items-list\">\n//                 {formData.items.map((item, index) => (\n//                   <MobileItemCard key={index} item={item} index={index} />\n//                 ))}\n//               </div>\n//             ) : (\n//               // Desktop Items Table\n//               <div className=\"desktop-items-table\">\n//                 <div className=\"items-header\">\n//                   <span>{t('common.name')}</span>\n//                   <span>{t('common.quantity')}</span>\n//                   <span>{t('common.unit')}</span>\n//                   <span>{t('modals.unit_cost')}</span>\n//                   <span>{t('modals.tax_class')}</span>\n//                   <span>{t('modals.line_total')}</span>\n//                   <span>{t('actions.actions')}</span>\n//                 </div>\n//                 {formData.items.map((item, index) => {\n//                   const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n//                   return (\n//                     <div key={index} className=\"item-row\">\n//                       <div className=\"item-product\">\n//                         <select\n//                           value={item.product_id}\n//                           onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n//                           required\n//                         >\n//                           <option value=\"\">{t('modals.select_product')}</option>\n//                           {products.map(product => (\n//                             <option key={product.id} value={product.id}>\n//                               {product.name} ({product.sku})\n//                             </option>\n//                           ))}\n//                         </select>\n//                       </div>\n//                       <div className=\"item-quantity\">\n//                         <input\n//                           type=\"number\"\n//                           min=\"1\"\n//                           value={item.quantity_ordered}\n//                           onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n//                           required\n//                         />\n//                       </div>\n//                       <div className=\"item-unit\">\n//                         <select\n//                           value={item.unit_id}\n//                           onChange={(e) => {\n//                             const unitId = e.target.value;\n//                             handleItemChange(index, 'unit_id', unitId);\n//                             if (unitId) {\n//                               const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n//                               if (selectedProduct?.unit_costs) {\n//                                 const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n//                                 if (unitCostData) {\n//                                   handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n//                                 }\n//                               }\n//                             }\n//                           }}\n//                         >\n//                           <option value=\"\">{t('modals.select_unit')}</option>\n//                           {(() => {\n//                             if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n//                               return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n//                             }\n//                             return selectedProduct.compatible_units.map(compatibleUnit => {\n//                               const unit = compatibleUnit.unit || compatibleUnit;\n//                               const unitId = unit?.id || unit;\n//                               const unitName = unit?.name || compatibleUnit.unit_name;\n//                               const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n//                               const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n//                               if (!unitName || !unitSymbol) {\n//                                 return null;\n//                               }\n//                               const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n//                               const unitCost = unitCostData ? unitCostData.cost_price : 0;\n//                               return (\n//                                 <option key={actualUnitId} value={actualUnitId}>\n//                                   {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n//                                 </option>\n//                               );\n//                             }).filter(Boolean);\n//                           })()}\n//                         </select>\n//                       </div>\n//                       <div className=\"item-cost\">\n//                         <input\n//                           type=\"number\"\n//                           min=\"0\"\n//                           step=\"0.01\"\n//                           value={item.unit_cost}\n//                           onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n//                           required\n//                         />\n//                       </div>\n//                       <div className=\"item-tax\">\n//                         <select\n//                           value={item.tax_class_id}\n//                           onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n//                         >\n//                           <option value=\"\">{t('modals.no_tax')}</option>\n//                           {taxClasses.map(taxClass => (\n//                             <option key={taxClass.id} value={taxClass.id}>\n//                               {taxClass.name} ({taxClass.tax_rate}%)\n//                             </option>\n//                           ))}\n//                         </select>\n//                       </div>\n//                       <div className=\"item-total\">\n//                         <div className=\"total-display\">\n//                           {calculateItemTotal(item).toFixed(2)} MGA\n//                           {item.tax_class_id && (\n//                             <span className=\"tax-amount\">\n//                               + {calculateTaxAmount(item).toFixed(2)} MGA {t('modals.tax')}\n//                             </span>\n//                           )}\n//                         </div>\n//                       </div>\n//                       <div className=\"item-actions\">\n//                         <button\n//                           type=\"button\"\n//                           className=\"remove-button\"\n//                           onClick={() => removeItem(index)}\n//                         >\n//                           {t('modals.remove')}\n//                         </button>\n//                       </div>\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//             <div className=\"section-header\">\n//               <h3>{t('modals.order_items')}</h3>\n//               <Button type=\"button\" variant=\"secondary\" onClick={addItem} size={isMobile ? \"small\" : \"medium\"}>\n//                 {isMobile ? '+' : t('modals.add_item')}\n//               </Button>\n//             </div>\n//           </div>\n//           {formData.items.length > 0 && (\n//             <div className=\"totals-section\">\n//               <div className=\"totals-grid\">\n//                 <div className=\"totals-row\">\n//                   <span>{t('modals.subtotal')}:</span>\n//                   <span>{totals.subtotal.toFixed(2)} MGA</span>\n//                 </div>\n//                 <div className=\"totals-row\">\n//                   <span>{t('modals.tax_amount')}:</span>\n//                   <span>{totals.taxAmount.toFixed(2)} MGA</span>\n//                 </div>\n//                 <div className=\"totals-row total-row\">\n//                   <span>{t('modals.total_amount')}:</span>\n//                   <span>{totals.total.toFixed(2)} MGA</span>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n//         </form>\n//         <div className=\"modal-footer\">\n//           <div className=\"footer-left\">\n//             <PrintButton\n//               data={formData}\n//               title={t('titles.purchase_order')}\n//               type=\"purchase_order\"\n//               printText={isMobile ? \"📄\" : t('buttons.print_order')}\n//               validateText={t('modals.validate_print')}\n//               showValidateOption={true}\n//               onValidate={handleSubmit}\n//               disabled={!formData.supplier_id || formData.items.length === 0}\n//               size={isMobile ? \"small\" : \"medium\"}\n//             />\n//           </div>\n//           <div className=\"footer-right\">\n//             <Button \n//               type=\"button\" \n//               variant=\"secondary\" \n//               onClick={onClose}\n//               size={isMobile ? \"small\" : \"medium\"}\n//               fullWidth={isMobile}\n//             >\n//               {t('modals.cancel')}\n//             </Button>\n//             <Button\n//               type=\"submit\"\n//               variant=\"primary\"\n//               onClick={handleSubmit}\n//               disabled={loading || !formData.supplier_id || formData.items.length === 0}\n//               size={isMobile ? \"small\" : \"medium\"}\n//               fullWidth={isMobile}\n//             >\n//               {loading ? t('modals.creating') : t('modals.create_purchase_order')}\n//             </Button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default PurchaseOrderModal;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useApi","Button","PrintButton","jsxs","_jsxs","jsx","_jsx","PurchaseOrderModal","_ref","suppliers","onClose","onSubmit","t","isMobile","setIsMobile","getTodayDate","today","Date","toISOString","split","formData","setFormData","supplier_id","expected_delivery_date","notes","items","products","setProducts","filteredProducts","setFilteredProducts","searchTerm","setSearchTerm","taxClasses","setTaxClasses","loading","setLoading","api","checkScreenSize","window","innerWidth","addEventListener","fetchProductsAndTaxes","removeEventListener","trim","filtered","filter","product","name","toLowerCase","includes","sku","allProducts","nextUrl","productsResponse","get","data","pageProducts","results","length","next","taxResponse","productsWithUnitCosts","Promise","all","map","unitCostsResponse","concat","id","_objectSpread","unit_costs","error","console","taxData","handleInputChange","e","value","target","prev","addItem","product_id","quantity_ordered","unit_id","unit_cost","tax_class_id","removeItem","index","_","i","handleItemChange","field","item","updatedItem","_selectedProduct$comp","selectedProduct","find","p","parseInt","compatible_units","defaultUnit","u","is_default","_u$unit","unit","is_base_unit","unit_is_base","unitId","actualUnitId","_selectedProduct$unit","unitCostData","uc","parseFloat","cost_price","toFixed","handleSubmit","preventDefault","alert","invalidItems","processedData","calculateItemTotal","quantity","unitCost","calculateTaxAmount","lineTotal","taxClass","tc","tax_rate","calculateTotals","subtotal","reduce","sum","taxAmount","total","totals","MobileItemCard","_ref2","className","children","onChange","required","type","onClick","min","step","compatibleUnit","_selectedProduct$unit2","unitName","unit_name","unitSymbol","symbol","unit_symbol","warn","Boolean","htmlFor","supplier","rows","placeholder","_selectedProduct$unit3","variant","size","title","printText","validateText","showValidateOption","onValidate","disabled","fullWidth"],"sources":["/home/el-ifran/WareHouse_Manager/elif-orders-app/beverage_management_system/src/components/PurchaseOrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useApi } from '../hooks/useApi';\nimport Button from './Button';\nimport PrintButton from './PrintButton';\nimport './PurchaseOrderModal.css';\n\nconst PurchaseOrderModal = ({ suppliers, onClose, onSubmit }) => {\n  const { t } = useTranslation();\n  const [isMobile, setIsMobile] = useState(false);\n  \n  // Helper function to get today's date in YYYY-MM-DD format\n  const getTodayDate = () => {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  };\n  \n  const [formData, setFormData] = useState({\n    supplier_id: '',\n    expected_delivery_date: getTodayDate(),\n    notes: '',\n    items: []\n  });\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const api = useApi();\n\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkScreenSize();\n    window.addEventListener('resize', checkScreenSize);\n    \n    fetchProductsAndTaxes();\n    \n    return () => window.removeEventListener('resize', checkScreenSize);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Filter products based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredProducts(products);\n    } else {\n      const filtered = products.filter(product => \n        product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        product.sku.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredProducts(filtered);\n    }\n  }, [searchTerm, products]);\n\n  const fetchProductsAndTaxes = async () => {\n    try {\n      let allProducts = [];\n      let nextUrl = '/api/products/';\n      \n      // Fetch all products by paginating through all pages\n      while (nextUrl) {\n        const productsResponse = await api.get(nextUrl);\n        const data = productsResponse.data;\n        const pageProducts = data.results || data;\n        \n        // If it's the first page and there's no pagination (no results property), break\n        if (!data.results && allProducts.length > 0) {\n          break;\n        }\n        \n        allProducts = [...allProducts, ...pageProducts];\n        \n        // Check if there's a next page\n        nextUrl = data.next;\n        \n        // If the API doesn't use standard pagination, break\n        if (!data.next && !data.results) {\n          break;\n        }\n      }\n      \n      // Fetch tax classes\n      const taxResponse = await api.get('/api/products/tax-classes/');\n      \n      // Fetch unit costs for each product\n      const productsWithUnitCosts = await Promise.all(\n        allProducts.map(async (product) => {\n          try {\n            const unitCostsResponse = await api.get(`/api/products/${product.id}/unit-costs/`);\n            return {\n              ...product,\n              unit_costs: unitCostsResponse.data.unit_costs || []\n            };\n          } catch (error) {\n            console.error(`Error fetching unit costs for product ${product.id}:`, error);\n            return {\n              ...product,\n              unit_costs: []\n            };\n          }\n        })\n      );\n      \n      setProducts(productsWithUnitCosts);\n      setFilteredProducts(productsWithUnitCosts);\n      \n      const taxData = taxResponse.data;\n      setTaxClasses(taxData.results || taxData);\n    } catch (error) {\n      console.error('Error fetching products and tax classes:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const addItem = () => {\n    setFormData(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        product_id: '',\n        quantity_ordered: 1,\n        unit_id: '',\n        unit_cost: 0,\n        tax_class_id: '',\n        notes: ''\n      }]\n    }));\n  };\n\n  const removeItem = (index) => {\n    setFormData(prev => ({\n      ...prev,\n      items: prev.items.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleItemChange = (index, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      items: prev.items.map((item, i) => {\n        if (i === index) {\n          const updatedItem = { ...item, [field]: value };\n          \n          // When product is selected, set default unit and unit cost\n          if (field === 'product_id' && value) {\n            const selectedProduct = products.find(p => p.id === parseInt(value));\n            if (selectedProduct?.compatible_units?.length > 0) {\n              // Find the default unit (is_default: true) or fallback to base unit\n              let defaultUnit = selectedProduct.compatible_units.find(u => u.is_default);\n              if (!defaultUnit) {\n                defaultUnit = selectedProduct.compatible_units.find(u => u.unit?.is_base_unit || u.unit_is_base);\n              }\n              if (!defaultUnit) {\n                defaultUnit = selectedProduct.compatible_units[0];\n              }\n              \n              if (defaultUnit) {\n                // Handle both ProductUnit structure (with nested unit) and direct unit structure\n                const unit = defaultUnit.unit || defaultUnit;\n                const unitId = unit?.id || unit; // unit might be just an ID\n                \n                // For compatible_units structure, unit is just the ID number\n                const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                \n                if (actualUnitId) {\n                  updatedItem.unit_id = actualUnitId;\n                  \n                  // Use the unit costs from the API response\n                  // The unit_costs array contains the correct cost for each unit\n                  const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n                  if (unitCostData) {\n                    updatedItem.unit_cost = parseFloat(unitCostData.cost_price).toFixed(2);\n                  } else {\n                    // Fallback to the stored cost_price if unit_costs not available\n                    updatedItem.unit_cost = parseFloat(selectedProduct?.cost_price || 0).toFixed(2);\n                  }\n                }\n              }\n            }\n          }\n          \n          return updatedItem;\n        }\n        return item;\n      })\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n    if (!formData.supplier_id || formData.items.length === 0) {\n      alert(t('modals.please_select_supplier_add_item'));\n      return;\n    }\n\n    // Validate that all items have required fields\n    const invalidItems = formData.items.filter(item => \n      !item.product_id || !item.quantity_ordered || !item.unit_cost\n    );\n    \n    if (invalidItems.length > 0) {\n      alert('Please fill in all required fields for all items (product, quantity, unit cost)');\n      return;\n    }\n\n    // Convert data types to ensure proper API format\n    const processedData = {\n      ...formData,\n      supplier_id: parseInt(formData.supplier_id),\n      items: formData.items.map(item => ({\n        ...item,\n        product_id: parseInt(item.product_id),\n        quantity_ordered: parseFloat(item.quantity_ordered),\n        unit_id: item.unit_id ? parseInt(item.unit_id) : null,\n        unit_cost: parseFloat(item.unit_cost),\n        tax_class_id: item.tax_class_id ? parseInt(item.tax_class_id) : null\n      }))\n    };\n\n    setLoading(true);\n    try {\n      await onSubmit(processedData);\n    } catch (error) {\n      console.error('Error submitting purchase order:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateItemTotal = (item) => {\n    const quantity = parseFloat(item.quantity_ordered) || 0;\n    const unitCost = parseFloat(item.unit_cost) || 0;\n    \n    // Since unit cost is now the cost for the selected unit, just multiply by quantity\n    return quantity * unitCost;\n  };\n\n  const calculateTaxAmount = (item) => {\n    const lineTotal = calculateItemTotal(item);\n    const taxClass = taxClasses.find(tc => tc.id === parseInt(item.tax_class_id));\n    if (taxClass) {\n      return lineTotal * (taxClass.tax_rate / 100);\n    }\n    return 0;\n  };\n\n  const calculateTotals = () => {\n    const subtotal = formData.items.reduce((sum, item) => sum + calculateItemTotal(item), 0);\n    const taxAmount = formData.items.reduce((sum, item) => sum + calculateTaxAmount(item), 0);\n    const total = subtotal + taxAmount;\n    \n    return { subtotal, taxAmount, total };\n  };\n\n  const totals = calculateTotals();\n\n  // Mobile Item Card Component\n  const MobileItemCard = ({ item, index }) => {\n    const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n    \n    return (\n      <div className=\"mobile-item-card\">\n        <div className=\"mobile-item-header\">\n          <div className=\"item-product\">\n            <label>{t('common.name')} *</label>\n            <select\n              value={item.product_id}\n              onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n              required\n            >\n              <option value=\"\">{t('modals.select_product')}</option>\n              {filteredProducts.map(product => (\n                <option key={product.id} value={product.id}>\n                  {product.name} ({product.sku})\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"button\"\n            className=\"remove-button\"\n            onClick={() => removeItem(index)}\n          >\n            {t('modals.remove')}\n          </button>\n        </div>\n        \n        <div className=\"mobile-item-details\">\n          <div className=\"detail-row\">\n            <div className=\"field-group\">\n              <label>{t('common.quantity')} *</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                value={item.quantity_ordered}\n                onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"field-group\">\n              <label>{t('modals.unit_cost')} *</label>\n              <input\n                type=\"number\"\n                min=\"0\"\n                step=\"0.01\"\n                value={item.unit_cost}\n                onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n                required\n              />\n            </div>\n          </div>\n          \n          <div className=\"field-group full-width\">\n            <label>{t('common.unit')}</label>\n            <select\n              value={item.unit_id}\n              onChange={(e) => {\n                const unitId = e.target.value;\n                handleItemChange(index, 'unit_id', unitId);\n                \n                // Auto-set unit cost based on selected unit's cost from API\n                if (unitId) {\n                  const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n                  if (selectedProduct?.unit_costs) {\n                    const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n                    if (unitCostData) {\n                      handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n                    }\n                  }\n                }\n              }}\n            >\n              <option value=\"\">{t('modals.select_unit')}</option>\n              {(() => {\n                if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n                  return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n                }\n                \n                return selectedProduct.compatible_units.map(compatibleUnit => {\n                  const unit = compatibleUnit.unit || compatibleUnit;\n                  const unitId = unit?.id || unit;\n                  const unitName = unit?.name || compatibleUnit.unit_name;\n                  const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n                  \n                  const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                  \n                  if (!unitName || !unitSymbol) {\n                    console.warn('Invalid unit data:', compatibleUnit);\n                    return null;\n                  }\n                  \n                  const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n                  const unitCost = unitCostData ? unitCostData.cost_price : 0;\n                  \n                  return (\n                    <option key={actualUnitId} value={actualUnitId}>\n                      {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n                    </option>\n                  );\n                }).filter(Boolean);\n              })()}\n            </select>\n          </div>\n          \n          <div className=\"field-group full-width\">\n            <label>{t('modals.tax_class')}</label>\n            <select\n              value={item.tax_class_id}\n              onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n            >\n              <option value=\"\">{t('modals.no_tax')}</option>\n              {taxClasses.map(taxClass => (\n                <option key={taxClass.id} value={taxClass.id}>\n                  {taxClass.name} ({taxClass.tax_rate}%)\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"mobile-item-totals\">\n            <div className=\"total-line\">\n              <span>{t('modals.line_total')}:</span>\n              <span>{calculateItemTotal(item).toFixed(2)} MGA</span>\n            </div>\n            {item.tax_class_id && (\n              <div className=\"total-line tax-line\">\n                <span>{t('modals.tax_amount')}:</span>\n                <span>+ {calculateTaxAmount(item).toFixed(2)} MGA</span>\n              </div>\n            )}\n            <div className=\"total-line grand-total\">\n              <span>{t('modals.total')}:</span>\n              <span>{(calculateItemTotal(item) + calculateTaxAmount(item)).toFixed(2)} MGA</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className={`modal-content purchase-order-modal ${isMobile ? 'mobile-modal' : ''}`}>\n        <div className=\"modal-header\">\n          <h2>{t('modals.create_purchase_order')}</h2>\n          <button className=\"close-button\" onClick={onClose}>×</button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"modal-body\">\n          <div className=\"form-section\">\n            <h3>{t('modals.order_details')}</h3>\n            <div className={`form-layout ${isMobile ? 'mobile-layout' : 'desktop-layout'}`}>\n              <div className=\"form-group\">\n                <label htmlFor=\"supplier_id\">{t('modals.supplier')} *</label>\n                <select\n                  id=\"supplier_id\"\n                  name=\"supplier_id\"\n                  value={formData.supplier_id}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">{t('modals.select_supplier')}</option>\n                  {suppliers.map(supplier => (\n                    <option key={supplier.id} value={supplier.id}>\n                      {supplier.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"expected_delivery_date\">{t('modals.expected_delivery_date')}</label>\n                <input\n                  type=\"date\"\n                  id=\"expected_delivery_date\"\n                  name=\"expected_delivery_date\"\n                  value={formData.expected_delivery_date}\n                  onChange={handleInputChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group full-width\">\n              <label htmlFor=\"notes\">{t('common.notes')}</label>\n              <textarea\n                id=\"notes\"\n                name=\"notes\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows={isMobile ? 2 : 3}\n                placeholder=\"Additional notes for this purchase order...\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            {formData.items.length === 0 ? (\n              <div className=\"empty-items\">\n                <p>{t('modals.no_items_added_yet')}</p>\n              </div>\n            ) : isMobile ? (\n              // Mobile Items List\n              <div className=\"mobile-items-list\">\n                {formData.items.map((item, index) => (\n                  <MobileItemCard key={index} item={item} index={index} />\n                ))}\n              </div>\n            ) : (\n              // Desktop Items Table\n              <div className=\"desktop-items-table\">\n                <div className=\"items-header\">\n                  <span>{t('common.name')}</span>\n                  <span>{t('common.quantity')}</span>\n                  <span>{t('common.unit')}</span>\n                  <span>{t('modals.unit_cost')}</span>\n                  <span>{t('modals.tax_class')}</span>\n                  <span>{t('modals.line_total')}</span>\n                  <span>{t('actions.actions')}</span>\n                </div>\n                {formData.items.map((item, index) => {\n                  const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n                  \n                  return (\n                    <div key={index} className=\"item-row\">\n                      <div className=\"item-product\">\n                        <select\n                          value={item.product_id}\n                          onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n                          required\n                        >\n                          <option value=\"\">{t('modals.select_product')}</option>\n                          {filteredProducts.map(product => (\n                            <option key={product.id} value={product.id}>\n                              {product.name} ({product.sku})\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"item-quantity\">\n                        <input\n                          type=\"number\"\n                          min=\"1\"\n                          value={item.quantity_ordered}\n                          onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n                          required\n                        />\n                      </div>\n                      <div className=\"item-unit\">\n                        <select\n                          value={item.unit_id}\n                          onChange={(e) => {\n                            const unitId = e.target.value;\n                            handleItemChange(index, 'unit_id', unitId);\n                            \n                            if (unitId) {\n                              const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n                              if (selectedProduct?.unit_costs) {\n                                const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n                                if (unitCostData) {\n                                  handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n                                }\n                              }\n                            }\n                          }}\n                        >\n                          <option value=\"\">{t('modals.select_unit')}</option>\n                          {(() => {\n                            if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n                              return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n                            }\n                            \n                            return selectedProduct.compatible_units.map(compatibleUnit => {\n                              const unit = compatibleUnit.unit || compatibleUnit;\n                              const unitId = unit?.id || unit;\n                              const unitName = unit?.name || compatibleUnit.unit_name;\n                              const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n                              const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                              \n                              if (!unitName || !unitSymbol) {\n                                return null;\n                              }\n                              \n                              const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n                              const unitCost = unitCostData ? unitCostData.cost_price : 0;\n                              \n                              return (\n                                <option key={actualUnitId} value={actualUnitId}>\n                                  {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n                                </option>\n                              );\n                            }).filter(Boolean);\n                          })()}\n                        </select>\n                      </div>\n                      <div className=\"item-cost\">\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          step=\"0.01\"\n                          value={item.unit_cost}\n                          onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n                          required\n                        />\n                      </div>\n                      <div className=\"item-tax\">\n                        <select\n                          value={item.tax_class_id}\n                          onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n                        >\n                          <option value=\"\">{t('modals.no_tax')}</option>\n                          {taxClasses.map(taxClass => (\n                            <option key={taxClass.id} value={taxClass.id}>\n                              {taxClass.name} ({taxClass.tax_rate}%)\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"item-total\">\n                        <div className=\"total-display\">\n                          {calculateItemTotal(item).toFixed(2)} MGA\n                          {item.tax_class_id && (\n                            <span className=\"tax-amount\">\n                              + {calculateTaxAmount(item).toFixed(2)} MGA {t('modals.tax')}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"item-actions\">\n                        <button\n                          type=\"button\"\n                          className=\"remove-button\"\n                          onClick={() => removeItem(index)}\n                        >\n                          {t('modals.remove')}\n                        </button>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n\n            <div className=\"section-header\">\n              <h3>{t('modals.order_items')}</h3>\n              <div className=\"items-controls\">\n                <div className=\"search-bar\">\n                  <input\n                    type=\"text\"\n                    placeholder={t('modals.search_products')}\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"product-search-input\"\n                  />\n                </div>\n                <Button type=\"button\" variant=\"secondary\" onClick={addItem} size={isMobile ? \"small\" : \"medium\"}>\n                  {isMobile ? '+' : t('modals.add_item')}\n                </Button>\n              </div>\n            </div>\n\n          </div>\n\n          {formData.items.length > 0 && (\n            <div className=\"totals-section\">\n              <div className=\"totals-grid\">\n                <div className=\"totals-row\">\n                  <span>{t('modals.subtotal')}:</span>\n                  <span>{totals.subtotal.toFixed(2)} MGA</span>\n                </div>\n                <div className=\"totals-row\">\n                  <span>{t('modals.tax_amount')}:</span>\n                  <span>{totals.taxAmount.toFixed(2)} MGA</span>\n                </div>\n                <div className=\"totals-row total-row\">\n                  <span>{t('modals.total_amount')}:</span>\n                  <span>{totals.total.toFixed(2)} MGA</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </form>\n\n        <div className=\"modal-footer\">\n          <div className=\"footer-left\">\n            <PrintButton\n              data={formData}\n              title={t('titles.purchase_order')}\n              type=\"purchase_order\"\n              printText={isMobile ? \"📄\" : t('buttons.print_order')}\n              validateText={t('modals.validate_print')}\n              showValidateOption={true}\n              onValidate={handleSubmit}\n              disabled={!formData.supplier_id || formData.items.length === 0}\n              size={isMobile ? \"small\" : \"medium\"}\n            />\n          </div>\n          <div className=\"footer-right\">\n            <Button \n              type=\"button\" \n              variant=\"secondary\" \n              onClick={onClose}\n              size={isMobile ? \"small\" : \"medium\"}\n              fullWidth={isMobile}\n            >\n              {t('modals.cancel')}\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              onClick={handleSubmit}\n              disabled={loading || !formData.supplier_id || formData.items.length === 0}\n              size={isMobile ? \"small\" : \"medium\"}\n              fullWidth={isMobile}\n            >\n              {loading ? t('modals.creating') : t('modals.create_purchase_order')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PurchaseOrderModal;\n// import React, { useState, useEffect } from 'react';\n// import { useTranslation } from 'react-i18next';\n// import { useApi } from '../hooks/useApi';\n// import Button from './Button';\n// import PrintButton from './PrintButton';\n// import './PurchaseOrderModal.css';\n\n// const PurchaseOrderModal = ({ suppliers, onClose, onSubmit }) => {\n//   const { t } = useTranslation();\n//   const [isMobile, setIsMobile] = useState(false);\n  \n//   // Helper function to get today's date in YYYY-MM-DD format\n//   const getTodayDate = () => {\n//     const today = new Date();\n//     return today.toISOString().split('T')[0];\n//   };\n  \n//   const [formData, setFormData] = useState({\n//     supplier_id: '',\n//     expected_delivery_date: getTodayDate(),\n//     notes: '',\n//     items: []\n//   });\n//   const [products, setProducts] = useState([]);\n//   const [taxClasses, setTaxClasses] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const api = useApi();\n\n//   useEffect(() => {\n//     const checkScreenSize = () => {\n//       setIsMobile(window.innerWidth < 768);\n//     };\n    \n//     checkScreenSize();\n//     window.addEventListener('resize', checkScreenSize);\n    \n//     fetchProductsAndTaxes();\n    \n//     return () => window.removeEventListener('resize', checkScreenSize);\n//   }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n//   const fetchProductsAndTaxes = async () => {\n//     try {\n//       const [productsResponse, taxResponse] = await Promise.all([\n//         api.get('/api/products/'),\n//         api.get('/api/products/tax-classes/')\n//       ]);\n      \n//       const data = productsResponse.data;\n//       const products = data.results || data;\n      \n//       // Fetch unit costs for each product\n//       const productsWithUnitCosts = await Promise.all(\n//         products.map(async (product) => {\n//           try {\n//             const unitCostsResponse = await api.get(`/api/products/${product.id}/unit-costs/`);\n//             return {\n//               ...product,\n//               unit_costs: unitCostsResponse.data.unit_costs || []\n//             };\n//           } catch (error) {\n//             console.error(`Error fetching unit costs for product ${product.id}:`, error);\n//             return {\n//               ...product,\n//               unit_costs: []\n//             };\n//           }\n//         })\n//       );\n      \n//       setProducts(productsWithUnitCosts);\n//       const taxData = taxResponse.data;\n//       setTaxClasses(taxData.results || taxData);\n//     } catch (error) {\n//       console.error('Error fetching products and tax classes:', error);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({\n//       ...prev,\n//       [name]: value\n//     }));\n//   };\n\n//   const addItem = () => {\n//     setFormData(prev => ({\n//       ...prev,\n//       items: [...prev.items, {\n//         product_id: '',\n//         quantity_ordered: 1,\n//         unit_id: '',\n//         unit_cost: 0,\n//         tax_class_id: '',\n//         notes: ''\n//       }]\n//     }));\n//   };\n\n//   const removeItem = (index) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       items: prev.items.filter((_, i) => i !== index)\n//     }));\n//   };\n\n//   const handleItemChange = (index, field, value) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       items: prev.items.map((item, i) => {\n//         if (i === index) {\n//           const updatedItem = { ...item, [field]: value };\n          \n//           // When product is selected, set default unit and unit cost\n//           if (field === 'product_id' && value) {\n//             const selectedProduct = products.find(p => p.id === parseInt(value));\n//             if (selectedProduct?.compatible_units?.length > 0) {\n//               // Find the default unit (is_default: true) or fallback to base unit\n//               let defaultUnit = selectedProduct.compatible_units.find(u => u.is_default);\n//               if (!defaultUnit) {\n//                 defaultUnit = selectedProduct.compatible_units.find(u => u.unit?.is_base_unit || u.unit_is_base);\n//               }\n//               if (!defaultUnit) {\n//                 defaultUnit = selectedProduct.compatible_units[0];\n//               }\n              \n//               if (defaultUnit) {\n//                 // Handle both ProductUnit structure (with nested unit) and direct unit structure\n//                 const unit = defaultUnit.unit || defaultUnit;\n//                 const unitId = unit?.id || unit; // unit might be just an ID\n                \n//                 // For compatible_units structure, unit is just the ID number\n//                 const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                \n//                 if (actualUnitId) {\n//                   updatedItem.unit_id = actualUnitId;\n                  \n//                   // Use the unit costs from the API response\n//                   // The unit_costs array contains the correct cost for each unit\n//                   const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n//                   if (unitCostData) {\n//                     updatedItem.unit_cost = parseFloat(unitCostData.cost_price).toFixed(2);\n//                   } else {\n//                     // Fallback to the stored cost_price if unit_costs not available\n//                     updatedItem.unit_cost = parseFloat(selectedProduct?.cost_price || 0).toFixed(2);\n//                   }\n//                 }\n//               }\n//             }\n//           }\n          \n//           return updatedItem;\n//         }\n//         return item;\n//       })\n//     }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     if (e && e.preventDefault) {\n//       e.preventDefault();\n//     }\n//     if (!formData.supplier_id || formData.items.length === 0) {\n//       alert(t('modals.please_select_supplier_add_item'));\n//       return;\n//     }\n\n//     // Validate that all items have required fields\n//     const invalidItems = formData.items.filter(item => \n//       !item.product_id || !item.quantity_ordered || !item.unit_cost\n//     );\n    \n//     if (invalidItems.length > 0) {\n//       alert('Please fill in all required fields for all items (product, quantity, unit cost)');\n//       return;\n//     }\n\n//     // Convert data types to ensure proper API format\n//     const processedData = {\n//       ...formData,\n//       supplier_id: parseInt(formData.supplier_id),\n//       items: formData.items.map(item => ({\n//         ...item,\n//         product_id: parseInt(item.product_id),\n//         quantity_ordered: parseFloat(item.quantity_ordered),\n//         unit_id: item.unit_id ? parseInt(item.unit_id) : null,\n//         unit_cost: parseFloat(item.unit_cost),\n//         tax_class_id: item.tax_class_id ? parseInt(item.tax_class_id) : null\n//       }))\n//     };\n\n//     setLoading(true);\n//     try {\n//       await onSubmit(processedData);\n//     } catch (error) {\n//       console.error('Error submitting purchase order:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const calculateItemTotal = (item) => {\n//     const quantity = parseFloat(item.quantity_ordered) || 0;\n//     const unitCost = parseFloat(item.unit_cost) || 0;\n    \n//     // Since unit cost is now the cost for the selected unit, just multiply by quantity\n//     return quantity * unitCost;\n//   };\n\n//   const calculateTaxAmount = (item) => {\n//     const lineTotal = calculateItemTotal(item);\n//     const taxClass = taxClasses.find(tc => tc.id === parseInt(item.tax_class_id));\n//     if (taxClass) {\n//       return lineTotal * (taxClass.tax_rate / 100);\n//     }\n//     return 0;\n//   };\n\n//   const calculateTotals = () => {\n//     const subtotal = formData.items.reduce((sum, item) => sum + calculateItemTotal(item), 0);\n//     const taxAmount = formData.items.reduce((sum, item) => sum + calculateTaxAmount(item), 0);\n//     const total = subtotal + taxAmount;\n    \n//     return { subtotal, taxAmount, total };\n//   };\n\n//   const totals = calculateTotals();\n\n//   // Mobile Item Card Component\n//   const MobileItemCard = ({ item, index }) => {\n//     const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n    \n//     return (\n//       <div className=\"mobile-item-card\">\n//         <div className=\"mobile-item-header\">\n//           <div className=\"item-product\">\n//             <label>{t('common.name')} *</label>\n//             <select\n//               value={item.product_id}\n//               onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n//               required\n//             >\n//               <option value=\"\">{t('modals.select_product')}</option>\n//               {products.map(product => (\n//                 <option key={product.id} value={product.id}>\n//                   {product.name} ({product.sku})\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <button\n//             type=\"button\"\n//             className=\"remove-button\"\n//             onClick={() => removeItem(index)}\n//           >\n//             {t('modals.remove')}\n//           </button>\n//         </div>\n        \n//         <div className=\"mobile-item-details\">\n//           <div className=\"detail-row\">\n//             <div className=\"field-group\">\n//               <label>{t('common.quantity')} *</label>\n//               <input\n//                 type=\"number\"\n//                 min=\"1\"\n//                 value={item.quantity_ordered}\n//                 onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"field-group\">\n//               <label>{t('modals.unit_cost')} *</label>\n//               <input\n//                 type=\"number\"\n//                 min=\"0\"\n//                 step=\"0.01\"\n//                 value={item.unit_cost}\n//                 onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n//                 required\n//               />\n//             </div>\n//           </div>\n          \n//           <div className=\"field-group full-width\">\n//             <label>{t('common.unit')}</label>\n//             <select\n//               value={item.unit_id}\n//               onChange={(e) => {\n//                 const unitId = e.target.value;\n//                 handleItemChange(index, 'unit_id', unitId);\n                \n//                 // Auto-set unit cost based on selected unit's cost from API\n//                 if (unitId) {\n//                   const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n//                   if (selectedProduct?.unit_costs) {\n//                     const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n//                     if (unitCostData) {\n//                       handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n//                     }\n//                   }\n//                 }\n//               }}\n//             >\n//               <option value=\"\">{t('modals.select_unit')}</option>\n//               {(() => {\n//                 if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n//                   return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n//                 }\n                \n//                 return selectedProduct.compatible_units.map(compatibleUnit => {\n//                   const unit = compatibleUnit.unit || compatibleUnit;\n//                   const unitId = unit?.id || unit;\n//                   const unitName = unit?.name || compatibleUnit.unit_name;\n//                   const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n                  \n//                   const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                  \n//                   if (!unitName || !unitSymbol) {\n//                     console.warn('Invalid unit data:', compatibleUnit);\n//                     return null;\n//                   }\n                  \n//                   const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n//                   const unitCost = unitCostData ? unitCostData.cost_price : 0;\n                  \n//                   return (\n//                     <option key={actualUnitId} value={actualUnitId}>\n//                       {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n//                     </option>\n//                   );\n//                 }).filter(Boolean);\n//               })()}\n//             </select>\n//           </div>\n          \n//           <div className=\"field-group full-width\">\n//             <label>{t('modals.tax_class')}</label>\n//             <select\n//               value={item.tax_class_id}\n//               onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n//             >\n//               <option value=\"\">{t('modals.no_tax')}</option>\n//               {taxClasses.map(taxClass => (\n//                 <option key={taxClass.id} value={taxClass.id}>\n//                   {taxClass.name} ({taxClass.tax_rate}%)\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n          \n//           <div className=\"mobile-item-totals\">\n//             <div className=\"total-line\">\n//               <span>{t('modals.line_total')}:</span>\n//               <span>{calculateItemTotal(item).toFixed(2)} MGA</span>\n//             </div>\n//             {item.tax_class_id && (\n//               <div className=\"total-line tax-line\">\n//                 <span>{t('modals.tax_amount')}:</span>\n//                 <span>+ {calculateTaxAmount(item).toFixed(2)} MGA</span>\n//               </div>\n//             )}\n//             <div className=\"total-line grand-total\">\n//               <span>{t('modals.total')}:</span>\n//               <span>{(calculateItemTotal(item) + calculateTaxAmount(item)).toFixed(2)} MGA</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className={`modal-content purchase-order-modal ${isMobile ? 'mobile-modal' : ''}`}>\n//         <div className=\"modal-header\">\n//           <h2>{t('modals.create_purchase_order')}</h2>\n//           <button className=\"close-button\" onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"modal-body\">\n//           <div className=\"form-section\">\n//             <h3>{t('modals.order_details')}</h3>\n//             <div className={`form-layout ${isMobile ? 'mobile-layout' : 'desktop-layout'}`}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"supplier_id\">{t('modals.supplier')} *</label>\n//                 <select\n//                   id=\"supplier_id\"\n//                   name=\"supplier_id\"\n//                   value={formData.supplier_id}\n//                   onChange={handleInputChange}\n//                   required\n//                 >\n//                   <option value=\"\">{t('modals.select_supplier')}</option>\n//                   {suppliers.map(supplier => (\n//                     <option key={supplier.id} value={supplier.id}>\n//                       {supplier.name}\n//                     </option>\n//                   ))}\n//                 </select>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"expected_delivery_date\">{t('modals.expected_delivery_date')}</label>\n//                 <input\n//                   type=\"date\"\n//                   id=\"expected_delivery_date\"\n//                   name=\"expected_delivery_date\"\n//                   value={formData.expected_delivery_date}\n//                   onChange={handleInputChange}\n//                 />\n//               </div>\n//             </div>\n//             <div className=\"form-group full-width\">\n//               <label htmlFor=\"notes\">{t('common.notes')}</label>\n//               <textarea\n//                 id=\"notes\"\n//                 name=\"notes\"\n//                 value={formData.notes}\n//                 onChange={handleInputChange}\n//                 rows={isMobile ? 2 : 3}\n//                 placeholder=\"Additional notes for this purchase order...\"\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"form-section\">\n\n//             {formData.items.length === 0 ? (\n//               <div className=\"empty-items\">\n//                 <p>{t('modals.no_items_added_yet')}</p>\n//               </div>\n//             ) : isMobile ? (\n//               // Mobile Items List\n//               <div className=\"mobile-items-list\">\n//                 {formData.items.map((item, index) => (\n//                   <MobileItemCard key={index} item={item} index={index} />\n//                 ))}\n//               </div>\n//             ) : (\n//               // Desktop Items Table\n//               <div className=\"desktop-items-table\">\n//                 <div className=\"items-header\">\n//                   <span>{t('common.name')}</span>\n//                   <span>{t('common.quantity')}</span>\n//                   <span>{t('common.unit')}</span>\n//                   <span>{t('modals.unit_cost')}</span>\n//                   <span>{t('modals.tax_class')}</span>\n//                   <span>{t('modals.line_total')}</span>\n//                   <span>{t('actions.actions')}</span>\n//                 </div>\n//                 {formData.items.map((item, index) => {\n//                   const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n                  \n//                   return (\n//                     <div key={index} className=\"item-row\">\n//                       <div className=\"item-product\">\n//                         <select\n//                           value={item.product_id}\n//                           onChange={(e) => handleItemChange(index, 'product_id', e.target.value)}\n//                           required\n//                         >\n//                           <option value=\"\">{t('modals.select_product')}</option>\n//                           {products.map(product => (\n//                             <option key={product.id} value={product.id}>\n//                               {product.name} ({product.sku})\n//                             </option>\n//                           ))}\n//                         </select>\n//                       </div>\n//                       <div className=\"item-quantity\">\n//                         <input\n//                           type=\"number\"\n//                           min=\"1\"\n//                           value={item.quantity_ordered}\n//                           onChange={(e) => handleItemChange(index, 'quantity_ordered', e.target.value)}\n//                           required\n//                         />\n//                       </div>\n//                       <div className=\"item-unit\">\n//                         <select\n//                           value={item.unit_id}\n//                           onChange={(e) => {\n//                             const unitId = e.target.value;\n//                             handleItemChange(index, 'unit_id', unitId);\n                            \n//                             if (unitId) {\n//                               const selectedProduct = products.find(p => p.id === parseInt(item.product_id));\n//                               if (selectedProduct?.unit_costs) {\n//                                 const unitCostData = selectedProduct.unit_costs.find(uc => uc.id === parseInt(unitId));\n//                                 if (unitCostData) {\n//                                   handleItemChange(index, 'unit_cost', parseFloat(unitCostData.cost_price).toFixed(2));\n//                                 }\n//                               }\n//                             }\n//                           }}\n//                         >\n//                           <option value=\"\">{t('modals.select_unit')}</option>\n//                           {(() => {\n//                             if (!selectedProduct?.compatible_units || selectedProduct.compatible_units.length === 0) {\n//                               return <option value=\"\">{t('modals.no_compatible_units')}</option>;\n//                             }\n                            \n//                             return selectedProduct.compatible_units.map(compatibleUnit => {\n//                               const unit = compatibleUnit.unit || compatibleUnit;\n//                               const unitId = unit?.id || unit;\n//                               const unitName = unit?.name || compatibleUnit.unit_name;\n//                               const unitSymbol = unit?.symbol || compatibleUnit.unit_symbol;\n//                               const actualUnitId = typeof unitId === 'number' ? unitId : (unit?.id || unitId);\n                              \n//                               if (!unitName || !unitSymbol) {\n//                                 return null;\n//                               }\n                              \n//                               const unitCostData = selectedProduct?.unit_costs?.find(uc => uc.id === actualUnitId);\n//                               const unitCost = unitCostData ? unitCostData.cost_price : 0;\n                              \n//                               return (\n//                                 <option key={actualUnitId} value={actualUnitId}>\n//                                   {unitName} ({unitSymbol}) - {parseFloat(unitCost).toFixed(2)} MGA\n//                                 </option>\n//                               );\n//                             }).filter(Boolean);\n//                           })()}\n//                         </select>\n//                       </div>\n//                       <div className=\"item-cost\">\n//                         <input\n//                           type=\"number\"\n//                           min=\"0\"\n//                           step=\"0.01\"\n//                           value={item.unit_cost}\n//                           onChange={(e) => handleItemChange(index, 'unit_cost', e.target.value)}\n//                           required\n//                         />\n//                       </div>\n//                       <div className=\"item-tax\">\n//                         <select\n//                           value={item.tax_class_id}\n//                           onChange={(e) => handleItemChange(index, 'tax_class_id', e.target.value)}\n//                         >\n//                           <option value=\"\">{t('modals.no_tax')}</option>\n//                           {taxClasses.map(taxClass => (\n//                             <option key={taxClass.id} value={taxClass.id}>\n//                               {taxClass.name} ({taxClass.tax_rate}%)\n//                             </option>\n//                           ))}\n//                         </select>\n//                       </div>\n//                       <div className=\"item-total\">\n//                         <div className=\"total-display\">\n//                           {calculateItemTotal(item).toFixed(2)} MGA\n//                           {item.tax_class_id && (\n//                             <span className=\"tax-amount\">\n//                               + {calculateTaxAmount(item).toFixed(2)} MGA {t('modals.tax')}\n//                             </span>\n//                           )}\n//                         </div>\n//                       </div>\n//                       <div className=\"item-actions\">\n//                         <button\n//                           type=\"button\"\n//                           className=\"remove-button\"\n//                           onClick={() => removeItem(index)}\n//                         >\n//                           {t('modals.remove')}\n//                         </button>\n//                       </div>\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//             <div className=\"section-header\">\n//               <h3>{t('modals.order_items')}</h3>\n//               <Button type=\"button\" variant=\"secondary\" onClick={addItem} size={isMobile ? \"small\" : \"medium\"}>\n//                 {isMobile ? '+' : t('modals.add_item')}\n//               </Button>\n//             </div>\n\n//           </div>\n\n//           {formData.items.length > 0 && (\n//             <div className=\"totals-section\">\n//               <div className=\"totals-grid\">\n//                 <div className=\"totals-row\">\n//                   <span>{t('modals.subtotal')}:</span>\n//                   <span>{totals.subtotal.toFixed(2)} MGA</span>\n//                 </div>\n//                 <div className=\"totals-row\">\n//                   <span>{t('modals.tax_amount')}:</span>\n//                   <span>{totals.taxAmount.toFixed(2)} MGA</span>\n//                 </div>\n//                 <div className=\"totals-row total-row\">\n//                   <span>{t('modals.total_amount')}:</span>\n//                   <span>{totals.total.toFixed(2)} MGA</span>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n//         </form>\n\n//         <div className=\"modal-footer\">\n//           <div className=\"footer-left\">\n//             <PrintButton\n//               data={formData}\n//               title={t('titles.purchase_order')}\n//               type=\"purchase_order\"\n//               printText={isMobile ? \"📄\" : t('buttons.print_order')}\n//               validateText={t('modals.validate_print')}\n//               showValidateOption={true}\n//               onValidate={handleSubmit}\n//               disabled={!formData.supplier_id || formData.items.length === 0}\n//               size={isMobile ? \"small\" : \"medium\"}\n//             />\n//           </div>\n//           <div className=\"footer-right\">\n//             <Button \n//               type=\"button\" \n//               variant=\"secondary\" \n//               onClick={onClose}\n//               size={isMobile ? \"small\" : \"medium\"}\n//               fullWidth={isMobile}\n//             >\n//               {t('modals.cancel')}\n//             </Button>\n//             <Button\n//               type=\"submit\"\n//               variant=\"primary\"\n//               onClick={handleSubmit}\n//               disabled={loading || !formData.supplier_id || formData.items.length === 0}\n//               size={isMobile ? \"small\" : \"medium\"}\n//               fullWidth={isMobile}\n//             >\n//               {loading ? t('modals.creating') : t('modals.create_purchase_order')}\n//             </Button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PurchaseOrderModal;"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}