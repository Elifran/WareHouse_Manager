{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import Button from'../components/Button';import{generatePrintContent}from'../components/PrintButton';import'./PointOfSale.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PointOfSale=()=>{const{user}=useAuth();const[products,setProducts]=useState([]);const[categories,setCategories]=useState([]);const[cart,setCart]=useState([]);const[customerInfo,setCustomerInfo]=useState({name:'',phone:'',email:''});const[paymentMethod,setPaymentMethod]=useState('cash');const[loading,setLoading]=useState(true);const[processing,setProcessing]=useState(false);const[error,setError]=useState('');const[stockAvailability,setStockAvailability]=useState({});const[filters,setFilters]=useState({category:'',search:''});const[searchInput,setSearchInput]=useState('');// Separate state for search input\nconst[editingQuantity,setEditingQuantity]=useState(null);const[tempQuantity,setTempQuantity]=useState('');const[selectedUnits,setSelectedUnits]=useState({});// Track selected unit for each product\nconst searchInputRef=useRef(null);// Ref for search input\nconst searchTimeoutRef=useRef(null);// Ref for search timeout\nconst[showSellableToggle,setShowSellableToggle]=useState(false);// Show/hide sellable toggle\nconst[priceMode,setPriceMode]=useState('standard');// 'standard' or 'wholesale'\nconst[saleMode,setSaleMode]=useState('complete');// 'complete' or 'pending'\nconst[printReceipt,setPrintReceipt]=useState(true);// true or false\n// Function to get the current price based on price mode\nconst getCurrentPrice=product=>{if(priceMode==='wholesale'&&product.wholesale_price){return parseFloat(product.wholesale_price);}return parseFloat(product.price);};// Function to get the current price for a specific unit\nconst getCurrentUnitPrice=(product,unitStockInfo)=>{if(!(unitStockInfo!==null&&unitStockInfo!==void 0&&unitStockInfo.price))return 0;// If we're in standard mode, return the standard unit price\nif(priceMode==='standard'){return unitStockInfo.price;}// If we're in wholesale mode, we need to calculate the wholesale price for this unit\nif(priceMode==='wholesale'&&product.wholesale_price){const standardBasePrice=parseFloat(product.price);const wholesaleBasePrice=parseFloat(product.wholesale_price);// Handle edge cases\nif(!standardBasePrice||standardBasePrice<=0){console.warn('Invalid standard base price:',standardBasePrice);return unitStockInfo.price;}// Calculate the conversion factor from standard to wholesale\nconst wholesaleConversionFactor=wholesaleBasePrice/standardBasePrice;// Apply the conversion factor to the unit price\nconst wholesaleUnitPrice=unitStockInfo.price*wholesaleConversionFactor;// Round to 2 decimal places to avoid floating point precision issues\nconst roundedPrice=Math.round(wholesaleUnitPrice*100)/100;// Ensure we return a valid number\nreturn isNaN(roundedPrice)||roundedPrice<0?unitStockInfo.price:roundedPrice;}// Fallback to standard price\nreturn unitStockInfo.price;};useEffect(()=>{const initializeData=async()=>{await fetchCategories();await fetchProducts();// Wait for categories to be loaded before fetching products\n};initializeData();},[]);// Re-filter products when categories are loaded (to apply sellable filtering)\nuseEffect(()=>{if(categories.length>0&&products.length>0){console.log('Categories loaded, re-filtering products to apply sellable filtering');fetchProducts(filters);// Re-fetch with current filters to apply sellable filtering\n}},[categories.length]);// Only when categories are loaded\n// Debounced search effect - completely rewritten for stability\nuseEffect(()=>{// Clear existing timeout\nif(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}// Set new timeout\nsearchTimeoutRef.current=setTimeout(()=>{if(searchInput!==filters.search){const newFilters=_objectSpread(_objectSpread({},filters),{},{search:searchInput});setFilters(newFilters);fetchProducts(newFilters);}},500);// Cleanup function\nreturn()=>{if(searchTimeoutRef.current){clearTimeout(searchTimeoutRef.current);}};},[searchInput,filters]);// Depend on searchInput and filters\nuseEffect(()=>{// Fetch stock availability for ALL products in bulk to improve performance\nif(products.length>0){fetchBulkStockAvailability();}// Set default selected units (default unit first, then base unit) for products with multiple compatible units\nconst defaultUnits={};products.forEach(product=>{if(product.compatible_units&&product.compatible_units.length>1){// First try to find the default unit (is_default: true)\nlet selectedUnit=product.compatible_units.find(u=>u.is_default);// If no default unit, fall back to base unit (is_base_unit: true)\nif(!selectedUnit){selectedUnit=product.compatible_units.find(u=>u.unit.is_base_unit);}// If still no unit found, use the first one\nif(!selectedUnit){selectedUnit=product.compatible_units[0];}if(selectedUnit){var _selectedUnit$unit;defaultUnits[product.id]=((_selectedUnit$unit=selectedUnit.unit)===null||_selectedUnit$unit===void 0?void 0:_selectedUnit$unit.id)||selectedUnit.unit;}}});setSelectedUnits(defaultUnits);},[products]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchBulkStockAvailability=async()=>{try{const productIds=products.map(product=>product.id);const response=await api.post('/products/bulk-stock-availability/',{product_ids:productIds});// Convert the response to the format expected by the existing code\nconst stockData={};Object.values(response.data).forEach(productStock=>{stockData[productStock.product_id]=productStock.available_units;});setStockAvailability(stockData);}catch(err){console.error('Bulk stock availability error:',err);// Fallback to individual calls if bulk fails\nproducts.forEach(product=>{fetchStockAvailability(product.id);});}};const refreshStockAvailability=()=>{// Use bulk fetch for better performance\nif(products.length>0){fetchBulkStockAvailability();}};const getUpdatedStockAvailability=productId=>{// Get the base stock availability for this product\nconst baseStockInfo=stockAvailability[productId];if(!baseStockInfo){return null;}// Calculate total pieces already in cart for this product (convert all units to pieces)\nconst totalPiecesInCart=cart.filter(item=>item.id===productId).reduce((total,item)=>{// Find the unit info to get conversion factor\nconst unitInfo=baseStockInfo.find(u=>u.id===item.unit_id);if(unitInfo&&unitInfo.conversion_factor){// Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\nreturn total+item.quantity*unitInfo.conversion_factor;}else if(unitInfo&&unitInfo.is_base_unit){// If it's the base unit (pieces), no conversion needed\nreturn total+item.quantity;}return total;},0);// Calculate remaining pieces in base stock\nconst baseUnit=baseStockInfo.find(u=>u.is_base_unit);const totalBaseStock=baseUnit?baseUnit.available_quantity:0;const remainingPieces=Math.max(0,totalBaseStock-totalPiecesInCart);// Update each unit's available quantity based on remaining pieces\nreturn baseStockInfo.map(unit=>{let availableQuantity=0;let isAvailable=false;if(unit.is_base_unit){// For base unit (pieces), use remaining pieces directly\navailableQuantity=remainingPieces;isAvailable=remainingPieces>0;}else if(unit.conversion_factor){// For other units, calculate how many can be made from remaining pieces\n// If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\navailableQuantity=Math.floor(remainingPieces/unit.conversion_factor);isAvailable=availableQuantity>0;}return _objectSpread(_objectSpread({},unit),{},{available_quantity:availableQuantity,is_available:isAvailable});});};const fetchProducts=async function(){let filterParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);const params=new URLSearchParams();// Always filter for active products\nparams.append('is_active','true');// Add filters to params\nif(filterParams.category)params.append('category',filterParams.category);if(filterParams.search)params.append('search',filterParams.search);const url=\"/products/\".concat(params.toString()?'?'+params.toString():'');const response=await api.get(url);const allProducts=response.data.results||response.data;// Debug: Log the first product to see its structure\nif(allProducts.length>0){console.log('First product structure:',allProducts[0]);console.log('Categories loaded:',categories.length);}// If categories are not loaded yet, show all products but log a warning\nif(categories.length===0){console.warn('Categories not loaded yet, showing all products (filtering will be applied once categories load)');setProducts(allProducts);return;}// ALWAYS filter out products from non-sellable categories\nconst sellableProducts=allProducts.filter(product=>{let isSellable=false;// If product has category information, check if category is sellable\nif(product.category&&product.category.is_sellable!==undefined){isSellable=product.category.is_sellable;}// If product has category_name, find the category in our categories list\nelse if(product.category_name){const category=categories.find(cat=>cat.name===product.category_name);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If product has category ID, find the category in our categories list\nelse if(product.category&&typeof product.category==='number'){const category=categories.find(cat=>cat.id===product.category);isSellable=category?category.is_sellable:false;// Default to false if category not found (safer)\n}// If no category information, exclude the product (safer approach)\nelse{isSellable=false;}// Debug: Log filtering decision\nif(!isSellable){console.log(\"Filtering out product: \".concat(product.name,\" (category: \").concat(product.category_name||product.category,\")\"));}return isSellable;});// Additional check: if a specific category is selected, ensure it's sellable\nif(filterParams.category){const selectedCategory=categories.find(cat=>cat.id===parseInt(filterParams.category));if(selectedCategory&&!selectedCategory.is_sellable){// If selected category is not sellable, return empty array\nsetProducts([]);return;}}setProducts(sellableProducts);}catch(err){setError('Failed to load products');console.error('Products error:',err);}finally{setLoading(false);}};const fetchCategories=async()=>{try{const response=await api.get('/products/categories/');setCategories(response.data.results||response.data);}catch(err){console.error('Categories error:',err);}};const fetchStockAvailability=async productId=>{try{const response=await api.get(\"/products/\".concat(productId,\"/stock-availability/\"));setStockAvailability(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:response.data.available_units}));}catch(err){console.error('Stock availability error:',err);}};const addToCart=function(product){let selectedUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Use the first compatible unit if none selected\nlet unit=selectedUnit;if(!unit&&product.compatible_units&&product.compatible_units[0]){var _compatibleUnit$unit,_compatibleUnit$unit2,_compatibleUnit$unit3;const compatibleUnit=product.compatible_units[0];unit={id:((_compatibleUnit$unit=compatibleUnit.unit)===null||_compatibleUnit$unit===void 0?void 0:_compatibleUnit$unit.id)||compatibleUnit.unit,name:compatibleUnit.unit_name||((_compatibleUnit$unit2=compatibleUnit.unit)===null||_compatibleUnit$unit2===void 0?void 0:_compatibleUnit$unit2.name)||'Piece',symbol:compatibleUnit.unit_symbol||((_compatibleUnit$unit3=compatibleUnit.unit)===null||_compatibleUnit$unit3===void 0?void 0:_compatibleUnit$unit3.symbol)||'piece'};}if(!unit){var _product$base_unit;unit={id:((_product$base_unit=product.base_unit)===null||_product$base_unit===void 0?void 0:_product$base_unit.id)||product.base_unit,name:'Piece',symbol:'piece'};}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check if stock availability data is loaded\nif(!stockAvailability[product.id]){setError('Loading stock information... Please try again.');return;}// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(!unitStockInfo){setError(\"Unit \".concat(unit.name,\" not found in stock information\"));return;}if(!unitStockInfo.is_available){setError(\"\".concat(unit.name,\" is out of stock\"));return;}// Check if there's enough stock for the selected unit\nif(unitStockInfo.available_quantity<=0){setError(\"No \".concat(unit.name,\" stock left\"));return;}}const existingItem=cart.find(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode);if(existingItem){// Check if adding 1 more would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&existingItem.quantity+1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}setCart(cart.map(item=>item.id===product.id&&item.unit_id===unit.id&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item));}else{// Check if adding 1 would exceed available quantity (only for complete sales)\nif(saleMode==='complete'){const updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unit.id);if(unitStockInfo&&1>unitStockInfo.available_quantity){setError(\"Not enough \".concat(unit.name,\" available. Only \").concat(unitStockInfo.available_quantity,\" left.\"));return;}}const newCartItem=_objectSpread(_objectSpread({},product),{},{quantity:1,unit_id:unit.id,unit_name:unit.name,unit_symbol:unit.symbol,unit_price:getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product),price_mode:priceMode});setCart([...cart,newCartItem]);}setError('');};const updateQuantity=function(productId,unitId,quantity){let priceMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(quantity<=0){setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));}else{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(productId);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===unitId);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");return;}// For updateQuantity, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode).reduce((sum,item)=>sum+item.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(quantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));return;}}setCart(cart.map(item=>item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode?_objectSpread(_objectSpread({},item),{},{quantity}):item));setError('');}};const removeFromCart=function(productId,unitId){let priceMode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;setCart(cart.filter(item=>!(item.id===productId&&item.unit_id===unitId&&item.price_mode===priceMode)));};const calculateSubtotal=()=>{return cart.reduce((total,item)=>total+item.quantity*item.unit_price,0);};const calculateTax=()=>{let totalTax=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\nconst itemTax=item.quantity*item.unit_price*item.tax_rate/(100+item.tax_rate);totalTax+=itemTax;}});return totalTax;};const calculateCost=()=>{let totalCost=0;cart.forEach(item=>{if(item.tax_rate&&item.tax_rate>0){// For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\nconst itemCost=item.quantity*item.unit_price*100/(100+item.tax_rate);totalCost+=itemCost;}else{// No tax, full price is cost\ntotalCost+=item.quantity*item.unit_price;}});return totalCost;};const autoPrintReceipt=async function(saleNumber,saleData){let saleStatus=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'completed';try{// Create print content for the sale\nconst printData={sale_number:saleNumber,customer_name:customerInfo.name||'Walk-in Customer',customer_phone:customerInfo.phone||'',customer_email:customerInfo.email||'',user_name:(user===null||user===void 0?void 0:user.username)||'Unknown User',user_id:(user===null||user===void 0?void 0:user.id)||'unknown',created_at:new Date().toISOString(),print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),status:saleStatus,total_amount:calculateSubtotal(),items:cart.map(item=>{var _item$unit;return{product_name:item.name,product_sku:item.sku,quantity:item.quantity,unit_name:item.unit_name||((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.name)||'piece',unit_price:item.unit_price,total_price:item.unit_price*item.quantity};})};// Generate print content using the same logic as PrintButton\nconst printContent=generatePrintContent(printData,'Sale Receipt','sale');// Open print window\nconst printWindow=window.open('','_blank','width=800,height=600');printWindow.document.write(printContent);printWindow.document.close();// Wait for content to load then print\nprintWindow.onload=()=>{printWindow.focus();printWindow.print();// Close the window after a short delay\nsetTimeout(()=>{printWindow.close();},1000);};}catch(error){console.error('Auto-print error:',error);// Don't show error to user as it's not critical\n}};const handleCheckout=async()=>{if(cart.length===0){setError('Cart is empty');return;}setProcessing(true);setError('');try{const saleData={customer_name:customerInfo.name,customer_phone:customerInfo.phone,customer_email:customerInfo.email,payment_method:paymentMethod,items:cart.map(item=>{// More robust unit ID extraction\nlet unitId=item.unit_id;if(typeof unitId==='object'&&unitId!==null){unitId=unitId.id||unitId;}return{product:item.id,quantity:parseFloat(item.quantity),unit:parseInt(unitId),unit_price:parseFloat(item.unit_price),price_mode:item.price_mode||'standard'};})};// Create the sale\nconst response=await api.post('/sales/',saleData);const saleId=response.data.id;const saleNumber=response.data.sale_number;if(saleMode==='complete'){// Complete the sale immediately\ntry{await api.post(\"/sales/\".concat(saleId,\"/complete/\"));// Auto-print the receipt after successful sale completion (only if printReceipt is true)\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'completed');}// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');// Wait a moment for the backend to process stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Wait 1 second\n// Refresh product data to update stock quantities\nawait fetchProducts();// Wait another moment for stock availability to be updated\nawait new Promise(resolve=>setTimeout(resolve,500));// Wait 0.5 seconds\n// Refresh stock availability for all products\nrefreshStockAvailability();alert(\"Sale completed successfully! Sale Number: \".concat(saleNumber));}catch(completeError){var _completeError$respon,_completeError$respon2;// Sale was created but completion failed\nconsole.error('Sale completion error:',completeError);setError(\"Sale created (\".concat(saleNumber,\") but completion failed: \").concat(((_completeError$respon=completeError.response)===null||_completeError$respon===void 0?void 0:(_completeError$respon2=_completeError$respon.data)===null||_completeError$respon2===void 0?void 0:_completeError$respon2.error)||completeError.message));// Still clear the cart since the sale was created\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Wait for backend to process any completed stock movements\nawait new Promise(resolve=>setTimeout(resolve,1000));// Refresh data\nawait fetchProducts();await new Promise(resolve=>setTimeout(resolve,500));refreshStockAvailability();}}else{// Create pending sale (don't complete it)\n// Print receipt for pending sale if requested\nif(printReceipt){await autoPrintReceipt(saleNumber,response.data,'pending');}// Clear cart and customer info\nsetCart([]);setCustomerInfo({name:'',phone:'',email:''});// Reset price mode to standard after sale\nsetPriceMode('standard');alert(\"Pending sale created! Sale Number: \".concat(saleNumber,\"\\nYou can complete it later in Sales Management.\"));}}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Failed to create sale');console.error('Sale creation error:',err);}finally{setProcessing(false);}};const clearCart=()=>{setCart([]);setError('');};const handleFilterChange=(filterType,value)=>{if(filterType==='search'){// For search, update the input state immediately (no API call)\nsetSearchInput(value);}else{// For other filters (like category), update immediately\nconst newFilters=_objectSpread(_objectSpread({},filters),{},{[filterType]:value});setFilters(newFilters);fetchProducts(newFilters);}};const clearFilters=()=>{const clearedFilters={category:'',search:''};setFilters(clearedFilters);setSearchInput('');// Clear the search input state\nfetchProducts(clearedFilters);};const toggleCategorySellable=async(categoryId,isSellable)=>{try{await api.patch(\"/products/categories/\".concat(categoryId,\"/\"),{is_sellable:!isSellable});// Refresh categories to show updated status\nawait fetchCategories();// Refresh products to apply new sellable filter\nfetchProducts(filters);}catch(err){console.error('Error updating category sellable status:',err);setError('Failed to update category status');}};const handleQuantityClick=item=>{setEditingQuantity(\"\".concat(item.id,\"-\").concat(item.unit_id));setTempQuantity(item.quantity.toString());};const handleQuantityChange=e=>{const value=e.target.value;// Only allow numbers and empty string\nif(value===''||/^\\d+$/.test(value)){setTempQuantity(value);}};const handleQuantitySubmit=item=>{const newQuantity=parseFloat(tempQuantity);if(tempQuantity===''||isNaN(newQuantity)||newQuantity<0){setError('Please enter a valid quantity');setEditingQuantity(null);return;}// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='complete'){// Check updated stock availability for the selected unit\nconst updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);if(!unitStockInfo||!unitStockInfo.is_available){setError(\"Unit is out of stock\");setEditingQuantity(null);return;}// For handleQuantitySubmit, we need to consider the current cart quantity\nconst currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);// Calculate how much we can add (available + what's already in cart)\nconst maxAllowed=unitStockInfo.available_quantity+currentCartQuantity;if(newQuantity>maxAllowed){setError(\"Not enough stock available. Max: \".concat(maxAllowed));setEditingQuantity(null);return;}}if(newQuantity===0){// Remove item from cart if quantity is 0\nremoveFromCart(item.id,item.unit_id,item.price_mode);}else{updateQuantity(item.id,item.unit_id,newQuantity,item.price_mode);}setEditingQuantity(null);setTempQuantity('');setError('');};const handleQuantityCancel=()=>{setEditingQuantity(null);setTempQuantity('');};const handleQuantityKeyPress=(e,item)=>{if(e.key==='Enter'){handleQuantitySubmit(item);}else if(e.key==='Escape'){handleQuantityCancel();}};const handleUnitSelection=(productId,unitId)=>{setSelectedUnits(prev=>_objectSpread(_objectSpread({},prev),{},{[productId]:unitId}));};const handleProductCardClick=product=>{// Don't allow clicking on out-of-stock products\nif(product.stock_quantity<=0){return;}if(product.compatible_units&&product.compatible_units.length>1){// For multi-unit products, add with the currently selected unit\nconst selectedUnitId=selectedUnits[product.id];if(selectedUnitId){const selectedCompatibleUnit=product.compatible_units.find(u=>{var _u$unit;return(((_u$unit=u.unit)===null||_u$unit===void 0?void 0:_u$unit.id)||u.unit)===selectedUnitId;});if(selectedCompatibleUnit){var _selectedCompatibleUn2;// Get the price for this unit from stock availability\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _selectedCompatibleUn;return u.id===(((_selectedCompatibleUn=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn===void 0?void 0:_selectedCompatibleUn.id)||selectedCompatibleUnit.unit);});const unitPrice=getCurrentUnitPrice(product,unitStockInfo)||getCurrentPrice(product);// Convert compatible unit to the format expected by addToCart\nconst selectedUnit={id:((_selectedCompatibleUn2=selectedCompatibleUnit.unit)===null||_selectedCompatibleUn2===void 0?void 0:_selectedCompatibleUn2.id)||selectedCompatibleUnit.unit,name:selectedCompatibleUnit.unit_name,symbol:selectedCompatibleUnit.unit_symbol,price:unitPrice};addToCart(product,selectedUnit);}}}else{// For single-unit products, add directly\naddToCart(product);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"pos\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pos-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading products...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"pos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Point of Sale\"}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-user\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Cashier: \",user===null||user===void 0?void 0:user.username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pos-products\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Products\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"pos-filters\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.filter(cat=>cat.is_sellable).map(category=>/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id))]}),/*#__PURE__*/_jsxs(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowSellableToggle(!showSellableToggle),style:{marginTop:'0.5rem'},children:[showSellableToggle?'Hide':'Manage',\" Categories\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"price-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='standard'?'active':''),onClick:()=>setPriceMode('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"price-mode-btn \".concat(priceMode==='wholesale'?'active':''),onClick:()=>setPriceMode('wholesale'),children:\"Wholesale\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sale Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='complete'?'active':''),onClick:()=>setSaleMode('complete'),title:\"Sale will be completed immediately and stock will be deducted\",children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(saleMode==='pending'?'active':''),onClick:()=>setSaleMode('pending'),title:\"Sale will be created as pending and can be completed later\",children:\"Pending\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Print Receipt:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-mode-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(printReceipt?'active':''),onClick:()=>setPrintReceipt(true),title:\"Print receipt after sale\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"sale-mode-btn \".concat(!printReceipt?'active':''),onClick:()=>setPrintReceipt(false),title:\"Don't print receipt\",children:\"No\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{ref:searchInputRef,type:\"text\",placeholder:\"Search products...\",value:searchInput,onChange:e=>handleFilterChange('search',e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-group\",children:/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearFilters,children:\"Clear\"})})]}),showSellableToggle&&/*#__PURE__*/_jsxs(\"div\",{className:\"category-management\",style:{marginBottom:'1rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'0.5rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 1rem 0',fontSize:'1rem',fontWeight:'600'},children:\"Manage Sellable Categories\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fill, minmax(200px, 1fr))',gap:'0.5rem'},children:categories.map(category=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between',padding:'0.5rem',backgroundColor:'white',borderRadius:'0.375rem',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500'},children:category.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleCategorySellable(category.id,category.is_sellable),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',borderRadius:'0.25rem',border:'1px solid',cursor:'pointer',backgroundColor:category.is_sellable?'#dcfce7':'#fee2e2',borderColor:category.is_sellable?'#16a34a':'#dc2626',color:category.is_sellable?'#15803d':'#dc2626'},children:category.is_sellable?'Sellable':'Not Sellable'})]},category.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"products-info\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"products-count\",children:[products.length,\" product\",products.length!==1?'s':'',\" found\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"products-grid\",children:products.map(product=>{var _product$compatible_u;return/*#__PURE__*/_jsx(\"div\",{className:\"product-card \".concat(product.stock_quantity<=0?'out-of-stock':'',\" clickable\"),onClick:()=>handleProductCardClick(product),children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:product.name}),/*#__PURE__*/_jsx(\"p\",{className:\"product-sku\",children:product.sku}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-price\",children:[getCurrentPrice(product).toFixed(2),\" MGA\",product.compatible_units&&product.compatible_units.length>1&&\" (base unit: \".concat(((_product$compatible_u=product.compatible_units.find(u=>u.unit.is_base_unit))===null||_product$compatible_u===void 0?void 0:_product$compatible_u.unit.symbol)||'piece',\")\")]}),/*#__PURE__*/_jsxs(\"p\",{className:\"product-stock\",children:[\"Stock: \",product.stock_quantity,\" \",product.unit,stockAvailability[product.id]&&product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsx(\"span\",{className:\"stock-details\",children:(()=>{const updatedStockInfo=getUpdatedStockAvailability(product.id);return product.compatible_units.map(compatibleUnit=>{var _compatibleUnit$unit5,_compatibleUnit$unit6;const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit4;return u.id===(((_compatibleUnit$unit4=compatibleUnit.unit)===null||_compatibleUnit$unit4===void 0?void 0:_compatibleUnit$unit4.id)||compatibleUnit.unit);});if(!unitStockInfo)return null;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit5=compatibleUnit.unit)===null||_compatibleUnit$unit5===void 0?void 0:_compatibleUnit$unit5.name)||compatibleUnit.unit_name;return/*#__PURE__*/_jsxs(\"span\",{className:\"unit-stock \".concat(unitStockInfo.is_available?'available':'unavailable'),children:[unitName,\": \",unitStockInfo.available_quantity]},((_compatibleUnit$unit6=compatibleUnit.unit)===null||_compatibleUnit$unit6===void 0?void 0:_compatibleUnit$unit6.id)||compatibleUnit.unit);}).filter(Boolean);})()})]}),product.compatible_units&&product.compatible_units.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"unit-selection\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"unit-select\",value:selectedUnits[product.id]||'',onChange:e=>{const unitId=parseInt(e.target.value);handleUnitSelection(product.id,unitId);},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Unit\"}),product.compatible_units.map((compatibleUnit,index)=>{var _compatibleUnit$unit8,_compatibleUnit$unit9,_compatibleUnit$unit0,_compatibleUnit$unit1;// Use updated stock availability that considers cart contents\nconst updatedStockInfo=getUpdatedStockAvailability(product.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>{var _compatibleUnit$unit7;return u.id===(((_compatibleUnit$unit7=compatibleUnit.unit)===null||_compatibleUnit$unit7===void 0?void 0:_compatibleUnit$unit7.id)||compatibleUnit.unit);});const isAvailable=unitStockInfo?unitStockInfo.is_available:false;const availableQty=unitStockInfo?unitStockInfo.available_quantity:0;// Use unit info from stock availability if available, otherwise fallback to compatible unit\nconst unitName=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.name)||((_compatibleUnit$unit8=compatibleUnit.unit)===null||_compatibleUnit$unit8===void 0?void 0:_compatibleUnit$unit8.name)||compatibleUnit.unit_name;const unitSymbol=(unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.symbol)||((_compatibleUnit$unit9=compatibleUnit.unit)===null||_compatibleUnit$unit9===void 0?void 0:_compatibleUnit$unit9.symbol)||compatibleUnit.unit_symbol;return/*#__PURE__*/_jsxs(\"option\",{value:((_compatibleUnit$unit1=compatibleUnit.unit)===null||_compatibleUnit$unit1===void 0?void 0:_compatibleUnit$unit1.id)||compatibleUnit.unit,disabled:!isAvailable,children:[unitName,\" (\",unitSymbol,\") - \",getCurrentUnitPrice(product,unitStockInfo).toFixed(2),\" MGA\",!isAvailable?' - OUT OF STOCK':\" - \".concat(availableQty,\" available\")]},((_compatibleUnit$unit0=compatibleUnit.unit)===null||_compatibleUnit$unit0===void 0?void 0:_compatibleUnit$unit0.id)||compatibleUnit.unit);})]})]}),(!product.compatible_units||product.compatible_units.length<=1)&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>addToCart(product),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}// Check if any unit has available stock\nif(!stockAvailability[product.id]){return true;// Disable if stock data not loaded\n}// For single unit products, check base stock\nreturn product.stock_quantity<=0;})(),className:\"add-to-cart-btn\",children:(()=>{if(!stockAvailability[product.id]){return'Loading...';}// For pending sales, always show \"Add to Cart\" regardless of stock\nif(saleMode==='pending'){return'Add to Cart';}return product.stock_quantity<=0?'Out of Stock':'Add to Cart';})()}),product.available_units&&product.available_units.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"unit-instruction\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Click card or select unit to add to cart\"})})]})},product.id);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pos-cart\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shopping Cart\"}),cart.length>0&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:clearCart,children:\"Clear Cart\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-items\",children:cart.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"empty-cart\",children:\"Cart is empty\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-table-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-product\",children:\"Product\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-unit\",children:\"Unit\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-price\",children:\"Price\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-quantity\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-total\",children:\"Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:\"Actions\"})]}),cart.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-product\",children:[/*#__PURE__*/_jsx(\"h4\",{children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"item-sku\",children:[\"SKU: \",item.sku]}),/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-unit\",children:item.unit_symbol||'piece'}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-price\",children:[parseFloat(item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-quantity\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-controls\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity-1,item.price_mode),children:\"-\"}),editingQuantity===\"\".concat(item.id,\"-\").concat(item.unit_id)?/*#__PURE__*/_jsx(\"div\",{className:\"quantity-edit\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:tempQuantity,onChange:handleQuantityChange,onKeyPress:e=>handleQuantityKeyPress(e,item),onBlur:()=>handleQuantitySubmit(item),className:\"quantity-input\",min:\"0\",max:item.stock_quantity,autoFocus:true})}):/*#__PURE__*/_jsx(\"span\",{className:\"quantity clickable\",onClick:()=>handleQuantityClick(item),title:\"Click to edit quantity\",children:item.quantity}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>updateQuantity(item.id,item.unit_id,item.quantity+1,item.price_mode),disabled:(()=>{// Skip stock validation for pending sales since stock won't be removed until completion\nif(saleMode==='pending'){return false;// Always allow for pending sales\n}const updatedStockInfo=getUpdatedStockAvailability(item.id);const unitStockInfo=updatedStockInfo===null||updatedStockInfo===void 0?void 0:updatedStockInfo.find(u=>u.id===item.unit_id);const currentCartQuantity=cart.filter(cartItem=>cartItem.id===item.id&&cartItem.unit_id===item.unit_id&&cartItem.price_mode===item.price_mode).reduce((sum,cartItem)=>sum+cartItem.quantity,0);const maxAllowed=((unitStockInfo===null||unitStockInfo===void 0?void 0:unitStockInfo.available_quantity)||0)+currentCartQuantity;return item.quantity>=maxAllowed;})(),children:\"+\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-total\",children:[(item.quantity*item.unit_price).toFixed(2),\" MGA\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-actions\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>removeFromCart(item.id,item.unit_id,item.price_mode),title:\"Remove item\",children:\"\\xD7\"})})]},\"\".concat(item.id,\"-\").concat(item.unit_id,\"-\").concat(item.price_mode)))]})}),cart.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"cart-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row cost-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Cost (excl. tax):\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateCost().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row tax-breakdown\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Tax included:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateTax().toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[calculateSubtotal().toFixed(2),\" MGA\"]})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"checkout-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"customer-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer Information\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Customer Name (Optional)\",value:customerInfo.name,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{name:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"tel\",placeholder:\"Phone Number (Optional)\",value:customerInfo.phone,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{phone:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email (Optional)\",value:customerInfo.email,onChange:e=>setCustomerInfo(_objectSpread(_objectSpread({},customerInfo),{},{email:e.target.value}))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-methods\",children:['cash','card','mobile_money','bank_transfer'].map(method=>/*#__PURE__*/_jsxs(\"label\",{className:\"payment-method\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"payment\",value:method,checked:paymentMethod===method,onChange:e=>setPaymentMethod(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{children:method.replace('_',' ').toUpperCase()})]},method))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkout-actions\",children:/*#__PURE__*/_jsxs(Button,{onClick:handleCheckout,loading:processing,className:\"validate-button\",size:\"large\",variant:\"primary\",disabled:cart.length===0,children:[saleMode==='complete'?'Complete Sale':'Create Pending Sale',printReceipt&&' & Print Receipt']})})]})]})]})]});};export default PointOfSale;","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","api","Button","generatePrintContent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PointOfSale","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","searchInput","setSearchInput","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","searchInputRef","searchTimeoutRef","showSellableToggle","setShowSellableToggle","priceMode","setPriceMode","saleMode","setSaleMode","printReceipt","setPrintReceipt","getCurrentPrice","product","wholesale_price","parseFloat","price","getCurrentUnitPrice","unitStockInfo","standardBasePrice","wholesaleBasePrice","console","warn","wholesaleConversionFactor","wholesaleUnitPrice","roundedPrice","Math","round","isNaN","initializeData","fetchCategories","fetchProducts","length","log","current","clearTimeout","setTimeout","newFilters","_objectSpread","fetchBulkStockAvailability","defaultUnits","forEach","compatible_units","selectedUnit","find","u","is_default","unit","is_base_unit","_selectedUnit$unit","id","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","item","reduce","total","unitInfo","unit_id","conversion_factor","quantity","baseUnit","totalBaseStock","available_quantity","remainingPieces","max","availableQuantity","isAvailable","floor","is_available","filterParams","arguments","undefined","params","URLSearchParams","append","url","concat","toString","get","allProducts","results","sellableProducts","isSellable","is_sellable","category_name","cat","selectedCategory","parseInt","prev","addToCart","_compatibleUnit$unit","_compatibleUnit$unit2","_compatibleUnit$unit3","compatibleUnit","unit_name","symbol","unit_symbol","_product$base_unit","base_unit","updatedStockInfo","existingItem","price_mode","newCartItem","unit_price","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","autoPrintReceipt","saleNumber","saleData","saleStatus","printData","sale_number","customer_name","customer_phone","customer_email","user_name","username","user_id","created_at","Date","toISOString","print_timestamp","print_id","now","random","substr","status","total_amount","items","_item$unit","product_name","product_sku","sku","total_price","printContent","printWindow","window","open","document","write","close","onload","focus","print","handleCheckout","payment_method","saleId","Promise","resolve","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","detail","clearCart","handleFilterChange","filterType","value","clearFilters","clearedFilters","toggleCategorySellable","categoryId","patch","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","_u$unit","_selectedCompatibleUn2","_selectedCompatibleUn","unitPrice","className","children","onChange","variant","size","onClick","style","marginTop","type","title","ref","placeholder","marginBottom","padding","backgroundColor","borderRadius","border","margin","fontSize","fontWeight","display","gridTemplateColumns","gap","alignItems","justifyContent","cursor","borderColor","color","_product$compatible_u","toFixed","_compatibleUnit$unit5","_compatibleUnit$unit6","_compatibleUnit$unit4","unitName","Boolean","stopPropagation","index","_compatibleUnit$unit8","_compatibleUnit$unit9","_compatibleUnit$unit0","_compatibleUnit$unit1","_compatibleUnit$unit7","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","method","checked","replace","toUpperCase"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport { generatePrintContent } from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [searchInput, setSearchInput] = useState(''); // Separate state for search input\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n  const searchInputRef = useRef(null); // Ref for search input\n  const searchTimeoutRef = useRef(null); // Ref for search timeout\n  const [showSellableToggle, setShowSellableToggle] = useState(false); // Show/hide sellable toggle\n  const [priceMode, setPriceMode] = useState('standard'); // 'standard' or 'wholesale'\n  const [saleMode, setSaleMode] = useState('complete'); // 'complete' or 'pending'\n  const [printReceipt, setPrintReceipt] = useState(true); // true or false\n\n  // Function to get the current price based on price mode\n  const getCurrentPrice = (product) => {\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      return parseFloat(product.wholesale_price);\n    }\n    return parseFloat(product.price);\n  };\n\n  // Function to get the current price for a specific unit\n  const getCurrentUnitPrice = (product, unitStockInfo) => {\n    if (!unitStockInfo?.price) return 0;\n    \n    // If we're in standard mode, return the standard unit price\n    if (priceMode === 'standard') {\n      return unitStockInfo.price;\n    }\n    \n    // If we're in wholesale mode, we need to calculate the wholesale price for this unit\n    if (priceMode === 'wholesale' && product.wholesale_price) {\n      const standardBasePrice = parseFloat(product.price);\n      const wholesaleBasePrice = parseFloat(product.wholesale_price);\n      \n      // Handle edge cases\n      if (!standardBasePrice || standardBasePrice <= 0) {\n        console.warn('Invalid standard base price:', standardBasePrice);\n        return unitStockInfo.price;\n      }\n      \n      // Calculate the conversion factor from standard to wholesale\n      const wholesaleConversionFactor = wholesaleBasePrice / standardBasePrice;\n      \n      // Apply the conversion factor to the unit price\n      const wholesaleUnitPrice = unitStockInfo.price * wholesaleConversionFactor;\n      \n      // Round to 2 decimal places to avoid floating point precision issues\n      const roundedPrice = Math.round(wholesaleUnitPrice * 100) / 100;\n      \n      // Ensure we return a valid number\n      return isNaN(roundedPrice) || roundedPrice < 0 ? unitStockInfo.price : roundedPrice;\n    }\n    \n    // Fallback to standard price\n    return unitStockInfo.price;\n  };\n\n  useEffect(() => {\n    const initializeData = async () => {\n      await fetchCategories();\n      await fetchProducts(); // Wait for categories to be loaded before fetching products\n    };\n    initializeData();\n  }, []);\n\n  // Re-filter products when categories are loaded (to apply sellable filtering)\n  useEffect(() => {\n    if (categories.length > 0 && products.length > 0) {\n      console.log('Categories loaded, re-filtering products to apply sellable filtering');\n      fetchProducts(filters); // Re-fetch with current filters to apply sellable filtering\n    }\n  }, [categories.length]); // Only when categories are loaded\n\n  // Debounced search effect - completely rewritten for stability\n  useEffect(() => {\n    // Clear existing timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout\n    searchTimeoutRef.current = setTimeout(() => {\n      if (searchInput !== filters.search) {\n        const newFilters = { ...filters, search: searchInput };\n        setFilters(newFilters);\n        fetchProducts(newFilters);\n      }\n    }, 500);\n\n    // Cleanup function\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [searchInput, filters]); // Depend on searchInput and filters\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (default unit first, then base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        \n        // First try to find the default unit (is_default: true)\n        let selectedUnit = product.compatible_units.find(u => u.is_default);\n        \n        // If no default unit, fall back to base unit (is_base_unit: true)\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units.find(u => u.unit.is_base_unit);\n        }\n        \n        // If still no unit found, use the first one\n        if (!selectedUnit) {\n          selectedUnit = product.compatible_units[0];\n        }\n        \n        if (selectedUnit) {\n          defaultUnits[product.id] = selectedUnit.unit?.id || selectedUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      \n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      const allProducts = response.data.results || response.data;\n      \n      // Debug: Log the first product to see its structure\n      if (allProducts.length > 0) {\n        console.log('First product structure:', allProducts[0]);\n        console.log('Categories loaded:', categories.length);\n      }\n      \n      // If categories are not loaded yet, show all products but log a warning\n      if (categories.length === 0) {\n        console.warn('Categories not loaded yet, showing all products (filtering will be applied once categories load)');\n        setProducts(allProducts);\n        return;\n      }\n      \n      // ALWAYS filter out products from non-sellable categories\n      const sellableProducts = allProducts.filter(product => {\n        let isSellable = false;\n        \n        // If product has category information, check if category is sellable\n        if (product.category && product.category.is_sellable !== undefined) {\n          isSellable = product.category.is_sellable;\n        }\n        // If product has category_name, find the category in our categories list\n        else if (product.category_name) {\n          const category = categories.find(cat => cat.name === product.category_name);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If product has category ID, find the category in our categories list\n        else if (product.category && typeof product.category === 'number') {\n          const category = categories.find(cat => cat.id === product.category);\n          isSellable = category ? category.is_sellable : false; // Default to false if category not found (safer)\n        }\n        // If no category information, exclude the product (safer approach)\n        else {\n          isSellable = false;\n        }\n        \n        // Debug: Log filtering decision\n        if (!isSellable) {\n          console.log(`Filtering out product: ${product.name} (category: ${product.category_name || product.category})`);\n        }\n        \n        return isSellable;\n      });\n\n      // Additional check: if a specific category is selected, ensure it's sellable\n      if (filterParams.category) {\n        const selectedCategory = categories.find(cat => cat.id === parseInt(filterParams.category));\n        if (selectedCategory && !selectedCategory.is_sellable) {\n          // If selected category is not sellable, return empty array\n          setProducts([]);\n          return;\n        }\n      }\n      \n      setProducts(sellableProducts);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    \n    // Use the first compatible unit if none selected\n    let unit = selectedUnit;\n    if (!unit && product.compatible_units && product.compatible_units[0]) {\n      const compatibleUnit = product.compatible_units[0];\n      unit = {\n        id: compatibleUnit.unit?.id || compatibleUnit.unit,\n        name: compatibleUnit.unit_name || compatibleUnit.unit?.name || 'Piece',\n        symbol: compatibleUnit.unit_symbol || compatibleUnit.unit?.symbol || 'piece'\n      };\n    }\n    if (!unit) {\n      unit = { id: product.base_unit?.id || product.base_unit, name: 'Piece', symbol: 'piece' };\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check if stock availability data is loaded\n      if (!stockAvailability[product.id]) {\n        setError('Loading stock information... Please try again.');\n        return;\n      }\n\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n      \n      \n      if (!unitStockInfo) {\n        setError(`Unit ${unit.name} not found in stock information`);\n        return;\n      }\n      \n      if (!unitStockInfo.is_available) {\n        setError(`${unit.name} is out of stock`);\n        return;\n      }\n      \n      // Check if there's enough stock for the selected unit\n      if (unitStockInfo.available_quantity <= 0) {\n        setError(`No ${unit.name} stock left`);\n        return;\n      }\n    }\n    \n    const existingItem = cart.find(item => \n      item.id === product.id && \n      item.unit_id === unit.id && \n      item.price_mode === priceMode\n    );\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id && item.price_mode === priceMode\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity (only for complete sales)\n      if (saleMode === 'complete') {\n        const updatedStockInfo = getUpdatedStockAvailability(product.id);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n        if (unitStockInfo && 1 > unitStockInfo.available_quantity) {\n          setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n          return;\n        }\n      }\n      const newCartItem = {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product),\n        price_mode: priceMode\n      };\n      setCart([...cart, newCartItem]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity, priceMode = null) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n    } else {\n      // Skip stock validation for pending sales since stock won't be removed until completion\n      if (saleMode === 'complete') {\n        // Check updated stock availability for the selected unit\n        const updatedStockInfo = getUpdatedStockAvailability(productId);\n        const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n        \n        if (!unitStockInfo || !unitStockInfo.is_available) {\n          setError(`Unit is out of stock`);\n          return;\n        }\n        \n        // For updateQuantity, we need to consider the current cart quantity\n        const currentCartQuantity = cart\n          .filter(item => item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)\n          .reduce((sum, item) => sum + item.quantity, 0);\n        \n        // Calculate how much we can add (available + what's already in cart)\n        const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n        \n        if (quantity > maxAllowed) {\n          setError(`Not enough stock available. Max: ${maxAllowed}`);\n          return;\n        }\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId && item.price_mode === priceMode\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId, priceMode = null) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId && item.price_mode === priceMode)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const autoPrintReceipt = async (saleNumber, saleData, saleStatus = 'completed') => {\n    try {\n      // Create print content for the sale\n      const printData = {\n        sale_number: saleNumber,\n        customer_name: customerInfo.name || 'Walk-in Customer',\n        customer_phone: customerInfo.phone || '',\n        customer_email: customerInfo.email || '',\n        user_name: user?.username || 'Unknown User',\n        user_id: user?.id || 'unknown',\n        created_at: new Date().toISOString(),\n        print_timestamp: new Date().toISOString(),\n        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        status: saleStatus,\n        total_amount: calculateSubtotal(),\n        items: cart.map(item => ({\n          product_name: item.name,\n          product_sku: item.sku,\n          quantity: item.quantity,\n          unit_name: item.unit_name || item.unit?.name || 'piece',\n          unit_price: item.unit_price,\n          total_price: item.unit_price * item.quantity\n        }))\n      };\n\n      // Generate print content using the same logic as PrintButton\n      const printContent = generatePrintContent(printData, 'Sale Receipt', 'sale');\n      \n      // Open print window\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      printWindow.onload = () => {\n        printWindow.focus();\n        printWindow.print();\n        // Close the window after a short delay\n        setTimeout(() => {\n          printWindow.close();\n        }, 1000);\n      };\n      \n    } catch (error) {\n      console.error('Auto-print error:', error);\n      // Don't show error to user as it's not critical\n    }\n  };\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n          items: cart.map(item => {\n            // More robust unit ID extraction\n            let unitId = item.unit_id;\n            if (typeof unitId === 'object' && unitId !== null) {\n              unitId = unitId.id || unitId;\n            }\n            \n            return {\n          product: item.id,\n              quantity: parseFloat(item.quantity),\n              unit: parseInt(unitId),\n              unit_price: parseFloat(item.unit_price),\n              price_mode: item.price_mode || 'standard'\n            };\n          })\n        };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      if (saleMode === 'complete') {\n        // Complete the sale immediately\n        try {\n          await api.post(`/sales/${saleId}/complete/`);\n          \n          // Auto-print the receipt after successful sale completion (only if printReceipt is true)\n          if (printReceipt) {\n            await autoPrintReceipt(saleNumber, response.data, 'completed');\n          }\n      \n      // Clear cart and customer info\n      setCart([]);\n      setCustomerInfo({ name: '', phone: '', email: '' });\n      \n          // Reset price mode to standard after sale\n          setPriceMode('standard');\n          \n          // Wait a moment for the backend to process stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n          \n          // Refresh product data to update stock quantities\n          await fetchProducts();\n          \n          // Wait another moment for stock availability to be updated\n          await new Promise(resolve => setTimeout(resolve, 500)); // Wait 0.5 seconds\n          \n          // Refresh stock availability for all products\n          refreshStockAvailability();\n          \n          alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n        } catch (completeError) {\n          // Sale was created but completion failed\n          console.error('Sale completion error:', completeError);\n          setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n          \n          // Still clear the cart since the sale was created\n          setCart([]);\n          setCustomerInfo({ name: '', phone: '', email: '' });\n          \n          // Wait for backend to process any completed stock movements\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Refresh data\n          await fetchProducts();\n          await new Promise(resolve => setTimeout(resolve, 500));\n          refreshStockAvailability();\n        }\n      } else {\n        // Create pending sale (don't complete it)\n        \n        // Print receipt for pending sale if requested\n        if (printReceipt) {\n          await autoPrintReceipt(saleNumber, response.data, 'pending');\n        }\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Reset price mode to standard after sale\n        setPriceMode('standard');\n        \n        alert(`Pending sale created! Sale Number: ${saleNumber}\\nYou can complete it later in Sales Management.`);\n      }\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'search') {\n      // For search, update the input state immediately (no API call)\n      setSearchInput(value);\n    } else {\n      // For other filters (like category), update immediately\n    const newFilters = { ...filters, [filterType]: value };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n    }\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    setSearchInput(''); // Clear the search input state\n    fetchProducts(clearedFilters);\n  };\n\n  const toggleCategorySellable = async (categoryId, isSellable) => {\n    try {\n      await api.patch(`/products/categories/${categoryId}/`, {\n        is_sellable: !isSellable\n      });\n      // Refresh categories to show updated status\n      await fetchCategories();\n      // Refresh products to apply new sellable filter\n      fetchProducts(filters);\n    } catch (err) {\n      console.error('Error updating category sellable status:', err);\n      setError('Failed to update category status');\n    }\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseFloat(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Skip stock validation for pending sales since stock won't be removed until completion\n    if (saleMode === 'complete') {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        setEditingQuantity(null);\n        return;\n      }\n      \n      // For handleQuantitySubmit, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n        .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (newQuantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        setEditingQuantity(null);\n        return;\n      }\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id, item.price_mode);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity, item.price_mode);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      \n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => (u.unit?.id || u.unit) === selectedUnitId);\n        \n        if (selectedCompatibleUnit) {\n          // Get the price for this unit from stock availability\n          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n          const unitStockInfo = updatedStockInfo?.find(u => u.id === (selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit));\n          const unitPrice = getCurrentUnitPrice(product, unitStockInfo) || getCurrentPrice(product);\n          \n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit?.id || selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit_name,\n            symbol: selectedCompatibleUnit.unit_symbol,\n            price: unitPrice\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>Point of Sale</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <form className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.filter(cat => cat.is_sellable).map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n              <Button \n                variant=\"outline\" \n                size=\"small\" \n                onClick={() => setShowSellableToggle(!showSellableToggle)}\n                style={{ marginTop: '0.5rem' }}\n              >\n                {showSellableToggle ? 'Hide' : 'Manage'} Categories\n              </Button>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Price Mode:</label>\n              <div className=\"price-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'standard' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('standard')}\n                >\n                  Standard\n                </button>\n                <button \n                  type=\"button\"\n                  className={`price-mode-btn ${priceMode === 'wholesale' ? 'active' : ''}`}\n                  onClick={() => setPriceMode('wholesale')}\n                >\n                  Wholesale\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Sale Mode:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'complete' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('complete')}\n                  title=\"Sale will be completed immediately and stock will be deducted\"\n                >\n                  Complete\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${saleMode === 'pending' ? 'active' : ''}`}\n                  onClick={() => setSaleMode('pending')}\n                  title=\"Sale will be created as pending and can be completed later\"\n                >\n                  Pending\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Print Receipt:</label>\n              <div className=\"sale-mode-toggle\">\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(true)}\n                  title=\"Print receipt after sale\"\n                >\n                  Yes\n                </button>\n                <button \n                  type=\"button\"\n                  className={`sale-mode-btn ${!printReceipt ? 'active' : ''}`}\n                  onClick={() => setPrintReceipt(false)}\n                  title=\"Don't print receipt\"\n                >\n                  No\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                ref={searchInputRef}\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={searchInput}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </form>\n\n          {/* Category Management Section */}\n          {showSellableToggle && (\n            <div className=\"category-management\" style={{ \n              marginBottom: '1rem', \n              padding: '1rem', \n              backgroundColor: '#f9fafb', \n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <h3 style={{ margin: '0 0 1rem 0', fontSize: '1rem', fontWeight: '600' }}>\n                Manage Sellable Categories\n              </h3>\n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', \n                gap: '0.5rem' \n              }}>\n                {categories.map(category => (\n                  <div key={category.id} style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    padding: '0.5rem',\n                    backgroundColor: 'white',\n                    borderRadius: '0.375rem',\n                    border: '1px solid #e5e7eb'\n                  }}>\n                    <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\n                      {category.name}\n                    </span>\n                    <button\n                      onClick={() => toggleCategorySellable(category.id, category.is_sellable)}\n                      style={{\n                        padding: '0.25rem 0.5rem',\n                        fontSize: '0.75rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid',\n                        cursor: 'pointer',\n                        backgroundColor: category.is_sellable ? '#dcfce7' : '#fee2e2',\n                        borderColor: category.is_sellable ? '#16a34a' : '#dc2626',\n                        color: category.is_sellable ? '#15803d' : '#dc2626'\n                      }}\n                    >\n                      {category.is_sellable ? 'Sellable' : 'Not Sellable'}\n                    </button>\n          </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    {getCurrentPrice(product).toFixed(2)} MGA\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit?.id || compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {unitStockInfo.available_quantity}\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map((compatibleUnit, index) => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === (compatibleUnit.unit?.id || compatibleUnit.unit));\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit?.name || compatibleUnit.unit_name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit?.symbol || compatibleUnit.unit_symbol;\n                          \n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit?.id || compatibleUnit.unit} \n                              value={compatibleUnit.unit?.id || compatibleUnit.unit}\n                              disabled={!isAvailable}\n                            >\n                              {unitName} ({unitSymbol}) - {getCurrentUnitPrice(product, unitStockInfo).toFixed(2)} MGA\n                              {!isAvailable ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Skip stock validation for pending sales since stock won't be removed until completion\n                        if (saleMode === 'pending') {\n                          return false; // Always allow for pending sales\n                        }\n                        \n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        // For pending sales, always show \"Add to Cart\" regardless of stock\n                        if (saleMode === 'pending') {\n                          return 'Add to Cart';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <p className=\"empty-cart\">Cart is empty</p>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}-${item.price_mode}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                      <span className={`price-mode-badge ${item.price_mode}`}>\n                        {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                      </span>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      {parseFloat(item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1, item.price_mode)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title=\"Click to edit quantity\"\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1, item.price_mode)}\n                          disabled={(() => {\n                            // Skip stock validation for pending sales since stock won't be removed until completion\n                            if (saleMode === 'pending') {\n                              return false; // Always allow for pending sales\n                            }\n                            \n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id && cartItem.price_mode === item.price_mode)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      {(item.quantity * item.unit_price).toFixed(2)} MGA\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id, item.price_mode)}\n                        title=\"Remove item\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>{calculateCost().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>{calculateTax().toFixed(2)} MGA</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>{calculateSubtotal().toFixed(2)} MGA</span>\n                </div>\n              </div>\n\n              <form className=\"checkout-form\">\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customer Name (Optional)\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n              </form>\n\n              <div className=\"checkout-actions\">\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                  disabled={cart.length === 0}\n                >\n                  {saleMode === 'complete' ? 'Complete Sale' : 'Create Pending Sale'}\n                  {printReceipt && ' & Print Receipt'}\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}