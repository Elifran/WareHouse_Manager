# Generated by Django 4.2.7 on 2025-10-07 06:12

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sales', '0022_sale_packaging_total_salepackaging_packagingreturn'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0020_product_has_packaging_product_packaging_price_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PackagingTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_number', models.CharField(max_length=50, unique=True)),
                ('transaction_type', models.CharField(choices=[('consignation', 'Consignation (Paid)'), ('exchange', 'Exchange'), ('return', 'Return'), ('due', 'Due (To be returned)')], default='consignation', max_length=20)),
                ('customer_name', models.CharField(blank=True, max_length=200)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total packaging amount', max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount paid for packaging', max_digits=10)),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0, help_text='Remaining amount to be paid', max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer')], default='cash', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='packaging_transactions', to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(help_text='Related sale', on_delete=django.db.models.deletion.CASCADE, related_name='packaging_transactions', to='sales.sale')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PackagingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='packaging_management.packagingtransaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PackagingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity of packaging items', validators=[django.core.validators.MinValueValidator(0.001)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Packaging price per unit', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total packaging price', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this packaging item')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(help_text='Product that has packaging', on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='packaging_management.packagingtransaction')),
                ('unit', models.ForeignKey(blank=True, help_text='Unit used for this packaging item', null=True, on_delete=django.db.models.deletion.PROTECT, to='products.unit')),
            ],
            options={
                'ordering': ['created_at'],
                'unique_together': {('transaction', 'product', 'unit')},
            },
        ),
    ]
