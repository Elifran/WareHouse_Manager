{"ast":null,"code":"import React,{useState}from'react';import Button from'./Button';import'./PrintButton.css';// Helper functions for generating print content\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const generateInventoryContent=data=>{return\"\\n    <div class=\\\"info-section\\\">\\n      <h3>Inventory Summary</h3>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Total Products:</span>\\n        <span class=\\\"info-value\\\">\".concat(Array.isArray(data)?data.length:0,\"</span>\\n      </div>\\n    </div>\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Product Name</th>\\n          <th>SKU</th>\\n          <th>Stock Quantity</th>\\n          <th>Unit Price</th>\\n          <th>Category</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \").concat(Array.isArray(data)?data.map(item=>{var _item$category;return\"\\n          <tr>\\n            <td>\".concat(item.name||'N/A',\"</td>\\n            <td>\").concat(item.sku||'N/A',\"</td>\\n            <td>\").concat(item.stock_quantity||0,\"</td>\\n            <td>$\").concat(parseFloat(item.price||0).toFixed(2),\"</td>\\n            <td>\").concat(((_item$category=item.category)===null||_item$category===void 0?void 0:_item$category.name)||'N/A',\"</td>\\n          </tr>\\n        \");}).join(''):'',\"\\n      </tbody>\\n    </table>\\n  \");};const generatePurchaseOrderContent=data=>{var _data$supplier;return\"\\n    <div class=\\\"info-section\\\">\\n      <h3>Purchase Order Information</h3>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Order Number:</span>\\n        <span class=\\\"info-value\\\">\".concat(data.order_number||'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Supplier:</span>\\n        <span class=\\\"info-value\\\">\").concat(((_data$supplier=data.supplier)===null||_data$supplier===void 0?void 0:_data$supplier.name)||'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Order Date:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.order_date?new Date(data.order_date).toLocaleDateString():'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Status:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.status||'N/A',\"</span>\\n      </div>\\n    </div>\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Product</th>\\n          <th>Quantity Ordered</th>\\n          <th>Unit Cost</th>\\n          <th>Total Cost</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \").concat(data.items?data.items.map(item=>{var _item$product;return\"\\n          <tr>\\n            <td>\".concat(((_item$product=item.product)===null||_item$product===void 0?void 0:_item$product.name)||'N/A',\"</td>\\n            <td>\").concat(item.quantity_ordered||0,\"</td>\\n            <td>$\").concat(parseFloat(item.unit_cost||0).toFixed(2),\"</td>\\n            <td>$\").concat(parseFloat((item.quantity_ordered||0)*(item.unit_cost||0)).toFixed(2),\"</td>\\n          </tr>\\n        \");}).join(''):'',\"\\n      </tbody>\\n      <tfoot>\\n        <tr class=\\\"total-row\\\">\\n          <td colspan=\\\"3\\\">Total Amount:</td>\\n          <td>$\").concat(parseFloat(data.total_amount||0).toFixed(2),\"</td>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  \");};const generateDeliveryContent=data=>{var _data$purchase_order;return\"\\n    <div class=\\\"info-section\\\">\\n      <h3>Delivery Information</h3>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Delivery Number:</span>\\n        <span class=\\\"info-value\\\">\".concat(data.delivery_number||'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Purchase Order:</span>\\n        <span class=\\\"info-value\\\">\").concat(((_data$purchase_order=data.purchase_order)===null||_data$purchase_order===void 0?void 0:_data$purchase_order.order_number)||'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Delivery Date:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.delivery_date?new Date(data.delivery_date).toLocaleDateString():'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Status:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.status||'N/A',\"</span>\\n      </div>\\n    </div>\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Product</th>\\n          <th>Quantity Received</th>\\n          <th>Unit Cost</th>\\n          <th>Total Cost</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \").concat(data.items?data.items.map(item=>{var _item$product2;return\"\\n          <tr>\\n            <td>\".concat(((_item$product2=item.product)===null||_item$product2===void 0?void 0:_item$product2.name)||'N/A',\"</td>\\n            <td>\").concat(item.quantity_received||0,\"</td>\\n            <td>$\").concat(parseFloat(item.unit_cost||0).toFixed(2),\"</td>\\n            <td>$\").concat(parseFloat((item.quantity_received||0)*(item.unit_cost||0)).toFixed(2),\"</td>\\n          </tr>\\n        \");}).join(''):'',\"\\n      </tbody>\\n      <tfoot>\\n        <tr class=\\\"total-row\\\">\\n          <td colspan=\\\"3\\\">Total Amount:</td>\\n          <td>$\").concat(parseFloat(data.total_amount||0).toFixed(2),\"</td>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  \");};const generateSaleContent=data=>{// Debug: Log the data being processed\nconsole.log('generateSaleContent - Data received:',data);console.log('generateSaleContent - Items array:',data.items);console.log('generateSaleContent - Items length:',data.items?data.items.length:'No items');return\"\\n    <div class=\\\"info-section\\\">\\n      <h3>Sale Information</h3>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Sale Number:</span>\\n        <span class=\\\"info-value\\\">\".concat(data.sale_number||'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Customer:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.customer_name||'Walk-in Customer',\"</span>\\n      </div>\\n      \").concat(data.customer_phone?\"\\n        <div class=\\\"info-row\\\">\\n          <span class=\\\"info-label\\\">Phone:</span>\\n          <span class=\\\"info-value\\\">\".concat(data.customer_phone,\"</span>\\n        </div>\\n      \"):'',\"\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Date:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.created_at?new Date(data.created_at).toLocaleDateString():'N/A',\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Status:</span>\\n        <span class=\\\"info-value\\\">\").concat(data.status||'N/A',\"</span>\\n      </div>\\n    </div>\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Product</th>\\n          <th>Quantity</th>\\n          <th>Unit</th>\\n          <th>Unit Price</th>\\n          <th>Total</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \").concat(data.items?data.items.map(item=>\"\\n          <tr>\\n            <td>\".concat(item.product_name||'N/A',\"</td>\\n            <td>\").concat(item.quantity||0,\"</td>\\n            <td>\").concat(item.unit_name||'piece',\"</td>\\n            <td>$\").concat(parseFloat(item.unit_price||0).toFixed(2),\"</td>\\n            <td>$\").concat(parseFloat(item.total_price||0).toFixed(2),\"</td>\\n          </tr>\\n        \")).join(''):'<tr><td colspan=\"5\">No items found</td></tr>',\"\\n      </tbody>\\n      <tfoot>\\n        <tr class=\\\"total-row\\\">\\n          <td colspan=\\\"4\\\">Total Amount:</td>\\n          <td>$\").concat(parseFloat(data.total_amount||0).toFixed(2),\"</td>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  \");};const generateSalesHistoryContent=data=>{return\"\\n    <div class=\\\"info-section\\\">\\n      <h3>Sales Report Summary</h3>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Total Sales:</span>\\n        <span class=\\\"info-value\\\">\".concat(Array.isArray(data)?data.length:0,\"</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Total Revenue:</span>\\n        <span class=\\\"info-value\\\">$\").concat(Array.isArray(data)?data.reduce((sum,sale)=>sum+parseFloat(sale.total_amount||0),0).toFixed(2):'0.00',\"</span>\\n      </div>\\n    </div>\\n    <table>\\n      <thead>\\n        <tr>\\n          <th>Sale Number</th>\\n          <th>Customer</th>\\n          <th>Date</th>\\n          <th>Total Amount</th>\\n          <th>Status</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        \").concat(Array.isArray(data)?data.map(sale=>\"\\n          <tr>\\n            <td>\".concat(sale.sale_number||'N/A',\"</td>\\n            <td>\").concat(sale.customer_name||'Walk-in Customer',\"</td>\\n            <td>\").concat(sale.created_at?new Date(sale.created_at).toLocaleDateString():'N/A',\"</td>\\n            <td>$\").concat(parseFloat(sale.total_amount||0).toFixed(2),\"</td>\\n            <td>\").concat(sale.status||'N/A',\"</td>\\n          </tr>\\n        \")).join(''):'',\"\\n      </tbody>\\n    </table>\\n  \");};const generateDefaultContent=data=>{return\"\\n    <div class=\\\"info-section\\\">\\n      <h3>Document Information</h3>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Document Type:</span>\\n        <span class=\\\"info-value\\\">General Document</span>\\n      </div>\\n      <div class=\\\"info-row\\\">\\n        <span class=\\\"info-label\\\">Generated:</span>\\n        <span class=\\\"info-value\\\">\".concat(new Date().toLocaleString(),\"</span>\\n      </div>\\n    </div>\\n    <div class=\\\"info-section\\\">\\n      <h3>Content</h3>\\n      <pre>\").concat(JSON.stringify(data,null,2),\"</pre>\\n    </div>\\n  \");};// Export the generatePrintContent function\nexport const generatePrintContent=(data,title,type)=>{console.log('generatePrintContent called with:',{data,title,type});const currentDate=new Date().toLocaleDateString();const currentTime=new Date().toLocaleTimeString();const printTimestamp=new Date().toISOString();const printId=data.print_id||\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9));console.log('Generating HTML content for type:',type);let content=\"\\n    <!DOCTYPE html>\\n    <html>\\n    <head>\\n      <title>\".concat(title,\"</title>\\n      <style>\\n        body { \\n          font-family: Arial, sans-serif; \\n          margin: 20px; \\n          color: #333;\\n          line-height: 1.4;\\n        }\\n        .header { \\n          text-align: center; \\n          border-bottom: 2px solid #333; \\n          padding-bottom: 10px; \\n          margin-bottom: 20px; \\n        }\\n        .header h1 { \\n          margin: 0; \\n          color: #2c3e50; \\n          font-size: 24px;\\n        }\\n        .header .date { \\n          color: #666; \\n          font-size: 14px; \\n          margin-top: 5px;\\n        }\\n        .header .print-info { \\n          color: #888; \\n          font-size: 12px; \\n          margin-top: 3px;\\n          font-family: monospace;\\n        }\\n        .info-section { \\n          margin-bottom: 20px; \\n          padding: 15px; \\n          background: #f8f9fa; \\n          border-radius: 5px; \\n        }\\n        .info-section h3 { \\n          margin: 0 0 10px 0; \\n          color: #2c3e50; \\n          font-size: 16px;\\n        }\\n        .info-row { \\n          display: flex; \\n          justify-content: space-between; \\n          margin-bottom: 5px; \\n        }\\n        .info-label { \\n          font-weight: bold; \\n          color: #555; \\n        }\\n        .info-value { \\n          color: #333; \\n        }\\n        table { \\n          width: 100%; \\n          border-collapse: collapse; \\n          margin-top: 10px; \\n        }\\n        th, td { \\n          border: 1px solid #ddd; \\n          padding: 8px; \\n          text-align: left; \\n        }\\n        th { \\n          background-color: #f2f2f2; \\n          font-weight: bold; \\n          color: #2c3e50;\\n        }\\n        .total-row { \\n          font-weight: bold; \\n          background-color: #e9ecef; \\n        }\\n        .footer { \\n          margin-top: 30px; \\n          text-align: center; \\n          color: #666; \\n          font-size: 12px; \\n          border-top: 1px solid #ddd; \\n          padding-top: 10px; \\n        }\\n        @media print {\\n          body { margin: 0; }\\n          .no-print { display: none; }\\n        }\\n      </style>\\n    </head>\\n    <body>\\n      <div class=\\\"header\\\">\\n        <h1>\").concat(title,\"</h1>\\n        <div class=\\\"date\\\">Generated on \").concat(currentDate,\" at \").concat(currentTime,\"</div>\\n        <div class=\\\"print-info\\\">Print ID: \").concat(printId,\" | Timestamp: \").concat(printTimestamp,\"</div>\\n      </div>\\n  \");// Add type-specific content\nconsole.log('Processing switch statement for type:',type);switch(type){case'inventory':console.log('Generating inventory content');content+=generateInventoryContent(data);break;case'purchase_order':console.log('Generating purchase order content');content+=generatePurchaseOrderContent(data);break;case'delivery':console.log('Generating delivery content');content+=generateDeliveryContent(data);break;case'sale':console.log('Generating sale content');content+=generateSaleContent(data);break;case'sales_history':console.log('Generating sales history content');content+=generateSalesHistoryContent(data);break;default:console.log('Using default content generator');content+=generateDefaultContent(data);}console.log('Content generated, length:',content.length);content+=\"\\n      <div class=\\\"footer\\\">\\n        <p>Generated by Beverage Management System</p>\\n        <p>Print ID: \".concat(printId,\" | Generated: \").concat(printTimestamp,\"</p>\\n        <p>Document Type: \").concat(type.toUpperCase(),\" | User: \").concat(data.user_name||'System',\"</p>\\n      </div>\\n    </body>\\n    </html>\\n  \");return content;};const PrintButton=_ref=>{let{data,title,type='default',onValidate=null,validateText='Validate & Print',printText='Print',className='',disabled=false,showValidateOption=false}=_ref;const[isPrinting,setIsPrinting]=useState(false);const[showPrintOptions,setShowPrintOptions]=useState(false);const handlePrint=async function(){let validateFirst=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;console.log('=== PRINT DEBUGGING START ===');console.log('Print data:',data);console.log('Print title:',title);console.log('Print type:',type);if(validateFirst&&onValidate){try{await onValidate();}catch(error){console.error('Validation failed:',error);return;}}setIsPrinting(true);try{// Create print content\nconsole.log('Generating print content...');const printContent=generatePrintContent(data,title,type);console.log('Generated print content length:',printContent.length);console.log('Generated print content preview:',printContent.substring(0,500)+'...');// Open print window\nconsole.log('Opening print window...');const printWindow=window.open('','_blank','width=800,height=600');if(!printWindow){throw new Error('Failed to open print window. Please check popup blockers.');}console.log('Writing content to print window...');printWindow.document.write(printContent);printWindow.document.close();// Wait for content to load then print\nprintWindow.onload=()=>{console.log('Print window loaded, starting print...');printWindow.focus();printWindow.print();printWindow.close();console.log('Print completed');};// Fallback timeout\nsetTimeout(()=>{if(!printWindow.closed){console.log('Print window still open after timeout, closing...');printWindow.close();}},5000);}catch(error){console.error('Print error:',error);alert('Failed to print. Please try again. Error: '+error.message);}finally{setIsPrinting(false);setShowPrintOptions(false);console.log('=== PRINT DEBUGGING END ===');}};if(showValidateOption&&onValidate){return/*#__PURE__*/_jsxs(\"div\",{className:\"print-button-container \".concat(className),children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>setShowPrintOptions(!showPrintOptions),disabled:disabled,children:showPrintOptions?'Hide Options':'Show Options'}),showPrintOptions&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>handlePrint(true),disabled:disabled||isPrinting,children:isPrinting?'Processing...':validateText}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(false),disabled:disabled||isPrinting,children:isPrinting?'Preparing...':printText})]})]});}return/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"small\",onClick:()=>handlePrint(false),disabled:disabled||isPrinting,className:className,children:isPrinting?'Printing...':printText});};export default PrintButton;","map":{"version":3,"names":["React","useState","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","generateInventoryContent","data","concat","Array","isArray","length","map","item","_item$category","name","sku","stock_quantity","parseFloat","price","toFixed","category","join","generatePurchaseOrderContent","_data$supplier","order_number","supplier","order_date","Date","toLocaleDateString","status","items","_item$product","product","quantity_ordered","unit_cost","total_amount","generateDeliveryContent","_data$purchase_order","delivery_number","purchase_order","delivery_date","_item$product2","quantity_received","generateSaleContent","console","log","sale_number","customer_name","customer_phone","created_at","product_name","quantity","unit_name","unit_price","total_price","generateSalesHistoryContent","reduce","sum","sale","generateDefaultContent","toLocaleString","JSON","stringify","generatePrintContent","title","type","currentDate","currentTime","toLocaleTimeString","printTimestamp","toISOString","printId","print_id","now","Math","random","toString","substr","content","toUpperCase","user_name","PrintButton","_ref","onValidate","validateText","printText","className","disabled","showValidateOption","isPrinting","setIsPrinting","showPrintOptions","setShowPrintOptions","handlePrint","validateFirst","arguments","undefined","error","printContent","substring","printWindow","window","open","Error","document","write","close","onload","focus","print","setTimeout","closed","alert","message","children","variant","size","onClick"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/components/PrintButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button';\nimport './PrintButton.css';\n\n// Helper functions for generating print content\nconst generateInventoryContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Inventory Summary</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Products:</span>\n        <span class=\"info-value\">${Array.isArray(data) ? data.length : 0}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product Name</th>\n          <th>SKU</th>\n          <th>Stock Quantity</th>\n          <th>Unit Price</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Array.isArray(data) ? data.map(item => `\n          <tr>\n            <td>${item.name || 'N/A'}</td>\n            <td>${item.sku || 'N/A'}</td>\n            <td>${item.stock_quantity || 0}</td>\n            <td>$${parseFloat(item.price || 0).toFixed(2)}</td>\n            <td>${item.category?.name || 'N/A'}</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n    </table>\n  `;\n};\n\nconst generatePurchaseOrderContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Purchase Order Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Order Number:</span>\n        <span class=\"info-value\">${data.order_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Supplier:</span>\n        <span class=\"info-value\">${data.supplier?.name || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Order Date:</span>\n        <span class=\"info-value\">${data.order_date ? new Date(data.order_date).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity Ordered</th>\n          <th>Unit Cost</th>\n          <th>Total Cost</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => `\n          <tr>\n            <td>${item.product?.name || 'N/A'}</td>\n            <td>${item.quantity_ordered || 0}</td>\n            <td>$${parseFloat(item.unit_cost || 0).toFixed(2)}</td>\n            <td>$${parseFloat((item.quantity_ordered || 0) * (item.unit_cost || 0)).toFixed(2)}</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"3\">Total Amount:</td>\n          <td>$${parseFloat(data.total_amount || 0).toFixed(2)}</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\n\nconst generateDeliveryContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Delivery Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Delivery Number:</span>\n        <span class=\"info-value\">${data.delivery_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Purchase Order:</span>\n        <span class=\"info-value\">${data.purchase_order?.order_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Delivery Date:</span>\n        <span class=\"info-value\">${data.delivery_date ? new Date(data.delivery_date).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity Received</th>\n          <th>Unit Cost</th>\n          <th>Total Cost</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => `\n          <tr>\n            <td>${item.product?.name || 'N/A'}</td>\n            <td>${item.quantity_received || 0}</td>\n            <td>$${parseFloat(item.unit_cost || 0).toFixed(2)}</td>\n            <td>$${parseFloat((item.quantity_received || 0) * (item.unit_cost || 0)).toFixed(2)}</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"3\">Total Amount:</td>\n          <td>$${parseFloat(data.total_amount || 0).toFixed(2)}</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\n\nconst generateSaleContent = (data) => {\n  // Debug: Log the data being processed\n  console.log('generateSaleContent - Data received:', data);\n  console.log('generateSaleContent - Items array:', data.items);\n  console.log('generateSaleContent - Items length:', data.items ? data.items.length : 'No items');\n  \n  return `\n    <div class=\"info-section\">\n      <h3>Sale Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Sale Number:</span>\n        <span class=\"info-value\">${data.sale_number || 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Customer:</span>\n        <span class=\"info-value\">${data.customer_name || 'Walk-in Customer'}</span>\n      </div>\n      ${data.customer_phone ? `\n        <div class=\"info-row\">\n          <span class=\"info-label\">Phone:</span>\n          <span class=\"info-value\">${data.customer_phone}</span>\n        </div>\n      ` : ''}\n      <div class=\"info-row\">\n        <span class=\"info-label\">Date:</span>\n        <span class=\"info-value\">${data.created_at ? new Date(data.created_at).toLocaleDateString() : 'N/A'}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Status:</span>\n        <span class=\"info-value\">${data.status || 'N/A'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Quantity</th>\n          <th>Unit</th>\n          <th>Unit Price</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${data.items ? data.items.map(item => `\n          <tr>\n            <td>${item.product_name || 'N/A'}</td>\n            <td>${item.quantity || 0}</td>\n            <td>${item.unit_name || 'piece'}</td>\n            <td>$${parseFloat(item.unit_price || 0).toFixed(2)}</td>\n            <td>$${parseFloat(item.total_price || 0).toFixed(2)}</td>\n          </tr>\n        `).join('') : '<tr><td colspan=\"5\">No items found</td></tr>'}\n      </tbody>\n      <tfoot>\n        <tr class=\"total-row\">\n          <td colspan=\"4\">Total Amount:</td>\n          <td>$${parseFloat(data.total_amount || 0).toFixed(2)}</td>\n        </tr>\n      </tfoot>\n    </table>\n  `;\n};\n\nconst generateSalesHistoryContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Sales Report Summary</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Sales:</span>\n        <span class=\"info-value\">${Array.isArray(data) ? data.length : 0}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Total Revenue:</span>\n        <span class=\"info-value\">$${Array.isArray(data) ? data.reduce((sum, sale) => sum + parseFloat(sale.total_amount || 0), 0).toFixed(2) : '0.00'}</span>\n      </div>\n    </div>\n    <table>\n      <thead>\n        <tr>\n          <th>Sale Number</th>\n          <th>Customer</th>\n          <th>Date</th>\n          <th>Total Amount</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${Array.isArray(data) ? data.map(sale => `\n          <tr>\n            <td>${sale.sale_number || 'N/A'}</td>\n            <td>${sale.customer_name || 'Walk-in Customer'}</td>\n            <td>${sale.created_at ? new Date(sale.created_at).toLocaleDateString() : 'N/A'}</td>\n            <td>$${parseFloat(sale.total_amount || 0).toFixed(2)}</td>\n            <td>${sale.status || 'N/A'}</td>\n          </tr>\n        `).join('') : ''}\n      </tbody>\n    </table>\n  `;\n};\n\nconst generateDefaultContent = (data) => {\n  return `\n    <div class=\"info-section\">\n      <h3>Document Information</h3>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Document Type:</span>\n        <span class=\"info-value\">General Document</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"info-label\">Generated:</span>\n        <span class=\"info-value\">${new Date().toLocaleString()}</span>\n      </div>\n    </div>\n    <div class=\"info-section\">\n      <h3>Content</h3>\n      <pre>${JSON.stringify(data, null, 2)}</pre>\n    </div>\n  `;\n};\n\n// Export the generatePrintContent function\nexport const generatePrintContent = (data, title, type) => {\n  console.log('generatePrintContent called with:', { data, title, type });\n  \n  const currentDate = new Date().toLocaleDateString();\n  const currentTime = new Date().toLocaleTimeString();\n  const printTimestamp = new Date().toISOString();\n  const printId = data.print_id || `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  \n  console.log('Generating HTML content for type:', type);\n  \n  let content = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <title>${title}</title>\n      <style>\n        body { \n          font-family: Arial, sans-serif; \n          margin: 20px; \n          color: #333;\n          line-height: 1.4;\n        }\n        .header { \n          text-align: center; \n          border-bottom: 2px solid #333; \n          padding-bottom: 10px; \n          margin-bottom: 20px; \n        }\n        .header h1 { \n          margin: 0; \n          color: #2c3e50; \n          font-size: 24px;\n        }\n        .header .date { \n          color: #666; \n          font-size: 14px; \n          margin-top: 5px;\n        }\n        .header .print-info { \n          color: #888; \n          font-size: 12px; \n          margin-top: 3px;\n          font-family: monospace;\n        }\n        .info-section { \n          margin-bottom: 20px; \n          padding: 15px; \n          background: #f8f9fa; \n          border-radius: 5px; \n        }\n        .info-section h3 { \n          margin: 0 0 10px 0; \n          color: #2c3e50; \n          font-size: 16px;\n        }\n        .info-row { \n          display: flex; \n          justify-content: space-between; \n          margin-bottom: 5px; \n        }\n        .info-label { \n          font-weight: bold; \n          color: #555; \n        }\n        .info-value { \n          color: #333; \n        }\n        table { \n          width: 100%; \n          border-collapse: collapse; \n          margin-top: 10px; \n        }\n        th, td { \n          border: 1px solid #ddd; \n          padding: 8px; \n          text-align: left; \n        }\n        th { \n          background-color: #f2f2f2; \n          font-weight: bold; \n          color: #2c3e50;\n        }\n        .total-row { \n          font-weight: bold; \n          background-color: #e9ecef; \n        }\n        .footer { \n          margin-top: 30px; \n          text-align: center; \n          color: #666; \n          font-size: 12px; \n          border-top: 1px solid #ddd; \n          padding-top: 10px; \n        }\n        @media print {\n          body { margin: 0; }\n          .no-print { display: none; }\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${title}</h1>\n        <div class=\"date\">Generated on ${currentDate} at ${currentTime}</div>\n        <div class=\"print-info\">Print ID: ${printId} | Timestamp: ${printTimestamp}</div>\n      </div>\n  `;\n\n  // Add type-specific content\n  console.log('Processing switch statement for type:', type);\n  switch (type) {\n    case 'inventory':\n      console.log('Generating inventory content');\n      content += generateInventoryContent(data);\n      break;\n    case 'purchase_order':\n      console.log('Generating purchase order content');\n      content += generatePurchaseOrderContent(data);\n      break;\n    case 'delivery':\n      console.log('Generating delivery content');\n      content += generateDeliveryContent(data);\n      break;\n    case 'sale':\n      console.log('Generating sale content');\n      content += generateSaleContent(data);\n      break;\n    case 'sales_history':\n      console.log('Generating sales history content');\n      content += generateSalesHistoryContent(data);\n      break;\n    default:\n      console.log('Using default content generator');\n      content += generateDefaultContent(data);\n  }\n  \n  console.log('Content generated, length:', content.length);\n\n  content += `\n      <div class=\"footer\">\n        <p>Generated by Beverage Management System</p>\n        <p>Print ID: ${printId} | Generated: ${printTimestamp}</p>\n        <p>Document Type: ${type.toUpperCase()} | User: ${data.user_name || 'System'}</p>\n      </div>\n    </body>\n    </html>\n  `;\n\n  return content;\n};\n\nconst PrintButton = ({ \n  data, \n  title, \n  type = 'default', \n  onValidate = null, \n  validateText = 'Validate & Print',\n  printText = 'Print',\n  className = '',\n  disabled = false,\n  showValidateOption = false\n}) => {\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [showPrintOptions, setShowPrintOptions] = useState(false);\n\n  const handlePrint = async (validateFirst = false) => {\n    console.log('=== PRINT DEBUGGING START ===');\n    console.log('Print data:', data);\n    console.log('Print title:', title);\n    console.log('Print type:', type);\n    \n    if (validateFirst && onValidate) {\n      try {\n        await onValidate();\n      } catch (error) {\n        console.error('Validation failed:', error);\n        return;\n      }\n    }\n\n    setIsPrinting(true);\n    \n    try {\n      // Create print content\n      console.log('Generating print content...');\n      const printContent = generatePrintContent(data, title, type);\n      console.log('Generated print content length:', printContent.length);\n      console.log('Generated print content preview:', printContent.substring(0, 500) + '...');\n      \n      // Open print window\n      console.log('Opening print window...');\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\n      \n      if (!printWindow) {\n        throw new Error('Failed to open print window. Please check popup blockers.');\n      }\n      \n      console.log('Writing content to print window...');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      \n      // Wait for content to load then print\n      printWindow.onload = () => {\n        console.log('Print window loaded, starting print...');\n        printWindow.focus();\n        printWindow.print();\n        printWindow.close();\n        console.log('Print completed');\n      };\n      \n      // Fallback timeout\n      setTimeout(() => {\n        if (!printWindow.closed) {\n          console.log('Print window still open after timeout, closing...');\n          printWindow.close();\n        }\n      }, 5000);\n      \n    } catch (error) {\n      console.error('Print error:', error);\n      alert('Failed to print. Please try again. Error: ' + error.message);\n    } finally {\n      setIsPrinting(false);\n      setShowPrintOptions(false);\n      console.log('=== PRINT DEBUGGING END ===');\n    }\n  };\n\n  if (showValidateOption && onValidate) {\n    return (\n      <div className={`print-button-container ${className}`}>\n        <Button\n          variant=\"outline\"\n          size=\"small\"\n          onClick={() => setShowPrintOptions(!showPrintOptions)}\n          disabled={disabled}\n        >\n          {showPrintOptions ? 'Hide Options' : 'Show Options'}\n        </Button>\n        {showPrintOptions && (\n          <>\n            <Button\n              variant=\"primary\"\n              size=\"small\"\n              onClick={() => handlePrint(true)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? 'Processing...' : validateText}\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"small\"\n              onClick={() => handlePrint(false)}\n              disabled={disabled || isPrinting}\n            >\n              {isPrinting ? 'Preparing...' : printText}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"small\"\n      onClick={() => handlePrint(false)}\n      disabled={disabled || isPrinting}\n      className={className}\n    >\n      {isPrinting ? 'Printing...' : printText}\n    </Button>\n  );\n};\n\nexport default PrintButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}