{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton from '../components/PrintButton';\nimport './PointOfSale.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PointOfSale = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n\n    // Set default selected units (base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        // Find the base unit (is_base_unit: true) or default unit (is_default: true)\n        const baseUnit = product.compatible_units.find(u => u.unit.is_base_unit || u.is_default);\n        if (baseUnit) {\n          defaultUnits[product.id] = baseUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n\n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      console.log('Bulk stock availability response:', response.data);\n      console.log('Processed stock data:', stockData);\n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n  const getUpdatedStockAvailability = productId => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart.filter(item => item.id === productId).reduce((total, item) => {\n      // Find the unit info to get conversion factor\n      const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n      if (unitInfo && unitInfo.conversion_factor) {\n        // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n        return total + item.quantity * unitInfo.conversion_factor;\n      } else if (unitInfo && unitInfo.is_base_unit) {\n        // If it's the base unit (pieces), no conversion needed\n        return total + item.quantity;\n      }\n      return total;\n    }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n\n      // Always filter for active products\n      params.append('is_active', 'true');\n\n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n  const fetchStockAvailability = async productId => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n  const addToCart = (product, selectedUnit = null) => {\n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || product.compatible_units && product.compatible_units[0] || {\n      id: product.base_unit,\n      name: 'Piece',\n      symbol: 'piece'\n    };\n\n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n\n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unit.id);\n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n\n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item => item.id === product.id && item.unit_id === unit.id ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart([...cart, {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      }]);\n    }\n    setError('');\n  };\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === unitId);\n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n\n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart.filter(item => item.id === productId && item.unit_id === unitId).reduce((sum, item) => sum + item.quantity, 0);\n\n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      setCart(cart.map(item => item.id === productId && item.unit_id === unitId ? {\n        ...item,\n        quantity\n      } : item));\n      setError('');\n    }\n  };\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + item.quantity * item.unit_price, 0);\n  };\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = item.quantity * item.unit_price * item.tax_rate / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = item.quantity * item.unit_price * 100 / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n    setProcessing(true);\n    setError('');\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n\n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({\n          name: '',\n          phone: '',\n          email: ''\n        });\n\n        // Refresh product data to update stock quantities\n        await fetchProducts();\n\n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        var _completeError$respon, _completeError$respon2;\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${((_completeError$respon = completeError.response) === null || _completeError$respon === void 0 ? void 0 : (_completeError$respon2 = _completeError$respon.data) === null || _completeError$respon2 === void 0 ? void 0 : _completeError$respon2.error) || completeError.message}`);\n\n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({\n          name: '',\n          phone: '',\n          email: ''\n        });\n\n        // Refresh data\n        await fetchProducts();\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n  const handleFilterChange = (filterType, value) => {\n    const newFilters = {\n      ...filters,\n      [filterType]: value\n    };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n  };\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      search: ''\n    };\n    setFilters(clearedFilters);\n    fetchProducts(clearedFilters);\n  };\n  const handleQuantityClick = item => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n  const handleQuantityChange = e => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n  const handleQuantitySubmit = item => {\n    const newQuantity = parseInt(tempQuantity);\n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n\n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === item.unit_id);\n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n\n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n\n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n  const handleProductCardClick = product => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        if (selectedCompatibleUnit) {\n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit.name,\n            symbol: selectedCompatibleUnit.unit.symbol\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading products...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pos\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Point of Sale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-user\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Cashier: \", user === null || user === void 0 ? void 0 : user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pos-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-products\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pos-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: filters.category,\n              onChange: e => handleFilterChange('category', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category.id,\n                children: category.name\n              }, category.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Search:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search products...\",\n              value: filters.search,\n              onChange: e => handleFilterChange('search', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-group\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"small\",\n              onClick: clearFilters,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"products-count\",\n            children: [products.length, \" product\", products.length !== 1 ? 's' : '', \" found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"products-grid\",\n          children: products.map(product => {\n            var _product$compatible_u;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`,\n              onClick: () => handleProductCardClick(product),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-sku\",\n                  children: product.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-price\",\n                  children: [\"$\", parseFloat(product.price).toFixed(2), product.compatible_units && product.compatible_units.length > 1 && ` (base unit: ${((_product$compatible_u = product.compatible_units.find(u => u.unit.is_base_unit)) === null || _product$compatible_u === void 0 ? void 0 : _product$compatible_u.unit.symbol) || 'piece'})`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"product-stock\",\n                  children: [\"Stock: \", product.stock_quantity, \" \", product.unit, stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stock-details\",\n                    children: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      return product.compatible_units.map(compatibleUnit => {\n                        const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === compatibleUnit.unit);\n                        if (!unitStockInfo) return null;\n\n                        // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                        const unitName = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.name) || compatibleUnit.unit.name;\n                        return /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`,\n                          children: [unitName, \": \", unitStockInfo.available_quantity]\n                        }, compatibleUnit.unit, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 599,\n                          columnNumber: 31\n                        }, this);\n                      }).filter(Boolean);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 19\n                }, this), product.compatible_units && product.compatible_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-selection\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Unit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"unit-select\",\n                    value: selectedUnits[product.id] || '',\n                    onChange: e => {\n                      const unitId = parseInt(e.target.value);\n                      handleUnitSelection(product.id, unitId);\n                    },\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Unit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 622,\n                      columnNumber: 25\n                    }, this), product.compatible_units.map(compatibleUnit => {\n                      var _unitStockInfo$price;\n                      // Use updated stock availability that considers cart contents\n                      const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === compatibleUnit.unit);\n                      const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                      const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n\n                      // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                      const unitName = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.name) || compatibleUnit.unit.name;\n                      const unitSymbol = (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.symbol) || compatibleUnit.unit.symbol;\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: compatibleUnit.unit,\n                        disabled: !isAvailable,\n                        children: [unitName, \" (\", unitSymbol, \") - $\", (unitStockInfo === null || unitStockInfo === void 0 ? void 0 : (_unitStockInfo$price = unitStockInfo.price) === null || _unitStockInfo$price === void 0 ? void 0 : _unitStockInfo$price.toFixed(2)) || 'N/A', !isAvailable ? ' - OUT OF STOCK' : ` - ${availableQty} available`]\n                      }, compatibleUnit.unit, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 635,\n                        columnNumber: 29\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this), (!product.compatible_units || product.compatible_units.length <= 1) && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"small\",\n                  onClick: () => addToCart(product),\n                  disabled: (() => {\n                    // Check if any unit has available stock\n                    if (!stockAvailability[product.id]) {\n                      return true; // Disable if stock data not loaded\n                    }\n\n                    // For single unit products, check base stock\n                    return product.stock_quantity <= 0;\n                  })(),\n                  className: \"add-to-cart-btn\",\n                  children: (() => {\n                    if (!stockAvailability[product.id]) {\n                      return 'Loading...';\n                    }\n                    return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this), product.available_units && product.available_units.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"unit-instruction\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Click card or select unit to add to cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pos-cart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Shopping Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"small\",\n            onClick: clearCart,\n            children: \"Clear Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-items\",\n          children: cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-cart\",\n            children: \"Cart is empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-product\",\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-unit\",\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-price\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-quantity\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-total\",\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"header-actions\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 17\n            }, this), cart.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-product\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"item-sku\",\n                  children: [\"SKU: \", item.sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-unit\",\n                children: item.unit_symbol || 'piece'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-price\",\n                children: [\"$\", parseFloat(item.unit_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-quantity\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"quantity-controls\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity - 1),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 25\n                  }, this), editingQuantity === `${item.id}-${item.unit_id}` ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"quantity-edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: tempQuantity,\n                      onChange: handleQuantityChange,\n                      onKeyPress: e => handleQuantityKeyPress(e, item),\n                      onBlur: () => handleQuantitySubmit(item),\n                      className: \"quantity-input\",\n                      min: \"0\",\n                      max: item.stock_quantity,\n                      autoFocus: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 742,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"quantity clickable\",\n                    onClick: () => handleQuantityClick(item),\n                    title: \"Click to edit quantity\",\n                    children: item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outline\",\n                    onClick: () => updateQuantity(item.id, item.unit_id, item.quantity + 1),\n                    disabled: (() => {\n                      const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                      const unitStockInfo = updatedStockInfo === null || updatedStockInfo === void 0 ? void 0 : updatedStockInfo.find(u => u.id === item.unit_id);\n                      const currentCartQuantity = cart.filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id).reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                      const maxAllowed = ((unitStockInfo === null || unitStockInfo === void 0 ? void 0 : unitStockInfo.available_quantity) || 0) + currentCartQuantity;\n                      return item.quantity >= maxAllowed;\n                    })(),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-total\",\n                children: [\"$\", (item.quantity * item.unit_price).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-actions\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"danger\",\n                  onClick: () => removeFromCart(item.id, item.unit_id),\n                  title: \"Remove item\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 21\n              }, this)]\n            }, `${item.id}-${item.unit_id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), cart.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Amount:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row cost-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Cost (excl. tax):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateCost().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row tax-breakdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tax included:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateTax().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-row total\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", calculateSubtotal().toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customer-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Customer Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Customer Name (Optional)\",\n                value: customerInfo.name,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                placeholder: \"Phone Number (Optional)\",\n                value: customerInfo.phone,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  phone: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email (Optional)\",\n                value: customerInfo.email,\n                onChange: e => setCustomerInfo({\n                  ...customerInfo,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment-methods\",\n              children: ['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payment-method\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"payment\",\n                  value: method,\n                  checked: paymentMethod === method,\n                  onChange: e => setPaymentMethod(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 854,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: method.replace('_', ' ').toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 23\n                }, this)]\n              }, method, true, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkout-actions\",\n            children: [/*#__PURE__*/_jsxDEV(PrintButton, {\n              data: {\n                sale_number: `TEMP-${Date.now()}`,\n                customer_name: customerInfo.name || 'Walk-in Customer',\n                customer_phone: customerInfo.phone || '',\n                customer_email: customerInfo.email || '',\n                created_at: new Date().toISOString(),\n                print_timestamp: new Date().toISOString(),\n                print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                status: 'pending',\n                total_amount: calculateSubtotal(),\n                items: cart.map(item => {\n                  var _item$unit;\n                  return {\n                    product_name: item.name,\n                    product_sku: item.sku,\n                    quantity: item.quantity,\n                    unit_name: ((_item$unit = item.unit) === null || _item$unit === void 0 ? void 0 : _item$unit.name) || 'piece',\n                    unit_price: item.price,\n                    total_price: item.price * item.quantity\n                  };\n                })\n              },\n              title: \"Sale Receipt\",\n              type: \"sale\",\n              printText: \"Print Receipt\",\n              validateText: \"Validate Sale\",\n              showValidateOption: true,\n              onValidate: handleCheckout,\n              disabled: cart.length === 0,\n              className: \"print-receipt-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCheckout,\n              loading: processing,\n              className: \"validate-button\",\n              size: \"large\",\n              variant: \"primary\",\n              children: \"Validate Sale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 518,\n    columnNumber: 5\n  }, this);\n};\n_s(PointOfSale, \"gsj++ujKaHHfuq8/8esd1aBCZAg=\", false, function () {\n  return [useAuth];\n});\n_c = PointOfSale;\nexport default PointOfSale;\nvar _c;\n$RefreshReg$(_c, \"PointOfSale\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","Button","PrintButton","jsxDEV","_jsxDEV","Fragment","_Fragment","PointOfSale","_s","user","products","setProducts","categories","setCategories","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","paymentMethod","setPaymentMethod","loading","setLoading","processing","setProcessing","error","setError","stockAvailability","setStockAvailability","filters","setFilters","category","search","editingQuantity","setEditingQuantity","tempQuantity","setTempQuantity","selectedUnits","setSelectedUnits","fetchProducts","fetchCategories","length","fetchBulkStockAvailability","defaultUnits","forEach","product","compatible_units","baseUnit","find","u","unit","is_base_unit","is_default","id","productIds","map","response","post","product_ids","stockData","Object","values","data","productStock","product_id","available_units","console","log","err","fetchStockAvailability","refreshStockAvailability","getUpdatedStockAvailability","productId","baseStockInfo","totalPiecesInCart","filter","item","reduce","total","unitInfo","unit_id","conversion_factor","quantity","totalBaseStock","available_quantity","remainingPieces","Math","max","availableQuantity","isAvailable","floor","is_available","filterParams","params","URLSearchParams","append","url","toString","get","results","prev","addToCart","selectedUnit","base_unit","symbol","updatedStockInfo","unitStockInfo","existingItem","unit_name","unit_symbol","unit_price","price","updateQuantity","unitId","currentCartQuantity","sum","maxAllowed","removeFromCart","calculateSubtotal","calculateTax","totalTax","tax_rate","itemTax","calculateCost","totalCost","itemCost","handleCheckout","saleData","customer_name","customer_phone","customer_email","payment_method","items","saleId","saleNumber","sale_number","alert","completeError","_completeError$respon","_completeError$respon2","message","_err$response","_err$response$data","detail","clearCart","handleFilterChange","filterType","value","newFilters","clearFilters","clearedFilters","handleQuantityClick","handleQuantityChange","e","target","test","handleQuantitySubmit","newQuantity","parseInt","isNaN","cartItem","handleQuantityCancel","handleQuantityKeyPress","key","handleUnitSelection","handleProductCardClick","stock_quantity","selectedUnitId","selectedCompatibleUnit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onChange","type","placeholder","variant","size","onClick","_product$compatible_u","sku","parseFloat","toFixed","compatibleUnit","unitName","Boolean","stopPropagation","_unitStockInfo$price","availableQty","unitSymbol","disabled","onKeyPress","onBlur","min","autoFocus","title","method","checked","replace","toUpperCase","Date","now","created_at","toISOString","print_timestamp","print_id","random","substr","status","total_amount","_item$unit","product_name","product_sku","total_price","printText","validateText","showValidateOption","onValidate","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/PointOfSale.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/Button';\nimport PrintButton from '../components/PrintButton';\nimport './PointOfSale.css';\n\nconst PointOfSale = () => {\n  const { user } = useAuth();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [stockAvailability, setStockAvailability] = useState({});\n  const [filters, setFilters] = useState({\n    category: '',\n    search: ''\n  });\n  const [editingQuantity, setEditingQuantity] = useState(null);\n  const [tempQuantity, setTempQuantity] = useState('');\n  const [selectedUnits, setSelectedUnits] = useState({}); // Track selected unit for each product\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock availability for ALL products in bulk to improve performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n    \n    // Set default selected units (base unit) for products with multiple compatible units\n    const defaultUnits = {};\n    products.forEach(product => {\n      if (product.compatible_units && product.compatible_units.length > 1) {\n        // Find the base unit (is_base_unit: true) or default unit (is_default: true)\n        const baseUnit = product.compatible_units.find(u => u.unit.is_base_unit || u.is_default);\n        if (baseUnit) {\n          defaultUnits[product.id] = baseUnit.unit;\n        }\n      }\n    });\n    setSelectedUnits(defaultUnits);\n  }, [products]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchBulkStockAvailability = async () => {\n    try {\n      const productIds = products.map(product => product.id);\n      const response = await api.post('/products/bulk-stock-availability/', {\n        product_ids: productIds\n      });\n      \n      // Convert the response to the format expected by the existing code\n      const stockData = {};\n      Object.values(response.data).forEach(productStock => {\n        stockData[productStock.product_id] = productStock.available_units;\n      });\n      \n      console.log('Bulk stock availability response:', response.data);\n      console.log('Processed stock data:', stockData);\n      \n      setStockAvailability(stockData);\n    } catch (err) {\n      console.error('Bulk stock availability error:', err);\n      // Fallback to individual calls if bulk fails\n      products.forEach(product => {\n        fetchStockAvailability(product.id);\n      });\n    }\n  };\n\n  const refreshStockAvailability = () => {\n    // Use bulk fetch for better performance\n    if (products.length > 0) {\n      fetchBulkStockAvailability();\n    }\n  };\n\n\n  const getUpdatedStockAvailability = (productId) => {\n    // Get the base stock availability for this product\n    const baseStockInfo = stockAvailability[productId];\n    if (!baseStockInfo) {\n      return null;\n    }\n\n    // Calculate total pieces already in cart for this product (convert all units to pieces)\n    const totalPiecesInCart = cart\n      .filter(item => item.id === productId)\n      .reduce((total, item) => {\n        // Find the unit info to get conversion factor\n        const unitInfo = baseStockInfo.find(u => u.id === item.unit_id);\n        if (unitInfo && unitInfo.conversion_factor) {\n          // Convert to pieces: if 1 carton = 20 pieces, then quantity * 20\n          return total + (item.quantity * unitInfo.conversion_factor);\n        } else if (unitInfo && unitInfo.is_base_unit) {\n          // If it's the base unit (pieces), no conversion needed\n          return total + item.quantity;\n        }\n        return total;\n      }, 0);\n\n    // Calculate remaining pieces in base stock\n    const baseUnit = baseStockInfo.find(u => u.is_base_unit);\n    const totalBaseStock = baseUnit ? baseUnit.available_quantity : 0;\n    const remainingPieces = Math.max(0, totalBaseStock - totalPiecesInCart);\n\n\n    // Update each unit's available quantity based on remaining pieces\n    return baseStockInfo.map(unit => {\n      let availableQuantity = 0;\n      let isAvailable = false;\n\n      if (unit.is_base_unit) {\n        // For base unit (pieces), use remaining pieces directly\n        availableQuantity = remainingPieces;\n        isAvailable = remainingPieces > 0;\n      } else if (unit.conversion_factor) {\n        // For other units, calculate how many can be made from remaining pieces\n        // If 1 carton = 20 pieces, then remainingPieces / 20 = available cartons\n        availableQuantity = Math.floor(remainingPieces / unit.conversion_factor);\n        isAvailable = availableQuantity > 0;\n      }\n\n      return {\n        ...unit,\n        available_quantity: availableQuantity,\n        is_available: isAvailable\n      };\n    });\n  };\n\n  const fetchProducts = async (filterParams = {}) => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams();\n      \n      // Always filter for active products\n      params.append('is_active', 'true');\n      \n      // Add filters to params\n      if (filterParams.category) params.append('category', filterParams.category);\n      if (filterParams.search) params.append('search', filterParams.search);\n      \n      const url = `/products/${params.toString() ? '?' + params.toString() : ''}`;\n      const response = await api.get(url);\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      setError('Failed to load products');\n      console.error('Products error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const fetchStockAvailability = async (productId) => {\n    try {\n      const response = await api.get(`/products/${productId}/stock-availability/`);\n      setStockAvailability(prev => ({\n        ...prev,\n        [productId]: response.data.available_units\n      }));\n    } catch (err) {\n      console.error('Stock availability error:', err);\n    }\n  };\n\n  const addToCart = (product, selectedUnit = null) => {\n    // Use the first compatible unit if none selected\n    const unit = selectedUnit || (product.compatible_units && product.compatible_units[0]) || { id: product.base_unit, name: 'Piece', symbol: 'piece' };\n    \n    \n    // Check if stock availability data is loaded\n    if (!stockAvailability[product.id]) {\n      setError('Loading stock information... Please try again.');\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(product.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === unit.id);\n    \n    \n    if (!unitStockInfo) {\n      setError(`Unit ${unit.name} not found in stock information`);\n      return;\n    }\n    \n    if (!unitStockInfo.is_available) {\n      setError(`${unit.name} is out of stock`);\n      return;\n    }\n    \n    // Check if there's enough stock for the selected unit\n    if (unitStockInfo.available_quantity <= 0) {\n      setError(`No ${unit.name} stock left`);\n      return;\n    }\n    \n    const existingItem = cart.find(item => item.id === product.id && item.unit_id === unit.id);\n    if (existingItem) {\n      // Check if adding 1 more would exceed available quantity\n      if (existingItem.quantity + 1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart(cart.map(item =>\n        item.id === product.id && item.unit_id === unit.id\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      // Check if adding 1 would exceed available quantity\n      if (1 > unitStockInfo.available_quantity) {\n        setError(`Not enough ${unit.name} available. Only ${unitStockInfo.available_quantity} left.`);\n        return;\n      }\n      setCart([...cart, {\n        ...product,\n        quantity: 1,\n        unit_id: unit.id,\n        unit_name: unit.name,\n        unit_symbol: unit.symbol,\n        unit_price: unit.price || product.price\n      }]);\n    }\n    setError('');\n  };\n\n  const updateQuantity = (productId, unitId, quantity) => {\n    if (quantity <= 0) {\n      setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n    } else {\n      // Check updated stock availability for the selected unit\n      const updatedStockInfo = getUpdatedStockAvailability(productId);\n      const unitStockInfo = updatedStockInfo?.find(u => u.id === unitId);\n      \n      if (!unitStockInfo || !unitStockInfo.is_available) {\n        setError(`Unit is out of stock`);\n        return;\n      }\n      \n      // For updateQuantity, we need to consider the current cart quantity\n      const currentCartQuantity = cart\n        .filter(item => item.id === productId && item.unit_id === unitId)\n        .reduce((sum, item) => sum + item.quantity, 0);\n      \n      // Calculate how much we can add (available + what's already in cart)\n      const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n      \n      if (quantity > maxAllowed) {\n        setError(`Not enough stock available. Max: ${maxAllowed}`);\n        return;\n      }\n      \n      setCart(cart.map(item =>\n        item.id === productId && item.unit_id === unitId\n          ? { ...item, quantity }\n          : item\n      ));\n      setError('');\n    }\n  };\n\n  const removeFromCart = (productId, unitId) => {\n    setCart(cart.filter(item => !(item.id === productId && item.unit_id === unitId)));\n  };\n\n  const calculateSubtotal = () => {\n    return cart.reduce((total, item) => total + (item.quantity * item.unit_price), 0);\n  };\n\n  const calculateTax = () => {\n    let totalTax = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: tax = (price × tax_rate) / (100 + tax_rate)\n        const itemTax = (item.quantity * item.unit_price * item.tax_rate) / (100 + item.tax_rate);\n        totalTax += itemTax;\n      }\n    });\n    return totalTax;\n  };\n\n  const calculateCost = () => {\n    let totalCost = 0;\n    cart.forEach(item => {\n      if (item.tax_rate && item.tax_rate > 0) {\n        // For tax-inclusive pricing: cost = (price × 100) / (100 + tax_rate)\n        const itemCost = (item.quantity * item.unit_price * 100) / (100 + item.tax_rate);\n        totalCost += itemCost;\n      } else {\n        // No tax, full price is cost\n        totalCost += item.quantity * item.unit_price;\n      }\n    });\n    return totalCost;\n  };\n\n\n  const handleCheckout = async () => {\n    if (cart.length === 0) {\n      setError('Cart is empty');\n      return;\n    }\n\n    setProcessing(true);\n    setError('');\n\n    try {\n      const saleData = {\n        customer_name: customerInfo.name,\n        customer_phone: customerInfo.phone,\n        customer_email: customerInfo.email,\n        payment_method: paymentMethod,\n        items: cart.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          unit: item.unit_id,\n          unit_price: item.unit_price\n        }))\n      };\n\n      // Create the sale\n      const response = await api.post('/sales/', saleData);\n      const saleId = response.data.id;\n      const saleNumber = response.data.sale_number;\n      \n      try {\n        // Complete the sale\n        await api.post(`/sales/${saleId}/complete/`);\n        \n        // Clear cart and customer info\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Refresh product data to update stock quantities\n        await fetchProducts();\n        \n        // Refresh stock availability for all products\n        refreshStockAvailability();\n        \n        alert(`Sale completed successfully! Sale Number: ${saleNumber}`);\n      } catch (completeError) {\n        // Sale was created but completion failed\n        console.error('Sale completion error:', completeError);\n        setError(`Sale created (${saleNumber}) but completion failed: ${completeError.response?.data?.error || completeError.message}`);\n        \n        // Still clear the cart since the sale was created\n        setCart([]);\n        setCustomerInfo({ name: '', phone: '', email: '' });\n        \n        // Refresh data\n        await fetchProducts();\n        refreshStockAvailability();\n      }\n    } catch (err) {\n      setError(err.response?.data?.detail || 'Failed to create sale');\n      console.error('Sale creation error:', err);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n    setError('');\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    const newFilters = { ...filters, [filterType]: value };\n    setFilters(newFilters);\n    fetchProducts(newFilters);\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = { category: '', search: '' };\n    setFilters(clearedFilters);\n    fetchProducts(clearedFilters);\n  };\n\n  const handleQuantityClick = (item) => {\n    setEditingQuantity(`${item.id}-${item.unit_id}`);\n    setTempQuantity(item.quantity.toString());\n  };\n\n  const handleQuantityChange = (e) => {\n    const value = e.target.value;\n    // Only allow numbers and empty string\n    if (value === '' || /^\\d+$/.test(value)) {\n      setTempQuantity(value);\n    }\n  };\n\n  const handleQuantitySubmit = (item) => {\n    const newQuantity = parseInt(tempQuantity);\n    \n    if (tempQuantity === '' || isNaN(newQuantity) || newQuantity < 0) {\n      setError('Please enter a valid quantity');\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // Check updated stock availability for the selected unit\n    const updatedStockInfo = getUpdatedStockAvailability(item.id);\n    const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n    \n    if (!unitStockInfo || !unitStockInfo.is_available) {\n      setError(`Unit is out of stock`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    // For handleQuantitySubmit, we need to consider the current cart quantity\n    const currentCartQuantity = cart\n      .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n      .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n    \n    // Calculate how much we can add (available + what's already in cart)\n    const maxAllowed = unitStockInfo.available_quantity + currentCartQuantity;\n    \n    if (newQuantity > maxAllowed) {\n      setError(`Not enough stock available. Max: ${maxAllowed}`);\n      setEditingQuantity(null);\n      return;\n    }\n    \n    if (newQuantity === 0) {\n      // Remove item from cart if quantity is 0\n      removeFromCart(item.id, item.unit_id);\n    } else {\n      updateQuantity(item.id, item.unit_id, newQuantity);\n    }\n    \n    setEditingQuantity(null);\n    setTempQuantity('');\n    setError('');\n  };\n\n  const handleQuantityCancel = () => {\n    setEditingQuantity(null);\n    setTempQuantity('');\n  };\n\n  const handleQuantityKeyPress = (e, item) => {\n    if (e.key === 'Enter') {\n      handleQuantitySubmit(item);\n    } else if (e.key === 'Escape') {\n      handleQuantityCancel();\n    }\n  };\n\n  const handleUnitSelection = (productId, unitId) => {\n    setSelectedUnits(prev => ({\n      ...prev,\n      [productId]: unitId\n    }));\n  };\n\n  const handleProductCardClick = (product) => {\n    // Don't allow clicking on out-of-stock products\n    if (product.stock_quantity <= 0) {\n      return;\n    }\n    \n    if (product.compatible_units && product.compatible_units.length > 1) {\n      // For multi-unit products, add with the currently selected unit\n      const selectedUnitId = selectedUnits[product.id];\n      if (selectedUnitId) {\n        const selectedCompatibleUnit = product.compatible_units.find(u => u.unit === selectedUnitId);\n        if (selectedCompatibleUnit) {\n          // Convert compatible unit to the format expected by addToCart\n          const selectedUnit = {\n            id: selectedCompatibleUnit.unit,\n            name: selectedCompatibleUnit.unit.name,\n            symbol: selectedCompatibleUnit.unit.symbol\n          };\n          addToCart(product, selectedUnit);\n        }\n      }\n    } else {\n      // For single-unit products, add directly\n      addToCart(product);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pos\">\n        <div className=\"pos-loading\">\n          <div className=\"spinner\"></div>\n          <span>Loading products...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pos\">\n      <div className=\"pos-header\">\n        <h1>Point of Sale</h1>\n        <div className=\"pos-user\">\n          <span>Cashier: {user?.username}</span>\n        </div>\n      </div>\n\n      <div className=\"pos-content\">\n        {/* Product Grid */}\n        <div className=\"pos-products\">\n          <h2>Products</h2>\n          \n          {/* Filters */}\n          <div className=\"pos-filters\">\n            <div className=\"filter-group\">\n              <label>Category:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                <option value=\"\">All Categories</option>\n                {categories.map(category => (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"filter-group\">\n              <label>Search:</label>\n              <input\n                type=\"text\"\n                placeholder=\"Search products...\"\n                value={filters.search}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n              />\n            </div>\n            <div className=\"filter-group\">\n              <Button variant=\"outline\" size=\"small\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"products-info\">\n            <p className=\"products-count\">\n              {products.length} product{products.length !== 1 ? 's' : ''} found\n            </p>\n          </div>\n\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div\n                key={product.id}\n                className={`product-card ${product.stock_quantity <= 0 ? 'out-of-stock' : ''} clickable`}\n                onClick={() => handleProductCardClick(product)}\n              >\n                <div className=\"product-info\">\n                  <h3>{product.name}</h3>\n                  <p className=\"product-sku\">{product.sku}</p>\n                  <p className=\"product-price\">\n                    ${parseFloat(product.price).toFixed(2)}\n                    {product.compatible_units && product.compatible_units.length > 1 && \n                      ` (base unit: ${product.compatible_units.find(u => u.unit.is_base_unit)?.unit.symbol || 'piece'})`\n                    }\n                  </p>\n                  <p className=\"product-stock\">\n                    Stock: {product.stock_quantity} {product.unit}\n                    {stockAvailability[product.id] && product.compatible_units && product.compatible_units.length > 1 && (\n                      <span className=\"stock-details\">\n                        {(() => {\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          return product.compatible_units.map(compatibleUnit => {\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                            if (!unitStockInfo) return null;\n                            \n                            // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                            const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                            \n                            return (\n                              <span key={compatibleUnit.unit} className={`unit-stock ${unitStockInfo.is_available ? 'available' : 'unavailable'}`}>\n                                {unitName}: {unitStockInfo.available_quantity}\n                              </span>\n                            );\n                          }).filter(Boolean);\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                  \n                  {/* Unit Selection - Only show for products with multiple compatible units */}\n                  {product.compatible_units && product.compatible_units.length > 1 && (\n                    <div className=\"unit-selection\">\n                      <label>Unit:</label>\n                      <select \n                        className=\"unit-select\"\n                        value={selectedUnits[product.id] || ''}\n                        onChange={(e) => {\n                          const unitId = parseInt(e.target.value);\n                          handleUnitSelection(product.id, unitId);\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <option value=\"\">Select Unit</option>\n                        {product.compatible_units.map(compatibleUnit => {\n                          // Use updated stock availability that considers cart contents\n                          const updatedStockInfo = getUpdatedStockAvailability(product.id);\n                          const unitStockInfo = updatedStockInfo?.find(u => u.id === compatibleUnit.unit);\n                          const isAvailable = unitStockInfo ? unitStockInfo.is_available : false;\n                          const availableQty = unitStockInfo ? unitStockInfo.available_quantity : 0;\n                          \n                          // Use unit info from stock availability if available, otherwise fallback to compatible unit\n                          const unitName = unitStockInfo?.name || compatibleUnit.unit.name;\n                          const unitSymbol = unitStockInfo?.symbol || compatibleUnit.unit.symbol;\n                          \n                          return (\n                            <option \n                              key={compatibleUnit.unit} \n                              value={compatibleUnit.unit}\n                              disabled={!isAvailable}\n                            >\n                              {unitName} ({unitSymbol}) - ${unitStockInfo?.price?.toFixed(2) || 'N/A'} \n                              {!isAvailable ? ' - OUT OF STOCK' : \n                               ` - ${availableQty} available`}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  )}\n                  \n                  {/* Add to Cart Button - Only show for single unit products */}\n                  {(!product.compatible_units || product.compatible_units.length <= 1) && (\n                    <Button\n                      variant=\"primary\"\n                      size=\"small\"\n                      onClick={() => addToCart(product)}\n                      disabled={(() => {\n                        // Check if any unit has available stock\n                        if (!stockAvailability[product.id]) {\n                          return true; // Disable if stock data not loaded\n                        }\n                        \n                        // For single unit products, check base stock\n                        return product.stock_quantity <= 0;\n                      })()}\n                      className=\"add-to-cart-btn\"\n                    >\n                      {(() => {\n                        if (!stockAvailability[product.id]) {\n                          return 'Loading...';\n                        }\n                        \n                        return product.stock_quantity <= 0 ? 'Out of Stock' : 'Add to Cart';\n                      })()}\n                    </Button>\n                  )}\n                  \n                  {/* For products with multiple units, show instruction */}\n                  {product.available_units && product.available_units.length > 1 && (\n                    <div className=\"unit-instruction\">\n                      <p>Click card or select unit to add to cart</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Cart and Checkout */}\n        <div className=\"pos-cart\">\n          <div className=\"cart-header\">\n            <h2>Shopping Cart</h2>\n            {cart.length > 0 && (\n              <Button variant=\"outline\" size=\"small\" onClick={clearCart}>\n                Clear Cart\n              </Button>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"cart-items\">\n            {cart.length === 0 ? (\n              <p className=\"empty-cart\">Cart is empty</p>\n            ) : (\n              <>\n                <div className=\"cart-table-header\">\n                  <div className=\"header-product\">Product</div>\n                  <div className=\"header-unit\">Unit</div>\n                  <div className=\"header-price\">Price</div>\n                  <div className=\"header-quantity\">Qty</div>\n                  <div className=\"header-total\">Total</div>\n                  <div className=\"header-actions\">Actions</div>\n                </div>\n                {cart.map(item => (\n                  <div key={`${item.id}-${item.unit_id}`} className=\"cart-item\">\n                    <div className=\"item-product\">\n                      <h4>{item.name}</h4>\n                      <p className=\"item-sku\">SKU: {item.sku}</p>\n                    </div>\n                    <div className=\"item-unit\">\n                      {item.unit_symbol || 'piece'}\n                    </div>\n                    <div className=\"item-price\">\n                      ${parseFloat(item.unit_price).toFixed(2)}\n                    </div>\n                    <div className=\"item-quantity\">\n                      <div className=\"quantity-controls\">\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity - 1)}\n                        >\n                          -\n                        </Button>\n                        {editingQuantity === `${item.id}-${item.unit_id}` ? (\n                          <div className=\"quantity-edit\">\n                            <input\n                              type=\"number\"\n                              value={tempQuantity}\n                              onChange={handleQuantityChange}\n                              onKeyPress={(e) => handleQuantityKeyPress(e, item)}\n                              onBlur={() => handleQuantitySubmit(item)}\n                              className=\"quantity-input\"\n                              min=\"0\"\n                              max={item.stock_quantity}\n                              autoFocus\n                            />\n                          </div>\n                        ) : (\n                          <span \n                            className=\"quantity clickable\"\n                            onClick={() => handleQuantityClick(item)}\n                            title=\"Click to edit quantity\"\n                          >\n                            {item.quantity}\n                          </span>\n                        )}\n                        <Button\n                          size=\"small\"\n                          variant=\"outline\"\n                          onClick={() => updateQuantity(item.id, item.unit_id, item.quantity + 1)}\n                          disabled={(() => {\n                            const updatedStockInfo = getUpdatedStockAvailability(item.id);\n                            const unitStockInfo = updatedStockInfo?.find(u => u.id === item.unit_id);\n                            const currentCartQuantity = cart\n                              .filter(cartItem => cartItem.id === item.id && cartItem.unit_id === item.unit_id)\n                              .reduce((sum, cartItem) => sum + cartItem.quantity, 0);\n                            const maxAllowed = (unitStockInfo?.available_quantity || 0) + currentCartQuantity;\n                            return item.quantity >= maxAllowed;\n                          })()}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"item-total\">\n                      ${(item.quantity * item.unit_price).toFixed(2)}\n                    </div>\n                    <div className=\"item-actions\">\n                      <Button\n                        size=\"small\"\n                        variant=\"danger\"\n                        onClick={() => removeFromCart(item.id, item.unit_id)}\n                        title=\"Remove item\"\n                      >\n                        ×\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n\n          {cart.length > 0 && (\n            <>\n              <div className=\"cart-summary\">\n                <div className=\"summary-row\">\n                  <span>Total Amount:</span>\n                  <span>${calculateSubtotal().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row cost-breakdown\">\n                  <span>Cost (excl. tax):</span>\n                  <span>${calculateCost().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row tax-breakdown\">\n                  <span>Tax included:</span>\n                  <span>${calculateTax().toFixed(2)}</span>\n                </div>\n                <div className=\"summary-row total\">\n                  <span>Total:</span>\n                  <span>${calculateSubtotal().toFixed(2)}</span>\n                </div>\n              </div>\n\n              <div className=\"customer-info\">\n                <h3>Customer Information</h3>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Customer Name (Optional)\"\n                    value={customerInfo.name}\n                    onChange={(e) => setCustomerInfo({...customerInfo, name: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Phone Number (Optional)\"\n                    value={customerInfo.phone}\n                    onChange={(e) => setCustomerInfo({...customerInfo, phone: e.target.value})}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email (Optional)\"\n                    value={customerInfo.email}\n                    onChange={(e) => setCustomerInfo({...customerInfo, email: e.target.value})}\n                  />\n                </div>\n              </div>\n\n              <div className=\"payment-section\">\n                <h3>Payment Method</h3>\n                <div className=\"payment-methods\">\n                  {['cash', 'card', 'mobile_money', 'bank_transfer'].map(method => (\n                    <label key={method} className=\"payment-method\">\n                      <input\n                        type=\"radio\"\n                        name=\"payment\"\n                        value={method}\n                        checked={paymentMethod === method}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                      />\n                      <span>{method.replace('_', ' ').toUpperCase()}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"checkout-actions\">\n                <PrintButton\n                  data={{\n                    sale_number: `TEMP-${Date.now()}`,\n                    customer_name: customerInfo.name || 'Walk-in Customer',\n                    customer_phone: customerInfo.phone || '',\n                    customer_email: customerInfo.email || '',\n                    created_at: new Date().toISOString(),\n                    print_timestamp: new Date().toISOString(),\n                    print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n                    status: 'pending',\n                    total_amount: calculateSubtotal(),\n                    items: cart.map(item => ({\n                      product_name: item.name,\n                      product_sku: item.sku,\n                      quantity: item.quantity,\n                      unit_name: item.unit?.name || 'piece',\n                      unit_price: item.price,\n                      total_price: item.price * item.quantity\n                    }))\n                  }}\n                  title=\"Sale Receipt\"\n                  type=\"sale\"\n                  printText=\"Print Receipt\"\n                  validateText=\"Validate Sale\"\n                  showValidateOption={true}\n                  onValidate={handleCheckout}\n                  disabled={cart.length === 0}\n                  className=\"print-receipt-btn\"\n                />\n                <Button\n                  onClick={handleCheckout}\n                  loading={processing}\n                  className=\"validate-button\"\n                  size=\"large\"\n                  variant=\"primary\"\n                >\n                  Validate Sale\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PointOfSale;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}