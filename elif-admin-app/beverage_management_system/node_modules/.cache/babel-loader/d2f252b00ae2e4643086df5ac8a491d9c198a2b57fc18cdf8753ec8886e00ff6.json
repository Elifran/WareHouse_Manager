{"ast":null,"code":"var _jsxFileName = \"/home/el-ifran/WareHouse_Manager/beverage_management_system/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('accessToken'));\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('accessToken');\n      if (storedToken) {\n        try {\n          const response = await api.get('/core/profile/');\n          setUser(response.data);\n          setToken(storedToken);\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await api.post('/core/login/', credentials);\n      const {\n        user: userData,\n        tokens\n      } = response.data;\n      localStorage.setItem('accessToken', tokens.access);\n      localStorage.setItem('refreshToken', tokens.refresh);\n      setUser(userData);\n      setToken(tokens.access);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data, _error$response2$data2;\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.non_field_errors) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2[0]) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/core/register/', userData);\n      const {\n        user: newUser,\n        tokens\n      } = response.data;\n      localStorage.setItem('accessToken', tokens.access);\n      localStorage.setItem('refreshToken', tokens.refresh);\n      setUser(newUser);\n      setToken(tokens.access);\n      return {\n        success: true,\n        user: newUser\n      };\n    } catch (error) {\n      var _error$response3;\n      console.error('Registration failed:', error);\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    setToken(null);\n  };\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    isManager: (user === null || user === void 0 ? void 0 : user.role) === 'manager',\n    isSales: (user === null || user === void 0 ? void 0 : user.role) === 'sales'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"UcRvDaZ63uzS/GAuS5sU1oJpcZ8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","initAuth","storedToken","response","get","data","error","console","removeItem","login","credentials","post","userData","tokens","setItem","access","refresh","success","_error$response","_error$response$data","_error$response2","_error$response2$data","_error$response2$data2","detail","non_field_errors","register","newUser","_error$response3","logout","updateUser","value","isAuthenticated","isAdmin","role","isManager","isSales","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('accessToken'));\n\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('accessToken');\n      if (storedToken) {\n        try {\n          const response = await api.get('/core/profile/');\n          setUser(response.data);\n          setToken(storedToken);\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await api.post('/core/login/', credentials);\n      const { user: userData, tokens } = response.data;\n      \n      localStorage.setItem('accessToken', tokens.access);\n      localStorage.setItem('refreshToken', tokens.refresh);\n      \n      setUser(userData);\n      setToken(tokens.access);\n      \n      return { success: true, user: userData };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || error.response?.data?.non_field_errors?.[0] || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/core/register/', userData);\n      const { user: newUser, tokens } = response.data;\n      \n      localStorage.setItem('accessToken', tokens.access);\n      localStorage.setItem('refreshToken', tokens.refresh);\n      \n      setUser(newUser);\n      setToken(tokens.access);\n      \n      return { success: true, user: newUser };\n    } catch (error) {\n      console.error('Registration failed:', error);\n      return { \n        success: false, \n        error: error.response?.data || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    setToken(null);\n  };\n\n  const updateUser = (userData) => {\n    setUser(userData);\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n    isAdmin: user?.role === 'admin',\n    isManager: user?.role === 'manager',\n    isSales: user?.role === 'sales'\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}