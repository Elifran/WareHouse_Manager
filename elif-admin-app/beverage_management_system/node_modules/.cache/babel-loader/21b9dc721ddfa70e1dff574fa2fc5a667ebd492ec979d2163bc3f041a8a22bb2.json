{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-admin-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import{useApi}from'../hooks/useApi';import Button from'../components/Button';import Table from'../components/Table';import'./SystemManagement.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SystemManagement=()=>{const{t}=useTranslation();const{user}=useAuth();const api=useApi();// State for different management sections\nconst[activeTab,setActiveTab]=useState('taxes');const[loading,setLoading]=useState(true);const[error,setError]=useState('');// Tax Classes State\nconst[taxClasses,setTaxClasses]=useState([]);const[showTaxModal,setShowTaxModal]=useState(false);const[editingTaxClass,setEditingTaxClass]=useState(null);const[taxFormData,setTaxFormData]=useState({name:'',description:'',tax_rate:'',is_active:true});// Categories State\nconst[categories,setCategories]=useState([]);const[showCategoryModal,setShowCategoryModal]=useState(false);const[editingCategory,setEditingCategory]=useState(null);const[categoryFormData,setCategoryFormData]=useState({name:'',description:'',is_active:true});// Units State\nconst[units,setUnits]=useState([]);const[filteredUnits,setFilteredUnits]=useState([]);const[unitSearchTerm,setUnitSearchTerm]=useState('');const[showUnitModal,setShowUnitModal]=useState(false);const[editingUnit,setEditingUnit]=useState(null);const[unitFormData,setUnitFormData]=useState({name:'',symbol:'',is_base_unit:false,is_active:true});// Unit Conversions State\nconst[unitConversions,setUnitConversions]=useState([]);const[filteredConversions,setFilteredConversions]=useState([]);const[conversionSearchTerm,setConversionSearchTerm]=useState('');const[showConversionModal,setShowConversionModal]=useState(false);const[editingConversion,setEditingConversion]=useState(null);const[conversionFormData,setConversionFormData]=useState({from_unit:'',to_unit:'',conversion_factor:'',is_active:true});// Check if user has permission to manage\nconst canManage=(user===null||user===void 0?void 0:user.role)==='admin'||(user===null||user===void 0?void 0:user.role)==='manager';useEffect(()=>{if(canManage){fetchAllData();}},[canManage]);// eslint-disable-line react-hooks/exhaustive-deps\n// Filter conversions based on search term\nuseEffect(()=>{if(!conversionSearchTerm.trim()){setFilteredConversions(unitConversions);}else{const filtered=unitConversions.filter(conversion=>{const searchLower=conversionSearchTerm.toLowerCase();return conversion.from_unit_name&&conversion.from_unit_name.toLowerCase().includes(searchLower)||conversion.from_unit_symbol&&conversion.from_unit_symbol.toLowerCase().includes(searchLower)||conversion.to_unit_name&&conversion.to_unit_name.toLowerCase().includes(searchLower)||conversion.to_unit_symbol&&conversion.to_unit_symbol.toLowerCase().includes(searchLower)||conversion.conversion_factor.toString().includes(searchLower);});setFilteredConversions(filtered);}},[unitConversions,conversionSearchTerm]);// Filter units based on search term\nuseEffect(()=>{if(!unitSearchTerm.trim()){setFilteredUnits(units);}else{const filtered=units.filter(unit=>{const searchLower=unitSearchTerm.toLowerCase();return unit.name&&unit.name.toLowerCase().includes(searchLower)||unit.symbol&&unit.symbol.toLowerCase().includes(searchLower)||unit.is_base_unit&&'base unit'.includes(searchLower)||unit.is_active&&'active'.includes(searchLower)||!unit.is_active&&'inactive'.includes(searchLower);});setFilteredUnits(filtered);}},[units,unitSearchTerm]);const fetchAllData=async()=>{setLoading(true);try{await Promise.all([fetchTaxClasses(),fetchCategories(),fetchUnits(),fetchUnitConversions()]);}catch(err){setError('Failed to load data');}finally{setLoading(false);}};// Tax Classes Functions\nconst fetchTaxClasses=async()=>{try{const response=await api.get('/api/products/tax-classes/');setTaxClasses(response.data.results||response.data);}catch(err){console.error('Tax classes error:',err);}};const validateTaxClass=data=>{const errors=[];// Check if name is provided\nif(!data.name||data.name.trim()===''){errors.push('Tax class name is required');}// Check if tax rate is provided and valid\nif(!data.tax_rate||data.tax_rate===''){errors.push('Tax rate is required');}else{const rate=parseFloat(data.tax_rate);if(isNaN(rate)){errors.push('Tax rate must be a valid number');}else if(rate<0){errors.push('Tax rate cannot be negative');}else if(rate>100){errors.push('Tax rate cannot exceed 100%');}}// Check for duplicate name (only for new tax classes)\nif(!editingTaxClass){const existingTaxClass=taxClasses.find(taxClass=>taxClass.name.toLowerCase()===data.name.toLowerCase());if(existingTaxClass){errors.push('A tax class with this name already exists');}}return errors;};const handleTaxSubmit=async e=>{e.preventDefault();setError('');try{// Validate the tax class data\nconst validationErrors=validateTaxClass(taxFormData);if(validationErrors.length>0){setError(validationErrors.join('. '));return;}if(editingTaxClass){await api.put(\"/products/tax-classes/\".concat(editingTaxClass.id,\"/\"),taxFormData);}else{await api.post('/api/products/tax-classes/',taxFormData);}setShowTaxModal(false);setEditingTaxClass(null);setTaxFormData({name:'',description:'',tax_rate:'',is_active:true});fetchTaxClasses();}catch(err){var _err$response;// Handle specific backend errors\nconst errorData=(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data;let errorMessage='Failed to save tax class';if(errorData){if(errorData.detail){errorMessage=errorData.detail;}else if(errorData.non_field_errors){errorMessage=errorData.non_field_errors.join('. ');}else if(errorData.name){errorMessage=\"Name: \".concat(errorData.name.join('. '));}else if(errorData.tax_rate){errorMessage=\"Tax rate: \".concat(errorData.tax_rate.join('. '));}else{// Try to extract error from any field\nconst firstError=Object.values(errorData)[0];if(Array.isArray(firstError)){errorMessage=firstError.join('. ');}else if(typeof firstError==='string'){errorMessage=firstError;}}}setError(errorMessage);}};// Categories Functions\nconst fetchCategories=async()=>{try{const response=await api.get('/api/products/categories/');setCategories(response.data.results||response.data);}catch(err){console.error('Categories error:',err);}};const validateCategory=data=>{const errors=[];// Check if name is provided\nif(!data.name||data.name.trim()===''){errors.push('Category name is required');}// Check for duplicate name (only for new categories)\nif(!editingCategory){const existingCategory=categories.find(category=>category.name.toLowerCase()===data.name.toLowerCase());if(existingCategory){errors.push('A category with this name already exists');}}return errors;};const handleCategorySubmit=async e=>{e.preventDefault();setError('');try{// Validate the category data\nconst validationErrors=validateCategory(categoryFormData);if(validationErrors.length>0){setError(validationErrors.join('. '));return;}if(editingCategory){await api.put(\"/products/categories/\".concat(editingCategory.id,\"/\"),categoryFormData);}else{await api.post('/api/products/categories/',categoryFormData);}setShowCategoryModal(false);setEditingCategory(null);setCategoryFormData({name:'',description:'',is_active:true});fetchCategories();}catch(err){var _err$response2;// Handle specific backend errors\nconst errorData=(_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data;let errorMessage='Failed to save category';if(errorData){if(errorData.detail){errorMessage=errorData.detail;}else if(errorData.non_field_errors){errorMessage=errorData.non_field_errors.join('. ');}else if(errorData.name){errorMessage=\"Name: \".concat(errorData.name.join('. '));}else{// Try to extract error from any field\nconst firstError=Object.values(errorData)[0];if(Array.isArray(firstError)){errorMessage=firstError.join('. ');}else if(typeof firstError==='string'){errorMessage=firstError;}}}setError(errorMessage);}};// Units Functions\nconst fetchUnits=async()=>{try{let allUnits=[];let nextUrl='/products/units/';// Fetch all pages of units to ensure we get all base units (including inactive ones)\nwhile(nextUrl){const response=await api.get(nextUrl);const data=response.data;if(data.results){// Paginated response\nallUnits=[...allUnits,...data.results];nextUrl=data.next;}else{// Non-paginated response\nallUnits=data;nextUrl=null;}}setUnits(allUnits);}catch(err){console.error('Units error:',err);}};const validateUnit=data=>{const errors=[];// Check if name is provided\nif(!data.name||data.name.trim()===''){errors.push('Unit name is required');}// Check if symbol is provided\nif(!data.symbol||data.symbol.trim()===''){errors.push('Unit symbol is required');}// Check for duplicate name (only for new units)\nif(!editingUnit){const existingUnit=units.find(unit=>unit.name.toLowerCase()===data.name.toLowerCase());if(existingUnit){errors.push('A unit with this name already exists');}}// Check for duplicate symbol (only for new units)\nif(!editingUnit){const existingSymbol=units.find(unit=>unit.symbol.toLowerCase()===data.symbol.toLowerCase());if(existingSymbol){errors.push('A unit with this symbol already exists');}}// Check if trying to set multiple base units\nif(data.is_base_unit&&!editingUnit){const existingBaseUnit=units.find(unit=>unit.is_base_unit);if(existingBaseUnit){errors.push('Only one base unit is allowed. Please uncheck the existing base unit first.');}}return errors;};const handleUnitSubmit=async e=>{e.preventDefault();setError('');try{// Validate the unit data\nconst validationErrors=validateUnit(unitFormData);if(validationErrors.length>0){setError(validationErrors.join('. '));return;}if(editingUnit){await api.put(\"/products/units/\".concat(editingUnit.id,\"/\"),unitFormData);}else{await api.post('/api/products/units/',unitFormData);}setShowUnitModal(false);setEditingUnit(null);setUnitFormData({name:'',symbol:'',is_base_unit:false,is_active:true});fetchUnits();}catch(err){var _err$response3;// Handle specific backend errors\nconst errorData=(_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data;let errorMessage='Failed to save unit';if(errorData){if(errorData.detail){errorMessage=errorData.detail;}else if(errorData.non_field_errors){errorMessage=errorData.non_field_errors.join('. ');}else if(errorData.name){errorMessage=\"Name: \".concat(errorData.name.join('. '));}else if(errorData.symbol){errorMessage=\"Symbol: \".concat(errorData.symbol.join('. '));}else{// Try to extract error from any field\nconst firstError=Object.values(errorData)[0];if(Array.isArray(firstError)){errorMessage=firstError.join('. ');}else if(typeof firstError==='string'){errorMessage=firstError;}}}setError(errorMessage);}};// Unit Conversions Functions\nconst fetchUnitConversions=async()=>{try{let allConversions=[];let nextUrl='/products/unit-conversions/';// Fetch all pages of unit conversions\nwhile(nextUrl){const response=await api.get(nextUrl);const data=response.data;if(data.results){// Paginated response\nallConversions=[...allConversions,...data.results];nextUrl=data.next;}else{// Non-paginated response\nallConversions=data;nextUrl=null;}}setUnitConversions(allConversions);}catch(err){console.error('Unit conversions error:',err);}};const validateConversion=data=>{const errors=[];// Check if from_unit and to_unit are the same\nif(data.from_unit===data.to_unit){errors.push('From unit and To unit cannot be the same');}// Check if conversion factor is valid\nif(data.conversion_factor<=0){errors.push('Conversion factor must be greater than 0');}// Check if conversion factor is reasonable (not too large or too small)\nif(data.conversion_factor>10000){errors.push('Conversion factor is too large (max: 10,000)');}if(data.conversion_factor<0.0001){errors.push('Conversion factor is too small (min: 0.0001)');}// Find the selected units\nconst fromUnit=units.find(unit=>unit.id===parseInt(data.from_unit));const toUnit=units.find(unit=>unit.id===parseInt(data.to_unit));// Check that at least one unit is a base unit\nif(fromUnit&&toUnit&&!fromUnit.is_base_unit&&!toUnit.is_base_unit){errors.push('At least one of the units must be a base unit');}// Check for existing conversion (only for new conversions)\nif(!editingConversion){const existingConversion=unitConversions.find(conv=>conv.from_unit===data.from_unit&&conv.to_unit===data.to_unit||conv.from_unit===data.to_unit&&conv.to_unit===data.from_unit);if(existingConversion){errors.push('A conversion between these units already exists');}}// Check for circular conversions\nconst hasCircularConversion=unitConversions.some(conv=>{if(editingConversion&&conv.id===editingConversion.id)return false;// Check if this would create a circular conversion\nreturn conv.from_unit===data.to_unit&&conv.to_unit===data.from_unit;});if(hasCircularConversion){errors.push('This would create a circular conversion (reverse conversion already exists)');}// Check that non-base units have only one conversion from base unit\nif(fromUnit&&toUnit){// If from_unit is not a base unit, check if it already has a conversion from a base unit\nif(!fromUnit.is_base_unit){const existingBaseConversion=unitConversions.find(conv=>{if(editingConversion&&conv.id===editingConversion.id)return false;const convFromUnit=units.find(unit=>unit.id===conv.from_unit);return convFromUnit&&convFromUnit.is_base_unit&&conv.to_unit===fromUnit.id;});if(existingBaseConversion){errors.push(\"\".concat(fromUnit.name,\" already has a conversion from a base unit\"));}}// If to_unit is not a base unit, check if it already has a conversion from a base unit\nif(!toUnit.is_base_unit){const existingBaseConversion=unitConversions.find(conv=>{if(editingConversion&&conv.id===editingConversion.id)return false;const convFromUnit=units.find(unit=>unit.id===conv.from_unit);return convFromUnit&&convFromUnit.is_base_unit&&conv.to_unit===toUnit.id;});if(existingBaseConversion){errors.push(\"\".concat(toUnit.name,\" already has a conversion from a base unit\"));}}}return errors;};const handleConversionSubmit=async e=>{e.preventDefault();setError('');try{const data=_objectSpread(_objectSpread({},conversionFormData),{},{from_unit:parseInt(conversionFormData.from_unit),to_unit:parseInt(conversionFormData.to_unit),conversion_factor:parseFloat(conversionFormData.conversion_factor)});// Validate the conversion data\nconst validationErrors=validateConversion(data);if(validationErrors.length>0){setError(validationErrors.join('. '));return;}if(editingConversion){await api.put(\"/products/unit-conversions/\".concat(editingConversion.id,\"/\"),data);}else{await api.post('/api/products/unit-conversions/',data);}setShowConversionModal(false);setEditingConversion(null);setConversionFormData({from_unit:'',to_unit:'',conversion_factor:'',is_active:true});fetchUnitConversions();}catch(err){var _err$response4;// Handle specific backend errors\nconst errorData=(_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.data;let errorMessage='Failed to save unit conversion';if(errorData){if(errorData.detail){errorMessage=errorData.detail;}else if(errorData.non_field_errors){errorMessage=errorData.non_field_errors.join('. ');}else if(errorData.from_unit){errorMessage=\"From unit: \".concat(errorData.from_unit.join('. '));}else if(errorData.to_unit){errorMessage=\"To unit: \".concat(errorData.to_unit.join('. '));}else if(errorData.conversion_factor){errorMessage=\"Conversion factor: \".concat(errorData.conversion_factor.join('. '));}else{// Try to extract error from any field\nconst firstError=Object.values(errorData)[0];if(Array.isArray(firstError)){errorMessage=firstError.join('. ');}else if(typeof firstError==='string'){errorMessage=firstError;}}}setError(errorMessage);}};// Delete Functions\nconst handleDelete=async(type,item)=>{if(!window.confirm(\"Are you sure you want to delete \\\"\".concat(item.name,\"\\\"?\"))){return;}try{const endpoints={tax:\"/products/tax-classes/\".concat(item.id,\"/\"),category:\"/products/categories/\".concat(item.id,\"/\"),unit:\"/products/units/\".concat(item.id,\"/\"),conversion:\"/products/unit-conversions/\".concat(item.id,\"/\")};await api.delete(endpoints[type]);switch(type){case'tax':fetchTaxClasses();break;case'category':fetchCategories();break;case'unit':fetchUnits();break;case'conversion':fetchUnitConversions();break;default:console.warn('Unknown delete type:',type);break;}}catch(err){setError(\"Failed to delete \".concat(type));}};// Table Columns\nconst taxColumns=[{key:'name',label:'Name'},{key:'description',label:'Description'},{key:'tax_rate',label:'Tax Rate (%)',render:value=>\"\".concat(value,\"%\")},{key:'products_count',label:'Products'},{key:'is_active',label:'Status',render:value=>value?'Active':'Inactive'},{key:'actions',label:'Actions',render:(_,item)=>/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>{setEditingTaxClass(item);setTaxFormData({name:item.name,description:item.description,tax_rate:item.tax_rate.toString(),is_active:item.is_active});setShowTaxModal(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>handleDelete('tax',item),children:\"Delete\"})]})}];const categoryColumns=[{key:'name',label:'Name'},{key:'description',label:'Description'},{key:'products_count',label:'Products'},{key:'is_active',label:'Status',render:value=>value?'Active':'Inactive'},{key:'actions',label:'Actions',render:(_,item)=>/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>{setEditingCategory(item);setCategoryFormData({name:item.name,description:item.description,is_active:item.is_active});setShowCategoryModal(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>handleDelete('category',item),children:\"Delete\"})]})}];const unitColumns=[{key:'name',label:'Name'},{key:'symbol',label:'Symbol'},{key:'is_base_unit',label:'Base Unit',render:value=>value?'Yes':'No'},{key:'products_count',label:'Products'},{key:'is_active',label:'Status',render:value=>value?'Active':'Inactive'},{key:'actions',label:'Actions',render:(_,item)=>/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>{setEditingUnit(item);setUnitFormData({name:item.name,symbol:item.symbol,is_base_unit:item.is_base_unit,is_active:item.is_active});setShowUnitModal(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>handleDelete('unit',item),children:\"Delete\"})]})}];const conversionColumns=[{key:'from_unit_name',label:'From Unit',render:(value,item)=>item.from_unit_name?\"\".concat(item.from_unit_name,\" (\").concat(item.from_unit_symbol,\")\"):'N/A'},{key:'to_unit_name',label:'To Unit',render:(value,item)=>item.to_unit_name?\"\".concat(item.to_unit_name,\" (\").concat(item.to_unit_symbol,\")\"):'N/A'},{key:'conversion_factor',label:'Conversion Factor'},{key:'is_active',label:'Status',render:value=>value?'Active':'Inactive'},{key:'actions',label:'Actions',render:(_,item)=>/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outline\",onClick:()=>{setEditingConversion(item);setConversionFormData({from_unit:item.from_unit||'',to_unit:item.to_unit||'',conversion_factor:item.conversion_factor.toString(),is_active:item.is_active});setShowConversionModal(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"danger\",onClick:()=>handleDelete('conversion',item),children:\"Delete\"})]})}];if(!canManage){return/*#__PURE__*/_jsx(\"div\",{className:\"system-management\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"access-denied\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You don't have permission to manage system settings. Only managers and administrators can access this page.\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"system-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"system-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.system_management')}),/*#__PURE__*/_jsx(\"p\",{children:\"Manage taxes, categories, units, and unit conversions\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"system-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='taxes'?'active':''),onClick:()=>setActiveTab('taxes'),children:\"Tax Classes\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='categories'?'active':''),onClick:()=>setActiveTab('categories'),children:\"Categories\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='units'?'active':''),onClick:()=>setActiveTab('units'),children:\"Units\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='conversions'?'active':''),onClick:()=>setActiveTab('conversions'),children:\"Unit Conversions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"system-content\",children:[activeTab==='taxes'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tax Classes\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setEditingTaxClass(null);setTaxFormData({name:'',description:'',tax_rate:'',is_active:true});setShowTaxModal(true);},children:\"Add New Tax Class\"})]}),/*#__PURE__*/_jsx(Table,{data:taxClasses,columns:taxColumns,loading:loading,emptyMessage:\"No tax classes found\"})]}),activeTab==='categories'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Product Categories\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setEditingCategory(null);setCategoryFormData({name:'',description:'',is_active:true});setShowCategoryModal(true);},children:\"Add New Category\"})]}),/*#__PURE__*/_jsx(Table,{data:categories,columns:categoryColumns,loading:loading,emptyMessage:\"No categories found\"})]}),activeTab==='units'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Units\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search units...\",value:unitSearchTerm,onChange:e=>setUnitSearchTerm(e.target.value),className:\"search-input\"}),/*#__PURE__*/_jsx(\"span\",{className:\"search-icon\",children:\"\\uD83D\\uDD0D\"})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setEditingUnit(null);setUnitFormData({name:'',symbol:'',is_base_unit:false,is_active:true});setShowUnitModal(true);},children:\"Add New Unit\"})]})]}),/*#__PURE__*/_jsx(Table,{data:filteredUnits,columns:unitColumns,loading:loading,emptyMessage:unitSearchTerm?\"No units found matching your search\":\"No units found\"})]}),activeTab==='conversions'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Unit Conversions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search conversions...\",value:conversionSearchTerm,onChange:e=>setConversionSearchTerm(e.target.value),className:\"search-input\"}),/*#__PURE__*/_jsx(\"span\",{className:\"search-icon\",children:\"\\uD83D\\uDD0D\"})]}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setEditingConversion(null);setConversionFormData({from_unit:'',to_unit:'',conversion_factor:'',is_active:true});setShowConversionModal(true);},children:\"Add New Conversion\"})]})]}),/*#__PURE__*/_jsx(Table,{data:filteredConversions,columns:conversionColumns,loading:loading,emptyMessage:conversionSearchTerm?\"No conversions found matching your search\":\"No unit conversions found\"})]})]}),showTaxModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowTaxModal(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingTaxClass?'Edit Tax Class':'Add New Tax Class'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowTaxModal(false),children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"})})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTaxSubmit,className:\"system-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tax_name\",children:\"Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"tax_name\",value:taxFormData.name,onChange:e=>setTaxFormData(_objectSpread(_objectSpread({},taxFormData),{},{name:e.target.value})),required:true,placeholder:\"e.g., Standard Rate\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tax_description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"tax_description\",value:taxFormData.description,onChange:e=>setTaxFormData(_objectSpread(_objectSpread({},taxFormData),{},{description:e.target.value})),placeholder:\"Brief description of this tax class\",rows:\"3\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tax_rate\",children:\"Tax Rate (%) *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"tax_rate\",value:taxFormData.tax_rate,onChange:e=>setTaxFormData(_objectSpread(_objectSpread({},taxFormData),{},{tax_rate:e.target.value})),required:true,min:\"0\",max:\"100\",step:\"0.01\",placeholder:\"18.00\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:taxFormData.is_active,onChange:e=>setTaxFormData(_objectSpread(_objectSpread({},taxFormData),{},{is_active:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Active\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>setShowTaxModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",children:[editingTaxClass?'Update':'Create',\" Tax Class\"]})]})]})]})}),showCategoryModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowCategoryModal(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingCategory?'Edit Category':'Add New Category'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowCategoryModal(false),children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"})})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCategorySubmit,className:\"system-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category_name\",children:\"Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"category_name\",value:categoryFormData.name,onChange:e=>setCategoryFormData(_objectSpread(_objectSpread({},categoryFormData),{},{name:e.target.value})),required:true,placeholder:\"e.g., Beverages\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category_description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"category_description\",value:categoryFormData.description,onChange:e=>setCategoryFormData(_objectSpread(_objectSpread({},categoryFormData),{},{description:e.target.value})),placeholder:\"Brief description of this category\",rows:\"3\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:categoryFormData.is_active,onChange:e=>setCategoryFormData(_objectSpread(_objectSpread({},categoryFormData),{},{is_active:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Active\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>setShowCategoryModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",children:[editingCategory?'Update':'Create',\" Category\"]})]})]})]})}),showUnitModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowUnitModal(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingUnit?'Edit Unit':'Add New Unit'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowUnitModal(false),children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"})})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleUnitSubmit,className:\"system-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"unit_name\",children:\"Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"unit_name\",value:unitFormData.name,onChange:e=>setUnitFormData(_objectSpread(_objectSpread({},unitFormData),{},{name:e.target.value})),required:true,placeholder:\"e.g., Kilogram\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"unit_symbol\",children:\"Symbol *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"unit_symbol\",value:unitFormData.symbol,onChange:e=>setUnitFormData(_objectSpread(_objectSpread({},unitFormData),{},{symbol:e.target.value})),required:true,placeholder:\"e.g., kg\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:unitFormData.is_base_unit,onChange:e=>setUnitFormData(_objectSpread(_objectSpread({},unitFormData),{},{is_base_unit:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Base Unit\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:unitFormData.is_active,onChange:e=>setUnitFormData(_objectSpread(_objectSpread({},unitFormData),{},{is_active:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Active\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>setShowUnitModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",children:[editingUnit?'Update':'Create',\" Unit\"]})]})]})]})}),showConversionModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowConversionModal(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingConversion?'Edit Unit Conversion':'Add New Unit Conversion'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:()=>setShowConversionModal(false),children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"})})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleConversionSubmit,className:\"system-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"from_unit\",children:\"From Unit *\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"from_unit\",value:conversionFormData.from_unit,onChange:e=>setConversionFormData(_objectSpread(_objectSpread({},conversionFormData),{},{from_unit:e.target.value})),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select From Unit\"}),units.sort((a,b)=>{// Sort base units first, then by name\nif(a.is_base_unit&&!b.is_base_unit)return-1;if(!a.is_base_unit&&b.is_base_unit)return 1;return a.name.localeCompare(b.name);}).map(unit=>/*#__PURE__*/_jsxs(\"option\",{value:unit.id,disabled:!unit.is_active,children:[unit.name,\" (\",unit.symbol,\")\",unit.is_base_unit?' - BASE UNIT':'',!unit.is_active?' - INACTIVE':'']},unit.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"to_unit\",children:\"To Unit *\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"to_unit\",value:conversionFormData.to_unit,onChange:e=>setConversionFormData(_objectSpread(_objectSpread({},conversionFormData),{},{to_unit:e.target.value})),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select To Unit\"}),units.sort((a,b)=>{// Sort base units first, then by name\nif(a.is_base_unit&&!b.is_base_unit)return-1;if(!a.is_base_unit&&b.is_base_unit)return 1;return a.name.localeCompare(b.name);}).map(unit=>/*#__PURE__*/_jsxs(\"option\",{value:unit.id,disabled:!unit.is_active,children:[unit.name,\" (\",unit.symbol,\")\",unit.is_base_unit?' - BASE UNIT':'',!unit.is_active?' - INACTIVE':'']},unit.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"conversion_factor\",children:\"Conversion Factor *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"conversion_factor\",value:conversionFormData.conversion_factor,onChange:e=>setConversionFormData(_objectSpread(_objectSpread({},conversionFormData),{},{conversion_factor:e.target.value})),required:true,min:\"0.001\",step:\"0.001\",placeholder:\"e.g., 20 (for 1 carton = 20 pieces)\"}),/*#__PURE__*/_jsx(\"small\",{children:\"How many \\\"to units\\\" equal 1 \\\"from unit\\\"\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:conversionFormData.is_active,onChange:e=>setConversionFormData(_objectSpread(_objectSpread({},conversionFormData),{},{is_active:e.target.checked}))}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Active\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>setShowConversionModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",children:[editingConversion?'Update':'Create',\" Conversion\"]})]})]})]})})]});};export default SystemManagement;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useAuth","useApi","Button","Table","jsx","_jsx","jsxs","_jsxs","SystemManagement","t","user","api","activeTab","setActiveTab","loading","setLoading","error","setError","taxClasses","setTaxClasses","showTaxModal","setShowTaxModal","editingTaxClass","setEditingTaxClass","taxFormData","setTaxFormData","name","description","tax_rate","is_active","categories","setCategories","showCategoryModal","setShowCategoryModal","editingCategory","setEditingCategory","categoryFormData","setCategoryFormData","units","setUnits","filteredUnits","setFilteredUnits","unitSearchTerm","setUnitSearchTerm","showUnitModal","setShowUnitModal","editingUnit","setEditingUnit","unitFormData","setUnitFormData","symbol","is_base_unit","unitConversions","setUnitConversions","filteredConversions","setFilteredConversions","conversionSearchTerm","setConversionSearchTerm","showConversionModal","setShowConversionModal","editingConversion","setEditingConversion","conversionFormData","setConversionFormData","from_unit","to_unit","conversion_factor","canManage","role","fetchAllData","trim","filtered","filter","conversion","searchLower","toLowerCase","from_unit_name","includes","from_unit_symbol","to_unit_name","to_unit_symbol","toString","unit","Promise","all","fetchTaxClasses","fetchCategories","fetchUnits","fetchUnitConversions","err","response","get","data","results","console","validateTaxClass","errors","push","rate","parseFloat","isNaN","existingTaxClass","find","taxClass","handleTaxSubmit","e","preventDefault","validationErrors","length","join","put","concat","id","post","_err$response","errorData","errorMessage","detail","non_field_errors","firstError","Object","values","Array","isArray","validateCategory","existingCategory","category","handleCategorySubmit","_err$response2","allUnits","nextUrl","next","validateUnit","existingUnit","existingSymbol","existingBaseUnit","handleUnitSubmit","_err$response3","allConversions","validateConversion","fromUnit","parseInt","toUnit","existingConversion","conv","hasCircularConversion","some","existingBaseConversion","convFromUnit","handleConversionSubmit","_objectSpread","_err$response4","handleDelete","type","item","window","confirm","endpoints","tax","delete","warn","taxColumns","key","label","render","value","_","className","children","size","variant","onClick","categoryColumns","unitColumns","conversionColumns","columns","emptyMessage","placeholder","onChange","target","stopPropagation","viewBox","fill","d","onSubmit","htmlFor","required","rows","min","max","step","checked","sort","a","b","localeCompare","map","disabled"],"sources":["/home/el-ifran/WareHouse_Manager/elif-admin-app/beverage_management_system/src/pages/SystemManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useApi } from '../hooks/useApi';\nimport Button from '../components/Button';\nimport Table from '../components/Table';\nimport './SystemManagement.css';\n\nconst SystemManagement = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const api = useApi();\n  \n  // State for different management sections\n  const [activeTab, setActiveTab] = useState('taxes');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  // Tax Classes State\n  const [taxClasses, setTaxClasses] = useState([]);\n  const [showTaxModal, setShowTaxModal] = useState(false);\n  const [editingTaxClass, setEditingTaxClass] = useState(null);\n  const [taxFormData, setTaxFormData] = useState({\n    name: '',\n    description: '',\n    tax_rate: '',\n    is_active: true\n  });\n  \n  // Categories State\n  const [categories, setCategories] = useState([]);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [categoryFormData, setCategoryFormData] = useState({\n    name: '',\n    description: '',\n    is_active: true\n  });\n  \n  // Units State\n  const [units, setUnits] = useState([]);\n  const [filteredUnits, setFilteredUnits] = useState([]);\n  const [unitSearchTerm, setUnitSearchTerm] = useState('');\n  const [showUnitModal, setShowUnitModal] = useState(false);\n  const [editingUnit, setEditingUnit] = useState(null);\n  const [unitFormData, setUnitFormData] = useState({\n    name: '',\n    symbol: '',\n    is_base_unit: false,\n    is_active: true\n  });\n  \n  // Unit Conversions State\n  const [unitConversions, setUnitConversions] = useState([]);\n  const [filteredConversions, setFilteredConversions] = useState([]);\n  const [conversionSearchTerm, setConversionSearchTerm] = useState('');\n  const [showConversionModal, setShowConversionModal] = useState(false);\n  const [editingConversion, setEditingConversion] = useState(null);\n  const [conversionFormData, setConversionFormData] = useState({\n    from_unit: '',\n    to_unit: '',\n    conversion_factor: '',\n    is_active: true\n  });\n\n  // Check if user has permission to manage\n  const canManage = user?.role === 'admin' || user?.role === 'manager';\n\n  useEffect(() => {\n    if (canManage) {\n      fetchAllData();\n    }\n  }, [canManage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Filter conversions based on search term\n  useEffect(() => {\n    if (!conversionSearchTerm.trim()) {\n      setFilteredConversions(unitConversions);\n    } else {\n      const filtered = unitConversions.filter(conversion => {\n        const searchLower = conversionSearchTerm.toLowerCase();\n        return (\n          (conversion.from_unit_name && conversion.from_unit_name.toLowerCase().includes(searchLower)) ||\n          (conversion.from_unit_symbol && conversion.from_unit_symbol.toLowerCase().includes(searchLower)) ||\n          (conversion.to_unit_name && conversion.to_unit_name.toLowerCase().includes(searchLower)) ||\n          (conversion.to_unit_symbol && conversion.to_unit_symbol.toLowerCase().includes(searchLower)) ||\n          conversion.conversion_factor.toString().includes(searchLower)\n        );\n      });\n      setFilteredConversions(filtered);\n    }\n  }, [unitConversions, conversionSearchTerm]);\n\n  // Filter units based on search term\n  useEffect(() => {\n    if (!unitSearchTerm.trim()) {\n      setFilteredUnits(units);\n    } else {\n      const filtered = units.filter(unit => {\n        const searchLower = unitSearchTerm.toLowerCase();\n        return (\n          (unit.name && unit.name.toLowerCase().includes(searchLower)) ||\n          (unit.symbol && unit.symbol.toLowerCase().includes(searchLower)) ||\n          (unit.is_base_unit && 'base unit'.includes(searchLower)) ||\n          (unit.is_active && 'active'.includes(searchLower)) ||\n          (!unit.is_active && 'inactive'.includes(searchLower))\n        );\n      });\n      setFilteredUnits(filtered);\n    }\n  }, [units, unitSearchTerm]);\n\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([\n        fetchTaxClasses(),\n        fetchCategories(),\n        fetchUnits(),\n        fetchUnitConversions()\n      ]);\n    } catch (err) {\n      setError('Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Tax Classes Functions\n  const fetchTaxClasses = async () => {\n    try {\n      const response = await api.get('/api/products/tax-classes/');\n      setTaxClasses(response.data.results || response.data);\n    } catch (err) {\n      console.error('Tax classes error:', err);\n    }\n  };\n\n  const validateTaxClass = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Tax class name is required');\n    }\n\n    // Check if tax rate is provided and valid\n    if (!data.tax_rate || data.tax_rate === '') {\n      errors.push('Tax rate is required');\n    } else {\n      const rate = parseFloat(data.tax_rate);\n      if (isNaN(rate)) {\n        errors.push('Tax rate must be a valid number');\n      } else if (rate < 0) {\n        errors.push('Tax rate cannot be negative');\n      } else if (rate > 100) {\n        errors.push('Tax rate cannot exceed 100%');\n      }\n    }\n\n    // Check for duplicate name (only for new tax classes)\n    if (!editingTaxClass) {\n      const existingTaxClass = taxClasses.find(taxClass => \n        taxClass.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingTaxClass) {\n        errors.push('A tax class with this name already exists');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleTaxSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the tax class data\n      const validationErrors = validateTaxClass(taxFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingTaxClass) {\n        await api.put(`/products/tax-classes/${editingTaxClass.id}/`, taxFormData);\n      } else {\n        await api.post('/api/products/tax-classes/', taxFormData);\n      }\n      \n      setShowTaxModal(false);\n      setEditingTaxClass(null);\n      setTaxFormData({ name: '', description: '', tax_rate: '', is_active: true });\n      fetchTaxClasses();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save tax class';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.tax_rate) {\n          errorMessage = `Tax rate: ${errorData.tax_rate.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Categories Functions\n  const fetchCategories = async () => {\n    try {\n      const response = await api.get('/api/products/categories/');\n      setCategories(response.data.results || response.data);\n    } catch (err) {\n      console.error('Categories error:', err);\n    }\n  };\n\n  const validateCategory = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Category name is required');\n    }\n\n    // Check for duplicate name (only for new categories)\n    if (!editingCategory) {\n      const existingCategory = categories.find(category => \n        category.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingCategory) {\n        errors.push('A category with this name already exists');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleCategorySubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the category data\n      const validationErrors = validateCategory(categoryFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingCategory) {\n        await api.put(`/products/categories/${editingCategory.id}/`, categoryFormData);\n      } else {\n        await api.post('/api/products/categories/', categoryFormData);\n      }\n      \n      setShowCategoryModal(false);\n      setEditingCategory(null);\n      setCategoryFormData({ name: '', description: '', is_active: true });\n      fetchCategories();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save category';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Units Functions\n  const fetchUnits = async () => {\n    try {\n      let allUnits = [];\n      let nextUrl = '/products/units/';\n      \n      // Fetch all pages of units to ensure we get all base units (including inactive ones)\n      while (nextUrl) {\n        const response = await api.get(nextUrl);\n        const data = response.data;\n        \n        if (data.results) {\n          // Paginated response\n          allUnits = [...allUnits, ...data.results];\n          nextUrl = data.next;\n        } else {\n          // Non-paginated response\n          allUnits = data;\n          nextUrl = null;\n        }\n      }\n      \n      setUnits(allUnits);\n    } catch (err) {\n      console.error('Units error:', err);\n    }\n  };\n\n  const validateUnit = (data) => {\n    const errors = [];\n\n    // Check if name is provided\n    if (!data.name || data.name.trim() === '') {\n      errors.push('Unit name is required');\n    }\n\n    // Check if symbol is provided\n    if (!data.symbol || data.symbol.trim() === '') {\n      errors.push('Unit symbol is required');\n    }\n\n    // Check for duplicate name (only for new units)\n    if (!editingUnit) {\n      const existingUnit = units.find(unit => \n        unit.name.toLowerCase() === data.name.toLowerCase()\n      );\n      if (existingUnit) {\n        errors.push('A unit with this name already exists');\n      }\n    }\n\n    // Check for duplicate symbol (only for new units)\n    if (!editingUnit) {\n      const existingSymbol = units.find(unit => \n        unit.symbol.toLowerCase() === data.symbol.toLowerCase()\n      );\n      if (existingSymbol) {\n        errors.push('A unit with this symbol already exists');\n      }\n    }\n\n    // Check if trying to set multiple base units\n    if (data.is_base_unit && !editingUnit) {\n      const existingBaseUnit = units.find(unit => unit.is_base_unit);\n      if (existingBaseUnit) {\n        errors.push('Only one base unit is allowed. Please uncheck the existing base unit first.');\n      }\n    }\n\n    return errors;\n  };\n\n  const handleUnitSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Validate the unit data\n      const validationErrors = validateUnit(unitFormData);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingUnit) {\n        await api.put(`/products/units/${editingUnit.id}/`, unitFormData);\n      } else {\n        await api.post('/api/products/units/', unitFormData);\n      }\n      \n      setShowUnitModal(false);\n      setEditingUnit(null);\n      setUnitFormData({ name: '', symbol: '', is_base_unit: false, is_active: true });\n      fetchUnits();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save unit';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.name) {\n          errorMessage = `Name: ${errorData.name.join('. ')}`;\n        } else if (errorData.symbol) {\n          errorMessage = `Symbol: ${errorData.symbol.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Unit Conversions Functions\n  const fetchUnitConversions = async () => {\n    try {\n      let allConversions = [];\n      let nextUrl = '/products/unit-conversions/';\n      \n      // Fetch all pages of unit conversions\n      while (nextUrl) {\n        const response = await api.get(nextUrl);\n        const data = response.data;\n        \n        if (data.results) {\n          // Paginated response\n          allConversions = [...allConversions, ...data.results];\n          nextUrl = data.next;\n        } else {\n          // Non-paginated response\n          allConversions = data;\n          nextUrl = null;\n        }\n      }\n      \n      setUnitConversions(allConversions);\n    } catch (err) {\n      console.error('Unit conversions error:', err);\n    }\n  };\n\n  const validateConversion = (data) => {\n    const errors = [];\n\n    // Check if from_unit and to_unit are the same\n    if (data.from_unit === data.to_unit) {\n      errors.push('From unit and To unit cannot be the same');\n    }\n\n    // Check if conversion factor is valid\n    if (data.conversion_factor <= 0) {\n      errors.push('Conversion factor must be greater than 0');\n    }\n\n    // Check if conversion factor is reasonable (not too large or too small)\n    if (data.conversion_factor > 10000) {\n      errors.push('Conversion factor is too large (max: 10,000)');\n    }\n\n    if (data.conversion_factor < 0.0001) {\n      errors.push('Conversion factor is too small (min: 0.0001)');\n    }\n\n    // Find the selected units\n    const fromUnit = units.find(unit => unit.id === parseInt(data.from_unit));\n    const toUnit = units.find(unit => unit.id === parseInt(data.to_unit));\n\n    // Check that at least one unit is a base unit\n    if (fromUnit && toUnit && !fromUnit.is_base_unit && !toUnit.is_base_unit) {\n      errors.push('At least one of the units must be a base unit');\n    }\n\n    // Check for existing conversion (only for new conversions)\n    if (!editingConversion) {\n      const existingConversion = unitConversions.find(conv => \n        (conv.from_unit === data.from_unit && conv.to_unit === data.to_unit) ||\n        (conv.from_unit === data.to_unit && conv.to_unit === data.from_unit)\n      );\n      \n      if (existingConversion) {\n        errors.push('A conversion between these units already exists');\n      }\n    }\n\n    // Check for circular conversions\n    const hasCircularConversion = unitConversions.some(conv => {\n      if (editingConversion && conv.id === editingConversion.id) return false;\n      \n      // Check if this would create a circular conversion\n      return (conv.from_unit === data.to_unit && conv.to_unit === data.from_unit);\n    });\n\n    if (hasCircularConversion) {\n      errors.push('This would create a circular conversion (reverse conversion already exists)');\n    }\n\n    // Check that non-base units have only one conversion from base unit\n    if (fromUnit && toUnit) {\n      // If from_unit is not a base unit, check if it already has a conversion from a base unit\n      if (!fromUnit.is_base_unit) {\n        const existingBaseConversion = unitConversions.find(conv => {\n          if (editingConversion && conv.id === editingConversion.id) return false;\n          const convFromUnit = units.find(unit => unit.id === conv.from_unit);\n          return convFromUnit && convFromUnit.is_base_unit && conv.to_unit === fromUnit.id;\n        });\n        \n        if (existingBaseConversion) {\n          errors.push(`${fromUnit.name} already has a conversion from a base unit`);\n        }\n      }\n\n      // If to_unit is not a base unit, check if it already has a conversion from a base unit\n      if (!toUnit.is_base_unit) {\n        const existingBaseConversion = unitConversions.find(conv => {\n          if (editingConversion && conv.id === editingConversion.id) return false;\n          const convFromUnit = units.find(unit => unit.id === conv.from_unit);\n          return convFromUnit && convFromUnit.is_base_unit && conv.to_unit === toUnit.id;\n        });\n        \n        if (existingBaseConversion) {\n          errors.push(`${toUnit.name} already has a conversion from a base unit`);\n        }\n      }\n    }\n\n    return errors;\n  };\n\n  const handleConversionSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const data = {\n        ...conversionFormData,\n        from_unit: parseInt(conversionFormData.from_unit),\n        to_unit: parseInt(conversionFormData.to_unit),\n        conversion_factor: parseFloat(conversionFormData.conversion_factor)\n      };\n\n      // Validate the conversion data\n      const validationErrors = validateConversion(data);\n      if (validationErrors.length > 0) {\n        setError(validationErrors.join('. '));\n        return;\n      }\n\n      if (editingConversion) {\n        await api.put(`/products/unit-conversions/${editingConversion.id}/`, data);\n      } else {\n        await api.post('/api/products/unit-conversions/', data);\n      }\n      \n      setShowConversionModal(false);\n      setEditingConversion(null);\n      setConversionFormData({ from_unit: '', to_unit: '', conversion_factor: '', is_active: true });\n      fetchUnitConversions();\n    } catch (err) {\n      // Handle specific backend errors\n      const errorData = err.response?.data;\n      let errorMessage = 'Failed to save unit conversion';\n      \n      if (errorData) {\n        if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors.join('. ');\n        } else if (errorData.from_unit) {\n          errorMessage = `From unit: ${errorData.from_unit.join('. ')}`;\n        } else if (errorData.to_unit) {\n          errorMessage = `To unit: ${errorData.to_unit.join('. ')}`;\n        } else if (errorData.conversion_factor) {\n          errorMessage = `Conversion factor: ${errorData.conversion_factor.join('. ')}`;\n        } else {\n          // Try to extract error from any field\n          const firstError = Object.values(errorData)[0];\n          if (Array.isArray(firstError)) {\n            errorMessage = firstError.join('. ');\n          } else if (typeof firstError === 'string') {\n            errorMessage = firstError;\n          }\n        }\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Delete Functions\n  const handleDelete = async (type, item) => {\n    if (!window.confirm(`Are you sure you want to delete \"${item.name}\"?`)) {\n      return;\n    }\n\n    try {\n      const endpoints = {\n        tax: `/products/tax-classes/${item.id}/`,\n        category: `/products/categories/${item.id}/`,\n        unit: `/products/units/${item.id}/`,\n        conversion: `/products/unit-conversions/${item.id}/`\n      };\n      \n      await api.delete(endpoints[type]);\n      \n      switch (type) {\n        case 'tax':\n          fetchTaxClasses();\n          break;\n        case 'category':\n          fetchCategories();\n          break;\n        case 'unit':\n          fetchUnits();\n          break;\n        case 'conversion':\n          fetchUnitConversions();\n          break;\n        default:\n          console.warn('Unknown delete type:', type);\n          break;\n      }\n    } catch (err) {\n      setError(`Failed to delete ${type}`);\n    }\n  };\n\n  // Table Columns\n  const taxColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'description', label: 'Description' },\n    { key: 'tax_rate', label: 'Tax Rate (%)', render: (value) => `${value}%` },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingTaxClass(item);\n            setTaxFormData({\n              name: item.name,\n              description: item.description,\n              tax_rate: item.tax_rate.toString(),\n              is_active: item.is_active\n            });\n            setShowTaxModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('tax', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const categoryColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'description', label: 'Description' },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingCategory(item);\n            setCategoryFormData({\n              name: item.name,\n              description: item.description,\n              is_active: item.is_active\n            });\n            setShowCategoryModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('category', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const unitColumns = [\n    { key: 'name', label: 'Name' },\n    { key: 'symbol', label: 'Symbol' },\n    { key: 'is_base_unit', label: 'Base Unit', render: (value) => value ? 'Yes' : 'No' },\n    { key: 'products_count', label: 'Products' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingUnit(item);\n            setUnitFormData({\n              name: item.name,\n              symbol: item.symbol,\n              is_base_unit: item.is_base_unit,\n              is_active: item.is_active\n            });\n            setShowUnitModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('unit', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  const conversionColumns = [\n    { \n      key: 'from_unit_name', \n      label: 'From Unit', \n      render: (value, item) => item.from_unit_name ? `${item.from_unit_name} (${item.from_unit_symbol})` : 'N/A' \n    },\n    { \n      key: 'to_unit_name', \n      label: 'To Unit', \n      render: (value, item) => item.to_unit_name ? `${item.to_unit_name} (${item.to_unit_symbol})` : 'N/A' \n    },\n    { key: 'conversion_factor', label: 'Conversion Factor' },\n    { key: 'is_active', label: 'Status', render: (value) => value ? 'Active' : 'Inactive' },\n    { \n      key: 'actions', \n      label: 'Actions', \n      render: (_, item) => (\n        <div className=\"action-buttons\">\n          <Button size=\"small\" variant=\"outline\" onClick={() => {\n            setEditingConversion(item);\n            setConversionFormData({\n              from_unit: item.from_unit || '',\n              to_unit: item.to_unit || '',\n              conversion_factor: item.conversion_factor.toString(),\n              is_active: item.is_active\n            });\n            setShowConversionModal(true);\n          }}>\n            Edit\n          </Button>\n          <Button size=\"small\" variant=\"danger\" onClick={() => handleDelete('conversion', item)}>\n            Delete\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  if (!canManage) {\n    return (\n      <div className=\"system-management\">\n        <div className=\"access-denied\">\n          <h2>Access Denied</h2>\n          <p>You don't have permission to manage system settings. Only managers and administrators can access this page.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"system-management\">\n      <div className=\"system-header\">\n        <h1>{t('titles.system_management')}</h1>\n        <p>Manage taxes, categories, units, and unit conversions</p>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"system-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'taxes' ? 'active' : ''}`}\n          onClick={() => setActiveTab('taxes')}\n        >\n          Tax Classes\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'categories' ? 'active' : ''}`}\n          onClick={() => setActiveTab('categories')}\n        >\n          Categories\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'units' ? 'active' : ''}`}\n          onClick={() => setActiveTab('units')}\n        >\n          Units\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'conversions' ? 'active' : ''}`}\n          onClick={() => setActiveTab('conversions')}\n        >\n          Unit Conversions\n        </button>\n      </div>\n\n      <div className=\"system-content\">\n        {activeTab === 'taxes' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Tax Classes</h2>\n              <Button onClick={() => {\n                setEditingTaxClass(null);\n                setTaxFormData({ name: '', description: '', tax_rate: '', is_active: true });\n                setShowTaxModal(true);\n              }}>\n                Add New Tax Class\n              </Button>\n            </div>\n            <Table\n              data={taxClasses}\n              columns={taxColumns}\n              loading={loading}\n              emptyMessage=\"No tax classes found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'categories' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Product Categories</h2>\n              <Button onClick={() => {\n                setEditingCategory(null);\n                setCategoryFormData({ name: '', description: '', is_active: true });\n                setShowCategoryModal(true);\n              }}>\n                Add New Category\n              </Button>\n            </div>\n            <Table\n              data={categories}\n              columns={categoryColumns}\n              loading={loading}\n              emptyMessage=\"No categories found\"\n            />\n          </div>\n        )}\n\n        {activeTab === 'units' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Units</h2>\n              <div className=\"header-actions\">\n                <div className=\"search-container\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search units...\"\n                    value={unitSearchTerm}\n                    onChange={(e) => setUnitSearchTerm(e.target.value)}\n                    className=\"search-input\"\n                  />\n                  <span className=\"search-icon\">🔍</span>\n                </div>\n                <Button onClick={() => {\n                  setEditingUnit(null);\n                  setUnitFormData({ name: '', symbol: '', is_base_unit: false, is_active: true });\n                  setShowUnitModal(true);\n                }}>\n                  Add New Unit\n                </Button>\n              </div>\n            </div>\n            <Table\n              data={filteredUnits}\n              columns={unitColumns}\n              loading={loading}\n              emptyMessage={unitSearchTerm ? \"No units found matching your search\" : \"No units found\"}\n            />\n          </div>\n        )}\n\n        {activeTab === 'conversions' && (\n          <div className=\"tab-content\">\n            <div className=\"content-header\">\n              <h2>Unit Conversions</h2>\n              <div className=\"header-actions\">\n                <div className=\"search-container\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search conversions...\"\n                    value={conversionSearchTerm}\n                    onChange={(e) => setConversionSearchTerm(e.target.value)}\n                    className=\"search-input\"\n                  />\n                  <span className=\"search-icon\">🔍</span>\n                </div>\n                <Button onClick={() => {\n                  setEditingConversion(null);\n                  setConversionFormData({ from_unit: '', to_unit: '', conversion_factor: '', is_active: true });\n                  setShowConversionModal(true);\n                }}>\n                  Add New Conversion\n                </Button>\n              </div>\n            </div>\n            <Table\n              data={filteredConversions}\n              columns={conversionColumns}\n              loading={loading}\n              emptyMessage={conversionSearchTerm ? \"No conversions found matching your search\" : \"No unit conversions found\"}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Tax Class Modal */}\n      {showTaxModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowTaxModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingTaxClass ? 'Edit Tax Class' : 'Add New Tax Class'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowTaxModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleTaxSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"tax_name\"\n                  value={taxFormData.name}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Standard Rate\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_description\">Description</label>\n                <textarea\n                  id=\"tax_description\"\n                  value={taxFormData.description}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, description: e.target.value })}\n                  placeholder=\"Brief description of this tax class\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tax_rate\">Tax Rate (%) *</label>\n                <input\n                  type=\"number\"\n                  id=\"tax_rate\"\n                  value={taxFormData.tax_rate}\n                  onChange={(e) => setTaxFormData({ ...taxFormData, tax_rate: e.target.value })}\n                  required\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"0.01\"\n                  placeholder=\"18.00\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={taxFormData.is_active}\n                    onChange={(e) => setTaxFormData({ ...taxFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowTaxModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingTaxClass ? 'Update' : 'Create'} Tax Class\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Category Modal */}\n      {showCategoryModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowCategoryModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingCategory ? 'Edit Category' : 'Add New Category'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowCategoryModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleCategorySubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"category_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"category_name\"\n                  value={categoryFormData.name}\n                  onChange={(e) => setCategoryFormData({ ...categoryFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Beverages\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category_description\">Description</label>\n                <textarea\n                  id=\"category_description\"\n                  value={categoryFormData.description}\n                  onChange={(e) => setCategoryFormData({ ...categoryFormData, description: e.target.value })}\n                  placeholder=\"Brief description of this category\"\n                  rows=\"3\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={categoryFormData.is_active}\n                    onChange={(e) => setCategoryFormData({ ...categoryFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowCategoryModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingCategory ? 'Update' : 'Create'} Category\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Unit Modal */}\n      {showUnitModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowUnitModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingUnit ? 'Edit Unit' : 'Add New Unit'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowUnitModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleUnitSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"unit_name\">Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"unit_name\"\n                  value={unitFormData.name}\n                  onChange={(e) => setUnitFormData({ ...unitFormData, name: e.target.value })}\n                  required\n                  placeholder=\"e.g., Kilogram\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"unit_symbol\">Symbol *</label>\n                <input\n                  type=\"text\"\n                  id=\"unit_symbol\"\n                  value={unitFormData.symbol}\n                  onChange={(e) => setUnitFormData({ ...unitFormData, symbol: e.target.value })}\n                  required\n                  placeholder=\"e.g., kg\"\n                />\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={unitFormData.is_base_unit}\n                    onChange={(e) => setUnitFormData({ ...unitFormData, is_base_unit: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Base Unit\n                </label>\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={unitFormData.is_active}\n                    onChange={(e) => setUnitFormData({ ...unitFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowUnitModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingUnit ? 'Update' : 'Create'} Unit\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Unit Conversion Modal */}\n      {showConversionModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowConversionModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editingConversion ? 'Edit Unit Conversion' : 'Add New Unit Conversion'}</h2>\n              <button className=\"modal-close\" onClick={() => setShowConversionModal(false)}>\n                <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                </svg>\n              </button>\n            </div>\n\n            <form onSubmit={handleConversionSubmit} className=\"system-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"from_unit\">From Unit *</label>\n                <select\n                  id=\"from_unit\"\n                  value={conversionFormData.from_unit}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, from_unit: e.target.value })}\n                  required\n                >\n                  <option value=\"\">Select From Unit</option>\n                  {units\n                    .sort((a, b) => {\n                      // Sort base units first, then by name\n                      if (a.is_base_unit && !b.is_base_unit) return -1;\n                      if (!a.is_base_unit && b.is_base_unit) return 1;\n                      return a.name.localeCompare(b.name);\n                    })\n                    .map(unit => (\n                      <option key={unit.id} value={unit.id} disabled={!unit.is_active}>\n                        {unit.name} ({unit.symbol}){unit.is_base_unit ? ' - BASE UNIT' : ''}{!unit.is_active ? ' - INACTIVE' : ''}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"to_unit\">To Unit *</label>\n                <select\n                  id=\"to_unit\"\n                  value={conversionFormData.to_unit}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, to_unit: e.target.value })}\n                  required\n                >\n                  <option value=\"\">Select To Unit</option>\n                  {units\n                    .sort((a, b) => {\n                      // Sort base units first, then by name\n                      if (a.is_base_unit && !b.is_base_unit) return -1;\n                      if (!a.is_base_unit && b.is_base_unit) return 1;\n                      return a.name.localeCompare(b.name);\n                    })\n                    .map(unit => (\n                      <option key={unit.id} value={unit.id} disabled={!unit.is_active}>\n                        {unit.name} ({unit.symbol}){unit.is_base_unit ? ' - BASE UNIT' : ''}{!unit.is_active ? ' - INACTIVE' : ''}\n                      </option>\n                    ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"conversion_factor\">Conversion Factor *</label>\n                <input\n                  type=\"number\"\n                  id=\"conversion_factor\"\n                  value={conversionFormData.conversion_factor}\n                  onChange={(e) => setConversionFormData({ ...conversionFormData, conversion_factor: e.target.value })}\n                  required\n                  min=\"0.001\"\n                  step=\"0.001\"\n                  placeholder=\"e.g., 20 (for 1 carton = 20 pieces)\"\n                />\n                <small>How many \"to units\" equal 1 \"from unit\"</small>\n              </div>\n\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={conversionFormData.is_active}\n                    onChange={(e) => setConversionFormData({ ...conversionFormData, is_active: e.target.checked })}\n                  />\n                  <span className=\"checkmark\"></span>\n                  Active\n                </label>\n              </div>\n\n              <div className=\"form-actions\">\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowConversionModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  {editingConversion ? 'Update' : 'Create'} Conversion\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SystemManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}