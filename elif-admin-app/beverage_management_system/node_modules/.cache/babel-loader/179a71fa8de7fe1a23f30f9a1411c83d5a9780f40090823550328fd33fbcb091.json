{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import api from'../services/api';import{useAuth}from'../contexts/AuthContext';import Table from'../components/Table';import Button from'../components/Button';import PrintButton from'../components/PrintButton';import'./SalesManagement.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SalesManagement=()=>{const{user}=useAuth();const[sales,setSales]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[showDeleteModal,setShowDeleteModal]=useState(false);const[showEditModal,setShowEditModal]=useState(false);const[showPaymentModal,setShowPaymentModal]=useState(false);const[selectedSale,setSelectedSale]=useState(null);const[loadingSale,setLoadingSale]=useState(false);const[deleteFilters,setDeleteFilters]=useState({customer_name:'',start_date:'',end_date:'',status:'completed'});const[editFormData,setEditFormData]=useState({items:[],payment_type:'full',paid_amount:0});const[products,setProducts]=useState([]);const[filters,setFilters]=useState({status:'',customer_name:'',start_date:'',end_date:''});const fetchSales=useCallback(async()=>{try{setLoading(true);setError('');const params=new URLSearchParams();if(filters.status)params.append('status',filters.status);if(filters.customer_name)params.append('search',filters.customer_name);if(filters.start_date)params.append('created_at__date__gte',filters.start_date);if(filters.end_date)params.append('created_at__date__lte',filters.end_date);const response=await api.get(\"/sales/?\".concat(params.toString()));const salesData=response.data.results||response.data;// Ensure salesData is always an array\nif(!Array.isArray(salesData)){console.error('Sales data is not an array:',salesData);setSales([]);return;}setSales(salesData);}catch(err){var _err$response,_err$response$data;setError('Failed to fetch sales: '+(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message));console.error('Sales fetch error:',err);}finally{setLoading(false);}},[filters]);useEffect(()=>{fetchSales();fetchProducts();},[fetchSales]);const fetchProducts=async()=>{try{const response=await api.get('/products/?is_active=true');setProducts(response.data.results||response.data);}catch(err){console.error('Products fetch error:',err);}};const handleDeleteSales=async()=>{try{setError('');const response=await api.delete('/sales/delete/',{data:deleteFilters});alert(\"Successfully deleted \".concat(response.data.deleted_count,\" sales\"));setShowDeleteModal(false);setDeleteFilters({customer_name:'',start_date:'',end_date:'',status:'completed'});fetchSales();fetchProducts();// Refresh products to update stock quantities\n}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||'Failed to delete sales');console.error('Delete sales error:',err);}};const handleEditSale=async()=>{try{setError('');// Prepare the data to send\nconst updateData={items:editFormData.items,paid_amount:editFormData.paid_amount};await api.put(\"/sales/\".concat(selectedSale.id,\"/edit/\"),updateData);alert('Sale updated successfully');setShowEditModal(false);setSelectedSale(null);setEditFormData({items:[],payment_type:'full',paid_amount:0});fetchSales();fetchProducts();// Refresh products to update stock quantities\n}catch(err){var _err$response3,_err$response3$data;setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||'Failed to update sale');console.error('Edit sale error:',err);}};const handleMakePayment=async(saleId,paymentAmount)=>{try{setError('');await api.post(\"/sales/\".concat(saleId,\"/payment/\"),{payment_amount:paymentAmount,is_full_payment:true});alert('Payment processed successfully');setShowPaymentModal(false);fetchSales();}catch(err){var _err$response4,_err$response4$data;setError(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.error)||'Failed to process payment');console.error('Payment error:',err);}};const handleFilterChange=e=>{const{name,value}=e.target;setFilters(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handleDeleteFilterChange=e=>{const{name,value}=e.target;setDeleteFilters(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const clearFilters=()=>{setFilters({status:'',customer_name:'',start_date:'',end_date:''});};const openEditModal=async sale=>{try{setLoadingSale(true);setError('');// Fetch full sale data including items\nconst response=await api.get(\"/sales/\".concat(sale.id,\"/\"));const fullSale=response.data;setSelectedSale(fullSale);setEditFormData({items:fullSale.items.map(item=>{var _item$unit;return{product:item.product,quantity:item.quantity,unit:((_item$unit=item.unit)===null||_item$unit===void 0?void 0:_item$unit.id)||item.unit||'',unit_price:item.unit_price,price_mode:item.price_mode||'standard'};}),payment_type:fullSale.payment_status==='paid'?'full':fullSale.payment_status==='partial'?'partial':'full',paid_amount:fullSale.paid_amount||0});setShowEditModal(true);}catch(err){setError('Failed to load sale details');console.error('Sale fetch error:',err);}finally{setLoadingSale(false);}};const cancelSale=async saleId=>{try{setError('');const response=await api.post(\"/sales/\".concat(saleId,\"/cancel/\"));if(response.data.message==='Sale cancelled and stock restored'){// Show refund information for completed sales\nif(response.data.refund_amount&&response.data.refund_amount>0){alert(\"Sale cancelled and stock restored successfully!\\n\\nRefund Information:\\nOriginal Sale: \".concat(response.data.original_sale_number,\"\\nRefund Amount: $\").concat(response.data.refund_amount.toFixed(2),\"\\n\\nPlease process the refund to the customer.\"));}else{alert('Sale cancelled and stock restored successfully');}}else{alert('Sale cancelled successfully');}fetchSales();fetchProducts();// Refresh products to update stock quantities\n}catch(err){var _err$response5,_err$response5$data;setError(((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.error)||'Failed to cancel sale');console.error('Cancel sale error:',err);}};const handlePaymentMethodChange=async(saleId,newPaymentMethod)=>{try{setError('');await api.patch(\"/sales/\".concat(saleId,\"/payment-method/\"),{payment_method:newPaymentMethod});// Update the local state to reflect the change immediately\nsetSales(prevSales=>prevSales.map(sale=>sale.id===saleId?_objectSpread(_objectSpread({},sale),{},{payment_method:newPaymentMethod}):sale));}catch(err){var _err$response6,_err$response6$data;setError(((_err$response6=err.response)===null||_err$response6===void 0?void 0:(_err$response6$data=_err$response6.data)===null||_err$response6$data===void 0?void 0:_err$response6$data.error)||'Failed to update payment method');console.error('Payment method update error:',err);}};const addEditItem=()=>{setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:[...prev.items,{product:'',quantity:1,unit:'',unit_price:0}]}));};const removeEditItem=index=>{setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:prev.items.filter((_,i)=>i!==index)}));};const updateEditItem=(index,field,value)=>{setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{items:prev.items.map((item,i)=>i===index?_objectSpread(_objectSpread({},item),{},{[field]:value}):item)}));};const validateEditSale=()=>{// Require at least 1 item for all sales (including returns)\nif(!editFormData.items||editFormData.items.length===0){return false;}// Check if any item has invalid quantity (allow quantity = 0)\nfor(const item of editFormData.items){var _selectedSale$items;const quantity=parseFloat(item.quantity);if(isNaN(quantity)||quantity<0){return false;}// Find the corresponding original item to check stock availability\nconst originalItem=selectedSale===null||selectedSale===void 0?void 0:(_selectedSale$items=selectedSale.items)===null||_selectedSale$items===void 0?void 0:_selectedSale$items.find(original=>original.product===item.product&&original.unit===item.unit&&original.price_mode===item.price_mode);if(originalItem){// Calculate the quantity difference\nconst originalQuantity=parseFloat(originalItem.quantity);const quantityDiff=quantity-originalQuantity;// If increasing quantity, check stock availability\nif(quantityDiff>0){// Find the product to get current stock\nconst product=products.find(p=>p.id===parseInt(item.product));if(product){// Convert quantity difference to base units for stock check\n// This is a simplified check - in a real scenario, you'd need proper unit conversion\nconst stockNeeded=quantityDiff;if(product.stock_quantity<stockNeeded){return false;}}}}}// Validate payment logic\nif(editFormData.payment_type==='partial'){const total=calculateEditTotal();const paidAmount=parseFloat(editFormData.paid_amount)||0;// For partial payment, paid amount must be less than total and greater than 0\nif(paidAmount>=total||paidAmount<=0){return false;}}else if(editFormData.payment_type==='full'){const total=calculateEditTotal();const paidAmount=parseFloat(editFormData.paid_amount)||0;// For full payment, paid amount must equal total\nif(paidAmount!==total){return false;}}return true;};const getProductPrice=productId=>{const product=products.find(p=>p.id===parseInt(productId));return product?product.price:0;};const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount);};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString();};const getStatusBadge=status=>{const statusClasses={pending:'status-pending',completed:'status-completed',cancelled:'status-cancelled',returned:'status-returned',refunded:'status-refunded'};return/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(statusClasses[status]||''),children:status});};const getPaymentStatusBadge=paymentStatus=>{const paymentClasses={pending:'payment-pending',partial:'payment-partial',paid:'payment-paid'};const paymentLabels={pending:'Unpaid',partial:'Partial',paid:'Paid'};return/*#__PURE__*/_jsx(\"span\",{className:\"payment-badge \".concat(paymentClasses[paymentStatus]||''),children:paymentLabels[paymentStatus]||paymentStatus});};const calculateEditTotal=()=>{return editFormData.items.reduce((total,item)=>{return total+parseFloat(item.unit_price||0)*parseFloat(item.quantity||0);},0);};// Update paid_amount when payment_type changes\nuseEffect(()=>{if(editFormData.payment_type==='full'){setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{paid_amount:calculateEditTotal()}));}},[editFormData.payment_type,editFormData.items]);// Check if user has permission to manage sales\nconst canManageSales=(user===null||user===void 0?void 0:user.role)==='admin'||(user===null||user===void 0?void 0:user.role)==='manager';if(!canManageSales){return/*#__PURE__*/_jsx(\"div\",{className:\"sales-management\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"access-denied\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Access Denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You don't have permission to manage sales.\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"sales-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('titles.sales_management')}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(PrintButton,{data:_objectSpread(_objectSpread({},sales),{},{user_name:(user===null||user===void 0?void 0:user.username)||t('app.unknown_user'),user_id:(user===null||user===void 0?void 0:user.id)||'unknown',print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9))}),title:t('titles.sales_management_report'),type:\"sales_history\",printText:t('buttons.print_sales_report'),className:\"print-sales-report-btn\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:()=>setShowDeleteModal(true),children:\"Delete Sales\"})]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[error,/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(''),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filters-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Filters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filters-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"status\",value:filters.status,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Statuses\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cancelled\",children:\"Cancelled\"}),/*#__PURE__*/_jsx(\"option\",{value:\"returned\",children:\"Returned\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Customer Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"customer_name\",value:filters.customer_name,onChange:handleFilterChange,placeholder:t('forms.search_by_customer_name')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"start_date\",value:filters.start_date,onChange:handleFilterChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"end_date\",value:filters.end_date,onChange:handleFilterChange})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-actions\",children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:clearFilters,children:\"Clear Filters\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-section\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading sales...\"}):/*#__PURE__*/_jsx(Table,{data:sales,columns:[{key:'sale_number',header:t('table_headers.sale_number'),render:(value,row)=>/*#__PURE__*/_jsx(\"span\",{className:\"sale-number\",children:value})},{key:'customer_name',header:t('table_headers.customer'),render:value=>value||'N/A'},{key:'status',header:t('table_headers.status'),render:(value,row)=>/*#__PURE__*/_jsx(\"div\",{className:\"status-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sale-status\",children:getStatusBadge(value)})})},{key:'payment_status',header:t('table_headers.payment'),render:(value,row)=>{const paymentClasses={'pending':'payment-pending','partial':'payment-partial','paid':'payment-paid'};const paymentLabels={'pending':t('status_labels.pending'),'partial':t('status_labels.partial'),'paid':t('status_labels.paid')};return/*#__PURE__*/_jsx(\"span\",{className:\"payment-badge \".concat(paymentClasses[value]||''),children:paymentLabels[value]||value});}},{key:'items',header:t('table_headers.items'),render:(items,row)=>{if(!items||items.length===0){return/*#__PURE__*/_jsx(\"span\",{className:\"no-items\",children:\"No items\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"sale-items\",children:[items.slice(0,2).map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"sale-item-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"item-name\",children:[item.product_name,/*#__PURE__*/_jsx(\"span\",{className:\"price-mode-badge \".concat(item.price_mode||'standard'),children:item.price_mode==='wholesale'?'WS':'STD'})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"item-details\",children:[item.quantity_display||item.quantity,\" \",item.unit_symbol||'pcs',\" \\xD7 \",formatCurrency(item.unit_price)]})]},index)),items.length>2&&/*#__PURE__*/_jsxs(\"div\",{className:\"more-items\",children:[\"+\",items.length-2,\" more items\"]})]});}},{key:'total_amount',header:t('table_headers.total_amount'),render:(value,row)=>/*#__PURE__*/_jsx(\"div\",{className:\"amount-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"total-amount\",children:formatCurrency(value)})})},{key:'created_at',header:t('table_headers.date'),render:value=>formatDate(value)},{key:'sold_by_name',header:t('table_headers.sold_by'),render:value=>value||'N/A'},{key:'payment_method',header:t('table_headers.payment_method'),render:(value,row)=>{// For pending sales, make payment method editable\nif(row.status==='pending'){return/*#__PURE__*/_jsxs(\"select\",{value:value||'cash',onChange:e=>handlePaymentMethodChange(row.id,e.target.value),className:\"payment-method-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"cash\",children:\"Cash\"}),/*#__PURE__*/_jsx(\"option\",{value:\"card\",children:\"Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"mobile_money\",children:\"Mobile Money\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bank_transfer\",children:\"Bank Transfer\"})]});}// For other sales, just display the payment method\nconst methodLabels={'cash':t('payment_methods.cash'),'card':t('payment_methods.card'),'mobile_money':t('payment_methods.mobile_money'),'bank_transfer':t('payment_methods.bank_transfer')};return/*#__PURE__*/_jsx(\"span\",{className:\"payment-method-display\",children:methodLabels[value]||value||'Cash'});}},{key:'paid_amount',header:t('table_headers.paid_amount'),render:(value,row)=>{const paidAmount=parseFloat(value)||0;return/*#__PURE__*/_jsx(\"div\",{className:\"payment-amount-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"paid-amount\",children:formatCurrency(paidAmount)})});}},{key:'actions',header:t('table_headers.actions'),render:(_,row)=>/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(PrintButton,{data:_objectSpread(_objectSpread({},row),{},{user_name:(user===null||user===void 0?void 0:user.username)||t('app.unknown_user'),user_id:(user===null||user===void 0?void 0:user.id)||'unknown',print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9))}),title:t('titles.sale_receipt'),type:\"sale\",printText:t('buttons.print'),className:\"print-sale-btn\"}),!(row.status==='completed'&&row.payment_status==='paid')&&row.status!=='refunded'&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"small\",onClick:()=>openEditModal(row),loading:loadingSale,disabled:loadingSale,children:\"Edit\"}),(row.status==='pending'||row.status==='completed')&&row.status!=='refunded'&&row.sale_type!=='return'&&/*#__PURE__*/_jsx(Button,{variant:\"danger\",size:\"small\",onClick:()=>{if(window.confirm(\"Are you sure you want to cancel this \".concat(row.status,\" sale?\"))){cancelSale(row.id);}},children:\"Cancel\"})]})}]})}),showDeleteModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Delete Sales\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowDeleteModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select criteria to delete sales:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Customer Name (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"customer_name\",value:deleteFilters.customer_name,onChange:handleDeleteFilterChange,placeholder:t('forms.leave_empty_to_delete_all')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"start_date\",value:deleteFilters.start_date,onChange:handleDeleteFilterChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"end_date\",value:deleteFilters.end_date,onChange:handleDeleteFilterChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"status\",value:deleteFilters.status,onChange:handleDeleteFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cancelled\",children:\"Cancelled\"}),/*#__PURE__*/_jsx(\"option\",{value:\"returned\",children:\"Returned\"}),/*#__PURE__*/_jsx(\"option\",{value:\"refunded\",children:\"Refunded\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowDeleteModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:handleDeleteSales,children:\"Delete Sales\"})]})]})]})}),showEditModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content large-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'?t('modals.view_sale'):t('modals.edit_sale'),\": \",(selectedSale===null||selectedSale===void 0?void 0:selectedSale.sale_number)||t('app.loading'),(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'&&/*#__PURE__*/_jsx(\"span\",{className:\"view-only-badge\",children:t('modals.view_only')})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowEditModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:loadingSale?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading sale details...\"}):selectedSale?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"edit-sale-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Customer:\"}),\" \",selectedSale.customer_name||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",formatDate(selectedSale.created_at)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",getStatusBadge(selectedSale.status)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Payment Status:\"}),\" \",getPaymentStatusBadge(selectedSale.payment_status)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amount:\"}),\" $\",selectedSale.total_amount]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Paid Amount:\"}),\" $\",selectedSale.paid_amount]}),selectedSale.payment_status==='partial'&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Remaining Amount:\"}),\" $\",selectedSale.remaining_amount]}),selectedSale.due_date&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Due Date:\"}),\" \",formatDate(selectedSale.due_date)]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Sale Items\"}),/*#__PURE__*/_jsx(\"div\",{className:\"edit-items\",children:editFormData.items.map((item,index)=>{var _selectedSale$items2;// Get the original item from the sale to display product and unit info\nconst originalItem=selectedSale===null||selectedSale===void 0?void 0:(_selectedSale$items2=selectedSale.items)===null||_selectedSale$items2===void 0?void 0:_selectedSale$items2.find(origItem=>origItem.product===item.product&&origItem.unit===item.unit&&origItem.price_mode===item.price_mode);return/*#__PURE__*/_jsxs(\"div\",{className:\"edit-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Product\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:(originalItem===null||originalItem===void 0?void 0:originalItem.product_name)||t('app.unknown_product'),readOnly:true,className:\"readonly-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:originalItem!==null&&originalItem!==void 0&&originalItem.unit_name?\"\".concat(originalItem.unit_name,\" (\").concat(originalItem.unit_symbol,\")\"):'N/A',readOnly:true,className:\"readonly-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Price Mode\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:item.price_mode==='wholesale'?'Wholesale (WS)':'Standard (STD)',readOnly:true,className:\"readonly-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Unit Price\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formatCurrency(item.unit_price),readOnly:true,className:\"readonly-field\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:item.quantity,onChange:e=>updateEditItem(index,'quantity',parseFloat(e.target.value)||0),readOnly:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid',className:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'?'read-only-input':''})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formatCurrency(item.quantity*item.unit_price),readOnly:true,className:\"readonly-field\"})]}),!((selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid')&&/*#__PURE__*/_jsx(Button,{variant:\"danger\",size:\"small\",onClick:()=>removeEditItem(index),children:\"Remove\"})]},index);})}),!((selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Payment Type\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-types\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editPaymentType\",value:\"full\",checked:editFormData.payment_type==='full',onChange:e=>setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{payment_type:e.target.value,paid_amount:e.target.value==='full'?calculateEditTotal():prev.paid_amount})),disabled:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'}),/*#__PURE__*/_jsx(\"span\",{children:\"Full Payment (100%)\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"payment-type\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editPaymentType\",value:\"partial\",checked:editFormData.payment_type==='partial',onChange:e=>setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{payment_type:e.target.value})),disabled:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'}),/*#__PURE__*/_jsx(\"span\",{children:\"Partial Payment (0-99.99%)\"})]})]})]}),editFormData.payment_type==='partial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",min:\"0\",max:calculateEditTotal(),value:editFormData.paid_amount||0,onChange:e=>{const value=parseFloat(e.target.value)||0;setEditFormData(prev=>_objectSpread(_objectSpread({},prev),{},{paid_amount:value}));},placeholder:t('forms.enter_amount_to_pay'),readOnly:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid',className:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'?'read-only-input':''}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Total: $\",calculateEditTotal().toFixed(2),\" | Remaining: $\",(calculateEditTotal()-(editFormData.paid_amount||0)).toFixed(2)]})]}),editFormData.payment_type==='full'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount to Pay\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",value:calculateEditTotal(),readOnly:true,className:\"form-control\"}),/*#__PURE__*/_jsx(\"small\",{children:\"Full payment for the total amount.\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowEditModal(false),children:(selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid'?t('modals.close'):t('modals.cancel')}),!((selectedSale===null||selectedSale===void 0?void 0:selectedSale.status)==='completed'&&(selectedSale===null||selectedSale===void 0?void 0:selectedSale.payment_status)==='paid')&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleEditSale,disabled:!validateEditSale(),children:\"Update Sale\"})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:\"Failed to load sale details\"})})]})}),showPaymentModal&&selectedSale&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Make Payment - \",selectedSale.sale_number]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowPaymentModal(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"payment-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Customer:\"}),\" \",selectedSale.customer_name||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amount:\"}),\" $\",selectedSale.total_amount]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Paid Amount:\"}),\" $\",selectedSale.paid_amount]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Remaining Amount:\"}),\" $\",selectedSale.remaining_amount]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Payment Amount (Full Payment Only)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",value:selectedSale.remaining_amount,readOnly:true,className:\"form-control\"}),/*#__PURE__*/_jsx(\"small\",{children:\"This will be a full payment for the remaining amount.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowPaymentModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{variant:\"success\",onClick:()=>handleMakePayment(selectedSale.id,selectedSale.remaining_amount),children:[\"Process Payment ($\",selectedSale.remaining_amount,\")\"]})]})]})]})})]});};export default SalesManagement;","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","useAuth","Table","Button","PrintButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SalesManagement","user","sales","setSales","loading","setLoading","error","setError","showDeleteModal","setShowDeleteModal","showEditModal","setShowEditModal","showPaymentModal","setShowPaymentModal","selectedSale","setSelectedSale","loadingSale","setLoadingSale","deleteFilters","setDeleteFilters","customer_name","start_date","end_date","status","editFormData","setEditFormData","items","payment_type","paid_amount","products","setProducts","filters","setFilters","fetchSales","params","URLSearchParams","append","response","get","concat","toString","salesData","data","results","Array","isArray","console","err","_err$response","_err$response$data","message","fetchProducts","handleDeleteSales","delete","alert","deleted_count","_err$response2","_err$response2$data","handleEditSale","updateData","put","id","_err$response3","_err$response3$data","handleMakePayment","saleId","paymentAmount","post","payment_amount","is_full_payment","_err$response4","_err$response4$data","handleFilterChange","e","name","value","target","prev","_objectSpread","handleDeleteFilterChange","clearFilters","openEditModal","sale","fullSale","map","item","_item$unit","product","quantity","unit","unit_price","price_mode","payment_status","cancelSale","refund_amount","original_sale_number","toFixed","_err$response5","_err$response5$data","handlePaymentMethodChange","newPaymentMethod","patch","payment_method","prevSales","_err$response6","_err$response6$data","addEditItem","removeEditItem","index","filter","_","i","updateEditItem","field","validateEditSale","length","_selectedSale$items","parseFloat","isNaN","originalItem","find","original","originalQuantity","quantityDiff","p","parseInt","stockNeeded","stock_quantity","total","calculateEditTotal","paidAmount","getProductPrice","productId","price","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleDateString","getStatusBadge","statusClasses","pending","completed","cancelled","returned","refunded","className","children","getPaymentStatusBadge","paymentStatus","paymentClasses","partial","paid","paymentLabels","reduce","canManageSales","role","t","user_name","username","user_id","print_timestamp","toISOString","print_id","now","Math","random","substr","title","type","printText","variant","onClick","onChange","placeholder","columns","key","header","render","row","slice","product_name","quantity_display","unit_symbol","methodLabels","size","disabled","sale_type","window","confirm","sale_number","created_at","total_amount","remaining_amount","due_date","_selectedSale$items2","origItem","readOnly","unit_name","min","checked","step","max"],"sources":["/home/el-ifran/WareHouse_Manager/beverage_management_system/src/pages/SalesManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport Table from '../components/Table';\nimport Button from '../components/Button';\nimport PrintButton from '../components/PrintButton';\nimport './SalesManagement.css';\n\nconst SalesManagement = () => {\n  const { user } = useAuth();\n  const [sales, setSales] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [selectedSale, setSelectedSale] = useState(null);\n  const [loadingSale, setLoadingSale] = useState(false);\n  const [deleteFilters, setDeleteFilters] = useState({\n    customer_name: '',\n    start_date: '',\n    end_date: '',\n    status: 'completed'\n  });\n  const [editFormData, setEditFormData] = useState({\n    items: [],\n    payment_type: 'full',\n    paid_amount: 0\n  });\n  const [products, setProducts] = useState([]);\n  const [filters, setFilters] = useState({\n    status: '',\n    customer_name: '',\n    start_date: '',\n    end_date: ''\n  });\n\n  const fetchSales = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const params = new URLSearchParams();\n      \n      if (filters.status) params.append('status', filters.status);\n      if (filters.customer_name) params.append('search', filters.customer_name);\n      if (filters.start_date) params.append('created_at__date__gte', filters.start_date);\n      if (filters.end_date) params.append('created_at__date__lte', filters.end_date);\n      \n      const response = await api.get(`/sales/?${params.toString()}`);\n      const salesData = response.data.results || response.data;\n      \n      // Ensure salesData is always an array\n      if (!Array.isArray(salesData)) {\n        console.error('Sales data is not an array:', salesData);\n        setSales([]);\n        return;\n      }\n      \n      setSales(salesData);\n    } catch (err) {\n      setError('Failed to fetch sales: ' + (err.response?.data?.error || err.message));\n      console.error('Sales fetch error:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n\n  useEffect(() => {\n    fetchSales();\n    fetchProducts();\n  }, [fetchSales]);\n\n  const fetchProducts = async () => {\n    try {\n      const response = await api.get('/products/?is_active=true');\n      setProducts(response.data.results || response.data);\n    } catch (err) {\n      console.error('Products fetch error:', err);\n    }\n  };\n\n  const handleDeleteSales = async () => {\n    try {\n      setError('');\n      const response = await api.delete('/sales/delete/', {\n        data: deleteFilters\n      });\n      \n      alert(`Successfully deleted ${response.data.deleted_count} sales`);\n      setShowDeleteModal(false);\n      setDeleteFilters({\n        customer_name: '',\n        start_date: '',\n        end_date: '',\n        status: 'completed'\n      });\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to delete sales');\n      console.error('Delete sales error:', err);\n    }\n  };\n\n  const handleEditSale = async () => {\n    try {\n      setError('');\n      \n      // Prepare the data to send\n      const updateData = {\n        items: editFormData.items,\n        paid_amount: editFormData.paid_amount\n      };\n      \n      await api.put(`/sales/${selectedSale.id}/edit/`, updateData);\n      alert('Sale updated successfully');\n      setShowEditModal(false);\n      setSelectedSale(null);\n      setEditFormData({ items: [], payment_type: 'full', paid_amount: 0 });\n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to update sale');\n      console.error('Edit sale error:', err);\n    }\n  };\n\n  const handleMakePayment = async (saleId, paymentAmount) => {\n    try {\n      setError('');\n      await api.post(`/sales/${saleId}/payment/`, {\n        payment_amount: paymentAmount,\n        is_full_payment: true\n      });\n      alert('Payment processed successfully');\n      setShowPaymentModal(false);\n      fetchSales();\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to process payment');\n      console.error('Payment error:', err);\n    }\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleDeleteFilterChange = (e) => {\n    const { name, value } = e.target;\n    setDeleteFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      status: '',\n      customer_name: '',\n      start_date: '',\n      end_date: ''\n    });\n  };\n\n  const openEditModal = async (sale) => {\n    try {\n      setLoadingSale(true);\n      setError('');\n      \n      // Fetch full sale data including items\n      const response = await api.get(`/sales/${sale.id}/`);\n      const fullSale = response.data;\n      \n      setSelectedSale(fullSale);\n      setEditFormData({\n        items: fullSale.items.map(item => ({\n          product: item.product,\n          quantity: item.quantity,\n          unit: item.unit?.id || item.unit || '',\n          unit_price: item.unit_price,\n          price_mode: item.price_mode || 'standard'\n        })),\n        payment_type: fullSale.payment_status === 'paid' ? 'full' : \n                     fullSale.payment_status === 'partial' ? 'partial' : 'full',\n        paid_amount: fullSale.paid_amount || 0\n      });\n      setShowEditModal(true);\n    } catch (err) {\n      setError('Failed to load sale details');\n      console.error('Sale fetch error:', err);\n    } finally {\n      setLoadingSale(false);\n    }\n  };\n\n  const cancelSale = async (saleId) => {\n    try {\n      setError('');\n      const response = await api.post(`/sales/${saleId}/cancel/`);\n      \n      if (response.data.message === 'Sale cancelled and stock restored') {\n        // Show refund information for completed sales\n        if (response.data.refund_amount && response.data.refund_amount > 0) {\n          alert(`Sale cancelled and stock restored successfully!\\n\\nRefund Information:\\nOriginal Sale: ${response.data.original_sale_number}\\nRefund Amount: $${response.data.refund_amount.toFixed(2)}\\n\\nPlease process the refund to the customer.`);\n        } else {\n          alert('Sale cancelled and stock restored successfully');\n        }\n      } else {\n        alert('Sale cancelled successfully');\n      }\n      \n      fetchSales();\n      fetchProducts(); // Refresh products to update stock quantities\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to cancel sale');\n      console.error('Cancel sale error:', err);\n    }\n  };\n\n  const handlePaymentMethodChange = async (saleId, newPaymentMethod) => {\n    try {\n      setError('');\n      await api.patch(`/sales/${saleId}/payment-method/`, {\n        payment_method: newPaymentMethod\n      });\n      \n      // Update the local state to reflect the change immediately\n      setSales(prevSales => \n        prevSales.map(sale => \n          sale.id === saleId \n            ? { ...sale, payment_method: newPaymentMethod }\n            : sale\n        )\n      );\n    } catch (err) {\n      setError(err.response?.data?.error || 'Failed to update payment method');\n      console.error('Payment method update error:', err);\n    }\n  };\n\n  const addEditItem = () => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: [...prev.items, { product: '', quantity: 1, unit: '', unit_price: 0 }]\n    }));\n  };\n\n  const removeEditItem = (index) => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: prev.items.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateEditItem = (index, field, value) => {\n    setEditFormData(prev => ({\n      ...prev,\n      items: prev.items.map((item, i) => \n        i === index ? { ...item, [field]: value } : item\n      )\n    }));\n  };\n\n  const validateEditSale = () => {\n    // Require at least 1 item for all sales (including returns)\n    if (!editFormData.items || editFormData.items.length === 0) {\n      return false;\n    }\n\n    // Check if any item has invalid quantity (allow quantity = 0)\n    for (const item of editFormData.items) {\n      const quantity = parseFloat(item.quantity);\n      if (isNaN(quantity) || quantity < 0) {\n        return false;\n      }\n\n      // Find the corresponding original item to check stock availability\n      const originalItem = selectedSale?.items?.find(original => \n        original.product === item.product && \n        original.unit === item.unit && \n        original.price_mode === item.price_mode\n      );\n\n      if (originalItem) {\n        // Calculate the quantity difference\n        const originalQuantity = parseFloat(originalItem.quantity);\n        const quantityDiff = quantity - originalQuantity;\n        \n        // If increasing quantity, check stock availability\n        if (quantityDiff > 0) {\n          // Find the product to get current stock\n          const product = products.find(p => p.id === parseInt(item.product));\n          if (product) {\n            // Convert quantity difference to base units for stock check\n            // This is a simplified check - in a real scenario, you'd need proper unit conversion\n            const stockNeeded = quantityDiff;\n            if (product.stock_quantity < stockNeeded) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    // Validate payment logic\n    if (editFormData.payment_type === 'partial') {\n      const total = calculateEditTotal();\n      const paidAmount = parseFloat(editFormData.paid_amount) || 0;\n      \n      // For partial payment, paid amount must be less than total and greater than 0\n      if (paidAmount >= total || paidAmount <= 0) {\n        return false;\n      }\n    } else if (editFormData.payment_type === 'full') {\n      const total = calculateEditTotal();\n      const paidAmount = parseFloat(editFormData.paid_amount) || 0;\n      \n      // For full payment, paid amount must equal total\n      if (paidAmount !== total) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const getProductPrice = (productId) => {\n    const product = products.find(p => p.id === parseInt(productId));\n    return product ? product.price : 0;\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  const getStatusBadge = (status) => {\n    const statusClasses = {\n      pending: 'status-pending',\n      completed: 'status-completed',\n      cancelled: 'status-cancelled',\n      returned: 'status-returned',\n      refunded: 'status-refunded'\n    };\n    return <span className={`status-badge ${statusClasses[status] || ''}`}>{status}</span>;\n  };\n\n  const getPaymentStatusBadge = (paymentStatus) => {\n    const paymentClasses = {\n      pending: 'payment-pending',\n      partial: 'payment-partial',\n      paid: 'payment-paid'\n    };\n    const paymentLabels = {\n      pending: 'Unpaid',\n      partial: 'Partial',\n      paid: 'Paid'\n    };\n    return <span className={`payment-badge ${paymentClasses[paymentStatus] || ''}`}>{paymentLabels[paymentStatus] || paymentStatus}</span>;\n  };\n\n  const calculateEditTotal = () => {\n    return editFormData.items.reduce((total, item) => {\n      return total + (parseFloat(item.unit_price || 0) * parseFloat(item.quantity || 0));\n    }, 0);\n  };\n\n  // Update paid_amount when payment_type changes\n  useEffect(() => {\n    if (editFormData.payment_type === 'full') {\n      setEditFormData(prev => ({\n        ...prev,\n        paid_amount: calculateEditTotal()\n      }));\n    }\n  }, [editFormData.payment_type, editFormData.items]);\n\n  // Check if user has permission to manage sales\n  const canManageSales = user?.role === 'admin' || user?.role === 'manager';\n\n  if (!canManageSales) {\n    return (\n      <div className=\"sales-management\">\n        <div className=\"access-denied\">\n          <h2>Access Denied</h2>\n          <p>You don't have permission to manage sales.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"sales-management\">\n      <div className=\"page-header\">\n        <h1>{t('titles.sales_management')}</h1>\n        <div className=\"header-actions\">\n          <PrintButton\n            data={{\n              ...sales,\n              user_name: user?.username || t('app.unknown_user'),\n              user_id: user?.id || 'unknown',\n              print_timestamp: new Date().toISOString(),\n              print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n            }}\n            title={t('titles.sales_management_report')}\n            type=\"sales_history\"\n            printText={t('buttons.print_sales_report')}\n            className=\"print-sales-report-btn\"\n          />\n          <Button \n            variant=\"danger\" \n            onClick={() => setShowDeleteModal(true)}\n          >\n            Delete Sales\n          </Button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n          <button onClick={() => setError('')}>&times;</button>\n        </div>\n      )}\n\n      {/* Filters */}\n      <div className=\"filters-section\">\n        <h3>Filters</h3>\n        <div className=\"filters-grid\">\n          <div className=\"form-group\">\n            <label>Status</label>\n            <select\n              name=\"status\"\n              value={filters.status}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Statuses</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"cancelled\">Cancelled</option>\n              <option value=\"returned\">Returned</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Customer Name</label>\n            <input\n              type=\"text\"\n              name=\"customer_name\"\n              value={filters.customer_name}\n              onChange={handleFilterChange}\n              placeholder={t('forms.search_by_customer_name')}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Start Date</label>\n            <input\n              type=\"date\"\n              name=\"start_date\"\n              value={filters.start_date}\n              onChange={handleFilterChange}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>End Date</label>\n            <input\n              type=\"date\"\n              name=\"end_date\"\n              value={filters.end_date}\n              onChange={handleFilterChange}\n            />\n          </div>\n        </div>\n        \n        <div className=\"filter-actions\">\n          <Button variant=\"secondary\" onClick={clearFilters}>\n            Clear Filters\n          </Button>\n        </div>\n      </div>\n\n      {/* Sales Table */}\n      <div className=\"table-section\">\n        {loading ? (\n          <div className=\"loading\">Loading sales...</div>\n        ) : (\n          <Table\n            data={sales}\n            columns={[\n              {\n                key: 'sale_number',\n                header: t('table_headers.sale_number'),\n                render: (value, row) => (\n                  <span className=\"sale-number\">{value}</span>\n                )\n              },\n              {\n                key: 'customer_name',\n                header: t('table_headers.customer'),\n                render: (value) => value || 'N/A'\n              },\n              {\n                key: 'status',\n                header: t('table_headers.status'),\n                render: (value, row) => (\n                  <div className=\"status-container\">\n                    <div className=\"sale-status\">\n                      {getStatusBadge(value)}\n                    </div>\n                  </div>\n                )\n              },\n              {\n                key: 'payment_status',\n                header: t('table_headers.payment'),\n                render: (value, row) => {\n                  const paymentClasses = {\n                    'pending': 'payment-pending',\n                    'partial': 'payment-partial',\n                    'paid': 'payment-paid'\n                  };\n                  const paymentLabels = {\n                    'pending': t('status_labels.pending'),\n                    'partial': t('status_labels.partial'),\n                    'paid': t('status_labels.paid')\n                  };\n                  return <span className={`payment-badge ${paymentClasses[value] || ''}`}>{paymentLabels[value] || value}</span>;\n                }\n              },\n              {\n                key: 'items',\n                header: t('table_headers.items'),\n                render: (items, row) => {\n                  if (!items || items.length === 0) {\n                    return <span className=\"no-items\">No items</span>;\n                  }\n                  return (\n                    <div className=\"sale-items\">\n                      {items.slice(0, 2).map((item, index) => (\n                        <div key={index} className=\"sale-item-row\">\n                          <span className=\"item-name\">\n                            {item.product_name}\n                            <span className={`price-mode-badge ${item.price_mode || 'standard'}`}>\n                              {item.price_mode === 'wholesale' ? 'WS' : 'STD'}\n                            </span>\n                          </span>\n                          <span className=\"item-details\">\n                            {item.quantity_display || item.quantity} {item.unit_symbol || 'pcs'} × {formatCurrency(item.unit_price)}\n                          </span>\n                        </div>\n                      ))}\n            {items.length > 2 && (\n              <div className=\"more-items\">+{items.length - 2} more items</div>\n            )}\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'total_amount',\n                header: t('table_headers.total_amount'),\n                render: (value, row) => (\n                  <div className=\"amount-container\">\n                    <div className=\"total-amount\">\n                      {formatCurrency(value)}\n                    </div>\n                  </div>\n                )\n              },\n              {\n                key: 'created_at',\n                header: t('table_headers.date'),\n                render: (value) => formatDate(value)\n              },\n              {\n                key: 'sold_by_name',\n                header: t('table_headers.sold_by'),\n                render: (value) => value || 'N/A'\n              },\n              {\n                key: 'payment_method',\n                header: t('table_headers.payment_method'),\n                render: (value, row) => {\n                  // For pending sales, make payment method editable\n                  if (row.status === 'pending') {\n                    return (\n                      <select\n                        value={value || 'cash'}\n                        onChange={(e) => handlePaymentMethodChange(row.id, e.target.value)}\n                        className=\"payment-method-select\"\n                      >\n                        <option value=\"cash\">Cash</option>\n                        <option value=\"card\">Card</option>\n                        <option value=\"mobile_money\">Mobile Money</option>\n                        <option value=\"bank_transfer\">Bank Transfer</option>\n                      </select>\n                    );\n                  }\n                  // For other sales, just display the payment method\n                  const methodLabels = {\n                    'cash': t('payment_methods.cash'),\n                    'card': t('payment_methods.card'),\n                    'mobile_money': t('payment_methods.mobile_money'),\n                    'bank_transfer': t('payment_methods.bank_transfer')\n                  };\n                  return <span className=\"payment-method-display\">{methodLabels[value] || value || 'Cash'}</span>;\n                }\n              },\n              {\n                key: 'paid_amount',\n                header: t('table_headers.paid_amount'),\n                render: (value, row) => {\n                  const paidAmount = parseFloat(value) || 0;\n                  \n                  return (\n                    <div className=\"payment-amount-container\">\n                      <div className=\"paid-amount\">\n                        {formatCurrency(paidAmount)}\n                      </div>\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'actions',\n                header: t('table_headers.actions'),\n                render: (_, row) => (\n                  <div className=\"action-buttons\">\n                    <PrintButton\n                      data={{\n                        ...row,\n                        user_name: user?.username || t('app.unknown_user'),\n                        user_id: user?.id || 'unknown',\n                        print_timestamp: new Date().toISOString(),\n                        print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n                      }}\n                      title={t('titles.sale_receipt')}\n                      type=\"sale\"\n                      printText={t('buttons.print')}\n                      className=\"print-sale-btn\"\n                    />\n                    {!(row.status === 'completed' && row.payment_status === 'paid') && \n                     row.status !== 'refunded' && (\n                      <Button \n                        variant=\"primary\" \n                        size=\"small\"\n                        onClick={() => openEditModal(row)}\n                        loading={loadingSale}\n                        disabled={loadingSale}\n                      >\n                        Edit\n                      </Button>\n                    )}\n                    {(row.status === 'pending' || row.status === 'completed') && \n                     row.status !== 'refunded' && \n                     row.sale_type !== 'return' && (\n                      <Button \n                        variant=\"danger\" \n                        size=\"small\"\n                        onClick={() => {\n                          if (window.confirm(`Are you sure you want to cancel this ${row.status} sale?`)) {\n                            cancelSale(row.id);\n                          }\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    )}\n                  </div>\n                )\n              }\n            ]}\n          />\n        )}\n      </div>\n\n      {/* Delete Sales Modal */}\n      {showDeleteModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Delete Sales</h2>\n              <button className=\"close-button\" onClick={() => setShowDeleteModal(false)}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Select criteria to delete sales:</p>\n              \n              <div className=\"form-group\">\n                <label>Customer Name (optional)</label>\n                <input\n                  type=\"text\"\n                  name=\"customer_name\"\n                  value={deleteFilters.customer_name}\n                  onChange={handleDeleteFilterChange}\n                  placeholder={t('forms.leave_empty_to_delete_all')}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Start Date (optional)</label>\n                <input\n                  type=\"date\"\n                  name=\"start_date\"\n                  value={deleteFilters.start_date}\n                  onChange={handleDeleteFilterChange}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>End Date (optional)</label>\n                <input\n                  type=\"date\"\n                  name=\"end_date\"\n                  value={deleteFilters.end_date}\n                  onChange={handleDeleteFilterChange}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Status</label>\n                <select\n                  name=\"status\"\n                  value={deleteFilters.status}\n                  onChange={handleDeleteFilterChange}\n                >\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"pending\">Pending</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                  <option value=\"returned\">Returned</option>\n                  <option value=\"refunded\">Refunded</option>\n                </select>\n              </div>\n              \n              <div className=\"modal-actions\">\n                <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\n                  Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={handleDeleteSales}>\n                  Delete Sales\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Sale Modal */}\n      {showEditModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content large-modal\">\n            <div className=\"modal-header\">\n              <h2>\n                {selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? t('modals.view_sale') : t('modals.edit_sale')}: {selectedSale?.sale_number || t('app.loading')}\n                {selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' && (\n                  <span className=\"view-only-badge\">{t('modals.view_only')}</span>\n                )}\n              </h2>\n              <button className=\"close-button\" onClick={() => setShowEditModal(false)}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              {loadingSale ? (\n                <div className=\"loading\">Loading sale details...</div>\n              ) : selectedSale ? (\n                <>\n                  <div className=\"edit-sale-info\">\n                    <p><strong>Customer:</strong> {selectedSale.customer_name || 'N/A'}</p>\n                    <p><strong>Date:</strong> {formatDate(selectedSale.created_at)}</p>\n                    <p><strong>Status:</strong> {getStatusBadge(selectedSale.status)}</p>\n                    <p><strong>Payment Status:</strong> {getPaymentStatusBadge(selectedSale.payment_status)}</p>\n                    <p><strong>Total Amount:</strong> ${selectedSale.total_amount}</p>\n                    <p><strong>Paid Amount:</strong> ${selectedSale.paid_amount}</p>\n                    {selectedSale.payment_status === 'partial' && (\n                      <p><strong>Remaining Amount:</strong> ${selectedSale.remaining_amount}</p>\n                    )}\n                    {selectedSale.due_date && (\n                      <p><strong>Due Date:</strong> {formatDate(selectedSale.due_date)}</p>\n                    )}\n                  </div>\n                  \n                  <h3>Sale Items</h3>\n              <div className=\"edit-items\">\n                {editFormData.items.map((item, index) => {\n                  // Get the original item from the sale to display product and unit info\n                  const originalItem = selectedSale?.items?.find(origItem => \n                    origItem.product === item.product && \n                    origItem.unit === item.unit &&\n                    origItem.price_mode === item.price_mode\n                  );\n                  \n                  return (\n                    <div key={index} className=\"edit-item\">\n                      <div className=\"form-group\">\n                        <label>Product</label>\n                        <input\n                          type=\"text\"\n                          value={originalItem?.product_name || t('app.unknown_product')}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Unit</label>\n                        <input\n                          type=\"text\"\n                          value={originalItem?.unit_name ? `${originalItem.unit_name} (${originalItem.unit_symbol})` : 'N/A'}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Price Mode</label>\n                        <input\n                          type=\"text\"\n                          value={item.price_mode === 'wholesale' ? 'Wholesale (WS)' : 'Standard (STD)'}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Unit Price</label>\n                        <input\n                          type=\"text\"\n                          value={formatCurrency(item.unit_price)}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Quantity</label>\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          value={item.quantity}\n                          onChange={(e) => updateEditItem(index, 'quantity', parseFloat(e.target.value) || 0)}\n                          readOnly={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                          className={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? 'read-only-input' : ''}\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Total</label>\n                        <input\n                          type=\"text\"\n                          value={formatCurrency(item.quantity * item.unit_price)}\n                          readOnly\n                          className=\"readonly-field\"\n                        />\n                      </div>\n                    \n                    {!(selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid') && (\n                      <Button \n                        variant=\"danger\" \n                        size=\"small\"\n                        onClick={() => removeEditItem(index)}\n                      >\n                        Remove\n                      </Button>\n                    )}\n                  </div>\n                  );\n                })}\n                \n              </div>\n              \n              {!(selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid') && (\n                <>\n                  <h3>Payment Options</h3>\n                  <div className=\"payment-section\">\n                <div className=\"form-group\">\n                  <label>Payment Type</label>\n                  <div className=\"payment-types\">\n                    <label className=\"payment-type\">\n                      <input\n                        type=\"radio\"\n                        name=\"editPaymentType\"\n                        value=\"full\"\n                        checked={editFormData.payment_type === 'full'}\n                        onChange={(e) => setEditFormData(prev => ({\n                          ...prev,\n                          payment_type: e.target.value,\n                          paid_amount: e.target.value === 'full' ? calculateEditTotal() : prev.paid_amount\n                        }))}\n                        disabled={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                      />\n                      <span>Full Payment (100%)</span>\n                    </label>\n                    <label className=\"payment-type\">\n                      <input\n                        type=\"radio\"\n                        name=\"editPaymentType\"\n                        value=\"partial\"\n                        checked={editFormData.payment_type === 'partial'}\n                        onChange={(e) => setEditFormData(prev => ({\n                          ...prev,\n                          payment_type: e.target.value\n                        }))}\n                        disabled={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                      />\n                      <span>Partial Payment (0-99.99%)</span>\n                    </label>\n                  </div>\n                </div>\n                \n                {editFormData.payment_type === 'partial' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      max={calculateEditTotal()}\n                      value={editFormData.paid_amount || 0}\n                      onChange={(e) => {\n                        const value = parseFloat(e.target.value) || 0;\n                        setEditFormData(prev => ({\n                          ...prev,\n                          paid_amount: value\n                        }));\n                      }}\n                      placeholder={t('forms.enter_amount_to_pay')}\n                      readOnly={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid'}\n                      className={selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? 'read-only-input' : ''}\n                    />\n                    <small>\n                      Total: ${calculateEditTotal().toFixed(2)} | \n                      Remaining: ${(calculateEditTotal() - (editFormData.paid_amount || 0)).toFixed(2)}\n                    </small>\n                  </div>\n                )}\n                \n                {editFormData.payment_type === 'full' && (\n                  <div className=\"form-group\">\n                    <label>Amount to Pay</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={calculateEditTotal()}\n                      readOnly\n                      className=\"form-control\"\n                    />\n                    <small>Full payment for the total amount.</small>\n                  </div>\n                )}\n                  </div>\n                </>\n              )}\n              \n                  <div className=\"modal-actions\">\n                    <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>\n                      {selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid' ? t('modals.close') : t('modals.cancel')}\n                    </Button>\n                    {!(selectedSale?.status === 'completed' && selectedSale?.payment_status === 'paid') && (\n                      <Button \n                        variant=\"primary\" \n                        onClick={handleEditSale}\n                        disabled={!validateEditSale()}\n                      >\n                        Update Sale\n                      </Button>\n                    )}\n                  </div>\n                </>\n              ) : (\n                <div className=\"error-message\">\n                  Failed to load sale details\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Payment Modal */}\n      {showPaymentModal && selectedSale && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>Make Payment - {selectedSale.sale_number}</h2>\n              <button className=\"close-button\" onClick={() => setShowPaymentModal(false)}>&times;</button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"payment-info\">\n                <p><strong>Customer:</strong> {selectedSale.customer_name || 'N/A'}</p>\n                <p><strong>Total Amount:</strong> ${selectedSale.total_amount}</p>\n                <p><strong>Paid Amount:</strong> ${selectedSale.paid_amount}</p>\n                <p><strong>Remaining Amount:</strong> ${selectedSale.remaining_amount}</p>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Payment Amount (Full Payment Only)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={selectedSale.remaining_amount}\n                  readOnly\n                  className=\"form-control\"\n                />\n                <small>This will be a full payment for the remaining amount.</small>\n              </div>\n              \n              <div className=\"modal-actions\">\n                <Button variant=\"secondary\" onClick={() => setShowPaymentModal(false)}>\n                  Cancel\n                </Button>\n                <Button \n                  variant=\"success\" \n                  onClick={() => handleMakePayment(selectedSale.id, selectedSale.remaining_amount)}\n                >\n                  Process Payment (${selectedSale.remaining_amount})\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SalesManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}