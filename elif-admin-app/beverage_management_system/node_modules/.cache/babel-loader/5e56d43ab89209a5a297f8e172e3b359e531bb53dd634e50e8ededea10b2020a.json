{"ast":null,"code":"import _objectSpread from\"/home/el-ifran/WareHouse_Manager/elif-admin-app/beverage_management_system/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{useAuth}from'../contexts/AuthContext';import api from'../services/api';import SaleDetailModal from'../components/SaleDetailModal';import PrintButton from'../components/PrintButton';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer,BarChart,Bar}from'recharts';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{var _dashboardData$sales,_dashboardData$sales2,_dashboardData$sales3,_dashboardData$orders,_dashboardData$invent,_dashboardData$invent2,_dashboardData$invent3,_dashboardData$invent4,_dashboardData$sales4,_dashboardData$analyt,_dashboardData$analyt2,_dashboardData$analyt3,_dashboardData$analyt4,_dashboardData$analyt5,_dashboardData$analyt6,_dashboardData$recent,_dashboardData$recent2,_dashboardData$invent5,_dashboardData$invent6,_dashboardData$analyt7;const{t}=useTranslation();const{user}=useAuth();const[dashboardData,setDashboardData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[selectedPeriod,setSelectedPeriod]=useState('month');const[selectedSale,setSelectedSale]=useState(null);const[showSaleModal,setShowSaleModal]=useState(false);const[saleDetailLoading,setSaleDetailLoading]=useState(false);const[dailySalesData,setDailySalesData]=useState([]);const[monthlySalesData,setMonthlySalesData]=useState([]);// Check if user is sales team (limited access)\nconst isSalesTeam=(user===null||user===void 0?void 0:user.role)==='sales';// Process chart data from sales\nconst processChartData=salesData=>{if(!Array.isArray(salesData))return;// Group sales by date for chart based on selected period\nconst chartData={};salesData.forEach(sale=>{const saleDate=new Date(sale.created_at);let dateKey;// Determine date key based on selected period\nswitch(selectedPeriod){case'daily':// Group by hour for daily view\ndateKey=\"\".concat(saleDate.toISOString().split('T')[0],\" \").concat(String(saleDate.getHours()).padStart(2,'0'),\":00\");break;case'weekly':// Group by day for weekly view\ndateKey=saleDate.toISOString().split('T')[0];// YYYY-MM-DD\nbreak;case'month':// Group by day for monthly view\ndateKey=saleDate.toISOString().split('T')[0];// YYYY-MM-DD\nbreak;default:dateKey=saleDate.toISOString().split('T')[0];// YYYY-MM-DD\n}// Skip refunded sales from chart data\nif(sale.status==='refunded'){return;}const amount=parseFloat(sale.paid_amount)||0;// Use paid amount for chart\nlet cost=parseFloat(sale.cost_amount)||0;// If cost_amount is not available, try to calculate from items\nif(cost===0&&sale.items&&Array.isArray(sale.items)){cost=sale.items.reduce((itemCost,item)=>{const itemCostPrice=parseFloat(item.cost_price)||0;const itemQuantity=parseFloat(item.quantity)||0;return itemCost+itemCostPrice*itemQuantity;},0);}const profit=amount-cost;if(!chartData[dateKey]){chartData[dateKey]={date:dateKey,sales:0,cost:0,profit:0,count:0};}chartData[dateKey].sales+=amount;chartData[dateKey].cost+=cost;chartData[dateKey].profit+=profit;chartData[dateKey].count+=1;});// Convert to array and sort by date\nconst chartArray=Object.values(chartData).sort((a,b)=>new Date(a.date)-new Date(b.date));setDailySalesData(chartArray);};useEffect(()=>{fetchDashboardData();},[selectedPeriod,isSalesTeam]);// eslint-disable-line react-hooks/exhaustive-deps\nconst fetchDashboardData=async()=>{try{setLoading(true);// Calculate date range based on selected period\nconst now=new Date();let startDate;switch(selectedPeriod){case'daily':startDate=new Date(now.getFullYear(),now.getMonth(),now.getDate());break;case'weekly':startDate=new Date(now.getTime()-7*24*60*60*1000);break;case'month':startDate=new Date(now.getFullYear(),now.getMonth(),1);break;default:startDate=new Date(now.getTime()-30*24*60*60*1000);// Default to 30 days\n}const startDateStr=startDate.toISOString().split('T')[0];// For Admin app, fetch data filtered by time period\nconst[salesResponse,purchaseOrdersResponse,productsResponse]=await Promise.all([api.get(\"/api/sales/?ordering=-created_at&created_at__gte=\".concat(startDateStr)),// Filter sales by date\napi.get('/api/purchases/purchase-orders/'),api.get('/api/products/?ordering=-created_at')// Get products ordered by creation date\n]);// Calculate comprehensive metrics - handle paginated responses\nconst salesData=salesResponse.data.results||salesResponse.data;const ordersData=purchaseOrdersResponse.data.results||purchaseOrdersResponse.data;const productsData=productsResponse.data.results||productsResponse.data;// Count only non-refunded sales\nconst totalSales=Array.isArray(salesData)?salesData.filter(sale=>sale.status!=='refunded').length:0;const totalOrders=Array.isArray(ordersData)?ordersData.length:0;const totalProducts=Array.isArray(productsData)?productsData.length:0;// Calculate total sales value (only paid amounts, excluding refunded sales)\nconst totalSalesValue=Array.isArray(salesData)?salesData.reduce((sum,sale)=>{// Only count sales that are not refunded and have paid amounts\nif(sale.status==='refunded'){return sum;// Skip refunded sales\n}return sum+(parseFloat(sale.paid_amount)||0);},0):0;// Calculate total order value\nconst totalOrderValue=Array.isArray(ordersData)?ordersData.reduce((sum,order)=>{return sum+(parseFloat(order.total_amount)||0);},0):0;// Calculate inventory metrics and product analytics\nlet outOfStockCount=0;let lowStockCount=0;let totalRetailValue=0;let totalCostValue=0;let productSalesCount={};let latestProducts=[];if(Array.isArray(productsData)){productsData.forEach(product=>{if(product.is_out_of_stock){outOfStockCount++;}if(product.is_low_stock){lowStockCount++;}// Calculate retail value (stock * price)\nconst stock=parseFloat(product.stock_quantity)||0;const price=parseFloat(product.price)||0;const costPrice=parseFloat(product.cost_price)||0;totalRetailValue+=stock*price;totalCostValue+=stock*costPrice;});// Get latest 3 products\nlatestProducts=productsData.slice(0,3).map(product=>({id:product.id,name:product.name,price:parseFloat(product.price)||0,stock:parseFloat(product.stock_quantity)||0,created_at:product.created_at}));}// Calculate sales analytics\nlet totalProfit=0;let totalRevenue=0;let totalCost=0;let recentSales=[];if(Array.isArray(salesData)){recentSales=salesData.slice(0,5).map(sale=>({id:sale.id,sale_number:sale.sale_number,customer_name:sale.customer_name||t('dashboard.walk_in_customer'),total_amount:parseFloat(sale.paid_amount)||0,// Show paid amount instead of total\npayment_method:sale.payment_method,status:sale.status,created_at:sale.created_at,sold_by_name:sale.sold_by_name}));// Calculate profit from sales\nsalesData.forEach((sale,index)=>{// Skip refunded sales from accounting calculations\nif(sale.status==='refunded'){return;}// Use paid_amount for revenue (actual money received)\nconst revenue=parseFloat(sale.paid_amount)||0;let cost=parseFloat(sale.cost_amount)||0;// If cost_amount is not available, try to calculate from items\nif(cost===0&&sale.items&&Array.isArray(sale.items)){cost=sale.items.reduce((itemCost,item)=>{// Use total_cost if available, otherwise calculate from unit_cost\nconst itemTotalCost=parseFloat(item.total_cost)||0;const itemCostPrice=parseFloat(item.unit_cost)||0;const itemQuantity=parseFloat(item.quantity)||0;// If total_cost is available, use it directly\nif(itemTotalCost>0){return itemCost+itemTotalCost;}// Otherwise calculate from unit_cost * quantity\nelse{const calculatedCost=itemCostPrice*itemQuantity;return itemCost+calculatedCost;}},0);}totalRevenue+=revenue;totalCost+=cost;totalProfit+=revenue-cost;});}// Find best-selling product (most sold quantity)\nlet bestSellingProduct=null;if(Array.isArray(salesData)){let productSales={};salesData.forEach(sale=>{// Skip refunded sales from product analytics\nif(sale.status==='refunded'){return;}if(sale.items&&Array.isArray(sale.items)){sale.items.forEach(item=>{const productId=item.product;const quantity=parseFloat(item.quantity)||0;if(!productSales[productId]){productSales[productId]={id:productId,name:item.product_name,totalQuantity:0,totalRevenue:0};}productSales[productId].totalQuantity+=quantity;// Use paid amount proportionally for revenue calculation\nconst salePaidAmount=parseFloat(sale.paid_amount)||0;const saleTotalAmount=parseFloat(sale.total_amount)||0;const itemRevenue=saleTotalAmount>0?(parseFloat(item.total_price)||0)*(salePaidAmount/saleTotalAmount):0;productSales[productId].totalRevenue+=itemRevenue;});}});// Find the product with highest quantity sold\nconst productIds=Object.keys(productSales);if(productIds.length>0){bestSellingProduct=productIds.reduce((best,current)=>productSales[current].totalQuantity>productSales[best].totalQuantity?current:best);bestSellingProduct=productSales[bestSellingProduct];}}setDashboardData({sales:{total_sales:totalSales,total_value:totalSalesValue,total_revenue:totalRevenue,total_cost:totalCost,total_profit:totalProfit,recent_sales:recentSales},orders:{total_orders:totalOrders,total_value:totalOrderValue},inventory:{total_products:totalProducts,out_of_stock:outOfStockCount,low_stock:lowStockCount,retail_value:totalRetailValue,cost_value:totalCostValue,latest_products:latestProducts},analytics:{best_selling_product:bestSellingProduct,profit_margin:totalRevenue>0?totalProfit/totalRevenue*100:0}});// Process chart data\nprocessChartData(salesData);}catch(err){setError(t('dashboard.failed_to_load'));console.error('Dashboard error:',err);}finally{setLoading(false);}};const handlePeriodChange=period=>{// Only allow period changes for non-sales users\nif(!isSalesTeam){setSelectedPeriod(period);}};const handleSaleClick=async sale=>{try{setSaleDetailLoading(true);setShowSaleModal(true);// Check if sale has an ID\nconst saleId=sale.id||sale.sale_id;if(!saleId){throw new Error(t('errors.not_found'));}// Fetch detailed sale information\nconst response=await api.get(\"/api/sales/\".concat(saleId,\"/\"));setSelectedSale(response.data);}catch(err){console.error('Failed to fetch sale details:',err);setError(\"Failed to load sale details: \".concat(err.message));setShowSaleModal(false);}finally{setSaleDetailLoading(false);}};const handleCloseSaleModal=()=>{setShowSaleModal(false);setSelectedSale(null);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:t('dashboard.loading')})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-error\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('dashboard.error')}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchDashboardData,children:t('common.retry')})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-text\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t('dashboard.title')}),/*#__PURE__*/_jsx(\"p\",{children:t('dashboard.welcome',{username:user===null||user===void 0?void 0:user.username})}),isSalesTeam&&/*#__PURE__*/_jsx(\"p\",{className:\"role-indicator\",children:t('dashboard.sales_team_view')})]}),!isSalesTeam&&/*#__PURE__*/_jsxs(\"div\",{className:\"period-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:t('dashboard.time_period')}),/*#__PURE__*/_jsxs(\"select\",{value:selectedPeriod,onChange:e=>handlePeriodChange(e.target.value),className:\"period-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"daily\",children:t('dashboard.daily')}),/*#__PURE__*/_jsx(\"option\",{value:\"weekly\",children:t('dashboard.weekly')}),/*#__PURE__*/_jsx(\"option\",{value:\"month\",children:t('dashboard.monthly')})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon sales\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M7 4V2C7 1.45 7.45 1 8 1H16C16.55 1 17 1.45 17 2V4H20C20.55 4 21 4.45 21 5S20.55 6 20 6H19V19C19 20.1 18.1 21 17 21H7C5.9 21 5 20.1 5 19V6H4C3.45 6 3 5.55 3 5S3.45 4 4 4H7ZM9 3V4H15V3H9ZM7 6V19H17V6H7Z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.total_sales')}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-value\",children:[((dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$sales=dashboardData.sales)===null||_dashboardData$sales===void 0?void 0:_dashboardData$sales.total_value)||0).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-label\",children:[(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$sales2=dashboardData.sales)===null||_dashboardData$sales2===void 0?void 0:_dashboardData$sales2.total_sales)||0,\" \",t('dashboard.sales')]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon cost\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.total_cost')}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-value\",children:[((dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$sales3=dashboardData.sales)===null||_dashboardData$sales3===void 0?void 0:_dashboardData$sales3.total_cost)||0).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-label\",children:t('dashboard.cost_of_goods_sold')})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon orders\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M19 7h-1V6a4 4 0 0 0-8 0v1H9a1 1 0 0 0-1 1v11a3 3 0 0 0 3 3h8a3 3 0 0 0 3-3V8a1 1 0 0 0-1-1zM12 4a2 2 0 0 1 2 2v1h-4V6a2 2 0 0 1 2-2zm6 15a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V9h2v1a1 1 0 0 0 2 0V9h4v1a1 1 0 0 0 2 0V9h2v10z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.total_orders')}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-value\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$orders=dashboardData.orders)===null||_dashboardData$orders===void 0?void 0:_dashboardData$orders.total_orders)||0}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-label\",children:t('dashboard.orders')})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon inventory\",children:/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M12 2L2 7L12 12L22 7L12 2Z\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M2 17L12 22L22 17\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M2 12L12 17L22 12\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.total_products')}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-value\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$invent=dashboardData.inventory)===null||_dashboardData$invent===void 0?void 0:_dashboardData$invent.total_products)||0}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-label\",children:t('dashboard.active_products')})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon retail\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M7 4V2c0-.55-.45-1-1-1s-1 .45-1 1v2H3c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1H7zM21 4h-2V2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.retail_value')}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-value\",children:[((dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$invent2=dashboardData.inventory)===null||_dashboardData$invent2===void 0?void 0:_dashboardData$invent2.retail_value)||0).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-label\",children:[(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$invent3=dashboardData.inventory)===null||_dashboardData$invent3===void 0?void 0:_dashboardData$invent3.low_stock)||0,\" \",t('dashboard.low_stock')]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon out-of-stock\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.out_of_stock')}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-value\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$invent4=dashboardData.inventory)===null||_dashboardData$invent4===void 0?void 0:_dashboardData$invent4.out_of_stock)||0}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-label\",children:t('dashboard.products_need_restocking')})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon profit\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.total_profit')}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-value\",children:[((dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$sales4=dashboardData.sales)===null||_dashboardData$sales4===void 0?void 0:_dashboardData$sales4.total_profit)||0).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-label\",children:[(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$analyt=dashboardData.analytics)===null||_dashboardData$analyt===void 0?void 0:(_dashboardData$analyt2=_dashboardData$analyt.profit_margin)===null||_dashboardData$analyt2===void 0?void 0:_dashboardData$analyt2.toFixed(1))||'0.0',\"% \",t('dashboard.margin')]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"metric-icon best-seller\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:t('dashboard.best_seller')}),/*#__PURE__*/_jsx(\"p\",{className:\"metric-value\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$analyt3=dashboardData.analytics)===null||_dashboardData$analyt3===void 0?void 0:(_dashboardData$analyt4=_dashboardData$analyt3.best_selling_product)===null||_dashboardData$analyt4===void 0?void 0:_dashboardData$analyt4.name)||'N/A'}),/*#__PURE__*/_jsxs(\"p\",{className:\"metric-label\",children:[(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$analyt5=dashboardData.analytics)===null||_dashboardData$analyt5===void 0?void 0:(_dashboardData$analyt6=_dashboardData$analyt5.best_selling_product)===null||_dashboardData$analyt6===void 0?void 0:_dashboardData$analyt6.totalQuantity)||0,\" \",t('dashboard.units_sold')]})]})]})]}),!isSalesTeam&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('dashboard.sales_trend_this_month')}),/*#__PURE__*/_jsx(\"div\",{className:\"sales-chart\",children:dailySalesData.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-bars\",children:dailySalesData.map((day,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"chart-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bar-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bar sales-bar\",style:{height:\"\".concat(Math.max(5,day.sales/Math.max(...dailySalesData.map(d=>d.sales))*100),\"%\")},title:\"Sales: \".concat(day.sales.toFixed(2),\" MGA\")}),/*#__PURE__*/_jsx(\"div\",{className:\"bar cost-bar\",style:{height:\"\".concat(Math.max(5,day.cost/Math.max(...dailySalesData.map(d=>d.sales))*100),\"%\")},title:\"Cost: \".concat(day.cost.toFixed(2),\" MGA\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bar-label\",children:new Date(day.date).toLocaleDateString('en-US',{month:'short',day:'numeric'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bar-values\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"value sales\",children:[day.sales.toFixed(0),\" MGA\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"value cost\",children:[day.cost.toFixed(0),\" MGA\"]})]})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-legend\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color sales\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sales\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color cost\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Cost\"})]})]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"no-data\",children:\"No sales data available for the selected period\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:t('dashboard.recent_sales')}),(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$recent=dashboardData.recent_sales)===null||_dashboardData$recent===void 0?void 0:_dashboardData$recent.length)>0&&/*#__PURE__*/_jsx(PrintButton,{data:_objectSpread(_objectSpread({},dashboardData.recent_sales),{},{user_name:(user===null||user===void 0?void 0:user.username)||t('app.unknown_user'),user_id:(user===null||user===void 0?void 0:user.id)||'unknown',print_timestamp:new Date().toISOString(),print_id:\"PRINT-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9))}),title:t('titles.sales_management_report'),type:\"sales_history\",printText:t('buttons.print_sales_report'),className:\"print-recent-sales-btn\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recent-sales\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$recent2=dashboardData.recent_sales)===null||_dashboardData$recent2===void 0?void 0:_dashboardData$recent2.length)>0?/*#__PURE__*/_jsx(\"div\",{className:\"sales-list\",children:dashboardData.recent_sales.map((sale,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"sale-item clickable\",onClick:()=>handleSaleClick(sale),title:t('dashboard.click_to_view_details'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sale-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:sale.sale_number}),/*#__PURE__*/_jsx(\"p\",{children:sale.customer_name||t('dashboard.walk_in_customer')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sale-amount\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[sale.total_amount.toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]}),/*#__PURE__*/_jsx(\"small\",{children:new Date(sale.created_at).toLocaleDateString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sale-arrow\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"})})})]},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-data\",children:\"No recent sales\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Latest Products\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"latest-products\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$invent5=dashboardData.inventory)===null||_dashboardData$invent5===void 0?void 0:(_dashboardData$invent6=_dashboardData$invent5.latest_products)===null||_dashboardData$invent6===void 0?void 0:_dashboardData$invent6.length)>0?/*#__PURE__*/_jsx(\"div\",{className:\"products-list\",children:dashboardData.inventory.latest_products.map((product,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"product-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:product.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Added: \",new Date(product.created_at).toLocaleDateString()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"product-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Price:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[product.price.toFixed(2),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Stock:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[product.stock,\" units\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Value:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[(product.stock*product.price).toFixed(2),\" MGA\"]})]})]})]},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-data\",children:\"No products available\"})})]}),(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$analyt7=dashboardData.analytics)===null||_dashboardData$analyt7===void 0?void 0:_dashboardData$analyt7.best_selling_product)&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Best Selling Product\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"best-seller-details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"product-item featured\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"product-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:dashboardData.analytics.best_selling_product.name}),/*#__PURE__*/_jsx(\"p\",{children:\"Top performer in sales\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"product-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-label\",children:[t('dashboard.units_sold'),\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value highlight\",children:dashboardData.analytics.best_selling_product.totalQuantity})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-label\",children:[t('dashboard.revenue'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value highlight\",children:[dashboardData.analytics.best_selling_product.totalRevenue.toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-label\",children:[t('dashboard.avg_per_sale'),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[(dashboardData.analytics.best_selling_product.totalRevenue/dashboardData.analytics.best_selling_product.totalQuantity||0).toLocaleString('en-US',{minimumFractionDigits:2,maximumFractionDigits:2}),\" MGA\"]})]})]})]})})]}),dailySalesData.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Daily Sales Trend (Last 30 Days)\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:dailySalesData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",tickFormatter:value=>new Date(value).toLocaleDateString('en-US',{month:'short',day:'numeric'})}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:value=>\"\".concat(value.toLocaleString(),\" MGA\")}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(parseFloat(value).toFixed(2),\" MGA\"),name==='sales'?'Sales':name==='cost'?'Cost':'Profit'],labelFormatter:value=>new Date(value).toLocaleDateString()}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"sales\",stroke:\"#3b82f6\",strokeWidth:2,name:\"Sales\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"cost\",stroke:\"#ef4444\",strokeWidth:2,name:\"Cost\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"profit\",stroke:\"#10b981\",strokeWidth:2,name:\"Profit\"})]})})})]}),monthlySalesData.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Monthly Sales Overview (Last 12 Months)\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:monthlySalesData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"month\",tickFormatter:value=>new Date(value+'-01').toLocaleDateString('en-US',{month:'short',year:'numeric'})}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:value=>\"\".concat(value.toLocaleString(),\" MGA\")}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(parseFloat(value).toFixed(2),\" MGA\"),name==='sales'?'Sales':name==='cost'?'Cost':'Profit'],labelFormatter:value=>new Date(value+'-01').toLocaleDateString('en-US',{month:'long',year:'numeric'})}),/*#__PURE__*/_jsx(Bar,{dataKey:\"sales\",fill:\"#3b82f6\",name:\"Sales\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"cost\",fill:\"#ef4444\",name:\"Cost\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"profit\",fill:\"#10b981\",name:\"Profit\"})]})})})]}),showSaleModal&&/*#__PURE__*/_jsx(SaleDetailModal,{sale:selectedSale,onClose:handleCloseSaleModal,loading:saleDetailLoading})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useTranslation","useAuth","api","SaleDetailModal","PrintButton","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","BarChart","Bar","jsx","_jsx","jsxs","_jsxs","Dashboard","_dashboardData$sales","_dashboardData$sales2","_dashboardData$sales3","_dashboardData$orders","_dashboardData$invent","_dashboardData$invent2","_dashboardData$invent3","_dashboardData$invent4","_dashboardData$sales4","_dashboardData$analyt","_dashboardData$analyt2","_dashboardData$analyt3","_dashboardData$analyt4","_dashboardData$analyt5","_dashboardData$analyt6","_dashboardData$recent","_dashboardData$recent2","_dashboardData$invent5","_dashboardData$invent6","_dashboardData$analyt7","t","user","dashboardData","setDashboardData","loading","setLoading","error","setError","selectedPeriod","setSelectedPeriod","selectedSale","setSelectedSale","showSaleModal","setShowSaleModal","saleDetailLoading","setSaleDetailLoading","dailySalesData","setDailySalesData","monthlySalesData","setMonthlySalesData","isSalesTeam","role","processChartData","salesData","Array","isArray","chartData","forEach","sale","saleDate","Date","created_at","dateKey","concat","toISOString","split","String","getHours","padStart","status","amount","parseFloat","paid_amount","cost","cost_amount","items","reduce","itemCost","item","itemCostPrice","cost_price","itemQuantity","quantity","profit","date","sales","count","chartArray","Object","values","sort","a","b","fetchDashboardData","now","startDate","getFullYear","getMonth","getDate","getTime","startDateStr","salesResponse","purchaseOrdersResponse","productsResponse","Promise","all","get","data","results","ordersData","productsData","totalSales","filter","length","totalOrders","totalProducts","totalSalesValue","sum","totalOrderValue","order","total_amount","outOfStockCount","lowStockCount","totalRetailValue","totalCostValue","productSalesCount","latestProducts","product","is_out_of_stock","is_low_stock","stock","stock_quantity","price","costPrice","slice","map","id","name","totalProfit","totalRevenue","totalCost","recentSales","sale_number","customer_name","payment_method","sold_by_name","index","revenue","itemTotalCost","total_cost","unit_cost","calculatedCost","bestSellingProduct","productSales","productId","product_name","totalQuantity","salePaidAmount","saleTotalAmount","itemRevenue","total_price","productIds","keys","best","current","total_sales","total_value","total_revenue","total_profit","recent_sales","orders","total_orders","inventory","total_products","out_of_stock","low_stock","retail_value","cost_value","latest_products","analytics","best_selling_product","profit_margin","err","console","handlePeriodChange","period","handleSaleClick","saleId","sale_id","Error","response","message","handleCloseSaleModal","className","children","onClick","username","value","onChange","e","target","viewBox","fill","d","toLocaleString","minimumFractionDigits","maximumFractionDigits","toFixed","day","style","height","Math","max","title","toLocaleDateString","month","_objectSpread","user_name","user_id","print_timestamp","print_id","random","toString","substr","type","printText","width","strokeDasharray","dataKey","tickFormatter","formatter","labelFormatter","stroke","strokeWidth","year","onClose"],"sources":["/home/el-ifran/WareHouse_Manager/elif-admin-app/beverage_management_system/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport SaleDetailModal from '../components/SaleDetailModal';\nimport PrintButton from '../components/PrintButton';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('month');\n  const [selectedSale, setSelectedSale] = useState(null);\n  const [showSaleModal, setShowSaleModal] = useState(false);\n  const [saleDetailLoading, setSaleDetailLoading] = useState(false);\n  const [dailySalesData, setDailySalesData] = useState([]);\n  const [monthlySalesData, setMonthlySalesData] = useState([]);\n\n  // Check if user is sales team (limited access)\n  const isSalesTeam = user?.role === 'sales';\n\n  // Process chart data from sales\n  const processChartData = (salesData) => {\n    if (!Array.isArray(salesData)) return;\n\n    // Group sales by date for chart based on selected period\n    const chartData = {};\n\n    salesData.forEach(sale => {\n      const saleDate = new Date(sale.created_at);\n      let dateKey;\n      \n      // Determine date key based on selected period\n      switch (selectedPeriod) {\n        case 'daily':\n          // Group by hour for daily view\n          dateKey = `${saleDate.toISOString().split('T')[0]} ${String(saleDate.getHours()).padStart(2, '0')}:00`;\n          break;\n        case 'weekly':\n          // Group by day for weekly view\n          dateKey = saleDate.toISOString().split('T')[0]; // YYYY-MM-DD\n          break;\n        case 'month':\n          // Group by day for monthly view\n          dateKey = saleDate.toISOString().split('T')[0]; // YYYY-MM-DD\n          break;\n        default:\n          dateKey = saleDate.toISOString().split('T')[0]; // YYYY-MM-DD\n      }\n      \n      // Skip refunded sales from chart data\n      if (sale.status === 'refunded') {\n        return;\n      }\n      \n      const amount = parseFloat(sale.paid_amount) || 0; // Use paid amount for chart\n      let cost = parseFloat(sale.cost_amount) || 0;\n      \n      // If cost_amount is not available, try to calculate from items\n      if (cost === 0 && sale.items && Array.isArray(sale.items)) {\n        cost = sale.items.reduce((itemCost, item) => {\n          const itemCostPrice = parseFloat(item.cost_price) || 0;\n          const itemQuantity = parseFloat(item.quantity) || 0;\n          return itemCost + (itemCostPrice * itemQuantity);\n        }, 0);\n      }\n      \n      const profit = amount - cost;\n\n      if (!chartData[dateKey]) {\n        chartData[dateKey] = { date: dateKey, sales: 0, cost: 0, profit: 0, count: 0 };\n      }\n      chartData[dateKey].sales += amount;\n      chartData[dateKey].cost += cost;\n      chartData[dateKey].profit += profit;\n      chartData[dateKey].count += 1;\n    });\n\n    // Convert to array and sort by date\n    const chartArray = Object.values(chartData)\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n    setDailySalesData(chartArray);\n  };\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, [selectedPeriod, isSalesTeam]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      \n      // Calculate date range based on selected period\n      const now = new Date();\n      let startDate;\n      \n      switch (selectedPeriod) {\n        case 'daily':\n          startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n          break;\n        case 'weekly':\n          startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n          break;\n        case 'month':\n          startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n          break;\n        default:\n          startDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000); // Default to 30 days\n      }\n      \n      const startDateStr = startDate.toISOString().split('T')[0];\n      \n      // For Admin app, fetch data filtered by time period\n      const [salesResponse, purchaseOrdersResponse, productsResponse] = await Promise.all([\n        api.get(`/api/sales/?ordering=-created_at&created_at__gte=${startDateStr}`), // Filter sales by date\n        api.get('/api/purchases/purchase-orders/'),\n        api.get('/api/products/?ordering=-created_at') // Get products ordered by creation date\n      ]);\n      \n      // Calculate comprehensive metrics - handle paginated responses\n      const salesData = salesResponse.data.results || salesResponse.data;\n      const ordersData = purchaseOrdersResponse.data.results || purchaseOrdersResponse.data;\n      const productsData = productsResponse.data.results || productsResponse.data;\n      \n      // Count only non-refunded sales\n      const totalSales = Array.isArray(salesData) ? salesData.filter(sale => sale.status !== 'refunded').length : 0;\n      const totalOrders = Array.isArray(ordersData) ? ordersData.length : 0;\n      const totalProducts = Array.isArray(productsData) ? productsData.length : 0;\n      \n      // Calculate total sales value (only paid amounts, excluding refunded sales)\n      const totalSalesValue = Array.isArray(salesData) ? salesData.reduce((sum, sale) => {\n        // Only count sales that are not refunded and have paid amounts\n        if (sale.status === 'refunded') {\n          return sum; // Skip refunded sales\n        }\n        return sum + (parseFloat(sale.paid_amount) || 0);\n      }, 0) : 0;\n      \n      // Calculate total order value\n      const totalOrderValue = Array.isArray(ordersData) ? ordersData.reduce((sum, order) => {\n        return sum + (parseFloat(order.total_amount) || 0);\n      }, 0) : 0;\n      \n      // Calculate inventory metrics and product analytics\n      let outOfStockCount = 0;\n      let lowStockCount = 0;\n      let totalRetailValue = 0;\n      let totalCostValue = 0;\n      let productSalesCount = {};\n      let latestProducts = [];\n      \n      if (Array.isArray(productsData)) {\n        productsData.forEach(product => {\n          if (product.is_out_of_stock) {\n            outOfStockCount++;\n          }\n          if (product.is_low_stock) {\n            lowStockCount++;\n          }\n          // Calculate retail value (stock * price)\n          const stock = parseFloat(product.stock_quantity) || 0;\n          const price = parseFloat(product.price) || 0;\n          const costPrice = parseFloat(product.cost_price) || 0;\n          totalRetailValue += stock * price;\n          totalCostValue += stock * costPrice;\n        });\n        \n        // Get latest 3 products\n        latestProducts = productsData.slice(0, 3).map(product => ({\n          id: product.id,\n          name: product.name,\n          price: parseFloat(product.price) || 0,\n          stock: parseFloat(product.stock_quantity) || 0,\n          created_at: product.created_at\n        }));\n      }\n      \n      // Calculate sales analytics\n      let totalProfit = 0;\n      let totalRevenue = 0;\n      let totalCost = 0;\n      let recentSales = [];\n      \n      if (Array.isArray(salesData)) {\n        recentSales = salesData.slice(0, 5).map(sale => ({\n          id: sale.id,\n          sale_number: sale.sale_number,\n          customer_name: sale.customer_name || t('dashboard.walk_in_customer'),\n          total_amount: parseFloat(sale.paid_amount) || 0, // Show paid amount instead of total\n          payment_method: sale.payment_method,\n          status: sale.status,\n          created_at: sale.created_at,\n          sold_by_name: sale.sold_by_name\n        }));\n        \n        // Calculate profit from sales\n        salesData.forEach((sale, index) => {\n          // Skip refunded sales from accounting calculations\n          if (sale.status === 'refunded') {\n            return;\n          }\n          \n          // Use paid_amount for revenue (actual money received)\n          const revenue = parseFloat(sale.paid_amount) || 0;\n          let cost = parseFloat(sale.cost_amount) || 0;\n          \n          \n          // If cost_amount is not available, try to calculate from items\n          if (cost === 0 && sale.items && Array.isArray(sale.items)) {\n            cost = sale.items.reduce((itemCost, item) => {\n              // Use total_cost if available, otherwise calculate from unit_cost\n              const itemTotalCost = parseFloat(item.total_cost) || 0;\n              const itemCostPrice = parseFloat(item.unit_cost) || 0;\n              const itemQuantity = parseFloat(item.quantity) || 0;\n              \n              // If total_cost is available, use it directly\n              if (itemTotalCost > 0) {\n                return itemCost + itemTotalCost;\n              }\n              // Otherwise calculate from unit_cost * quantity\n              else {\n                const calculatedCost = itemCostPrice * itemQuantity;\n                return itemCost + calculatedCost;\n              }\n            }, 0);\n          }\n          \n          totalRevenue += revenue;\n          totalCost += cost;\n          totalProfit += (revenue - cost);\n        });\n        \n      }\n      \n      // Find best-selling product (most sold quantity)\n      let bestSellingProduct = null;\n      if (Array.isArray(salesData)) {\n        let productSales = {};\n        salesData.forEach(sale => {\n          // Skip refunded sales from product analytics\n          if (sale.status === 'refunded') {\n            return;\n          }\n          \n          if (sale.items && Array.isArray(sale.items)) {\n            sale.items.forEach(item => {\n              const productId = item.product;\n              const quantity = parseFloat(item.quantity) || 0;\n              if (!productSales[productId]) {\n                productSales[productId] = {\n                  id: productId,\n                  name: item.product_name,\n                  totalQuantity: 0,\n                  totalRevenue: 0\n                };\n              }\n              productSales[productId].totalQuantity += quantity;\n              // Use paid amount proportionally for revenue calculation\n              const salePaidAmount = parseFloat(sale.paid_amount) || 0;\n              const saleTotalAmount = parseFloat(sale.total_amount) || 0;\n              const itemRevenue = saleTotalAmount > 0 ? (parseFloat(item.total_price) || 0) * (salePaidAmount / saleTotalAmount) : 0;\n              productSales[productId].totalRevenue += itemRevenue;\n            });\n          }\n        });\n        \n        // Find the product with highest quantity sold\n        const productIds = Object.keys(productSales);\n        if (productIds.length > 0) {\n          bestSellingProduct = productIds.reduce((best, current) => \n            productSales[current].totalQuantity > productSales[best].totalQuantity ? current : best\n          );\n          bestSellingProduct = productSales[bestSellingProduct];\n        }\n      }\n      \n      setDashboardData({\n        sales: {\n          total_sales: totalSales,\n          total_value: totalSalesValue,\n          total_revenue: totalRevenue,\n          total_cost: totalCost,\n          total_profit: totalProfit,\n          recent_sales: recentSales\n        },\n        orders: {\n          total_orders: totalOrders,\n          total_value: totalOrderValue\n        },\n        inventory: {\n          total_products: totalProducts,\n          out_of_stock: outOfStockCount,\n          low_stock: lowStockCount,\n          retail_value: totalRetailValue,\n          cost_value: totalCostValue,\n          latest_products: latestProducts\n        },\n        analytics: {\n          best_selling_product: bestSellingProduct,\n          profit_margin: totalRevenue > 0 ? ((totalProfit / totalRevenue) * 100) : 0\n        }\n      });\n\n      // Process chart data\n      processChartData(salesData);\n    } catch (err) {\n      setError(t('dashboard.failed_to_load'));\n      console.error('Dashboard error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePeriodChange = (period) => {\n    // Only allow period changes for non-sales users\n    if (!isSalesTeam) {\n      setSelectedPeriod(period);\n    }\n  };\n\n  const handleSaleClick = async (sale) => {\n    try {\n      setSaleDetailLoading(true);\n      setShowSaleModal(true);\n      \n      // Check if sale has an ID\n      const saleId = sale.id || sale.sale_id;\n      if (!saleId) {\n        throw new Error(t('errors.not_found'));\n      }\n      \n      // Fetch detailed sale information\n      const response = await api.get(`/api/sales/${saleId}/`);\n      setSelectedSale(response.data);\n    } catch (err) {\n      console.error('Failed to fetch sale details:', err);\n      setError(`Failed to load sale details: ${err.message}`);\n      setShowSaleModal(false);\n    } finally {\n      setSaleDetailLoading(false);\n    }\n  };\n\n  const handleCloseSaleModal = () => {\n    setShowSaleModal(false);\n    setSelectedSale(null);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"dashboard\">\n        <div className=\"dashboard-loading\">\n          <div className=\"spinner\"></div>\n          <span>{t('dashboard.loading')}</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"dashboard\">\n        <div className=\"dashboard-error\">\n          <h2>{t('dashboard.error')}</h2>\n          <p>{error}</p>\n          <button onClick={fetchDashboardData}>{t('common.retry')}</button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>{t('dashboard.title')}</h1>\n            <p>{t('dashboard.welcome', { username: user?.username })}</p>\n            {isSalesTeam && (\n              <p className=\"role-indicator\">{t('dashboard.sales_team_view')}</p>\n            )}\n          </div>\n          {!isSalesTeam && (\n            <div className=\"period-selector\">\n              <label>{t('dashboard.time_period')}</label>\n              <select \n                value={selectedPeriod} \n                onChange={(e) => handlePeriodChange(e.target.value)}\n                className=\"period-select\"\n              >\n                <option value=\"daily\">{t('dashboard.daily')}</option>\n                <option value=\"weekly\">{t('dashboard.weekly')}</option>\n                <option value=\"month\">{t('dashboard.monthly')}</option>\n              </select>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"dashboard-grid\">\n        {/* Sales Summary Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon sales\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M7 4V2C7 1.45 7.45 1 8 1H16C16.55 1 17 1.45 17 2V4H20C20.55 4 21 4.45 21 5S20.55 6 20 6H19V19C19 20.1 18.1 21 17 21H7C5.9 21 5 20.1 5 19V6H4C3.45 6 3 5.55 3 5S3.45 4 4 4H7ZM9 3V4H15V3H9ZM7 6V19H17V6H7Z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.total_sales')}</h3>\n            <p className=\"metric-value\">\n              {(dashboardData?.sales?.total_value || 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA\n            </p>\n            <p className=\"metric-label\">\n              {dashboardData?.sales?.total_sales || 0} {t('dashboard.sales')}\n            </p>\n          </div>\n        </div>\n\n        {/* Total Cost Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon cost\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.total_cost')}</h3>\n            <p className=\"metric-value\">\n              {(dashboardData?.sales?.total_cost || 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA\n            </p>\n            <p className=\"metric-label\">\n              {t('dashboard.cost_of_goods_sold')}\n            </p>\n          </div>\n        </div>\n\n        {/* Orders Summary Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon orders\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M19 7h-1V6a4 4 0 0 0-8 0v1H9a1 1 0 0 0-1 1v11a3 3 0 0 0 3 3h8a3 3 0 0 0 3-3V8a1 1 0 0 0-1-1zM12 4a2 2 0 0 1 2 2v1h-4V6a2 2 0 0 1 2-2zm6 15a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V9h2v1a1 1 0 0 0 2 0V9h4v1a1 1 0 0 0 2 0V9h2v10z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.total_orders')}</h3>\n            <p className=\"metric-value\">\n              {dashboardData?.orders?.total_orders || 0}\n            </p>\n            <p className=\"metric-label\">\n              {t('dashboard.orders')}\n            </p>\n          </div>\n        </div>\n\n        {/* Inventory Summary Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon inventory\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2L2 7L12 12L22 7L12 2Z\"/>\n              <path d=\"M2 17L12 22L22 17\"/>\n              <path d=\"M2 12L12 17L22 12\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.total_products')}</h3>\n            <p className=\"metric-value\">\n              {dashboardData?.inventory?.total_products || 0}\n            </p>\n            <p className=\"metric-label\">\n              {t('dashboard.active_products')}\n            </p>\n          </div>\n        </div>\n\n\n\n        {/* Retail Value Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon retail\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M7 4V2c0-.55-.45-1-1-1s-1 .45-1 1v2H3c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1H7zM21 4h-2V2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.retail_value')}</h3>\n            <p className=\"metric-value\">\n              {(dashboardData?.inventory?.retail_value || 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA\n            </p>\n            <p className=\"metric-label\">\n              {dashboardData?.inventory?.low_stock || 0} {t('dashboard.low_stock')}\n            </p>\n          </div>\n        </div>\n\n        {/* Out of Stock Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon out-of-stock\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.out_of_stock')}</h3>\n            <p className=\"metric-value\">\n              {dashboardData?.inventory?.out_of_stock || 0}\n            </p>\n            <p className=\"metric-label\">\n              {t('dashboard.products_need_restocking')}\n            </p>\n          </div>\n        </div>\n\n        {/* Profit Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon profit\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.total_profit')}</h3>\n            <p className=\"metric-value\">\n              {(dashboardData?.sales?.total_profit || 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA\n            </p>\n            <p className=\"metric-label\">\n              {dashboardData?.analytics?.profit_margin?.toFixed(1) || '0.0'}% {t('dashboard.margin')}\n            </p>\n          </div>\n        </div>\n\n        {/* Best Selling Product Card */}\n        <div className=\"metric-card\">\n          <div className=\"metric-icon best-seller\">\n            <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n            </svg>\n          </div>\n          <div className=\"metric-content\">\n            <h3>{t('dashboard.best_seller')}</h3>\n            <p className=\"metric-value\">\n              {dashboardData?.analytics?.best_selling_product?.name || 'N/A'}\n            </p>\n            <p className=\"metric-label\">\n              {dashboardData?.analytics?.best_selling_product?.totalQuantity || 0} {t('dashboard.units_sold')}\n            </p>\n          </div>\n        </div>\n\n      </div>\n\n      {/* Sales Chart - Only for Admin/Manager */}\n      {!isSalesTeam && (\n        <div className=\"dashboard-section\">\n          <h2>{t('dashboard.sales_trend_this_month')}</h2>\n          <div className=\"sales-chart\">\n            {dailySalesData.length > 0 ? (\n              <div className=\"chart-container\">\n                <div className=\"chart-bars\">\n                  {dailySalesData.map((day, index) => (\n                    <div key={index} className=\"chart-bar\">\n                      <div className=\"bar-group\">\n                        <div \n                          className=\"bar sales-bar\" \n                          style={{ height: `${Math.max(5, (day.sales / Math.max(...dailySalesData.map(d => d.sales))) * 100)}%` }}\n                          title={`Sales: ${day.sales.toFixed(2)} MGA`}\n                        ></div>\n                        <div \n                          className=\"bar cost-bar\" \n                          style={{ height: `${Math.max(5, (day.cost / Math.max(...dailySalesData.map(d => d.sales))) * 100)}%` }}\n                          title={`Cost: ${day.cost.toFixed(2)} MGA`}\n                        ></div>\n                      </div>\n                      <div className=\"bar-label\">\n                        {new Date(day.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                      </div>\n                      <div className=\"bar-values\">\n                        <div className=\"value sales\">{day.sales.toFixed(0)} MGA</div>\n                        <div className=\"value cost\">{day.cost.toFixed(0)} MGA</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"chart-legend\">\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color sales\"></div>\n                    <span>Sales</span>\n                  </div>\n                  <div className=\"legend-item\">\n                    <div className=\"legend-color cost\"></div>\n                    <span>Cost</span>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <p className=\"no-data\">No sales data available for the selected period</p>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Recent Sales */}\n      <div className=\"dashboard-section\">\n        <div className=\"section-header\">\n          <h2>{t('dashboard.recent_sales')}</h2>\n          {dashboardData?.recent_sales?.length > 0 && (\n            <PrintButton\n              data={{\n                ...dashboardData.recent_sales,\n                user_name: user?.username || t('app.unknown_user'),\n                user_id: user?.id || 'unknown',\n                print_timestamp: new Date().toISOString(),\n                print_id: `PRINT-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\n              }}\n              title={t('titles.sales_management_report')}\n              type=\"sales_history\"\n              printText={t('buttons.print_sales_report')}\n              className=\"print-recent-sales-btn\"\n            />\n          )}\n        </div>\n        <div className=\"recent-sales\">\n          {dashboardData?.recent_sales?.length > 0 ? (\n            <div className=\"sales-list\">\n              {dashboardData.recent_sales.map((sale, index) => (\n                <div \n                  key={index} \n                  className=\"sale-item clickable\"\n                  onClick={() => handleSaleClick(sale)}\n                  title={t('dashboard.click_to_view_details')}\n                >\n                  <div className=\"sale-info\">\n                    <h4>{sale.sale_number}</h4>\n                    <p>{sale.customer_name || t('dashboard.walk_in_customer')}</p>\n                  </div>\n                  <div className=\"sale-amount\">\n                    <span>{sale.total_amount.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA</span>\n                    <small>{new Date(sale.created_at).toLocaleDateString()}</small>\n                  </div>\n                  <div className=\"sale-arrow\">\n                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"/>\n                    </svg>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"no-data\">No recent sales</p>\n          )}\n        </div>\n      </div>\n\n      {/* Latest Products */}\n      <div className=\"dashboard-section\">\n        <div className=\"section-header\">\n          <h2>Latest Products</h2>\n        </div>\n        <div className=\"latest-products\">\n          {dashboardData?.inventory?.latest_products?.length > 0 ? (\n            <div className=\"products-list\">\n              {dashboardData.inventory.latest_products.map((product, index) => (\n                <div key={index} className=\"product-item\">\n                  <div className=\"product-info\">\n                    <h4>{product.name}</h4>\n                    <p>Added: {new Date(product.created_at).toLocaleDateString()}</p>\n                  </div>\n                  <div className=\"product-stats\">\n                    <div className=\"stat-row\">\n                      <span className=\"stat-label\">Price:</span>\n                      <span className=\"stat-value\">{product.price.toFixed(2)} MGA</span>\n                    </div>\n                    <div className=\"stat-row\">\n                      <span className=\"stat-label\">Stock:</span>\n                      <span className=\"stat-value\">{product.stock} units</span>\n                    </div>\n                    <div className=\"stat-row\">\n                      <span className=\"stat-label\">Value:</span>\n                      <span className=\"stat-value\">{(product.stock * product.price).toFixed(2)} MGA</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"no-data\">No products available</p>\n          )}\n        </div>\n      </div>\n\n      {/* Best Selling Product Details */}\n      {dashboardData?.analytics?.best_selling_product && (\n        <div className=\"dashboard-section\">\n          <div className=\"section-header\">\n            <h2>Best Selling Product</h2>\n          </div>\n          <div className=\"best-seller-details\">\n            <div className=\"product-item featured\">\n              <div className=\"product-info\">\n                <h4>{dashboardData.analytics.best_selling_product.name}</h4>\n                <p>Top performer in sales</p>\n              </div>\n              <div className=\"product-stats\">\n                <div className=\"stat-row\">\n                  <span className=\"stat-label\">{t('dashboard.units_sold')}:</span>\n                  <span className=\"stat-value highlight\">{dashboardData.analytics.best_selling_product.totalQuantity}</span>\n                </div>\n                <div className=\"stat-row\">\n                  <span className=\"stat-label\">{t('dashboard.revenue')}:</span>\n                  <span className=\"stat-value highlight\">{dashboardData.analytics.best_selling_product.totalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA</span>\n                </div>\n                <div className=\"stat-row\">\n                  <span className=\"stat-label\">{t('dashboard.avg_per_sale')}:</span>\n                  <span className=\"stat-value\">{((dashboardData.analytics.best_selling_product.totalRevenue / dashboardData.analytics.best_selling_product.totalQuantity) || 0).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} MGA</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Daily Sales Chart */}\n      {dailySalesData.length > 0 && (\n        <div className=\"dashboard-section\">\n          <div className=\"section-header\">\n            <h2>Daily Sales Trend (Last 30 Days)</h2>\n          </div>\n          <div className=\"chart-container\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={dailySalesData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"date\" \n                  tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                />\n                <YAxis tickFormatter={(value) => `${value.toLocaleString()} MGA`} />\n                <Tooltip \n                  formatter={(value, name) => [\n                    `${parseFloat(value).toFixed(2)} MGA`, \n                    name === 'sales' ? 'Sales' : name === 'cost' ? 'Cost' : 'Profit'\n                  ]}\n                  labelFormatter={(value) => new Date(value).toLocaleDateString()}\n                />\n                <Line type=\"monotone\" dataKey=\"sales\" stroke=\"#3b82f6\" strokeWidth={2} name=\"Sales\" />\n                <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#ef4444\" strokeWidth={2} name=\"Cost\" />\n                <Line type=\"monotone\" dataKey=\"profit\" stroke=\"#10b981\" strokeWidth={2} name=\"Profit\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      )}\n\n      {/* Monthly Sales Chart */}\n      {monthlySalesData.length > 0 && (\n        <div className=\"dashboard-section\">\n          <div className=\"section-header\">\n            <h2>Monthly Sales Overview (Last 12 Months)</h2>\n          </div>\n          <div className=\"chart-container\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={monthlySalesData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"month\" \n                  tickFormatter={(value) => new Date(value + '-01').toLocaleDateString('en-US', { month: 'short', year: 'numeric' })}\n                />\n                <YAxis tickFormatter={(value) => `${value.toLocaleString()} MGA`} />\n                <Tooltip \n                  formatter={(value, name) => [\n                    `${parseFloat(value).toFixed(2)} MGA`, \n                    name === 'sales' ? 'Sales' : name === 'cost' ? 'Cost' : 'Profit'\n                  ]}\n                  labelFormatter={(value) => new Date(value + '-01').toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n                />\n                <Bar dataKey=\"sales\" fill=\"#3b82f6\" name=\"Sales\" />\n                <Bar dataKey=\"cost\" fill=\"#ef4444\" name=\"Cost\" />\n                <Bar dataKey=\"profit\" fill=\"#10b981\" name=\"Profit\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      )}\n\n      {/* Sale Detail Modal */}\n      {showSaleModal && (\n        <SaleDetailModal\n          sale={selectedSale}\n          onClose={handleCloseSaleModal}\n          loading={saleDetailLoading}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}